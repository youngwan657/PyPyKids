-- MySQL dump 10.13  Distrib 5.7.25, for Linux (x86_64)
--
-- Host: localhost    Database: mysql
-- ------------------------------------------------------
-- Server version	5.7.25-google-log

/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;

--
-- Current Database: `pypykids`
--

CREATE DATABASE /*!32312 IF NOT EXISTS*/ `pypykids` /*!40100 DEFAULT CHARACTER SET utf8 */;

USE `pypykids`;

--
-- Table structure for table `auth_group`
--

DROP TABLE IF EXISTS `auth_group`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `auth_group` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `name` varchar(150) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `name` (`name`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `auth_group`
--

LOCK TABLES `auth_group` WRITE;
/*!40000 ALTER TABLE `auth_group` DISABLE KEYS */;
/*!40000 ALTER TABLE `auth_group` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `auth_group_permissions`
--

DROP TABLE IF EXISTS `auth_group_permissions`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `auth_group_permissions` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `group_id` int(11) NOT NULL,
  `permission_id` int(11) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `auth_group_permissions_group_id_permission_id_0cd325b0_uniq` (`group_id`,`permission_id`),
  KEY `auth_group_permissio_permission_id_84c5c92e_fk_auth_perm` (`permission_id`),
  CONSTRAINT `auth_group_permissio_permission_id_84c5c92e_fk_auth_perm` FOREIGN KEY (`permission_id`) REFERENCES `auth_permission` (`id`),
  CONSTRAINT `auth_group_permissions_group_id_b120cbf9_fk_auth_group_id` FOREIGN KEY (`group_id`) REFERENCES `auth_group` (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `auth_group_permissions`
--

LOCK TABLES `auth_group_permissions` WRITE;
/*!40000 ALTER TABLE `auth_group_permissions` DISABLE KEYS */;
/*!40000 ALTER TABLE `auth_group_permissions` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `auth_permission`
--

DROP TABLE IF EXISTS `auth_permission`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `auth_permission` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `name` varchar(255) NOT NULL,
  `content_type_id` int(11) NOT NULL,
  `codename` varchar(100) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `auth_permission_content_type_id_codename_01ab375a_uniq` (`content_type_id`,`codename`),
  CONSTRAINT `auth_permission_content_type_id_2f476e4b_fk_django_co` FOREIGN KEY (`content_type_id`) REFERENCES `django_content_type` (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=93 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `auth_permission`
--

LOCK TABLES `auth_permission` WRITE;
/*!40000 ALTER TABLE `auth_permission` DISABLE KEYS */;
INSERT INTO `auth_permission` VALUES (1,'Can add quiz type',1,'add_quiztype'),(2,'Can change quiz type',1,'change_quiztype'),(3,'Can delete quiz type',1,'delete_quiztype'),(4,'Can view quiz type',1,'view_quiztype'),(5,'Can add category',2,'add_category'),(6,'Can change category',2,'change_category'),(7,'Can delete category',2,'delete_category'),(8,'Can view category',2,'view_category'),(9,'Can add quiz',3,'add_quiz'),(10,'Can change quiz',3,'change_quiz'),(11,'Can delete quiz',3,'delete_quiz'),(12,'Can view quiz',3,'view_quiz'),(13,'Can add test set',4,'add_testset'),(14,'Can change test set',4,'change_testset'),(15,'Can delete test set',4,'delete_testset'),(16,'Can view test set',4,'view_testset'),(17,'Can add user code',5,'add_usercode'),(18,'Can change user code',5,'change_usercode'),(19,'Can delete user code',5,'delete_usercode'),(20,'Can view user code',5,'view_usercode'),(21,'Can add log entry',6,'add_logentry'),(22,'Can change log entry',6,'change_logentry'),(23,'Can delete log entry',6,'delete_logentry'),(24,'Can view log entry',6,'view_logentry'),(25,'Can add permission',7,'add_permission'),(26,'Can change permission',7,'change_permission'),(27,'Can delete permission',7,'delete_permission'),(28,'Can view permission',7,'view_permission'),(29,'Can add group',8,'add_group'),(30,'Can change group',8,'change_group'),(31,'Can delete group',8,'delete_group'),(32,'Can view group',8,'view_group'),(33,'Can add user',9,'add_user'),(34,'Can change user',9,'change_user'),(35,'Can delete user',9,'delete_user'),(36,'Can view user',9,'view_user'),(37,'Can add content type',10,'add_contenttype'),(38,'Can change content type',10,'change_contenttype'),(39,'Can delete content type',10,'delete_contenttype'),(40,'Can view content type',10,'view_contenttype'),(41,'Can add session',11,'add_session'),(42,'Can change session',11,'change_session'),(43,'Can delete session',11,'delete_session'),(44,'Can view session',11,'view_session'),(45,'Can add answer',12,'add_answer'),(46,'Can change answer',12,'change_answer'),(47,'Can delete answer',12,'delete_answer'),(48,'Can view answer',12,'view_answer'),(49,'Can add category level',13,'add_categorylevel'),(50,'Can change category level',13,'change_categorylevel'),(51,'Can delete category level',13,'delete_categorylevel'),(52,'Can view category level',13,'view_categorylevel'),(53,'Can add difficulty',13,'add_difficulty'),(54,'Can change difficulty',13,'change_difficulty'),(55,'Can delete difficulty',13,'delete_difficulty'),(56,'Can view difficulty',13,'view_difficulty'),(57,'Can add testcase',4,'add_testcase'),(58,'Can change testcase',4,'change_testcase'),(59,'Can delete testcase',4,'delete_testcase'),(60,'Can view testcase',4,'view_testcase'),(61,'Can add user',14,'add_user'),(62,'Can change user',14,'change_user'),(63,'Can delete user',14,'delete_user'),(64,'Can view user',14,'view_user'),(65,'Can add badge',15,'add_badge'),(66,'Can change badge',15,'change_badge'),(67,'Can delete badge',15,'delete_badge'),(68,'Can view badge',15,'view_badge'),(69,'Can add badge type',16,'add_badgetype'),(70,'Can change badge type',16,'change_badgetype'),(71,'Can delete badge type',16,'delete_badgetype'),(72,'Can view badge type',16,'view_badgetype'),(73,'Can add custom user',14,'add_customuser'),(74,'Can change custom user',14,'change_customuser'),(75,'Can delete custom user',14,'delete_customuser'),(76,'Can view custom user',14,'view_customuser'),(77,'Can add good',17,'add_good'),(78,'Can change good',17,'change_good'),(79,'Can delete good',17,'delete_good'),(80,'Can view good',17,'view_good'),(81,'Can add quiz score',17,'add_quizscore'),(82,'Can change quiz score',17,'change_quizscore'),(83,'Can delete quiz score',17,'delete_quizscore'),(84,'Can view quiz score',17,'view_quizscore'),(85,'Can add point type',18,'add_pointtype'),(86,'Can change point type',18,'change_pointtype'),(87,'Can delete point type',18,'delete_pointtype'),(88,'Can view point type',18,'view_pointtype'),(89,'Can add user point',19,'add_userpoint'),(90,'Can change user point',19,'change_userpoint'),(91,'Can delete user point',19,'delete_userpoint'),(92,'Can view user point',19,'view_userpoint');
/*!40000 ALTER TABLE `auth_permission` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `auth_user`
--

DROP TABLE IF EXISTS `auth_user`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `auth_user` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `password` varchar(128) NOT NULL,
  `last_login` datetime(6) DEFAULT NULL,
  `is_superuser` tinyint(1) NOT NULL,
  `username` varchar(150) NOT NULL,
  `first_name` varchar(30) NOT NULL,
  `last_name` varchar(150) NOT NULL,
  `email` varchar(254) NOT NULL,
  `is_staff` tinyint(1) NOT NULL,
  `is_active` tinyint(1) NOT NULL,
  `date_joined` datetime(6) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `username` (`username`)
) ENGINE=InnoDB AUTO_INCREMENT=26 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `auth_user`
--

LOCK TABLES `auth_user` WRITE;
/*!40000 ALTER TABLE `auth_user` DISABLE KEYS */;
INSERT INTO `auth_user` VALUES (1,'pbkdf2_sha256$150000$Kmza61K5Xehs$VoK9aHRus3D7IA1QZb/jwgNdIAVtEAdVNPocvA0bWiU=','2020-01-06 22:49:04.037060',1,'youngwan','','','',1,1,'2019-07-17 09:31:45.000000'),(2,'pbkdf2_sha256$150000$KO6SvEqAFAPC$57vvHD79ZyKZeGVAWtpoeHtKQNkP30/+wYFoFW+xSh4=','2020-06-19 07:47:44.723259',1,'dayeon','','','',1,1,'2019-08-24 03:39:09.000000'),(14,'pbkdf2_sha256$150000$SIKV5wzcSz9T$MtaKZRwiromgeD0RlW1NqyATIfjuqhksNTb0U7RPOCU=','2019-10-18 03:18:56.091723',0,'guests','','','',0,1,'2019-09-12 04:51:41.424097'),(15,'pbkdf2_sha256$150000$CzmYtbeYhX5w$VqTP2oFXdsvvxiDGr9vmnXoOksuuwDJXlRdPcVs3EKY=','2019-09-28 21:25:16.405562',1,'PyPyKids','','','',1,1,'2019-09-19 07:17:24.000000'),(16,'pbkdf2_sha256$150000$v6AvCViU77fo$QWZSR9R9pIibaPtrxmrr8qHjQs9VAJcSb4v1tZP87qQ=','2019-10-12 18:16:55.114910',1,'admin','','','',1,1,'2019-09-19 07:18:27.000000'),(17,'pbkdf2_sha256$150000$fqrxUsHaSfNV$fdU19yanfMNj/3nMFl09HlUXfBa9YTkJUc6VzU/8q44=','2019-10-17 07:54:06.043604',0,'guest','','','',0,1,'2019-09-24 01:19:57.467189'),(18,'pbkdf2_sha256$150000$pF0Ib91aZNgQ$fy7P8jm3+1r1NsvsDch89qheSObB9oQjWeKLPaHF7vI=','2019-09-24 01:20:10.000000',1,'administrator','','','',1,1,'2019-09-24 01:20:10.000000'),(19,'pbkdf2_sha256$150000$gqTIuReZO13a$m0B05eVUN/K5njIP+In9JArowleME9oiJPF/Let9f0c=','2019-11-24 19:19:28.346003',1,'tiny657','','','',1,1,'2019-09-25 09:07:11.000000'),(20,'pbkdf2_sha256$150000$D9h1hzJgPz3s$PS0Kx1LPDV5BwhYs31ChWtesvWu/+cNzpGvLJBPHeBA=','2019-09-29 22:59:10.099300',0,'OhNoItsIsaac','','','',0,1,'2019-09-29 22:59:09.628980'),(21,'pbkdf2_sha256$150000$CgPcyPRK4igt$7Pp6STV2TZjKOo/xv60Lt1WXn8pt7HlD3pdvpFyobqA=','2019-10-01 19:26:37.388855',0,'luke','','','',0,1,'2019-10-01 19:26:36.969338'),(22,'pbkdf2_sha256$150000$bazJpO5LbmHz$xzsc8/9a9zhPF8GutefN6YdzkBZ+HUd3KInbgWvhKbU=','2019-10-13 16:14:51.317477',0,'TheRealMuffinMan','','','',0,1,'2019-10-13 16:14:50.718566'),(23,'pbkdf2_sha256$150000$0iUpmv1SbXeH$xXZLFHJjg/4sspEBBR6NEXIvKoChdLbcqpaP85GWaFs=','2019-11-17 02:40:05.837468',0,'JustMeAgain','','','',0,1,'2019-10-13 16:15:38.968507'),(24,'pbkdf2_sha256$150000$SHoK8sBc1UEq$gnPunKFDWCXYnRdBkVYtl+Gyv28+2N7n1czNbHH7kzE=','2019-12-31 22:19:16.459813',0,'Koalabee','','','',0,1,'2019-10-16 23:22:33.030122'),(25,'pbkdf2_sha256$150000$qvucvuIzzqnE$1wRed48a6hl979+qU2omUGjTkDa2VctogteBeql1B0I=','2019-11-19 11:12:10.879055',0,'AlPo','','','',0,1,'2019-11-19 11:12:10.476884');
/*!40000 ALTER TABLE `auth_user` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `auth_user_groups`
--

DROP TABLE IF EXISTS `auth_user_groups`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `auth_user_groups` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `user_id` int(11) NOT NULL,
  `group_id` int(11) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `auth_user_groups_user_id_group_id_94350c0c_uniq` (`user_id`,`group_id`),
  KEY `auth_user_groups_group_id_97559544_fk_auth_group_id` (`group_id`),
  CONSTRAINT `auth_user_groups_group_id_97559544_fk_auth_group_id` FOREIGN KEY (`group_id`) REFERENCES `auth_group` (`id`),
  CONSTRAINT `auth_user_groups_user_id_6a12ed8b_fk_auth_user_id` FOREIGN KEY (`user_id`) REFERENCES `auth_user` (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `auth_user_groups`
--

LOCK TABLES `auth_user_groups` WRITE;
/*!40000 ALTER TABLE `auth_user_groups` DISABLE KEYS */;
/*!40000 ALTER TABLE `auth_user_groups` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `auth_user_user_permissions`
--

DROP TABLE IF EXISTS `auth_user_user_permissions`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `auth_user_user_permissions` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `user_id` int(11) NOT NULL,
  `permission_id` int(11) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `auth_user_user_permissions_user_id_permission_id_14a6b632_uniq` (`user_id`,`permission_id`),
  KEY `auth_user_user_permi_permission_id_1fbb5f2c_fk_auth_perm` (`permission_id`),
  CONSTRAINT `auth_user_user_permi_permission_id_1fbb5f2c_fk_auth_perm` FOREIGN KEY (`permission_id`) REFERENCES `auth_permission` (`id`),
  CONSTRAINT `auth_user_user_permissions_user_id_a95ead1b_fk_auth_user_id` FOREIGN KEY (`user_id`) REFERENCES `auth_user` (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `auth_user_user_permissions`
--

LOCK TABLES `auth_user_user_permissions` WRITE;
/*!40000 ALTER TABLE `auth_user_user_permissions` DISABLE KEYS */;
/*!40000 ALTER TABLE `auth_user_user_permissions` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `django_admin_log`
--

DROP TABLE IF EXISTS `django_admin_log`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `django_admin_log` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `action_time` datetime(6) NOT NULL,
  `object_id` longtext,
  `object_repr` varchar(200) NOT NULL,
  `action_flag` smallint(5) unsigned NOT NULL,
  `change_message` longtext NOT NULL,
  `content_type_id` int(11) DEFAULT NULL,
  `user_id` int(11) NOT NULL,
  PRIMARY KEY (`id`),
  KEY `django_admin_log_content_type_id_c4bce8eb_fk_django_co` (`content_type_id`),
  KEY `django_admin_log_user_id_c564eba6_fk_auth_user_id` (`user_id`),
  CONSTRAINT `django_admin_log_content_type_id_c4bce8eb_fk_django_co` FOREIGN KEY (`content_type_id`) REFERENCES `django_content_type` (`id`),
  CONSTRAINT `django_admin_log_user_id_c564eba6_fk_auth_user_id` FOREIGN KEY (`user_id`) REFERENCES `auth_user` (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=2794 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `django_admin_log`
--

LOCK TABLES `django_admin_log` WRITE;
/*!40000 ALTER TABLE `django_admin_log` DISABLE KEYS */;
INSERT INTO `django_admin_log` VALUES (1,'2019-07-17 09:32:36.020000','1','QuizType object (1)',1,'[{\"added\": {}}]',1,1),(2,'2019-07-17 09:32:48.142000','2','QuizType object (2)',1,'[{\"added\": {}}]',1,1),(3,'2019-07-17 09:32:59.238000','1','Category object (1)',1,'[{\"added\": {}}]',2,1),(4,'2019-07-17 09:33:42.528000','1','1. What is the output of the following program?',1,'[{\"added\": {}}]',3,1),(5,'2019-07-17 09:36:43.896000','1','UserCode object (1)',1,'[{\"added\": {}}]',5,1),(6,'2019-07-17 09:48:43.566000','2','2. Code',1,'[{\"added\": {}}]',3,1),(7,'2019-07-17 09:49:02.606000','1','TestSet object (1)',1,'[{\"added\": {}}]',4,1),(8,'2019-07-18 05:29:55.205000','1','1. Dayeon',1,'[{\"added\": {}}]',12,1),(9,'2019-07-18 06:04:59.460000','2','TestSet object (2)',1,'[{\"added\": {}}]',4,1),(10,'2019-07-18 06:08:25.755000','1','1. Dayeon',3,'',12,1),(11,'2019-07-18 06:35:44.186000','2','TestSet object (2)',2,'[{\"changed\": {\"fields\": [\"quiz\", \"test\", \"expected_answer\"]}}]',4,1),(12,'2019-07-18 06:38:07.167000','2','2. Code',2,'[{\"changed\": {\"fields\": [\"example\"]}}]',3,1),(13,'2019-07-18 07:00:55.488000','6','6',3,'',12,1),(14,'2019-07-18 07:00:55.489000','5','5',3,'',12,1),(15,'2019-07-18 07:00:55.491000','4','4',3,'',12,1),(16,'2019-07-18 07:00:55.492000','3','3',3,'',12,1),(17,'2019-07-18 07:00:55.493000','2','2',3,'',12,1),(18,'2019-07-18 07:00:55.494000','1','1',3,'',12,1),(19,'2019-07-18 07:03:46.023000','2','2. Code',2,'[{\"changed\": {\"fields\": [\"example\", \"answer_header\"]}}]',3,1),(20,'2019-07-18 07:03:55.673000','2','2. Code',2,'[{\"changed\": {\"fields\": [\"example\"]}}]',3,1),(21,'2019-07-18 07:09:27.546000','12','12',2,'[{\"changed\": {\"fields\": [\"quiz\"]}}]',12,1),(22,'2019-07-18 07:10:55.805000','1','TestSet object (1)',2,'[{\"changed\": {\"fields\": [\"expected_answer\"]}}]',4,1),(23,'2019-07-18 07:15:05.435000','2','TestSet object (2)',2,'[{\"changed\": {\"fields\": [\"expected_answer\"]}}]',4,1),(24,'2019-07-18 07:15:41.687000','1','TestSet object (1)',2,'[{\"changed\": {\"fields\": [\"expected_answer\"]}}]',4,1),(25,'2019-07-18 07:15:44.711000','2','TestSet object (2)',2,'[{\"changed\": {\"fields\": [\"expected_answer\"]}}]',4,1),(26,'2019-07-18 07:16:04.153000','1','TestSet object (1)',2,'[{\"changed\": {\"fields\": [\"expected_answer\"]}}]',4,1),(27,'2019-07-18 07:16:30.043000','12','12',3,'',12,1),(28,'2019-07-18 07:16:30.045000','11','11',3,'',12,1),(29,'2019-07-18 07:16:30.046000','10','10',3,'',12,1),(30,'2019-07-18 07:16:30.047000','9','9',3,'',12,1),(31,'2019-07-18 07:16:30.048000','8','8',3,'',12,1),(32,'2019-07-18 07:16:30.049000','7','7',3,'',12,1),(33,'2019-07-18 07:22:14.244000','3','TestSet object (3)',1,'[{\"added\": {}}]',4,1),(34,'2019-07-18 08:03:42.471000','15','15',3,'',12,1),(35,'2019-07-18 08:03:42.472000','13','13',3,'',12,1),(36,'2019-07-18 09:31:50.127000','16','16',3,'',12,1),(37,'2019-07-18 09:31:50.129000','14','14',3,'',12,1),(38,'2019-07-18 09:32:36.064000','1','1. What is the output of the following program?',2,'[]',3,1),(39,'2019-07-18 09:33:52.010000','17','17',1,'[{\"added\": {}}]',12,1),(40,'2019-07-18 09:34:07.926000','1','TestSet object (1)',2,'[{\"changed\": {\"fields\": [\"quiz\", \"test\", \"expected_answer\"]}}]',4,1),(41,'2019-07-18 09:34:46.391000','2','TestSet object (2)',2,'[{\"changed\": {\"fields\": [\"test\", \"expected_answer\"]}}]',4,1),(42,'2019-07-18 09:35:30.092000','2','dictionary',1,'[{\"added\": {}}]',2,1),(43,'2019-07-18 09:35:38.330000','2','2. What is the output of the following program?',2,'[{\"changed\": {\"fields\": [\"question\", \"example\", \"quiz_type\", \"category\", \"answer_header\"]}}]',3,1),(44,'2019-07-18 09:35:57.183000','2','TestSet object (2)',2,'[{\"changed\": {\"fields\": [\"expected_answer\"]}}]',4,1),(45,'2019-07-18 09:42:24.510000','17','17',3,'',12,1),(46,'2019-07-18 09:45:04.789000','3','String',1,'[{\"added\": {}}]',2,1),(47,'2019-07-18 09:45:08.765000','3','3. What is the output of the following program?',1,'[{\"added\": {}}]',3,1),(48,'2019-07-18 09:45:25.550000','3','TestSet object (3)',2,'[{\"changed\": {\"fields\": [\"quiz\", \"expected_answer\"]}}]',4,1),(49,'2019-07-18 09:46:50.434000','4','List',1,'[{\"added\": {}}]',2,1),(50,'2019-07-18 09:46:58.741000','4','4. What is the output of the following program?',1,'[{\"added\": {}}]',3,1),(51,'2019-07-18 09:47:14.374000','4','TestSet object (4)',1,'[{\"added\": {}}]',4,1),(52,'2019-07-18 09:47:42.928000','5','While',1,'[{\"added\": {}}]',2,1),(53,'2019-07-18 09:47:46.076000','5','5. What is the output of the following program?',1,'[{\"added\": {}}]',3,1),(54,'2019-07-18 09:48:00.799000','5','TestSet object (5)',1,'[{\"added\": {}}]',4,1),(55,'2019-07-18 09:48:28.813000','6','6. What is the output of the following program?',1,'[{\"added\": {}}]',3,1),(56,'2019-07-18 09:48:39.735000','6','TestSet object (6)',1,'[{\"added\": {}}]',4,1),(57,'2019-07-18 09:49:11.292000','6','Set',1,'[{\"added\": {}}]',2,1),(58,'2019-07-18 09:49:13.124000','7','7. What is the output of the following program?',1,'[{\"added\": {}}]',3,1),(59,'2019-07-18 09:49:25.030000','7','TestSet object (7)',1,'[{\"added\": {}}]',4,1),(60,'2019-07-18 09:49:56.501000','7','Function',1,'[{\"added\": {}}]',2,1),(61,'2019-07-18 09:49:58.778000','8','8. What is the output of the following program?',1,'[{\"added\": {}}]',3,1),(62,'2019-07-18 09:50:22.954000','8','TestSet object (8)',1,'[{\"added\": {}}]',4,1),(63,'2019-07-18 09:51:07.814000','8','Math',1,'[{\"added\": {}}]',2,1),(64,'2019-07-18 09:51:12.358000','9','9. What is the output of the following program?',1,'[{\"added\": {}}]',3,1),(65,'2019-07-18 09:51:21.548000','9','TestSet object (9)',1,'[{\"added\": {}}]',4,1),(66,'2019-07-18 09:52:25.209000','10','10. Write a code to multiply two numbers.',1,'[{\"added\": {}}]',3,1),(67,'2019-07-18 09:53:07.756000','11','11. Swap the first element and the last element.',1,'[{\"added\": {}}]',3,1),(68,'2019-07-18 09:53:35.027000','11','11. Swap the first element and the last element.',2,'[{\"changed\": {\"fields\": [\"answer_header\"]}}]',3,1),(69,'2019-07-18 09:54:11.850000','10','TestSet object (10)',1,'[{\"added\": {}}]',4,1),(70,'2019-07-18 09:54:26.591000','11','TestSet object (11)',1,'[{\"added\": {}}]',4,1),(71,'2019-07-18 09:54:48.925000','12','TestSet object (12)',1,'[{\"added\": {}}]',4,1),(72,'2019-07-18 09:55:37.308000','10','10. Write a code to multiply two numbers.',2,'[{\"changed\": {\"fields\": [\"example\"]}}]',3,1),(73,'2019-07-18 10:01:13.871000','11','11. Swap the first element and the last element.',2,'[{\"changed\": {\"fields\": [\"example\"]}}]',3,1),(74,'2019-07-18 10:01:54.107000','11','11. Swap the first element and the last element.',2,'[{\"changed\": {\"fields\": [\"example\"]}}]',3,1),(75,'2019-07-18 10:02:29.814000','11','11. Swap the first element and the last element.',2,'[{\"changed\": {\"fields\": [\"answer_header\"]}}]',3,1),(76,'2019-07-18 10:02:55.878000','11','11',3,'',12,1),(77,'2019-07-18 10:03:28.463000','2','Dictionary',2,'[{\"changed\": {\"fields\": [\"name\"]}}]',2,1),(78,'2019-07-18 17:04:52.569000','11','11. Swap the first element and the last element.',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,1),(79,'2019-07-18 17:05:03.805000','11','11. Swap the first element and the last element.',2,'[]',3,1),(80,'2019-07-18 17:05:32.215000','11','11. Swap the first element and the last element.',2,'[]',3,1),(81,'2019-07-18 17:06:14.123000','11','11. Swap the first element and the last element.',2,'[]',3,1),(82,'2019-07-19 01:45:26.733000','11','11. Swap the first element and the last element.',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,1),(83,'2019-07-19 01:46:49.732000','11','11. Swap the first element and the last element.',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,1),(84,'2019-07-19 01:47:14.721000','11','11. Swap the first element and the last element.',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,1),(85,'2019-07-19 01:47:39.700000','11','11. Swap the first element and the last element.',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,1),(86,'2019-07-19 02:03:35.726000','12','12. Swap the second element and the last to the second element.',1,'[{\"added\": {}}]',3,1),(87,'2019-07-19 02:04:18.640000','13','TestSet object (13)',1,'[{\"added\": {}}]',4,1),(88,'2019-07-19 02:04:34.738000','12','12. Swap the second element and the last to the second element.',2,'[]',3,1),(89,'2019-07-19 02:20:21.928000','13','13. Reverse the list.',1,'[{\"added\": {}}]',3,1),(90,'2019-07-19 02:20:55.519000','14','TestSet object (14)',1,'[{\"added\": {}}]',4,1),(91,'2019-07-19 17:53:32.386000','11','11. Swap the first element and the last element.',2,'[{\"changed\": {\"fields\": [\"explanation\", \"markdown_explanation\"]}}]',3,1),(92,'2019-07-19 17:54:31.160000','11','11. Swap the first element and the last element.',2,'[{\"changed\": {\"fields\": [\"markdown_explanation\"]}}]',3,1),(93,'2019-07-19 18:03:10.319000','11','11. Swap the first element and the last element.',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,1),(94,'2019-07-19 18:04:43.582000','11','11. Swap the first element and the last element.',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,1),(95,'2019-07-19 18:13:25.118000','11','11. Swap the first element and the last element.',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,1),(96,'2019-07-19 18:13:52.592000','11','11. Swap the first element and the last element.',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,1),(97,'2019-07-19 18:14:52.690000','11','11. Swap the first element and the last element.',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,1),(98,'2019-07-19 18:23:27.826000','11','11. Swap the first element and the last element.',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,1),(99,'2019-07-19 18:24:10.404000','11','11. Swap the first element and the last element.',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,1),(100,'2019-07-19 18:26:53.494000','11','11. Swap the first element and the last element.',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,1),(101,'2019-07-19 18:46:52.315000','11','11. Swap the first element and the last element.',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,1),(102,'2019-07-19 18:47:18.927000','11','11. Swap the first element and the last element.',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,1),(103,'2019-07-19 18:54:53.207000','9','Stack',1,'[{\"added\": {}}]',2,1),(104,'2019-07-19 18:55:01.236000','14','14. Reverse the list by Stack.',1,'[{\"added\": {}}]',3,1),(105,'2019-07-19 18:55:58.515000','15','TestSet object (15)',1,'[{\"added\": {}}]',4,1),(106,'2019-07-19 18:57:18.250000','14','14. Reverse the list by Stack.',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,1),(107,'2019-07-19 18:58:24.514000','14','14. Reverse the list by Stack.',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,1),(108,'2019-07-19 18:58:47.780000','14','14. Reverse the list by Stack.',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,1),(109,'2019-07-19 19:01:26.820000','13','13. Reverse the list by swapping elements.',2,'[{\"changed\": {\"fields\": [\"explanation\", \"question\"]}}]',3,1),(110,'2019-07-19 19:01:40.987000','13','13. Reverse the list by swapping elements.',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,1),(111,'2019-07-19 19:28:00.612000','13','13. Reverse the list by swapping elements.',2,'[{\"changed\": {\"fields\": [\"answer_header\"]}}]',3,1),(112,'2019-07-19 19:28:05.414000','14','14. Reverse the list by Stack.',2,'[{\"changed\": {\"fields\": [\"answer_header\"]}}]',3,1),(113,'2019-07-20 03:10:40.539000','16','TestSet object (16)',1,'[{\"added\": {}}]',4,1),(114,'2019-07-20 05:59:47.326000','14','14. Reverse the list by Stack.',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,1),(115,'2019-07-20 06:00:45.276000','14','14. Reverse the list by Stack.',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,1),(116,'2019-07-20 06:01:12.356000','14','14. Reverse the list by Stack.',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,1),(117,'2019-07-20 06:05:39.710000','14','14. Reverse the list by Stack.',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,1),(118,'2019-07-20 06:18:05.478000','14','14. Reverse the list by Stack.',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,1),(119,'2019-07-20 06:21:42.518000','14','14. Reverse the list by Stack.',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,1),(120,'2019-07-20 16:46:30.303000','14','14. Reverse the list by Stack.',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,1),(121,'2019-07-20 16:47:42.655000','3','MultipleCode',1,'[{\"added\": {}}]',1,1),(122,'2019-07-20 16:47:52.819000','3','MultipleCode',3,'',1,1),(123,'2019-07-20 16:47:59.137000','4','MultipleChoice',1,'[{\"added\": {}}]',1,1),(124,'2019-07-20 18:03:20.165000','10','Range',1,'[{\"added\": {}}]',2,1),(125,'2019-07-20 18:03:46.727000','15','15. What is the output of the following program?',1,'[{\"added\": {}}]',3,1),(126,'2019-07-20 18:04:40.749000','15','15. What is the output of the following program?',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,1),(127,'2019-07-20 18:09:21.521000','17','TestSet object (17)',1,'[{\"added\": {}}]',4,1),(128,'2019-07-20 18:22:24.857000','15','15. Dayeon',3,'',12,1),(129,'2019-07-20 18:27:08.667000','15','15. What is the output of the following program?',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,1),(130,'2019-07-20 18:43:55.533000','14','14. Reverse the list by Stack.',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,1),(131,'2019-07-20 21:21:49.849000','15','15. What is the output of the following program?',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,1),(132,'2019-07-20 21:24:32.320000','16','16. What is the output of the following program?',1,'[{\"added\": {}}]',3,1),(133,'2019-07-20 21:25:00.936000','18','TestSet object (18)',1,'[{\"added\": {}}]',4,1),(134,'2019-07-20 21:27:36.187000','17','17. What is the output of the following program?',1,'[{\"added\": {}}]',3,1),(135,'2019-07-20 21:28:00.509000','19','TestSet object (19)',1,'[{\"added\": {}}]',4,1),(136,'2019-07-20 21:29:38.445000','16','16. What is the output of the following program?',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,1),(137,'2019-07-20 21:30:21.214000','15','15. What is the output of the following program?',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,1),(138,'2019-07-20 21:33:36.386000','18','18. Choose the wrong definition of Range function?',1,'[{\"added\": {}}]',3,1),(139,'2019-07-20 21:33:58.677000','20','TestSet object (20)',1,'[{\"added\": {}}]',4,1),(140,'2019-07-20 21:35:07.504000','18','18. Which of the following is wrong?',2,'[{\"changed\": {\"fields\": [\"question\"]}}]',3,1),(141,'2019-07-20 21:35:49.722000','18','18. Which of the following definitions is wrong?',2,'[{\"changed\": {\"fields\": [\"question\"]}}]',3,1),(142,'2019-07-20 22:08:14.371000','18','18. Which of the following definitions is incorrect?',2,'[{\"changed\": {\"fields\": [\"question\"]}}]',3,1),(143,'2019-07-21 04:38:07.721000','20','TestSet object (20)',2,'[{\"changed\": {\"fields\": [\"expected_answer\"]}}]',4,1),(144,'2019-07-21 04:43:46.289000','10','10. Dayeon',2,'[{\"changed\": {\"fields\": [\"right\"]}}]',12,1),(145,'2019-07-21 07:00:58.093000','19','19. What is the output of the following code?',1,'[{\"added\": {}}]',3,1),(146,'2019-07-21 07:02:13.601000','21','TestSet object (21)',1,'[{\"added\": {}}]',4,1),(147,'2019-07-21 07:03:35.766000','19','19. What is the output of the following code?',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,1),(148,'2019-07-21 07:09:09.027000','20','20. What is the output of the following code?',1,'[{\"added\": {}}]',3,1),(149,'2019-07-21 07:09:17.581000','22','TestSet object (22)',1,'[{\"added\": {}}]',4,1),(150,'2019-07-21 07:12:10.776000','19','19. What is the output of the following code?',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,1),(151,'2019-07-21 07:12:21.212000','16','16. What is the output of the following program?',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,1),(152,'2019-07-21 07:12:26.816000','17','17. What is the output of the following program?',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,1),(153,'2019-07-21 07:12:33.602000','15','15. What is the output of the following program?',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,1),(154,'2019-07-21 09:03:07.971000','16','16. Dayeon',2,'[{\"changed\": {\"fields\": [\"right\"]}}]',12,1),(155,'2019-07-21 09:03:18.893000','16','16. Dayeon',2,'[{\"changed\": {\"fields\": [\"answer\"]}}]',12,1),(156,'2019-07-21 16:37:51.191000','19','19. What is the output of the following code?',2,'[{\"changed\": {\"fields\": [\"example\"]}}]',3,1),(157,'2019-07-21 16:53:52.705000','21','21. Given the sentence, return the last word of sentence.',1,'[{\"added\": {}}]',3,1),(158,'2019-07-21 16:55:00.716000','23','TestSet object (23)',1,'[{\"added\": {}}]',4,1),(159,'2019-07-21 16:55:49.706000','21','21. Given the sentence, return the last word of sentence.',2,'[{\"changed\": {\"fields\": [\"answer_header\"]}}]',3,1),(160,'2019-07-21 17:25:48.780000','16','TestSet object (16)',2,'[{\"changed\": {\"fields\": [\"test\"]}}]',4,1),(161,'2019-07-21 17:26:10.246000','14','TestSet object (14)',2,'[{\"changed\": {\"fields\": [\"test\"]}}]',4,1),(162,'2019-07-21 17:26:40.279000','10','TestSet object (10)',2,'[{\"changed\": {\"fields\": [\"test\"]}}]',4,1),(163,'2019-07-21 17:27:18.547000','11','TestSet object (11)',2,'[{\"changed\": {\"fields\": [\"test\"]}}]',4,1),(164,'2019-07-21 17:27:39.333000','12','TestSet object (12)',2,'[{\"changed\": {\"fields\": [\"test\"]}}]',4,1),(165,'2019-07-21 17:28:10.877000','15','TestSet object (15)',2,'[{\"changed\": {\"fields\": [\"test\"]}}]',4,1),(166,'2019-07-21 17:30:22.160000','21','21. Given the sorted list, insert the value in the right position.',2,'[{\"changed\": {\"fields\": [\"question\", \"example\", \"category\", \"answer_header\"]}}]',3,1),(167,'2019-07-21 17:30:50.464000','24','TestSet object (24)',1,'[{\"added\": {}}]',4,1),(168,'2019-07-21 17:31:30.392000','23','23. Dayeon',3,'',12,1),(169,'2019-07-21 17:32:10.931000','23','TestSet object (23)',3,'',4,1),(170,'2019-07-21 17:33:07.797000','24','24. Dayeon',3,'',12,1),(171,'2019-07-21 17:42:05.463000','22','22. Find a square root x.  A square root value(return value) is always an integer.',1,'[{\"added\": {}}]',3,1),(172,'2019-07-21 17:42:55.195000','22','22. Find a square root x.  A square root value(return value) is always an integer.',2,'[{\"changed\": {\"fields\": [\"answer_header\"]}}]',3,1),(173,'2019-07-21 17:43:12.640000','25','TestSet object (25)',1,'[{\"added\": {}}]',4,1),(174,'2019-07-21 17:43:36.402000','21','21. Given the sorted list, insert the value in the right position.',2,'[{\"changed\": {\"fields\": [\"example\"]}}]',3,1),(175,'2019-07-21 17:43:45.830000','21','21. Given the sorted list, insert the value at the right position.',2,'[{\"changed\": {\"fields\": [\"question\"]}}]',3,1),(176,'2019-07-22 03:46:45.668000','21','21. Given the sorted list, insert the value at the right position.  It must be in sorted order after insertion.',2,'[{\"changed\": {\"fields\": [\"question\"]}}]',3,1),(177,'2019-07-23 03:14:28.582000','23','23. Find the subarray maximum which has the largest sum.  Subarray should have the first element.',1,'[{\"added\": {}}]',3,1),(178,'2019-07-23 03:15:20.548000','26','TestSet object (26)',1,'[{\"added\": {}}]',4,1),(179,'2019-07-23 03:15:34.052000','27','TestSet object (27)',1,'[{\"added\": {}}]',4,1),(180,'2019-07-23 03:19:10.297000','23','23. Find the subarray maximum which has the largest sum.  Subarray should have the first element.',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,1),(181,'2019-07-23 03:20:05.353000','23','23. Find the subarray maximum which has the largest sum.  Subarray should have the first element.  Return the sum of the maximum subarray.',2,'[{\"changed\": {\"fields\": [\"question\"]}}]',3,1),(182,'2019-07-23 03:21:03.449000','11','Class',1,'[{\"added\": {}}]',2,1),(183,'2019-07-23 03:23:36.170000','24','24. What is the output of the following program?',1,'[{\"added\": {}}]',3,1),(184,'2019-07-23 03:23:51.941000','28','TestSet object (28)',1,'[{\"added\": {}}]',4,1),(185,'2019-07-23 03:24:40.787000','23','23. Find the maximum subarray which has the largest sum.  Subarray should have the first element.  Return the sum of the maximum subarray.',2,'[{\"changed\": {\"fields\": [\"question\"]}}]',3,1),(186,'2019-07-23 03:28:12.016000','25','25. Find the error in the code below.',1,'[{\"added\": {}}]',3,1),(187,'2019-07-23 03:28:43.352000','29','TestSet object (29)',1,'[{\"added\": {}}]',4,1),(188,'2019-07-23 03:38:18.007000','24','24. What is the output of the following program?',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,1),(189,'2019-07-23 03:38:38.375000','24','24. What is the output of the following program?',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,1),(190,'2019-07-23 03:38:58.339000','24','24. What is the output of the following program?',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,1),(191,'2019-07-23 03:39:16.564000','24','24. What is the output of the following program?',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,1),(192,'2019-07-23 03:40:19.100000','24','24. What is the output of the following program?',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,1),(193,'2019-07-23 03:40:56.443000','24','24. What is the output of the following program?',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,1),(194,'2019-07-23 03:43:06.338000','24','24. What is the output of the following program?',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,1),(195,'2019-07-23 03:43:36.250000','24','24. What is the output of the following program?',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,1),(196,'2019-07-23 03:43:55.415000','24','24. What is the output of the following program?',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,1),(197,'2019-07-23 03:44:30.105000','24','24. What is the output of the following program?',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,1),(198,'2019-07-23 03:46:50.751000','24','24. What is the output of the following program?',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,1),(199,'2019-07-23 06:02:59.867000','12','DataType',1,'[{\"added\": {}}]',2,1),(200,'2019-07-23 06:03:36.083000','26','26. What is the incorrect data types in Python?',1,'[{\"added\": {}}]',3,1),(201,'2019-07-23 06:03:46.172000','30','TestSet object (30)',1,'[{\"added\": {}}]',4,1),(202,'2019-07-23 06:26:17.415000','26','26. What is the incorrect data types in Python?',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,1),(203,'2019-07-23 07:43:21.933000','26','26. What is the incorrect data types in Python?',2,'[{\"changed\": {\"fields\": [\"video\"]}}]',3,1),(204,'2019-07-23 07:43:34.363000','26','26. What is the incorrect data types in Python?',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,1),(205,'2019-07-23 07:58:45.527000','27','27. Dayeon',2,'[{\"changed\": {\"fields\": [\"answer\", \"right\"]}}]',12,1),(206,'2019-07-23 08:10:34.652000','26','26. What is the incorrect data types in Python?',2,'[{\"changed\": {\"fields\": [\"video\"]}}]',3,1),(207,'2019-07-24 23:12:19.896000','26','26. What is the incorrect data types in Python?',2,'[{\"changed\": {\"fields\": [\"video\"]}}]',3,1),(208,'2019-07-25 01:45:25.869000','26','26. What is the incorrect data types in Python?',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,1),(209,'2019-07-25 01:55:58.442000','26','26. What is the incorrect data types in Python?',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,1),(210,'2019-07-25 04:35:28.870000','26','26. What is the incorrect data types in Python?',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,1),(211,'2019-07-25 04:36:19.820000','26','26. What is the incorrect data types in Python?',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,1),(212,'2019-07-25 04:37:25.823000','26','26. What is the incorrect data types in Python?',2,'[]',3,1),(213,'2019-07-25 04:38:32.820000','26','26. What is the incorrect data types in Python?',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,1),(214,'2019-07-25 04:38:47.648000','26','26. What is the incorrect data types in Python?',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,1),(215,'2019-07-25 05:27:12.425000','26','26. What is the incorrect data types in Python?',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,1),(216,'2019-07-25 05:28:07.095000','26','26. What is the incorrect data types in Python?',2,'[{\"changed\": {\"fields\": [\"option1\", \"option2\"]}}]',3,1),(217,'2019-07-26 04:31:21.286000','27','27. Given an integer array of 1 to N except for one number, find the missing integer.',1,'[{\"added\": {}}]',3,1),(218,'2019-07-26 04:31:52.057000','31','TestSet object (31)',1,'[{\"added\": {}}]',4,1),(219,'2019-07-26 04:38:40.702000','24','24. What is the output of the following program?',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,1),(220,'2019-07-26 04:40:00.302000','24','24. What is the output of the following program?',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,1),(221,'2019-07-26 04:40:38.595000','24','24. What is the output of the following program?',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,1),(222,'2019-07-26 04:41:07.556000','24','24. What is the output of the following program?',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,1),(223,'2019-07-26 04:42:01.972000','24','24. What is the output of the following program?',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,1),(224,'2019-07-26 04:43:57.544000','23','23. Find the maximum subarray which has the largest sum.  Subarray should have the first element.  Return the sum of the maximum subarray.',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,1),(225,'2019-07-26 04:44:27.749000','22','22. Find a square root x.  A square root value(return value) is always an integer.',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,1),(226,'2019-07-26 04:46:47.038000','20','20. What is the output of the following code?',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,1),(227,'2019-07-26 04:49:42.031000','20','20. What is the output of the following code?',2,'[]',3,1),(228,'2019-07-26 04:50:52.979000','19','19. What is the output of the following code?',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,1),(229,'2019-07-26 04:52:16.894000','17','17. What is the output of the following program?',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,1),(230,'2019-07-26 04:53:31.815000','16','16. What is the output of the following program?',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,1),(231,'2019-07-26 04:54:13.631000','17','17. What is the output of the following program?',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,1),(232,'2019-07-26 04:54:45.691000','16','16. What is the output of the following program?',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,1),(233,'2019-07-26 04:54:54.612000','17','17. What is the output of the following program?',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,1),(234,'2019-07-26 04:55:56.182000','15','15. What is the output of the following program?',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,1),(235,'2019-07-26 04:58:55.409000','14','14. Reverse the list by Stack.',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,1),(236,'2019-07-26 04:59:57.191000','13','13. Reverse the list by swapping elements.',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,1),(237,'2019-07-26 05:00:47.621000','11','11. Swap the first element and the last element.',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,1),(238,'2019-07-26 05:01:09.051000','11','11. Swap the first element and the last element.',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,1),(239,'2019-07-26 05:38:26.145000','23','23. Find the maximum subarray which has the largest sum.  Subarray should have the first element.  Return the sum of the maximum subarray.',2,'[{\"changed\": {\"fields\": [\"example\"]}}]',3,1),(240,'2019-07-26 05:38:41.062000','26','TestSet object (26)',2,'[{\"changed\": {\"fields\": [\"expected_answer\"]}}]',4,1),(241,'2019-07-26 05:41:11.753000','32','TestSet object (32)',1,'[{\"added\": {}}]',4,1),(242,'2019-07-26 05:58:02.537000','32','TestSet object (32)',2,'[{\"changed\": {\"fields\": [\"expected_answer\"]}}]',4,1),(243,'2019-07-26 07:37:35.939000','28','28. Find the most frequently appearing character.',1,'[{\"added\": {}}]',3,1),(244,'2019-07-26 08:05:29.884000','23','23. Find the maximum subarray which has the largest sum.  Subarray should have the first element.  Return the sum of the maximum subarray.',2,'[{\"changed\": {\"fields\": [\"example\"]}}]',3,1),(245,'2019-07-26 18:32:22.835000','1','Beginner',1,'[{\"added\": {}}]',13,1),(246,'2019-07-26 18:32:42.960000','2','Intermediate',1,'[{\"added\": {}}]',13,1),(247,'2019-07-26 18:33:24.009000','3','Advanced',1,'[{\"added\": {}}]',13,1),(248,'2019-07-26 18:33:28.136000','4','Expert',1,'[{\"added\": {}}]',13,1),(249,'2019-07-26 19:32:11.838000','12','DataType',2,'[{\"changed\": {\"fields\": [\"difficulty\"]}}]',2,1),(250,'2019-07-26 19:32:52.655000','3','String',2,'[{\"changed\": {\"fields\": [\"difficulty\", \"number\"]}}]',2,1),(251,'2019-07-26 20:06:24.161000','5','While',2,'[{\"changed\": {\"fields\": [\"difficulty\"]}}]',2,1),(252,'2019-07-26 20:31:14.477000','28','28. Find the most frequently appearing character.',2,'[{\"changed\": {\"fields\": [\"answer_header\"]}}]',3,1),(253,'2019-07-26 20:31:25.680000','28','28. Find the most frequently appearing character.',2,'[{\"changed\": {\"fields\": [\"answer_header\"]}}]',3,1),(254,'2019-07-26 20:31:44.266000','28','28. Find the most frequently appearing character.',2,'[{\"changed\": {\"fields\": [\"answer_header\"]}}]',3,1),(255,'2019-07-27 01:21:30.064000','12','DataType',2,'[{\"changed\": {\"fields\": [\"desc\"]}}]',2,1),(256,'2019-07-27 05:28:43.439000','10','Beginner-3. Range',2,'[{\"changed\": {\"fields\": [\"difficulty\", \"order\", \"desc\"]}}]',2,1),(257,'2019-07-27 05:28:53.018000','10','Beginner-2. Range',2,'[{\"changed\": {\"fields\": [\"order\"]}}]',2,1),(258,'2019-07-27 05:29:02.436000','7','Beginner-3. Function',2,'[{\"changed\": {\"fields\": [\"difficulty\", \"order\", \"desc\"]}}]',2,1),(259,'2019-07-27 17:19:11.765000','29','29. Given an array, rotate the array to the right by n steps.',1,'[{\"added\": {}}]',3,1),(260,'2019-07-27 17:19:39.109000','33','TestSet object (33)',1,'[{\"added\": {}}]',4,1),(261,'2019-07-28 02:37:43.044000','1','Super Junior',2,'[{\"changed\": {\"fields\": [\"name\"]}}]',13,1),(262,'2019-07-28 02:39:44.939000','2','Junior',2,'[{\"changed\": {\"fields\": [\"name\"]}}]',13,1),(263,'2019-07-28 02:39:51.957000','3','Senior',2,'[{\"changed\": {\"fields\": [\"name\"]}}]',13,1),(264,'2019-07-28 03:06:41.782000','30','  30. Find the smallest number in a list.',1,'[{\"added\": {}}]',3,1),(265,'2019-07-28 03:07:32.533000','34','TestSet object (34)',1,'[{\"added\": {}}]',4,1),(266,'2019-07-28 03:14:49.347000','29','  29. Given an array, rotate the array to the right by n steps.\r\n(you take the 0th element and put it at the end of the list)',2,'[{\"changed\": {\"fields\": [\"question\"]}}]',3,1),(267,'2019-07-28 05:49:50.707000','31','  31. Split the list into two lists. One with only even numbers and one with only odd numbers.',1,'[{\"added\": {}}]',3,1),(268,'2019-07-28 05:50:28.968000','7','Junior-3. Function',2,'[{\"changed\": {\"fields\": [\"difficulty\"]}}]',2,1),(269,'2019-07-28 05:50:39.295000','10','Junior-2. Range',2,'[{\"changed\": {\"fields\": [\"difficulty\"]}}]',2,1),(270,'2019-07-28 05:57:08.629000','31','  31. Split the list into two lists. One with only even numbers and one with only odd numbers. Odd number list should be returned first.',2,'[{\"changed\": {\"fields\": [\"question\"]}}]',3,1),(271,'2019-07-28 06:00:50.431000','35','TestSet object (35)',1,'[{\"added\": {}}]',4,1),(272,'2019-07-28 16:37:28.877000','13','Super Junior-2. Operator',1,'[{\"added\": {}}]',2,1),(273,'2019-07-29 01:16:02.333000','26','26. Dayeon',2,'[{\"changed\": {\"fields\": [\"right\"]}}]',12,1),(274,'2019-07-29 01:16:27.868000','26','26. Dayeon',2,'[{\"changed\": {\"fields\": [\"right\"]}}]',12,1),(275,'2019-07-29 01:16:49.657000','26','26. Dayeon',2,'[{\"changed\": {\"fields\": [\"right\"]}}]',12,1),(276,'2019-07-29 02:01:07.212000','26','  26. What is the incorrect data types in Python?',2,'[{\"changed\": {\"fields\": [\"video\"]}}]',3,1),(277,'2019-07-29 02:10:00.226000','26','  26. What is the incorrect data types in Python?',2,'[{\"changed\": {\"fields\": [\"video\"]}}]',3,1),(278,'2019-07-29 06:15:49.574000','32','  32. What is the incorrect data type in Python?',1,'[{\"added\": {}}]',3,1),(279,'2019-07-29 06:16:00.799000','36','TestSet object (36)',1,'[{\"added\": {}}]',4,1),(280,'2019-07-29 06:17:23.185000','32','  32. What is the incorrect data type in Python?',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,1),(281,'2019-07-29 06:17:47.490000','32','  32. What is the incorrect data type in Python?',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,1),(282,'2019-07-29 06:18:06.499000','32','  32. What is the incorrect data type in Python?',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,1),(283,'2019-07-29 06:50:33.625000','26','  26. What is the incorrect data types in Python?',2,'[{\"changed\": {\"fields\": [\"video\"]}}]',3,1),(284,'2019-07-29 07:01:29.689000','32','  32. What is the incorrect data type in Python?',2,'[{\"changed\": {\"fields\": [\"video\"]}}]',3,1),(285,'2019-07-29 08:18:42.660000','11','Senior-0. Class',2,'[{\"changed\": {\"fields\": [\"difficulty\", \"desc\"]}}]',2,1),(286,'2019-07-29 08:19:21.114000','9','Senior-0. Stack',2,'[{\"changed\": {\"fields\": [\"difficulty\", \"desc\"]}}]',2,1),(287,'2019-07-29 08:19:55.544000','8','Junior-0. Math',2,'[{\"changed\": {\"fields\": [\"difficulty\", \"desc\"]}}]',2,1),(288,'2019-07-29 08:20:24.651000','6','Super Junior-0. Set',2,'[{\"changed\": {\"fields\": [\"difficulty\", \"desc\"]}}]',2,1),(289,'2019-07-29 08:20:45.488000','4','Super Junior-0. List',2,'[{\"changed\": {\"fields\": [\"difficulty\", \"desc\"]}}]',2,1),(290,'2019-07-29 08:21:13.134000','2','Super Junior-0. Dictionary',2,'[{\"changed\": {\"fields\": [\"difficulty\", \"desc\"]}}]',2,1),(291,'2019-07-29 08:21:33.911000','1','Junior-0. For',2,'[{\"changed\": {\"fields\": [\"difficulty\", \"desc\"]}}]',2,1),(292,'2019-07-30 07:05:27.982000','3','Junior High',2,'[{\"changed\": {\"fields\": [\"name\"]}}]',13,1),(293,'2019-07-30 07:05:32.155000','4','High',2,'[{\"changed\": {\"fields\": [\"name\"]}}]',13,1),(294,'2019-07-30 07:05:43.490000','5','Expert',1,'[{\"added\": {}}]',13,1),(295,'2019-07-30 07:28:51.044000','12','Super Junior-10. DataType',2,'[{\"changed\": {\"fields\": [\"order\"]}}]',2,1),(296,'2019-07-30 07:29:37.730000','14','Super Junior-20. Variable',1,'[{\"added\": {}}]',2,1),(297,'2019-07-30 07:30:37.491000','15','Super Junior-30. Print',1,'[{\"added\": {}}]',2,1),(298,'2019-07-30 07:30:58.449000','13','Super Junior-40. Operator',2,'[{\"changed\": {\"fields\": [\"order\"]}}]',2,1),(299,'2019-07-30 07:31:45.315000','10','Super Junior-50. Range',2,'[{\"changed\": {\"fields\": [\"difficulty\", \"order\", \"desc\"]}}]',2,1),(300,'2019-07-30 07:32:59.553000','16','Super Junior-60. If',1,'[{\"added\": {}}]',2,1),(301,'2019-07-30 07:34:54.877000','1','Super Junior-70. For',2,'[{\"changed\": {\"fields\": [\"difficulty\", \"order\"]}}]',2,1),(302,'2019-07-30 07:35:23.363000','7','Junior-10. Function',2,'[{\"changed\": {\"fields\": [\"order\", \"desc\"]}}]',2,1),(303,'2019-07-30 07:35:37.483000','11','Junior-20. Class',2,'[{\"changed\": {\"fields\": [\"difficulty\", \"order\"]}}]',2,1),(304,'2019-07-30 07:36:08.466000','17','Junior-30. Scope',1,'[{\"added\": {}}]',2,1),(305,'2019-07-30 07:36:32.299000','18','Junior-40. Integer',1,'[{\"added\": {}}]',2,1),(306,'2019-07-30 07:39:45.837000','3','Junior-50. String',2,'[{\"changed\": {\"fields\": [\"difficulty\", \"order\", \"desc\"]}}]',2,1),(307,'2019-07-30 07:40:00.208000','4','Junior-60. List',2,'[{\"changed\": {\"fields\": [\"difficulty\", \"order\"]}}]',2,1),(308,'2019-07-30 07:41:08.963000','19','Junior High-30. List',1,'[{\"added\": {}}]',2,1),(309,'2019-07-30 07:41:51.017000','11','  11. Swap the first element and the last element.',2,'[{\"changed\": {\"fields\": [\"category\"]}}]',3,1),(310,'2019-07-30 07:43:05.705000','19','Junior High-30. List 3',2,'[{\"changed\": {\"fields\": [\"name\"]}}]',2,1),(311,'2019-07-30 07:43:39.429000','19','Junior High-30. List 2',2,'[{\"changed\": {\"fields\": [\"name\"]}}]',2,1),(312,'2019-07-30 07:44:00.545000','20','Junior High-10. Integer 3',1,'[{\"added\": {}}]',2,1),(313,'2019-07-30 07:44:24.698000','19','Junior High-30. List 3',2,'[{\"changed\": {\"fields\": [\"name\"]}}]',2,1),(314,'2019-07-30 07:45:10.634000','21','Junior High-20. String 3',1,'[{\"added\": {}}]',2,1),(315,'2019-07-30 07:47:41.922000','22','Junior-70. Tuple',1,'[{\"added\": {}}]',2,1),(316,'2019-07-30 07:48:12.268000','23','Junior-80. Set',1,'[{\"added\": {}}]',2,1),(317,'2019-07-30 07:48:40.755000','24','Junior-90. Dictionary',1,'[{\"added\": {}}]',2,1),(318,'2019-07-30 07:49:12.269000','25','Junior-100. Module',1,'[{\"added\": {}}]',2,1),(319,'2019-07-30 07:51:30.795000','26','Junior-110. Casting',1,'[{\"added\": {}}]',2,1),(320,'2019-07-30 07:51:50.400000','27','Junior-120. OOP',1,'[{\"added\": {}}]',2,1),(321,'2019-07-30 07:59:13.323000','2','Junior High-60. Dictionary',2,'[{\"changed\": {\"fields\": [\"difficulty\", \"order\"]}}]',2,1),(322,'2019-07-30 07:59:46.106000','8','Junior High-70. Math',2,'[{\"changed\": {\"fields\": [\"difficulty\", \"order\"]}}]',2,1),(323,'2019-07-30 08:01:30.268000','5','Super Junior-80. While',2,'[{\"changed\": {\"fields\": [\"difficulty\", \"order\", \"desc\"]}}]',2,1),(324,'2019-07-30 08:02:00.831000','6','Junior High-50. Set',2,'[{\"changed\": {\"fields\": [\"difficulty\", \"order\"]}}]',2,1),(325,'2019-07-30 08:02:36.653000','9','High-20. Stack',2,'[{\"changed\": {\"fields\": [\"difficulty\", \"order\"]}}]',2,1),(326,'2019-07-30 08:03:12.013000','28','Junior High-40. Tuple',1,'[{\"added\": {}}]',2,1),(327,'2019-07-30 08:05:24.745000','20','Junior High-10. Integer 3',2,'[{\"changed\": {\"fields\": [\"desc\"]}}]',2,1),(328,'2019-07-30 08:48:36.487000','22','  22. Find a square root x.  A square root value(return value) is always an integer.',2,'[{\"changed\": {\"fields\": [\"category\"]}}]',3,1),(329,'2019-07-30 09:07:15.916000','29','Junior High-38. For',1,'[{\"added\": {}}]',2,1),(330,'2019-07-30 09:08:39.874000','30','High-39. Queue',1,'[{\"added\": {}}]',2,1),(331,'2019-07-30 09:09:09.053000','31','High-40. Linked List',1,'[{\"added\": {}}]',2,1),(332,'2019-07-30 09:14:14.974000','32','Expert-41. Advanced Math',1,'[{\"added\": {}}]',2,1),(333,'2019-07-30 09:14:59.203000','6','Junior High-35. Set 2',2,'[{\"changed\": {\"fields\": [\"name\"]}}]',2,1),(334,'2019-07-30 09:15:04.240000','28','Junior High-34. Tuple 2',2,'[{\"changed\": {\"fields\": [\"name\"]}}]',2,1),(335,'2019-07-30 09:15:10.309000','19','Junior High-33. List 2',2,'[{\"changed\": {\"fields\": [\"name\"]}}]',2,1),(336,'2019-07-30 09:15:14.916000','21','Junior High-32. String 2',2,'[{\"changed\": {\"fields\": [\"name\"]}}]',2,1),(337,'2019-07-30 09:15:19.330000','20','Junior High-31. Integer 2',2,'[{\"changed\": {\"fields\": [\"name\"]}}]',2,1),(338,'2019-07-30 09:16:20.733000','12','  12. Swap the second element and the last to the second element.',2,'[{\"changed\": {\"fields\": [\"category\"]}}]',3,1),(339,'2019-07-30 09:16:35.966000','13','  13. Reverse the list by swapping elements.',2,'[{\"changed\": {\"fields\": [\"category\"]}}]',3,1),(340,'2019-07-30 09:16:55.127000','21','  21. Given the sorted list, insert the value at the right position.  It must be in sorted order after insertion.',2,'[{\"changed\": {\"fields\": [\"category\"]}}]',3,1),(341,'2019-07-30 09:17:06.893000','23','  23. Find the maximum subarray which has the largest sum.  Subarray should have the first element.  Return the sum of the maximum subarray.',2,'[{\"changed\": {\"fields\": [\"category\"]}}]',3,1),(342,'2019-07-30 09:17:22.255000','29','  29. Given an array, rotate the array to the right by n steps.\r\n(you take the 0th element and put it at the end of the list)',2,'[{\"changed\": {\"fields\": [\"category\"]}}]',3,1),(343,'2019-07-30 09:17:35.420000','30','  30. Find the smallest number in a list.',2,'[{\"changed\": {\"fields\": [\"category\"]}}]',3,1),(344,'2019-07-30 09:18:20.736000','31','  31. Split the list into two lists. One with only even numbers and one with only odd numbers. Odd number list should be returned first.',2,'[{\"changed\": {\"fields\": [\"category\"]}}]',3,1),(345,'2019-07-30 09:19:33.697000','2','Junior High-36. Dictionary 2',2,'[{\"changed\": {\"fields\": [\"name\"]}}]',2,1),(346,'2019-07-30 09:19:49.785000','28','  28. Find the most frequently appearing character.',2,'[]',3,1),(347,'2019-07-30 09:20:14.085000','2','  2. What is the output of the following program?',2,'[{\"changed\": {\"fields\": [\"category\"]}}]',3,1),(348,'2019-07-30 09:20:44.818000','7','  7. What is the output of the following program?',2,'[{\"changed\": {\"fields\": [\"category\"]}}]',3,1),(349,'2019-07-30 09:27:18.872000','33','  33. Remove the third word of the sentence.',1,'[{\"added\": {}}]',3,1),(350,'2019-07-30 09:27:44.046000','37','TestSet object (37)',1,'[{\"added\": {}}]',4,1),(351,'2019-07-30 09:28:35.504000','34','34. Dayeon',3,'',12,1),(352,'2019-07-30 09:28:46.882000','35','35. Dayeon',3,'',12,1),(353,'2019-07-31 01:12:30.062000','34','  34. Given a decimal less than 1, return the number of zeros.',1,'[{\"added\": {}}]',3,1),(354,'2019-07-31 01:12:52.025000','38','TestSet object (38)',1,'[{\"added\": {}}]',4,1),(355,'2019-07-31 01:15:36.424000','34','  34. Given a decimal less than 1, return the number of zeros.',2,'[{\"changed\": {\"fields\": [\"answer_header\"]}}]',3,1),(356,'2019-07-31 03:24:01.120000','34','  34. Given a decimal less than 1, return the number of zeros at the right of the point.',2,'[{\"changed\": {\"fields\": [\"question\"]}}]',3,1),(357,'2019-07-31 03:46:03.135000','39','TestSet object (39)',1,'[{\"added\": {}}]',4,1),(358,'2019-07-31 03:47:02.245000','40','TestSet object (40)',1,'[{\"added\": {}}]',4,1),(359,'2019-07-31 03:47:53.609000','34','  34. Given a decimal less than 1, return the number of leading zeros at the right of the point.',2,'[{\"changed\": {\"fields\": [\"question\"]}}]',3,1),(360,'2019-07-31 05:12:34.397000','1','1. Dayeon',2,'[{\"changed\": {\"fields\": [\"date\"]}}]',12,1),(361,'2019-07-31 05:12:40.128000','2','2. Dayeon',2,'[{\"changed\": {\"fields\": [\"date\"]}}]',12,1),(362,'2019-07-31 05:15:13.193000','3','3. Dayeon',2,'[{\"changed\": {\"fields\": [\"date\"]}}]',12,1),(363,'2019-07-31 05:15:26.061000','25','25. Dayeon',2,'[{\"changed\": {\"fields\": [\"date\"]}}]',12,1),(364,'2019-07-31 05:15:31.172000','20','20. Dayeon',2,'[{\"changed\": {\"fields\": [\"date\"]}}]',12,1),(365,'2019-07-31 05:15:36.386000','6','6. Dayeon',2,'[{\"changed\": {\"fields\": [\"date\"]}}]',12,1),(366,'2019-07-31 05:15:40.980000','8','8. Dayeon',2,'[{\"changed\": {\"fields\": [\"date\"]}}]',12,1),(367,'2019-07-31 05:15:45.779000','10','10. Dayeon',2,'[{\"changed\": {\"fields\": [\"date\"]}}]',12,1),(368,'2019-07-31 05:16:02.722000','21','21. Dayeon',2,'[{\"changed\": {\"fields\": [\"date\"]}}]',12,1),(369,'2019-07-31 05:16:08.307000','17','17. Dayeon',2,'[{\"changed\": {\"fields\": [\"date\"]}}]',12,1),(370,'2019-07-31 05:16:08.380000','17','17. Dayeon',2,'[{\"changed\": {\"fields\": [\"date\"]}}]',12,1),(371,'2019-07-31 05:16:13.780000','25','25. Dayeon',2,'[{\"changed\": {\"fields\": [\"date\"]}}]',12,1),(372,'2019-07-31 05:16:18.075000','16','16. Dayeon',2,'[{\"changed\": {\"fields\": [\"date\"]}}]',12,1),(373,'2019-07-31 05:16:23.182000','14','14. Dayeon',2,'[{\"changed\": {\"fields\": [\"answer\", \"date\"]}}]',12,1),(374,'2019-07-31 05:16:37.754000','22','22. Dayeon',2,'[{\"changed\": {\"fields\": [\"date\"]}}]',12,1),(375,'2019-07-31 05:17:22.602000','19','19. Dayeon 2019-07-07 02:50:23-07:00',2,'[{\"changed\": {\"fields\": [\"date\"]}}]',12,1),(376,'2019-07-31 05:17:28.198000','12','12. Dayeon 2019-07-09 02:51:59-07:00',2,'[{\"changed\": {\"fields\": [\"date\"]}}]',12,1),(377,'2019-07-31 05:17:33.045000','13','13. Dayeon 2019-07-16 02:52:05-07:00',2,'[{\"changed\": {\"fields\": [\"date\"]}}]',12,1),(378,'2019-07-31 05:17:39.660000','7','7. Dayeon 2019-07-14 02:51:13-07:00',2,'[{\"changed\": {\"fields\": [\"date\"]}}]',12,1),(379,'2019-07-31 05:17:58.137000','18','18. Dayeon 2019-07-10 02:53:02-07:00',2,'[{\"changed\": {\"fields\": [\"date\"]}}]',12,1),(380,'2019-07-31 05:18:04.969000','5','5. Dayeon 2019-07-09 02:51:03-07:00',2,'[{\"changed\": {\"fields\": [\"date\"]}}]',12,1),(381,'2019-07-31 05:33:00.435000','37','TestSet object (37)',2,'[{\"changed\": {\"fields\": [\"expected_answer\"]}}]',4,1),(382,'2019-07-31 05:33:55.181000','37','TestSet object (37)',2,'[]',4,1),(383,'2019-07-31 05:34:57.824000','37','TestSet object (37)',2,'[{\"changed\": {\"fields\": [\"expected_answer\"]}}]',4,1),(384,'2019-07-31 06:06:37.466000','27','  27. Given an integer array of 1 to N except for one number, find the missing integer.',2,'[{\"changed\": {\"fields\": [\"category\", \"visible\"]}}]',3,1),(385,'2019-07-31 06:08:57.373000','27','  27. Given an integer array of 1 to N except for one number, find the missing integer.',2,'[{\"changed\": {\"fields\": [\"answer_header\"]}}]',3,1),(386,'2019-08-01 05:37:27.114000','35','  35. Given the two integers, find the greatest common factor(GCF).',1,'[{\"added\": {}}]',3,1),(387,'2019-08-01 05:37:44.909000','41','35. 15, 9',1,'[{\"added\": {}}]',4,1),(388,'2019-08-01 05:38:20.620000','42','35. 18, 17',1,'[{\"added\": {}}]',4,1),(389,'2019-08-01 05:39:26.116000','41','35. 15\r\n9',2,'[{\"changed\": {\"fields\": [\"test\"]}}]',4,1),(390,'2019-08-01 05:39:30.974000','42','35. 18\r\n17',2,'[{\"changed\": {\"fields\": [\"test\"]}}]',4,1),(391,'2019-08-01 05:39:56.375000','10','  10. Write a code to multiply two numbers.',2,'[{\"changed\": {\"fields\": [\"example\"]}}]',3,1),(392,'2019-08-01 06:54:46.639000','26','  [DataType] 26. What is the incorrect data types in Python?',2,'[{\"changed\": {\"fields\": [\"video\"]}}]',3,1),(393,'2019-08-01 07:39:59.231000','37','33. \"How are you today\"',2,'[{\"changed\": {\"fields\": [\"expected_answer\"]}}]',4,1),(394,'2019-08-01 07:40:41.029000','38','33. Dayeon 2019-07-13 00:40:22-07:00',2,'[{\"changed\": {\"fields\": [\"answer\", \"date\"]}}]',12,1),(395,'2019-08-01 07:46:03.474000','36','  [Print] 36. Print',1,'[{\"added\": {}}]',3,1),(396,'2019-08-01 07:46:25.861000','43','36. 1\r\n2',1,'[{\"added\": {}}]',4,1),(397,'2019-08-01 08:22:32.730000','37','  [For] 37. Find the second largest number of the list.',1,'[{\"added\": {}}]',3,1),(398,'2019-08-01 08:22:49.915000','44','37. [5, 3, 6, 7, 8]',1,'[{\"added\": {}}]',4,1),(399,'2019-08-01 08:58:19.611000','8','8. Dayeon 2019-06-30 02:51:31-07:00',2,'[{\"changed\": {\"fields\": [\"date\"]}}]',12,1),(400,'2019-08-01 08:58:38.780000','17','14. Dayeon 2019-06-29 02:55:05-07:00',2,'[{\"changed\": {\"fields\": [\"date\"]}}]',12,1),(401,'2019-08-01 08:58:56.516000','38','33. Dayeon 2019-06-26 00:40:22-07:00',2,'[{\"changed\": {\"fields\": [\"date\"]}}]',12,1),(402,'2019-08-01 09:23:29.289000','25','21. Dayeon 2019-06-26 20:58:21-07:00',2,'[{\"changed\": {\"fields\": [\"date\"]}}]',12,1),(403,'2019-08-01 09:23:44.796000','7','7. Dayeon 2019-06-24 02:51:13-07:00',2,'[{\"changed\": {\"fields\": [\"date\"]}}]',12,1),(404,'2019-08-01 10:14:35.342000','36','x [Print] 36. Print',2,'[{\"changed\": {\"fields\": [\"visible\"]}}]',3,1),(405,'2019-08-01 10:17:11.491000','41','36. Dayeon 2019-08-01 08:04:58.923924+00:00',3,'',12,1),(406,'2019-08-01 22:51:27.544000','1','login1',1,'[{\"added\": {}}]',15,1),(407,'2019-08-01 22:51:46.973000','2','Login2',1,'[{\"added\": {}}]',15,1),(408,'2019-08-01 22:51:52.033000','2','login2',2,'[{\"changed\": {\"fields\": [\"name\"]}}]',15,1),(409,'2019-08-01 22:52:07.073000','1','Dayeon',1,'[{\"added\": {}}]',14,1),(410,'2019-08-01 23:00:59.143000','1','login',2,'[{\"changed\": {\"fields\": [\"name\", \"condition\", \"value\"]}}]',15,1),(411,'2019-08-01 23:01:14.877000','2','login',2,'[{\"changed\": {\"fields\": [\"name\", \"condition\", \"value\"]}}]',15,1),(412,'2019-08-01 23:05:14.743000','3','[login] login33',1,'[{\"added\": {}}]',15,1),(413,'2019-08-01 23:12:18.622000','3','[login] login3',2,'[{\"changed\": {\"fields\": [\"condition\"]}}]',15,1),(414,'2019-08-01 23:12:52.651000','1','[login] login1',2,'[{\"changed\": {\"fields\": [\"html\"]}}]',15,1),(415,'2019-08-01 23:13:01.586000','2','[login] login2',2,'[{\"changed\": {\"fields\": [\"html\"]}}]',15,1),(416,'2019-08-01 23:13:09.962000','3','[login] login3',2,'[{\"changed\": {\"fields\": [\"html\"]}}]',15,1),(417,'2019-08-01 23:14:18.845000','4','[Continuous Solving] Continuous1',1,'[{\"added\": {}}]',15,1),(418,'2019-08-01 23:14:33.168000','4','[Continuous Solving] Continuous1',2,'[{\"changed\": {\"fields\": [\"html\"]}}]',15,1),(419,'2019-08-01 23:14:51.963000','5','[Continuous Solving] Continuous2',1,'[{\"added\": {}}]',15,1),(420,'2019-08-01 23:15:29.593000','1','[Continuous Solving] Continuous1',2,'[{\"changed\": {\"fields\": [\"name\", \"condition\"]}}]',15,1),(421,'2019-08-01 23:15:36.362000','2','[Continuous Solving] Continuous2',2,'[{\"changed\": {\"fields\": [\"name\", \"condition\"]}}]',15,1),(422,'2019-08-01 23:15:42.486000','3','[Continuous Solving] Continuous3',2,'[{\"changed\": {\"fields\": [\"name\", \"condition\"]}}]',15,1),(423,'2019-08-01 23:17:06.163000','4','[Maximum Quiz per Day] Peek1',2,'[{\"changed\": {\"fields\": [\"name\", \"condition\"]}}]',15,1),(424,'2019-08-01 23:17:11.384000','5','[Maximum Quiz per Day] Peek2',2,'[{\"changed\": {\"fields\": [\"name\", \"condition\"]}}]',15,1),(425,'2019-08-01 23:17:26.261000','6','[Maximum Quiz per Day] Peek3',1,'[{\"added\": {}}]',15,1),(426,'2019-08-01 23:17:51.743000','7','[Maximum Quiz per Day] Peek4',1,'[{\"added\": {}}]',15,1),(427,'2019-08-01 23:18:20.164000','8','[Maximum Quiz per Day] Peek5',1,'[{\"added\": {}}]',15,1),(428,'2019-08-01 23:34:01.807000','1','Dayeon',2,'[{\"changed\": {\"fields\": [\"badges\"]}}]',14,1),(429,'2019-08-02 01:44:03.454000','45','37. -1, -6, -3, -5, -7',1,'[{\"added\": {}}]',4,1),(430,'2019-08-02 01:44:43.711000','45','37. [-1, -6, -3, -5, -7]',2,'[{\"changed\": {\"fields\": [\"test\"]}}]',4,1),(431,'2019-08-02 05:11:57.773000','38','  [Set 2] 38. Find whether the list has the duplicated number or not.',1,'[{\"added\": {}}]',3,1),(432,'2019-08-02 05:12:23.035000','38','  [Set 2] 38. Find whether the list has the duplicated number or not.',2,'[{\"changed\": {\"fields\": [\"hint\"]}}]',3,1),(433,'2019-08-02 05:24:03.736000','36','  [Print] 36. Print',2,'[{\"changed\": {\"fields\": [\"visible\"]}}]',3,1),(434,'2019-08-02 05:40:30.458000','47','Dayeon 2019-08-02 05:25:48.080867+00:00',3,'',12,1),(435,'2019-08-02 05:41:11.944000','46','Dayeon 2019-08-02 05:25:43.888337+00:00',3,'',12,1),(436,'2019-08-02 05:41:16.787000','45','Dayeon 2019-08-02 05:25:00.504598+00:00',3,'',12,1),(437,'2019-08-02 05:41:22.632000','44','Dayeon 2019-08-02 05:24:14.014839+00:00',3,'',12,1),(438,'2019-08-02 06:43:46.591000','1','[Continuous Solving] Streak2',2,'[{\"changed\": {\"fields\": [\"condition\", \"value\", \"html\"]}}]',15,1),(439,'2019-08-02 06:44:10.343000','2','[Continuous Solving] Streak5',2,'[{\"changed\": {\"fields\": [\"condition\", \"value\", \"html\"]}}]',15,1),(440,'2019-08-02 06:44:32.413000','3','[Continuous Solving] Streak14',2,'[{\"changed\": {\"fields\": [\"condition\", \"value\", \"html\"]}}]',15,1),(441,'2019-08-02 06:44:57.728000','1','Dayeon',2,'[{\"changed\": {\"fields\": [\"badges\"]}}]',14,1),(442,'2019-08-02 06:47:53.237000','1','[Continuous Solving] Streak2',2,'[{\"changed\": {\"fields\": [\"html\"]}}]',15,1),(443,'2019-08-02 06:48:19.569000','2','[Continuous Solving] Streak5',2,'[{\"changed\": {\"fields\": [\"html\"]}}]',15,1),(444,'2019-08-02 06:49:45.108000','2','[Continuous Solving] Streak5',2,'[{\"changed\": {\"fields\": [\"html\"]}}]',15,1),(445,'2019-08-02 06:50:21.527000','3','[Continuous Solving] Streak14',2,'[{\"changed\": {\"fields\": [\"html\"]}}]',15,1),(446,'2019-08-02 09:57:39.362000','39','  3[Math] 39. Given an integer, check if it is a power of 2.',1,'[{\"added\": {}}]',3,1),(447,'2019-08-02 09:57:55.262000','46','39. 16',1,'[{\"added\": {}}]',4,1),(448,'2019-08-02 09:58:09.408000','46','39. 32',2,'[{\"changed\": {\"fields\": [\"test\"]}}]',4,1),(449,'2019-08-02 09:58:18.136000','47','39. 31',1,'[{\"added\": {}}]',4,1),(450,'2019-08-02 09:58:40.227000','36','x 1[Print] 36. Print',2,'[{\"changed\": {\"fields\": [\"visible\"]}}]',3,1),(451,'2019-08-02 09:59:16.681000','48','36. Dayeon 2019-08-02 05:27:32.738800+00:00',3,'',12,1),(452,'2019-08-02 10:24:11.208000','8','[Maximum Quiz per Day] Peek5',3,'',15,1),(453,'2019-08-02 10:24:11.210000','7','[Maximum Quiz per Day] Peek4',3,'',15,1),(454,'2019-08-02 10:24:11.211000','6','[Maximum Quiz per Day] Peek3',3,'',15,1),(455,'2019-08-02 10:24:11.212000','5','[Maximum Quiz per Day] Peek2',3,'',15,1),(456,'2019-08-02 10:24:11.213000','4','[Maximum Quiz per Day] Peek1',3,'',15,1),(457,'2019-08-02 10:33:03.926000','12','Super Junior-10. DataType',2,'[{\"changed\": {\"fields\": [\"image\"]}}]',2,1),(458,'2019-08-02 21:11:08.312000','14','Super Junior-11. Variable',2,'[{\"changed\": {\"fields\": [\"visible\"]}}]',2,1),(459,'2019-08-02 21:14:43.356000','15','Super Junior-12. Print',2,'[{\"changed\": {\"fields\": [\"visible\"]}}]',2,1),(460,'2019-08-02 21:14:53.756000','13','Super Junior-13. Operator',2,'[{\"changed\": {\"fields\": [\"visible\"]}}]',2,1),(461,'2019-08-02 21:15:05.993000','16','Super Junior-15. If',2,'[{\"changed\": {\"fields\": [\"visible\"]}}]',2,1),(462,'2019-08-02 21:15:11.562000','17','Junior-20. Scope',2,'[{\"changed\": {\"fields\": [\"visible\"]}}]',2,1),(463,'2019-08-02 21:15:29.800000','18','Junior-21. Integer',2,'[{\"changed\": {\"fields\": [\"visible\"]}}]',2,1),(464,'2019-08-02 21:16:07.013000','22','Junior-24. Tuple',2,'[{\"changed\": {\"fields\": [\"visible\"]}}]',2,1),(465,'2019-08-02 21:16:20.535000','26','Junior-27. Casting',2,'[{\"changed\": {\"fields\": [\"visible\"]}}]',2,1),(466,'2019-08-02 21:16:27.270000','25','Junior-28. Module',2,'[{\"changed\": {\"fields\": [\"visible\"]}}]',2,1),(467,'2019-08-02 21:16:34.022000','27','Junior-29. OOP',2,'[{\"changed\": {\"fields\": [\"visible\"]}}]',2,1),(468,'2019-08-02 21:16:45.689000','20','Junior High-31. Integer 2',2,'[{\"changed\": {\"fields\": [\"visible\"]}}]',2,1),(469,'2019-08-02 21:17:06.264000','28','Junior High-34. Tuple 2',2,'[{\"changed\": {\"fields\": [\"visible\"]}}]',2,1),(470,'2019-08-02 21:17:13.667000','30','High-39. Queue',2,'[{\"changed\": {\"fields\": [\"visible\"]}}]',2,1),(471,'2019-08-02 21:17:20.261000','31','High-40. Linked List',2,'[{\"changed\": {\"fields\": [\"visible\"]}}]',2,1),(472,'2019-08-02 22:33:53.868000','43','34. Dayeon 2019-07-22 19:12:01-07:00',2,'[{\"changed\": {\"fields\": [\"date\"]}}]',12,1),(473,'2019-08-02 22:34:56.844000','42','35. Dayeon 2019-08-01 07:46:42-07:00',2,'[{\"changed\": {\"fields\": [\"date\"]}}]',12,1),(474,'2019-08-02 22:35:41.422000','42','35. Dayeon 2019-08-01 15:35:36-07:00',2,'[{\"changed\": {\"fields\": [\"date\"]}}]',12,1),(475,'2019-08-02 22:54:33.933000','26','26. Dayeon 2019-07-18 15:33:13-07:00',2,'[{\"changed\": {\"fields\": [\"date\"]}}]',12,1),(476,'2019-08-02 22:54:46.797000','43','34. Dayeon 2019-08-01 19:12:01-07:00',2,'[{\"changed\": {\"fields\": [\"date\"]}}]',12,1),(477,'2019-08-03 00:55:42.023000','9','[Quiz Count] QuizCount1',1,'[{\"added\": {}}]',15,1),(478,'2019-08-03 01:20:20.865000','1','[Continuous Solving] DayStreak2',2,'[{\"changed\": {\"fields\": [\"condition\", \"html\"]}}]',15,1),(479,'2019-08-03 01:20:41.251000','2','[Continuous Solving] DayStreak3',2,'[{\"changed\": {\"fields\": [\"condition\", \"value\", \"html\"]}}]',15,1),(480,'2019-08-03 01:20:59.863000','3','[Continuous Solving] DayStreak4',2,'[{\"changed\": {\"fields\": [\"condition\", \"value\", \"html\"]}}]',15,1),(481,'2019-08-03 01:21:37.180000','9','[Continuous Solving] DayStreak5',2,'[{\"changed\": {\"fields\": [\"name\", \"condition\", \"value\", \"html\"]}}]',15,1),(482,'2019-08-03 01:23:11.338000','10','[Quiz Per Day] QuizPerDay2',1,'[{\"added\": {}}]',15,1),(483,'2019-08-03 01:23:29.903000','2','[Continuous Solving] DayStreak4',2,'[{\"changed\": {\"fields\": [\"value\", \"html\"]}}]',15,1),(484,'2019-08-03 01:23:37.531000','3','[Continuous Solving] DayStreak7',2,'[{\"changed\": {\"fields\": [\"value\", \"html\"]}}]',15,1),(485,'2019-08-03 01:24:01.020000','9','[Continuous Solving] DayStreak10',2,'[{\"changed\": {\"fields\": [\"value\", \"html\"]}}]',15,1),(486,'2019-08-03 01:24:27.798000','11','[Quiz Per Day] QuizPerDay3',1,'[{\"added\": {}}]',15,1),(487,'2019-08-03 01:24:42.540000','12','[Quiz Per Day] QuizPerDay4',1,'[{\"added\": {}}]',15,1),(488,'2019-08-03 01:24:54.147000','13','[Quiz Per Day] QuizPerDay5',1,'[{\"added\": {}}]',15,1),(489,'2019-08-03 01:25:19.427000','14','[Quiz] Quiz30',1,'[{\"added\": {}}]',15,1),(490,'2019-08-03 01:25:30.359000','15','[Quiz] Quiz50',1,'[{\"added\": {}}]',15,1),(491,'2019-08-03 01:41:01.959000','1','Dayeon',2,'[{\"changed\": {\"fields\": [\"badges\"]}}]',14,1),(492,'2019-08-03 02:13:15.298000','1','BadgeType object (1)',1,'[{\"added\": {}}]',16,1),(493,'2019-08-03 02:13:19.658000','2','BadgeType object (2)',1,'[{\"added\": {}}]',16,1),(494,'2019-08-03 02:13:24.715000','3','BadgeType object (3)',1,'[{\"added\": {}}]',16,1),(495,'2019-08-03 02:13:59.685000','2','TotalQuiz',2,'[{\"changed\": {\"fields\": [\"name\"]}}]',16,1),(496,'2019-08-03 02:14:21.665000','1','[DayStreak] DayStreak2',2,'[{\"changed\": {\"fields\": [\"name\", \"type\"]}}]',15,1),(497,'2019-08-03 02:14:30.763000','2','[DayStreak] DayStreak4',2,'[{\"changed\": {\"fields\": [\"name\", \"type\"]}}]',15,1),(498,'2019-08-03 02:14:41.586000','3','[7DayStreak] DayStreak7',2,'[{\"changed\": {\"fields\": [\"name\", \"type\"]}}]',15,1),(499,'2019-08-03 02:14:46.075000','1','[2DayStreak] DayStreak2',2,'[{\"changed\": {\"fields\": [\"name\"]}}]',15,1),(500,'2019-08-03 02:14:50.536000','2','[4DayStreak] DayStreak4',2,'[{\"changed\": {\"fields\": [\"name\"]}}]',15,1),(501,'2019-08-03 02:14:58.274000','9','[10DayStreak] DayStreak10',2,'[{\"changed\": {\"fields\": [\"name\", \"type\"]}}]',15,1),(502,'2019-08-03 02:15:06.459000','10','[2 Quiz Per Day] QuizPerDay2',2,'[{\"changed\": {\"fields\": [\"name\", \"type\"]}}]',15,1),(503,'2019-08-03 02:15:13.188000','11','[3 Quiz Per Day] QuizPerDay3',2,'[{\"changed\": {\"fields\": [\"name\", \"type\"]}}]',15,1),(504,'2019-08-03 02:15:22.271000','12','[4 Quiz Per Day] QuizPerDay4',2,'[{\"changed\": {\"fields\": [\"name\", \"type\"]}}]',15,1),(505,'2019-08-03 02:15:27.617000','13','[5 Quiz Per Day] QuizPerDay5',2,'[{\"changed\": {\"fields\": [\"name\", \"type\"]}}]',15,1),(506,'2019-08-03 02:15:38.064000','14','[30 Total Quiz] Quiz30',2,'[{\"changed\": {\"fields\": [\"name\", \"type\"]}}]',15,1),(507,'2019-08-03 02:15:46.346000','15','[50 Total Quiz] Quiz50',2,'[{\"changed\": {\"fields\": [\"name\", \"type\"]}}]',15,1),(508,'2019-08-03 02:16:46.594000','1','2 DayStreak',2,'[{\"changed\": {\"fields\": [\"name\"]}}]',15,1),(509,'2019-08-03 02:16:50.488000','2','4 DayStreak',2,'[{\"changed\": {\"fields\": [\"name\"]}}]',15,1),(510,'2019-08-03 02:16:54.422000','3','7 DayStreak',2,'[{\"changed\": {\"fields\": [\"name\"]}}]',15,1),(511,'2019-08-03 02:16:58.396000','9','10 DayStreak',2,'[{\"changed\": {\"fields\": [\"name\"]}}]',15,1),(512,'2019-08-03 03:37:52.499000','1','Dayeon',2,'[{\"changed\": {\"fields\": [\"badges\"]}}]',14,1),(513,'2019-08-03 04:06:16.927000','1','Dayeon',2,'[{\"changed\": {\"fields\": [\"badges\"]}}]',14,1),(514,'2019-08-03 04:07:36.374000','1','Dayeon',2,'[{\"changed\": {\"fields\": [\"badges\"]}}]',14,1),(515,'2019-08-03 04:08:27.092000','1','Dayeon',2,'[{\"changed\": {\"fields\": [\"badges\"]}}]',14,1),(516,'2019-08-03 04:08:45.757000','1','Dayeon',2,'[{\"changed\": {\"fields\": [\"badges\"]}}]',14,1),(517,'2019-08-03 04:11:29.418000','15','50 Total Quiz',2,'[{\"changed\": {\"fields\": [\"desc\"]}}]',15,1),(518,'2019-08-03 04:11:34.727000','14','30 Total Quiz',2,'[{\"changed\": {\"fields\": [\"desc\"]}}]',15,1),(519,'2019-08-03 04:11:52.868000','13','5 Quiz Per Day',2,'[{\"changed\": {\"fields\": [\"desc\"]}}]',15,1),(520,'2019-08-03 04:11:57.944000','12','4 Quiz Per Day',2,'[{\"changed\": {\"fields\": [\"desc\"]}}]',15,1),(521,'2019-08-03 04:12:06.240000','11','3 Quiz Per Day',2,'[{\"changed\": {\"fields\": [\"desc\"]}}]',15,1),(522,'2019-08-03 04:12:11.757000','10','2 Quiz Per Day',2,'[{\"changed\": {\"fields\": [\"desc\"]}}]',15,1),(523,'2019-08-03 04:13:01.520000','9','10 DayStreak',2,'[{\"changed\": {\"fields\": [\"desc\"]}}]',15,1),(524,'2019-08-03 04:13:06.766000','3','7 DayStreak',2,'[{\"changed\": {\"fields\": [\"desc\"]}}]',15,1),(525,'2019-08-03 04:13:11.751000','2','4 DayStreak',2,'[{\"changed\": {\"fields\": [\"desc\"]}}]',15,1),(526,'2019-08-03 04:13:16.563000','1','2 DayStreak',2,'[{\"changed\": {\"fields\": [\"desc\"]}}]',15,1),(527,'2019-08-03 04:58:57.239000','40','  3[Math] 39. Find how many trailing zero of the integer.',1,'[{\"added\": {}}]',3,1),(528,'2019-08-03 04:59:12.248000','48','39. 120000',1,'[{\"added\": {}}]',4,1),(529,'2019-08-03 04:59:20.594000','49','39. 345',1,'[{\"added\": {}}]',4,1),(530,'2019-08-03 16:48:38.002000','1','Dayeon',2,'[{\"changed\": {\"fields\": [\"badges\"]}}]',14,1),(531,'2019-08-03 17:09:32.146000','50','37. 0',1,'[{\"added\": {}}]',4,1),(532,'2019-08-03 17:19:27.723000','41','  1[DataType] 40. Which one of them is correct?',1,'[{\"added\": {}}]',3,1),(533,'2019-08-03 17:21:36.738000','51','40. ',1,'[{\"added\": {}}]',4,1),(534,'2019-08-03 17:40:03.846000','32','x Expert-41. Advanced Math',2,'[{\"changed\": {\"fields\": [\"visible\"]}}]',2,1),(535,'2019-08-03 17:47:49.864000','1','Super Junior',2,'[{\"changed\": {\"fields\": [\"desc\"]}}]',13,1),(536,'2019-08-03 17:48:07.859000','2','Junior',2,'[{\"changed\": {\"fields\": [\"desc\"]}}]',13,1),(537,'2019-08-03 17:48:21.344000','3','Junior High',2,'[{\"changed\": {\"fields\": [\"desc\"]}}]',13,1),(538,'2019-08-03 17:48:38.994000','4','High',2,'[{\"changed\": {\"fields\": [\"desc\"]}}]',13,1),(539,'2019-08-03 17:49:08.232000','5','Expert',2,'[{\"changed\": {\"fields\": [\"desc\"]}}]',13,1),(540,'2019-08-03 17:50:25.665000','1','Dayeon',2,'[{\"changed\": {\"fields\": [\"badges\"]}}]',14,1),(541,'2019-08-03 17:51:23.280000','1','Dayeon',2,'[{\"changed\": {\"fields\": [\"badges\"]}}]',14,1),(542,'2019-08-03 17:54:44.682000','9','10 Day Streak',2,'[{\"changed\": {\"fields\": [\"name\"]}}]',15,1),(543,'2019-08-03 17:54:50.977000','3','7 Day Streak',2,'[{\"changed\": {\"fields\": [\"name\"]}}]',15,1),(544,'2019-08-03 17:54:55.283000','2','4 Day Streak',2,'[{\"changed\": {\"fields\": [\"name\"]}}]',15,1),(545,'2019-08-03 17:54:59.404000','1','2 Day Streak',2,'[{\"changed\": {\"fields\": [\"name\"]}}]',15,1),(546,'2019-08-03 17:55:28.502000','1','Dayeon',2,'[{\"changed\": {\"fields\": [\"badges\"]}}]',14,1),(547,'2019-08-03 17:56:45.718000','1','Dayeon',2,'[{\"changed\": {\"fields\": [\"badges\"]}}]',14,1),(548,'2019-08-03 21:20:10.700000','1','Dayeon',2,'[{\"changed\": {\"fields\": [\"badges\"]}}]',14,1),(549,'2019-08-03 21:30:13.564000','1','Dayeon',2,'[{\"changed\": {\"fields\": [\"badges\"]}}]',14,1),(550,'2019-08-03 22:18:29.368000','1','Dayeon',2,'[{\"changed\": {\"fields\": [\"badges\"]}}]',14,1),(551,'2019-08-03 22:19:12.532000','1','Dayeon',2,'[{\"changed\": {\"fields\": [\"badges\"]}}]',14,1),(552,'2019-08-03 22:21:56.658000','5','  Super Junior-17. While',2,'[{\"changed\": {\"fields\": [\"desc\"]}}]',2,1),(553,'2019-08-03 22:27:58.175000','1','Dayeon',2,'[{\"changed\": {\"fields\": [\"badges\"]}}]',14,1),(554,'2019-08-03 22:37:45.347000','16','100 Total Quiz',1,'[{\"added\": {}}]',15,1),(555,'2019-08-04 03:49:33.404000','42','  1[DataType] 41. Choose the invalid list data type.',1,'[{\"added\": {}}]',3,1),(556,'2019-08-04 03:49:48.622000','52','41. ',1,'[{\"added\": {}}]',4,1),(557,'2019-08-04 03:52:39.166000','36','x 1[Print] 6. Choose the incorrect print.',2,'[{\"changed\": {\"fields\": [\"question\", \"example\", \"answer_header\", \"option1\", \"option2\", \"option3\", \"option4\"]}}]',3,1),(558,'2019-08-04 03:52:57.126000','42','  1[DataType] 41. Choose the invalid list data type.',2,'[{\"changed\": {\"fields\": [\"answer_header\"]}}]',3,1),(559,'2019-08-04 03:54:17.811000','36','  1[Print] 6. Choose the incorrect print.',2,'[{\"changed\": {\"fields\": [\"visible\"]}}]',3,1),(560,'2019-08-04 03:55:37.975000','52','Dayeon 2019-08-03 17:20:15.649549+00:00',3,'',12,1),(561,'2019-08-04 03:56:36.442000','43','6. ',2,'[{\"changed\": {\"fields\": [\"test\"]}}]',4,1),(562,'2019-08-04 03:56:57.460000','15','  Super Junior-12. Print',2,'[{\"changed\": {\"fields\": [\"visible\"]}}]',2,1),(563,'2019-08-04 07:14:00.265000','17','6 Quiz Per Day',1,'[{\"added\": {}}]',15,1),(564,'2019-08-04 07:14:25.122000','18','7 Quiz Per Day',1,'[{\"added\": {}}]',15,1),(565,'2019-08-04 07:14:48.330000','19','8 Quiz Per Day',1,'[{\"added\": {}}]',15,1),(566,'2019-08-04 07:15:07.652000','20','9 Quiz Per Day',1,'[{\"added\": {}}]',15,1),(567,'2019-08-04 07:36:18.702000','21','5 Day Streak',1,'[{\"added\": {}}]',15,1),(568,'2019-08-04 07:43:22.581000','1','2 Day Streak',2,'[{\"changed\": {\"fields\": [\"html\"]}}]',15,1),(569,'2019-08-04 07:43:30.772000','2','4 Day Streak',2,'[{\"changed\": {\"fields\": [\"html\"]}}]',15,1),(570,'2019-08-04 07:43:37.913000','3','7 Day Streak',2,'[{\"changed\": {\"fields\": [\"html\"]}}]',15,1),(571,'2019-08-04 07:43:45.436000','9','10 Day Streak',2,'[{\"changed\": {\"fields\": [\"html\"]}}]',15,1),(572,'2019-08-04 07:43:52.212000','10','2 Quiz Per Day',2,'[{\"changed\": {\"fields\": [\"html\"]}}]',15,1),(573,'2019-08-04 07:44:00.084000','11','3 Quiz Per Day',2,'[{\"changed\": {\"fields\": [\"html\"]}}]',15,1),(574,'2019-08-04 07:44:07.055000','12','4 Quiz Per Day',2,'[{\"changed\": {\"fields\": [\"html\"]}}]',15,1),(575,'2019-08-04 07:44:12.980000','13','5 Quiz Per Day',2,'[{\"changed\": {\"fields\": [\"html\"]}}]',15,1),(576,'2019-08-04 07:44:19.726000','14','30 Total Quiz',2,'[{\"changed\": {\"fields\": [\"html\"]}}]',15,1),(577,'2019-08-04 07:44:26.879000','15','50 Total Quiz',2,'[{\"changed\": {\"fields\": [\"html\"]}}]',15,1),(578,'2019-08-04 07:44:35.231000','16','100 Total Quiz',2,'[{\"changed\": {\"fields\": [\"html\"]}}]',15,1),(579,'2019-08-04 07:44:41.609000','17','6 Quiz Per Day',2,'[{\"changed\": {\"fields\": [\"html\"]}}]',15,1),(580,'2019-08-04 07:44:48.112000','18','7 Quiz Per Day',2,'[{\"changed\": {\"fields\": [\"html\"]}}]',15,1),(581,'2019-08-04 07:44:57.466000','19','8 Quiz Per Day',2,'[{\"changed\": {\"fields\": [\"html\"]}}]',15,1),(582,'2019-08-04 07:45:04.512000','20','9 Quiz Per Day',2,'[{\"changed\": {\"fields\": [\"html\"]}}]',15,1),(583,'2019-08-04 07:45:10.013000','21','5 Day Streak',2,'[{\"changed\": {\"fields\": [\"html\"]}}]',15,1),(584,'2019-08-04 08:07:12.718000','22','3 Day Streak',1,'[{\"added\": {}}]',15,1),(585,'2019-08-04 08:08:17.683000','1','Dayeon',2,'[{\"changed\": {\"fields\": [\"badges\"]}}]',14,1),(586,'2019-08-04 08:08:32.466000','1','Dayeon',2,'[{\"changed\": {\"fields\": [\"badges\"]}}]',14,1),(587,'2019-08-04 08:11:45.481000','36','  1[Print] 6. Choose the incorrect print.',2,'[{\"changed\": {\"fields\": [\"quiz_type\"]}}]',3,1),(588,'2019-08-04 16:08:28.066000','43','  4[Stack] 42. Check whether the parenthesis is valid or not.',1,'[{\"added\": {}}]',3,1),(589,'2019-08-04 16:08:54.422000','53','42. (())\r\nTrue',1,'[{\"added\": {}}]',4,1),(590,'2019-08-04 16:09:17.170000','54','42. ()()',1,'[{\"added\": {}}]',4,1),(591,'2019-08-04 16:09:37.311000','55','42. (()())',1,'[{\"added\": {}}]',4,1),(592,'2019-08-04 16:09:50.014000','56','42. (()',1,'[{\"added\": {}}]',4,1),(593,'2019-08-04 16:10:04.018000','53','42. (())',2,'[{\"changed\": {\"fields\": [\"test\"]}}]',4,1),(594,'2019-08-04 16:24:07.796000','23','10 Total Quiz',1,'[{\"added\": {}}]',15,1),(595,'2019-08-04 16:25:19.153000','24','20 Total Quiz',1,'[{\"added\": {}}]',15,1),(596,'2019-08-04 16:41:31.608000','25','40 Total Quiz',1,'[{\"added\": {}}]',15,1),(597,'2019-08-04 16:41:55.842000','26','60 Total Quiz',1,'[{\"added\": {}}]',15,1),(598,'2019-08-04 16:42:22.300000','27','70 Total Quiz',1,'[{\"added\": {}}]',15,1),(599,'2019-08-04 16:42:39.488000','28','80 Total Quiz',1,'[{\"added\": {}}]',15,1),(600,'2019-08-04 16:42:59.076000','29','90 Total Quiz',1,'[{\"added\": {}}]',15,1),(601,'2019-08-04 16:48:45.274000','36','  1[Print] 6. Choose the incorrect print.',2,'[{\"changed\": {\"fields\": [\"option3\"]}}]',3,1),(602,'2019-08-04 16:48:59.230000','43','6. ',2,'[{\"changed\": {\"fields\": [\"expected_answer\"]}}]',4,1),(603,'2019-08-04 16:49:51.377000','36','  1[Print] 6. Choose the correct print.',2,'[{\"changed\": {\"fields\": [\"question\", \"option2\", \"option3\", \"option4\"]}}]',3,1),(604,'2019-08-04 16:53:26.777000','55','42. )()(',2,'[{\"changed\": {\"fields\": [\"test\", \"expected_answer\"]}}]',4,1),(605,'2019-08-04 18:14:12.517000','56','42. \"(()\"',2,'[{\"changed\": {\"fields\": [\"test\"]}}]',4,1),(606,'2019-08-04 18:14:28.344000','54','42. \"()()\"',2,'[{\"changed\": {\"fields\": [\"test\"]}}]',4,1),(607,'2019-08-04 18:14:33.715000','55','42. \")()(\"',2,'[{\"changed\": {\"fields\": [\"test\"]}}]',4,1),(608,'2019-08-04 18:14:40.728000','53','42. \"(())\"',2,'[{\"changed\": {\"fields\": [\"test\"]}}]',4,1),(609,'2019-08-04 18:14:58.817000','56','42. Dayeon 2019-08-04 18:14:45.979660+00:00',3,'',12,1),(610,'2019-08-05 00:06:43.590000','44','  3[For] 43. Given a string, remove adjacent duplicated character in the string.',1,'[{\"added\": {}}]',3,1),(611,'2019-08-05 00:08:14.301000','57','43. \"abbac\"',1,'[{\"added\": {}}]',4,1),(612,'2019-08-05 00:09:33.847000','58','43. \"abba\"',1,'[{\"added\": {}}]',4,1),(613,'2019-08-05 00:10:46.215000','57','43. \"abbac\"',3,'',4,1),(614,'2019-08-05 00:10:55.018000','59','43. \"abbac\"',1,'[{\"added\": {}}]',4,1),(615,'2019-08-05 00:11:31.764000','57','43. Dayeon 2019-08-05 00:11:07.155069+00:00',3,'',12,1),(616,'2019-08-06 01:26:57.296000','45','  3[Math] 44. Find the sum of the internal angle of the n-sided polygon.',1,'[{\"added\": {}}]',3,1),(617,'2019-08-06 01:27:48.054000','46','  3[Math] 45. Find the sum of the external angle of the n-sided polygon.',1,'[{\"added\": {}}]',3,1),(618,'2019-08-06 01:28:14.630000','60','44. 5',1,'[{\"added\": {}}]',4,1),(619,'2019-08-06 01:28:31.186000','61','45. 5',1,'[{\"added\": {}}]',4,1),(620,'2019-08-06 01:29:31.937000','47','  3[List 2] 46. Given k and list, count the number less than k in the list.',1,'[{\"added\": {}}]',3,1),(621,'2019-08-06 01:29:58.053000','62','46. 5\r\n[3, 6, 7, 8]',1,'[{\"added\": {}}]',4,1),(622,'2019-08-06 01:31:04.858000','48','  3[List 2] 47. Given 2 lists, find the common value belong to both.',1,'[{\"added\": {}}]',3,1),(623,'2019-08-06 01:31:24.652000','63','47. [3, 5, 7, 9]\r\n[1, 3, 8, 9]',1,'[{\"added\": {}}]',4,1),(624,'2019-08-06 01:35:07.814000','49','  3[For] 48. Return the following list depending on the number.',1,'[{\"added\": {}}]',3,1),(625,'2019-08-06 01:35:32.830000','64','48. 4',1,'[{\"added\": {}}]',4,1),(626,'2019-08-06 01:50:36.105000','64','48. 4',2,'[{\"changed\": {\"fields\": [\"expected_answer\"]}}]',4,1),(627,'2019-08-06 09:51:38.372000','26','  1[DataType] 0. What is the incorrect data types in Python?',2,'[{\"changed\": {\"fields\": [\"video\"]}}]',3,1),(628,'2019-08-06 09:51:47.594000','32','  1[DataType] 1. What is the incorrect data type in Python?',2,'[{\"changed\": {\"fields\": [\"video\"]}}]',3,1),(629,'2019-08-06 10:16:22.641000','12','  Super Junior-10. DataType',2,'[{\"changed\": {\"fields\": [\"image\"]}}]',2,1),(630,'2019-08-06 16:02:31.556000','26','  1[DataType] 0. What is the incorrect data types in Python?',2,'[{\"changed\": {\"fields\": [\"video\"]}}]',3,1),(631,'2019-08-06 16:02:50.997000','12','  Super Junior-10. DataType',2,'[{\"changed\": {\"fields\": [\"image\"]}}]',2,1),(632,'2019-08-06 16:46:31.356000','62','46. 5\r\n[3, 6, 4, 8]',2,'[{\"changed\": {\"fields\": [\"test\"]}}]',4,1),(633,'2019-08-07 00:58:26.812000','50','  3[Math] 49. Find the n-th Fibonacci numbers.\r\nThe current value is the sum of the previous two values.\r\n1, 1, 2, 3, 5, 8, 13, 21, 39, ...',1,'[{\"added\": {}}]',3,1),(634,'2019-08-07 00:58:59.614000','65','49. 9',1,'[{\"added\": {}}]',4,1),(635,'2019-08-07 00:59:12.082000','50','  3[Math] 49. Find the n-th Fibonacci numbers.\r\nThe current value is the sum of the previous two values.\r\n1, 1, 2, 3, 5, 8, 13, 21, 34, ...',2,'[{\"changed\": {\"fields\": [\"question\"]}}]',3,1),(636,'2019-08-07 01:00:58.742000','51','  3[List 2] 50. Given the two sorted lists, merge two lists to one sorted list.',1,'[{\"added\": {}}]',3,1),(637,'2019-08-07 01:01:17.216000','66','50. [1, 3, 4]\r\n[2, 4, 5]',1,'[{\"added\": {}}]',4,1),(638,'2019-08-07 04:35:31.517000','50','  3[Math] 49. Find the n-th Fibonacci numbers.\r\nThe current value is the sum of the previous two values.\r\n1, 1, 2, 3, 5, 8, 13, 21, 34, ...',2,'[{\"changed\": {\"fields\": [\"title\"]}}]',3,1),(639,'2019-08-07 04:36:17.302000','26','  1[DataType] 0. What is the incorrect data types in Python?',2,'[{\"changed\": {\"fields\": [\"title\"]}}]',3,1),(640,'2019-08-07 04:36:50.593000','32','  1[DataType] 1. What is the incorrect data type in Python?',2,'[{\"changed\": {\"fields\": [\"title\"]}}]',3,1),(641,'2019-08-07 04:38:35.207000','1','  1[For] 2. Which value will be printed?',2,'[{\"changed\": {\"fields\": [\"title\", \"question\"]}}]',3,1),(642,'2019-08-07 04:40:56.083000','5','  1[While] 3. Add function - Which value will be printed?',2,'[{\"changed\": {\"fields\": [\"title\", \"question\"]}}]',3,1),(643,'2019-08-07 04:41:04.453000','1','  1[For] 2. Sum function - Which value will be printed?',2,'[{\"changed\": {\"fields\": [\"title\"]}}]',3,1),(644,'2019-08-07 04:42:54.471000','15','  1[Range] 4. Range - What is the meaning of this?',2,'[{\"changed\": {\"fields\": [\"explanation\", \"title\", \"question\"]}}]',3,1),(645,'2019-08-07 04:43:27.025000','16','  1[Range] 5.  - What is the meaning of this?',2,'[{\"changed\": {\"fields\": [\"explanation\", \"question\"]}}]',3,1),(646,'2019-08-07 04:43:44.339000','16','  1[Range] 5. Range(start, stop) - What is the meaning of this?',2,'[{\"changed\": {\"fields\": [\"title\"]}}]',3,1),(647,'2019-08-07 04:43:53.834000','15','  1[Range] 4. Range(stop) - What is the meaning of this?',2,'[{\"changed\": {\"fields\": [\"title\"]}}]',3,1),(648,'2019-08-07 04:44:23.435000','36','  1[Print] 6. Print - Choose the correct format of print.',2,'[{\"changed\": {\"fields\": [\"title\", \"question\"]}}]',3,1),(649,'2019-08-07 04:44:35.041000','36','  1[Print] 6. Print command - Choose the correct format of print.',2,'[{\"changed\": {\"fields\": [\"title\"]}}]',3,1),(650,'2019-08-07 04:45:14.204000','17','  1[Range] 7. Range(start, stop, step) - What is the meaning of this?',2,'[{\"changed\": {\"fields\": [\"explanation\", \"title\", \"question\"]}}]',3,1),(651,'2019-08-07 04:46:17.940000','18','  1[Range] 8. Range summary - Which one is the incorrect format of range?',2,'[{\"changed\": {\"fields\": [\"title\", \"question\", \"example\"]}}]',3,1),(652,'2019-08-07 04:47:29.066000','15','  1[Range] 4. Range(stop) - What is the meaning of this?',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,1),(653,'2019-08-07 04:51:07.171000','15','  1[Range] 4. Range(stop) - What is the meaning of this?',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,1),(654,'2019-08-07 04:52:17.717000','15','  1[Range] 4. Range(stop) - What is the meaning of this?',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,1),(655,'2019-08-07 04:53:10.958000','16','  1[Range] 5. Range(start, stop) - What is the meaning of this?',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,1),(656,'2019-08-07 04:53:53.176000','17','  1[Range] 7. Range(start, stop, step) - What is the meaning of this?',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,1),(657,'2019-08-07 04:56:05.950000','19','  1[While] 9.  - What is the output of the following code?',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,1),(658,'2019-08-07 04:56:38.842000','19','  1[While] 9.  - What is the output of the following code?',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,1),(659,'2019-08-07 04:57:09.189000','19','  1[While] 9.  - What is the output of the following code?',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,1),(660,'2019-08-07 04:57:33.560000','19','  1[While] 9.  - What is the output of the following code?',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,1),(661,'2019-08-07 04:58:59.125000','19','  1[While] 9. Sum function - What value will be printed?',2,'[{\"changed\": {\"fields\": [\"title\", \"question\"]}}]',3,1),(662,'2019-08-07 05:00:21.735000','20','  1[While] 10. Break - What will be printed?',2,'[{\"changed\": {\"fields\": [\"explanation\", \"title\", \"question\"]}}]',3,1),(663,'2019-08-07 05:00:51.418000','20','  1[While] 10. Break - What will be printed?',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,1),(664,'2019-08-07 05:01:28.088000','2','  2[Dictionary] 11. Dictionary - What value will be printed?',2,'[{\"changed\": {\"fields\": [\"title\", \"question\"]}}]',3,1),(665,'2019-08-07 05:02:20.977000','3','  2[String] 12. String concatenation - What will be printed?',2,'[{\"changed\": {\"fields\": [\"title\", \"question\"]}}]',3,1),(666,'2019-08-07 05:03:46.683000','4','  2[List] 13. Find a value - What will be printed?',2,'[{\"changed\": {\"fields\": [\"title\", \"question\"]}}]',3,1),(667,'2019-08-07 05:04:07.140000','6','  2[List] 14. List insert - What will be printed?',2,'[{\"changed\": {\"fields\": [\"title\", \"question\"]}}]',3,1),(668,'2019-08-07 05:04:33.496000','7','  2[Set] 15. Set contains - What will be printed?',2,'[{\"changed\": {\"fields\": [\"title\", \"question\"]}}]',3,1),(669,'2019-08-07 05:04:59.335000','8','  2[Function] 16. Multiply function - What will be printed?',2,'[{\"changed\": {\"fields\": [\"title\", \"question\"]}}]',3,1),(670,'2019-08-07 05:05:34.145000','24','  2[Class] 17. Class, Object - What will be printed?',2,'[{\"changed\": {\"fields\": [\"title\", \"question\"]}}]',3,1),(671,'2019-08-07 05:06:30.092000','25','  2[Class] 18. Incorrect Class - Find the error in the code below.',2,'[{\"changed\": {\"fields\": [\"title\"]}}]',3,1),(672,'2019-08-07 05:56:24.710000','31','  2[List] 19. Split a list - Split the list into two lists. One list contains odd numbers and the other one contains even numbers. Odd number list should be returned first.',2,'[{\"changed\": {\"fields\": [\"title\", \"question\", \"example\"]}}]',3,1),(673,'2019-08-07 06:02:37.664000','9','  3[Math] 20. Operator precedence - What will be printed?',2,'[{\"changed\": {\"fields\": [\"explanation\", \"title\", \"question\"]}}]',3,1),(674,'2019-08-07 06:09:39.722000','9','  3[Math] 20. Operator precedence - What will be printed?',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,1),(675,'2019-08-07 06:10:15.957000','10','  3[Math] 21. Write a function - Write a code to multiply two numbers.',2,'[{\"changed\": {\"fields\": [\"title\"]}}]',3,1),(676,'2019-08-07 06:11:21.806000','11','  3[List 2] 22.  - Swap the first element and the last element.',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,1),(677,'2019-08-07 06:11:49.162000','11','  3[List 2] 22. Swap an element - Swap the first element and the last element.',2,'[{\"changed\": {\"fields\": [\"explanation\", \"title\"]}}]',3,1),(678,'2019-08-07 06:12:49.094000','12','  3[List 2] 23. Swap an element - Swap the second element and the last to the second element.',2,'[{\"changed\": {\"fields\": [\"title\"]}}]',3,1),(679,'2019-08-07 06:13:54.683000','13','  3[List 2] 24.  - Reverse the list by swapping elements.',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,1),(680,'2019-08-07 06:16:13.025000','15','  1[Range] 4. Range(stop) - What is the meaning of this?',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,1),(681,'2019-08-07 06:16:34.405000','13','  3[List 2] 24. Reverse a list - Reverse a list by swapping elements.',2,'[{\"changed\": {\"fields\": [\"title\", \"question\"]}}]',3,1),(682,'2019-08-07 06:19:28.093000','21','  3[List 2] 25. Sorted list - Given the sorted list, insert the value at the right position.  It must be in sorted order after insertion.',2,'[{\"changed\": {\"fields\": [\"title\"]}}]',3,1),(683,'2019-08-07 06:22:39.057000','22','  3[Math] 26. Square root - Find a square root x.  A square root value(return value) is always an integer.',2,'[{\"changed\": {\"fields\": [\"title\"]}}]',3,1),(684,'2019-08-07 06:23:08.714000','23','  3[List 2] 27. Subarray - Find the maximum subarray which has the largest sum.  Subarray should have the first element.  Return the sum of the maximum subarray.',2,'[{\"changed\": {\"fields\": [\"title\"]}}]',3,1),(685,'2019-08-07 06:24:09.099000','27','  3[List 2] 28. Missing integer - Given an integer array of 1 to N except for one number, find the missing integer.',2,'[{\"changed\": {\"fields\": [\"title\"]}}]',3,1),(686,'2019-08-07 06:24:43.468000','28','  3[Dictionary 2] 29. Frequency - Find the most frequently appearing character.',2,'[{\"changed\": {\"fields\": [\"title\"]}}]',3,1),(687,'2019-08-07 06:25:14.925000','29','  3[List 2] 30. Rotate a list - Given a list, rotate the list to the right by n steps.\r\n(you take the 0th element and put it at the end of the list)',2,'[{\"changed\": {\"fields\": [\"title\", \"question\"]}}]',3,1),(688,'2019-08-07 06:25:35.233000','30','  3[List 2] 31. Smallest number - Find the smallest number in a list.',2,'[{\"changed\": {\"fields\": [\"title\"]}}]',3,1),(689,'2019-08-07 06:25:58.351000','33','  3[String 2] 32. Remove a word - Remove the third word of the sentence.',2,'[{\"changed\": {\"fields\": [\"title\"]}}]',3,1),(690,'2019-08-07 06:26:35.033000','34','  3[Math] 33. Leading zeros - Given a decimal less than 1, return the number of leading zeros at the right of the point.',2,'[{\"changed\": {\"fields\": [\"title\"]}}]',3,1),(691,'2019-08-07 06:26:50.693000','35','  3[Math] 34. Greatest common factor - Given the two integers, find the greatest common factor(GCF).',2,'[{\"changed\": {\"fields\": [\"title\"]}}]',3,1),(692,'2019-08-07 06:28:09.475000','37','  3[For] 35. Second largest number - Find the second largest number of the list.',2,'[{\"changed\": {\"fields\": [\"title\"]}}]',3,1),(693,'2019-08-07 06:28:57.864000','38','  3[Set 2] 36. Duplicated number - Find whether the list has the duplicated number or not.',2,'[{\"changed\": {\"fields\": [\"title\"]}}]',3,1),(694,'2019-08-07 06:29:07.700000','39','  3[Math] 37. Power of 2 - Given an integer, check if it is a power of 2.',2,'[{\"changed\": {\"fields\": [\"title\"]}}]',3,1),(695,'2019-08-07 06:29:20.478000','14','  4[Stack] 38. Reverse a list - Reverse the list by Stack.',2,'[{\"changed\": {\"fields\": [\"title\"]}}]',3,1),(696,'2019-08-07 06:29:49.865000','40','  3[Math] 39. Find a trailing zeros - Find how many trailing zeros of the integer.',2,'[{\"changed\": {\"fields\": [\"title\", \"question\"]}}]',3,1),(697,'2019-08-07 06:36:55.756000','41','  1[DataType] 40.  - Which one of them is correct?',2,'[{\"changed\": {\"fields\": [\"example\"]}}]',3,1),(698,'2019-08-07 06:38:32.598000','41','  1[DataType] 40.  - Which one of them is correct?',2,'[{\"changed\": {\"fields\": [\"option1\", \"option2\", \"option3\", \"option4\"]}}]',3,1),(699,'2019-08-07 06:38:42.935000','41','  1[DataType] 40. Datatype - Which one of them is correct?',2,'[{\"changed\": {\"fields\": [\"title\"]}}]',3,1),(700,'2019-08-07 06:39:09.220000','42','  1[DataType] 41. Invalid data type - Choose the invalid list data type.',2,'[{\"changed\": {\"fields\": [\"title\"]}}]',3,1),(701,'2019-08-07 06:39:48.832000','43','  4[Stack] 42. Find valid parenthesis - Check whether the parenthesis is valid or not.',2,'[{\"changed\": {\"fields\": [\"title\"]}}]',3,1),(702,'2019-08-07 06:40:08.689000','44','  3[For] 43. Remove duplicated character - Given a string, remove adjacent duplicated character in the string.',2,'[{\"changed\": {\"fields\": [\"title\"]}}]',3,1),(703,'2019-08-07 06:40:28.011000','45','  3[Math] 44. Sum of internal angle - Find the sum of the internal angle of the n-sided polygon.',2,'[{\"changed\": {\"fields\": [\"title\"]}}]',3,1),(704,'2019-08-07 06:40:38.313000','46','  3[Math] 45. Sum of external angle - Find the sum of the external angle of the n-sided polygon.',2,'[{\"changed\": {\"fields\": [\"title\"]}}]',3,1),(705,'2019-08-07 06:41:25.328000','47','  3[List 2] 46. Check a value in a list - Given k and list, count the number less than k in the list.',2,'[{\"changed\": {\"fields\": [\"title\"]}}]',3,1),(706,'2019-08-07 06:41:40.852000','48','  3[List 2] 47. Common value - Given 2 lists, find the common value belong to both.',2,'[{\"changed\": {\"fields\": [\"title\"]}}]',3,1),(707,'2019-08-07 06:42:03.474000','49','  3[For] 48. Print star - Return the following list depending on the number.',2,'[{\"changed\": {\"fields\": [\"title\"]}}]',3,1),(708,'2019-08-07 06:42:18.879000','51','  3[List 2] 50. Merge lists - Given the two sorted lists, merge two lists to one sorted list.',2,'[{\"changed\": {\"fields\": [\"title\"]}}]',3,1),(709,'2019-08-07 06:45:37.366000','29','  Junior High-30. For 2',2,'[{\"changed\": {\"fields\": [\"name\"]}}]',2,1),(710,'2019-08-08 06:22:34.344000','52','  1[Variable] 51. Valid variable - Which one is an invalid variable name?',1,'[{\"added\": {}}]',3,1),(711,'2019-08-08 06:22:43.009000','14','  Super Junior-11. Variable',2,'[{\"changed\": {\"fields\": [\"visible\"]}}]',2,1),(712,'2019-08-08 06:24:07.462000','52','  1[Variable] 51. Valid variable - Which one is an invalid variable name?',2,'[{\"changed\": {\"fields\": [\"option2\", \"option3\"]}}]',3,1),(713,'2019-08-08 06:24:18.616000','67','51. ',1,'[{\"added\": {}}]',4,1),(714,'2019-08-09 05:21:47.707000','53','  3[For 2] 52. Print star - Return the following list depending on the number.',1,'[{\"added\": {}}]',3,1),(715,'2019-08-09 05:22:18.678000','68','52. ',1,'[{\"added\": {}}]',4,1),(716,'2019-08-09 05:24:52.505000','54','  3[List 2] 53. Swap the values - Swap all the values between i-th element and j-th element.',1,'[{\"added\": {}}]',3,1),(717,'2019-08-09 05:25:13.258000','69','53. [3, 4, 5, 6, 7, 8, 9], 2, 5',1,'[{\"added\": {}}]',4,1),(718,'2019-08-09 05:25:29.549000','70','53. [1, 2, 3, 4, 5], 1, 4',1,'[{\"added\": {}}]',4,1),(719,'2019-08-09 21:28:15.877000','53','  3[For 2] 52. Print star - Return the following list depending on the number.',2,'[{\"changed\": {\"fields\": [\"example\"]}}]',3,1),(720,'2019-08-09 21:28:26.854000','64','Dayeon 2019-08-08 06:23:28.955655+00:00',3,'',12,1),(721,'2019-08-09 21:30:25.756000','68','52. 4',2,'[{\"changed\": {\"fields\": [\"test\", \"expected_answer\"]}}]',4,1),(722,'2019-08-09 22:08:31.553000','16','  1[Range] 5. Range(start, stop) - What is the meaning of this?',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,1),(723,'2019-08-09 22:08:55.966000','16','  1[Range] 5. Range(start, stop) - What is the meaning of this?',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,1),(724,'2019-08-09 22:09:13.192000','32','  1[DataType] 1. List, Tuple - What is the incorrect data type in Python?',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,1),(725,'2019-08-09 22:09:31.004000','17','  1[Range] 6. Range(start, stop, step) - What is the meaning of this?',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,1),(726,'2019-08-09 22:10:03.806000','15','  1[Range] 4. Range(stop) - What is the meaning of this?',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,1),(727,'2019-08-09 22:10:51.146000','15','  1[Range] 4. Range(stop) - What is the meaning of this?',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,1),(728,'2019-08-09 22:57:45.204000','17','  1[Range] 6. Range(start, stop, step) - What is the meaning of this?',2,'[]',3,1),(729,'2019-08-09 22:58:12.894000','17','  1[Range] 6. Range(start, stop, step) - What is the meaning of this?',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,1),(730,'2019-08-09 23:34:36.096000','55','  2[String] 54. String split - Choose the result of this code.',1,'[{\"added\": {}}]',3,1),(731,'2019-08-09 23:35:17.688000','71','54.  4',1,'[{\"added\": {}}]',4,1),(732,'2019-08-09 23:35:33.486000','55','  2[String] 54. String split - Choose the result of this code.',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,1),(733,'2019-08-09 23:37:46.168000','55','  2[String] 54. String split - Choose the result of this code.',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,1),(734,'2019-08-09 23:41:10.138000','56','  2[String] 55. String join - Choose the result of this code.',1,'[{\"added\": {}}]',3,1),(735,'2019-08-09 23:41:29.804000','72','55.  4',1,'[{\"added\": {}}]',4,1),(736,'2019-08-09 23:42:32.918000','56','  2[String] 55. String join - Choose the result of this code.',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,1),(737,'2019-08-09 23:42:53.337000','56','  2[String] 55. String join - Choose the result of this code.',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,1),(738,'2019-08-10 00:31:04.452000','56','  2[String] 55. String join - Choose the result of this code.',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,1),(739,'2019-08-10 00:31:14.261000','55','  2[String] 54. String split - Choose the result of this code.',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,1),(740,'2019-08-10 04:45:52.818000','55','  2[String] 54. String split - Choose the result of this code.',2,'[{\"changed\": {\"fields\": [\"example\"]}}]',3,1),(741,'2019-08-10 04:50:00.569000','56','  2[String] 55. String join - Choose the result of this code.',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,1),(742,'2019-08-10 08:23:50.506000','1','Dayeon',2,'[{\"changed\": {\"fields\": [\"badges\"]}}]',14,1),(743,'2019-08-16 02:15:31.657000','57','  3[Math] 56. Sum of digits - Given a number, find the sum of digits.',1,'[{\"added\": {}}]',3,1),(744,'2019-08-16 02:15:44.606000','73','56. 1234 10',1,'[{\"added\": {}}]',4,1),(745,'2019-08-16 02:15:52.699000','74','56. 111111 6',1,'[{\"added\": {}}]',4,1),(746,'2019-08-16 02:23:08.527000','58','  3[String 2] 57. Common multiple - Given a number, return the following rule.\r\n- If the number is a multiple of num1, return \"pypy\"\r\n- If the number is a multiple of num2, return \"kids\"\r\n- If the num',1,'[{\"added\": {}}]',3,1),(747,'2019-08-16 02:23:51.256000','75','57. 10\r\n3\r\n5 \'kids\'',1,'[{\"added\": {}}]',4,1),(748,'2019-08-16 02:24:12.796000','76','57. 10\r\n3\r\n4 \'no\'',1,'[{\"added\": {}}]',4,1),(749,'2019-08-16 04:15:02.468000','59','  3[List 2] 58. Maximum profit - The price of the product changes every day.  There is a daily price in a list.\r\nFind the maximum profit in one transaction.  \r\n(You have to buy the product first and s',1,'[{\"added\": {}}]',3,1),(750,'2019-08-16 04:15:18.439000','77','58. [4, 3, 5, 8, 6] 5',1,'[{\"added\": {}}]',4,1),(751,'2019-08-16 04:17:07.718000','60','  3[List 2] 59. Sum numbers - By provided the method, find the sum of the numbers',1,'[{\"added\": {}}]',3,1),(752,'2019-08-16 04:17:24.356000','78','59. [1, 2, 3, 4, 5] 15',1,'[{\"added\": {}}]',4,1),(753,'2019-08-16 05:00:59.176000','60','  3[List 2] 59. Sum numbers - Find the sum of the numbers using provided the sum method.',2,'[{\"changed\": {\"fields\": [\"question\", \"answer_header\"]}}]',3,1),(754,'2019-08-16 07:16:13.354000','26','  1[DataType] 0. Basic data type - What is the incorrect data types in Python?',2,'[{\"changed\": {\"fields\": [\"video\"]}}]',3,1),(755,'2019-08-16 07:18:15.034000','12','  Super Junior-10. DataType',2,'[{\"changed\": {\"fields\": [\"image\"]}}]',2,1),(756,'2019-08-16 07:32:46.833000','42','  1[DataType] 41. Invalid data type - <p><strong>Choose the invalid list data type.</strong></p>',2,'[{\"changed\": {\"fields\": [\"question\"]}}]',3,1),(757,'2019-08-16 07:33:29.227000','60','  3[List 2] 59. Sum numbers - <p><strong>Find the sum of the numbers using provided the sum method.</strong></p>',2,'[{\"changed\": {\"fields\": [\"question\"]}}]',3,1),(758,'2019-08-16 16:20:52.597000','9','  3[Math] 20. Operator precedence - <p>What will be printed?</p>',2,'[{\"changed\": {\"fields\": [\"question\", \"example\"]}}]',3,1),(759,'2019-08-16 17:40:27.997000','60','  3[List 2] 59. Sum numbers - <p><strong>Find the sum of the numbers using provided the sum method.</strong></p>',2,'[{\"changed\": {\"fields\": [\"example\"]}}]',3,1),(760,'2019-08-16 17:42:55.197000','59','  3[List 2] 58. Maximum profit - <p>The price of the product changes every day. There is a daily price in a list. Find the maximum profit in one transaction. (You have to buy the product first and sel',2,'[{\"changed\": {\"fields\": [\"question\", \"example\"]}}]',3,1),(761,'2019-08-16 17:44:28.475000','59','  3[List 2] 58. Maximum profit - <p>The price of the product changes every day. There is a daily price in a list. Find the maximum profit in one transaction. (You have to buy the product first and sel',2,'[{\"changed\": {\"fields\": [\"example\"]}}]',3,1),(762,'2019-08-16 17:45:01.462000','60','  3[List 2] 59. Sum numbers - <p><strong>Find the sum of the numbers using provided the sum method.</strong></p>',2,'[{\"changed\": {\"fields\": [\"example\"]}}]',3,1),(763,'2019-08-16 17:45:37.075000','59','  3[List 2] 58. Maximum profit - <p>The price of the product changes every day. There is a daily price in a list. Find the maximum profit in one transaction. (You have to buy the product first and sel',2,'[{\"changed\": {\"fields\": [\"example\"]}}]',3,1),(764,'2019-08-16 17:47:37.443000','58','  3[String 2] 57. Common multiple - <p>Given a number, return the following rule.</p>\r\n\r\n<p>- If the number is a multiple of num1, return &quot;pypy&quot;</p>\r\n\r\n<p>- If the number is a multiple of nu',2,'[{\"changed\": {\"fields\": [\"question\", \"example\"]}}]',3,1),(765,'2019-08-16 17:48:31.045000','59','  3[List 2] 58. Maximum profit - <p><strong>The price of the product changes every day. There is a daily price in a list. Find the maximum profit in one transaction. </strong></p>\r\n\r\n<p><strong>(You h',2,'[{\"changed\": {\"fields\": [\"question\"]}}]',3,1),(766,'2019-08-16 17:51:54.355000','58','  3[String 2] 57. Common multiple - <p><strong>Given a number, return the following rule.</strong></p>\r\n\r\n<p>- If the number is a multiple of num1, return &quot;pypy&quot;</p>\r\n\r\n<p>- If the number is',2,'[{\"changed\": {\"fields\": [\"question\", \"example\"]}}]',3,1),(767,'2019-08-16 17:52:28.549000','59','  3[List 2] 58. Maximum profit - <p><strong>The price of the product changes every day. There is a daily price in a list. Find the maximum profit in one transaction. </strong></p>\r\n\r\n<p>(You have to b',2,'[{\"changed\": {\"fields\": [\"question\"]}}]',3,1),(768,'2019-08-16 17:53:46.603000','57','  3[Math] 56. Sum of digits - <p><strong>Given a number, find the sum of digits.</strong></p>',2,'[{\"changed\": {\"fields\": [\"question\", \"example\"]}}]',3,1),(769,'2019-08-16 18:14:12.227000','57','  3[Math] 56. Sum of digits - <p><strong>Given a number, find the sum of digits.</strong></p>',2,'[{\"changed\": {\"fields\": [\"example\"]}}]',3,1),(770,'2019-08-16 18:16:40.235000','60','  3[List 2] 59. Sum numbers - <p><strong>Find the sum of the numbers using provided the sum method.</strong></p>',2,'[{\"changed\": {\"fields\": [\"example\"]}}]',3,1),(771,'2019-08-16 18:37:29.680000','59','  3[List 2] 58. Maximum profit - <p><strong>The price of the product changes every day. There is a daily price in a list. Find the maximum profit in one transaction. </strong></p>\r\n\r\n<p>(You have to b',2,'[{\"changed\": {\"fields\": [\"example\"]}}]',3,1),(772,'2019-08-16 18:44:44.896000','59','  3[List 2] 58. Maximum profit - <p><strong>The price of the product changes every day. There is a daily price in a list. Find the maximum profit in one transaction. </strong></p>\r\n\r\n<p>(You have to b',2,'[{\"changed\": {\"fields\": [\"example\"]}}]',3,1),(773,'2019-08-16 18:55:28.434000','56','  2[String] 55. String join - <p><strong>Choose the result of this code.</strong></p>',2,'[{\"changed\": {\"fields\": [\"question\", \"example\"]}}]',3,1),(774,'2019-08-16 18:58:16.515000','54','  3[List 2] 53. Swap the values - <p><strong>Swap all the values between the i-th element and the j-th element.</strong></p>',2,'[{\"changed\": {\"fields\": [\"question\", \"example\"]}}]',3,1),(775,'2019-08-16 18:59:09.680000','53','  3[For 2] 52. Print star - <p><strong>Return the following list depending on the number.</strong></p>',2,'[{\"changed\": {\"fields\": [\"question\", \"example\"]}}]',3,1),(776,'2019-08-16 19:14:01.736000','58','  3[String 2] 57. Common multiple - <p><strong>Given a number, return the following rule.</strong></p>\r\n\r\n<p>&nbsp; <strong>&bull;&nbsp;</strong>If the number is a multiple of num1, return &quot;pypy&',2,'[{\"changed\": {\"fields\": [\"question\"]}}]',3,1),(777,'2019-08-16 19:14:23.526000','58','  3[String 2] 57. Common multiple - <p><strong>Given a number, return the following rule.</strong></p>\r\n\r\n<p>&nbsp; &nbsp;&nbsp;<strong>&bull;&nbsp;</strong>If the number is a multiple of num1, return',2,'[{\"changed\": {\"fields\": [\"question\"]}}]',3,1),(778,'2019-08-16 19:15:47.856000','55','  2[String] 54. String split - <p><strong>Choose the output&nbsp;of this code.</strong></p>',2,'[{\"changed\": {\"fields\": [\"question\", \"example\"]}}]',3,1),(779,'2019-08-16 19:16:04.490000','56','  2[String] 55. String join - <p><strong>Choose the result of this code.</strong></p>',2,'[{\"changed\": {\"fields\": [\"example\"]}}]',3,1),(780,'2019-08-16 19:16:17.872000','52','  1[Variable] 51. Valid variable - <p><strong>Which one is an invalid variable name?</strong></p>',2,'[{\"changed\": {\"fields\": [\"question\"]}}]',3,1),(781,'2019-08-16 19:16:32.246000','51','  3[List 2] 50. Merge lists - <p><strong>Given the two sorted lists, merge two lists to one sorted list.</strong></p>',2,'[{\"changed\": {\"fields\": [\"question\", \"example\"]}}]',3,1),(782,'2019-08-16 19:17:01.504000','51','  3[List 2] 50. Merge lists - <p><strong>Given the two sorted lists, merge two lists to one sorted list.</strong></p>',2,'[{\"changed\": {\"fields\": [\"example\"]}}]',3,1),(783,'2019-08-16 19:17:10.614000','51','  3[List 2] 50. Merge lists - <p><strong>Given the two sorted lists, merge two lists to one sorted list.</strong></p>',2,'[{\"changed\": {\"fields\": [\"example\"]}}]',3,1),(784,'2019-08-16 19:23:29.619000','50','  3[Math] 49. Fibonacci - <p><strong>Find the n-th Fibonacci numbers. </strong></p>\r\n\r\n<p><strong>The current value is the sum of the previous two values. </strong></p>\r\n\r\n<p><strong>For example, 1, 1',2,'[{\"changed\": {\"fields\": [\"question\", \"example\"]}}]',3,1),(785,'2019-08-16 19:24:21.946000','49','  3[For 2] 48. Print star - <p><strong>Return the following list depending on the number.</strong></p>',2,'[{\"changed\": {\"fields\": [\"question\", \"example\"]}}]',3,1),(786,'2019-08-16 19:25:08.728000','56','  2[String] 55. String join - <p><strong>Choose the result of this code.</strong></p>',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,1),(787,'2019-08-16 19:26:08.032000','49','  3[For 2] 48. Print star - <p><strong>Return the following list depending on the number.</strong></p>',2,'[{\"changed\": {\"fields\": [\"example\"]}}]',3,1),(788,'2019-08-16 19:26:48.275000','48','  3[List 2] 47. Common value - <p><strong>Given two&nbsp;lists, find the common values belong to both.</strong></p>',2,'[{\"changed\": {\"fields\": [\"question\", \"example\"]}}]',3,1),(789,'2019-08-16 19:27:29.372000','47','  3[List 2] 46. Check a value in a list - <p><strong>Given k and list, count the number less than k in the list.</strong></p>',2,'[{\"changed\": {\"fields\": [\"question\", \"example\"]}}]',3,1),(790,'2019-08-16 19:28:35.984000','46','  3[Math] 45. Sum of external angle - <p><strong>Find the sum of the external angle of the n-sided polygon.</strong></p>',2,'[{\"changed\": {\"fields\": [\"question\", \"example\"]}}]',3,1),(791,'2019-08-16 19:29:23.117000','45','  3[Math] 44. Sum of internal angle - <p><strong>Find the sum of the internal angle of the n-sided polygon.</strong></p>',2,'[{\"changed\": {\"fields\": [\"question\", \"example\"]}}]',3,1),(792,'2019-08-16 19:31:53.941000','44','  3[For 2] 43. Remove duplicated character - <p><strong>Given a string, remove adjacent duplicated character in the string.</strong></p>',2,'[{\"changed\": {\"fields\": [\"question\", \"example\"]}}]',3,1),(793,'2019-08-16 19:32:05.047000','44','  3[For 2] 43. Remove duplicated character - <p><strong>Given a string, remove adjacent duplicated character in the string.</strong></p>',2,'[{\"changed\": {\"fields\": [\"example\"]}}]',3,1),(794,'2019-08-16 19:33:22.700000','43','  4[Stack] 42. Find valid parenthesis - <p><strong>Check whether the parenthesis is valid or not.</strong></p>',2,'[{\"changed\": {\"fields\": [\"question\", \"example\"]}}]',3,1),(795,'2019-08-16 19:33:37.409000','41','  1[DataType] 40. Datatype - <p><strong>Which one of them is correct?</strong></p>',2,'[{\"changed\": {\"fields\": [\"question\"]}}]',3,1),(796,'2019-08-16 19:34:34.406000','40','  3[Math] 39. Find a trailing zeros - <p><strong>Find the trailing zero of the integer.</strong></p>',2,'[{\"changed\": {\"fields\": [\"question\", \"example\"]}}]',3,1),(797,'2019-08-16 19:56:05.974000','14','  4[Stack] 38. Reverse a list - <p>Reverse the list by Stack.</p>',2,'[{\"changed\": {\"fields\": [\"explanation\", \"question\", \"example\"]}}]',3,1),(798,'2019-08-16 19:57:05.418000','14','  4[Stack] 38. Reverse a list - <p><strong>Reverse the list by Stack.</strong></p>',2,'[{\"changed\": {\"fields\": [\"explanation\", \"question\"]}}]',3,1),(799,'2019-08-16 19:58:37.778000','39','  3[Math] 37. Power of 2 - <p><strong>Given an integer, check if it is a power of 2.</strong></p>',2,'[{\"changed\": {\"fields\": [\"question\", \"example\"]}}]',3,1),(800,'2019-08-16 20:00:54.499000','38','  3[Set 2] 36. Duplicated number - <p><strong>Check if the list has the duplicated number or not.</strong></p>',2,'[{\"changed\": {\"fields\": [\"question\", \"example\"]}}]',3,1),(801,'2019-08-16 20:04:17.116000','52','  1[Variable] 51. Valid variable - <p><strong>Which one is an invalid variable name?</strong></p>',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,1),(802,'2019-08-16 20:04:29.865000','52','  1[Variable] 51. Valid variable - <p><strong>Which one is an invalid variable name?</strong></p>',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,1),(803,'2019-08-16 20:05:13.733000','37','  3[For 2] 35. Second largest number - <p><strong>Find the second largest number of the list.</strong></p>',2,'[{\"changed\": {\"fields\": [\"question\", \"example\"]}}]',3,1),(804,'2019-08-16 20:05:51.709000','35','  3[Math] 34. Greatest common factor - <p><strong>Given the two integers, find the greatest common factor(GCF).</strong></p>',2,'[{\"changed\": {\"fields\": [\"question\", \"example\"]}}]',3,1),(805,'2019-08-16 20:06:22.983000','34','  3[Math] 33. Leading zeros - <p><strong>Given a decimal less than 1, return the number of leading zeros at the right of the point.</strong></p>',2,'[{\"changed\": {\"fields\": [\"question\", \"example\"]}}]',3,1),(806,'2019-08-16 20:06:47.901000','33','  3[String 2] 32. Remove a word - <p><strong>Remove the third word of the sentence.</strong></p>',2,'[{\"changed\": {\"fields\": [\"question\", \"example\"]}}]',3,1),(807,'2019-08-16 20:07:16.284000','30','  3[List 2] 31. Smallest number - <p><strong>Find the smallest number in a list.</strong></p>',2,'[{\"changed\": {\"fields\": [\"question\", \"example\"]}}]',3,1),(808,'2019-08-16 20:07:44.796000','29','  3[List 2] 30. Rotate a list - <p><strong>Given a list, rotate the list to the right by n steps. (you take the 0th element and put it at the end of the list)</strong></p>',2,'[{\"changed\": {\"fields\": [\"question\", \"example\"]}}]',3,1),(809,'2019-08-16 20:08:26.827000','28','  3[Dictionary 2] 29. Frequency - <p><strong>Find the most frequently appearing character.</strong></p>',2,'[{\"changed\": {\"fields\": [\"question\", \"example\"]}}]',3,1),(810,'2019-08-16 20:08:51.334000','27','  3[List 2] 28. Missing integer - <p><strong>Given an integer array of 1 to N except for one number, find the missing integer.</strong></p>',2,'[{\"changed\": {\"fields\": [\"question\", \"example\"]}}]',3,1),(811,'2019-08-16 20:10:05.689000','23','  3[List 2] 27. Subarray - <p><strong>Find the maximum subarray which has the largest sum. Subarray should have the first element. Return the sum of the maximum subarray.</strong></p>',2,'[{\"changed\": {\"fields\": [\"explanation\", \"question\", \"example\"]}}]',3,1),(812,'2019-08-16 20:10:30.338000','23','  3[List 2] 27. Subarray - <p><strong>Find the maximum subarray which has the largest sum. </strong></p>\r\n\r\n<p><strong>Subarray should have the first element. Return the sum of the maximum subarray.</',2,'[{\"changed\": {\"fields\": [\"question\"]}}]',3,1),(813,'2019-08-16 20:12:10.562000','22','  3[Math] 26. Square root - <p><strong>Find a square root x. A square root value(return value) is always an integer.</strong></p>',2,'[{\"changed\": {\"fields\": [\"question\", \"example\"]}}]',3,1),(814,'2019-08-16 20:13:43.958000','21','  3[List 2] 25. Sorted list - <p><strong>Given the sorted list, insert the value in the right position. It must be sorted in ascending order after insertion.</strong></p>',2,'[{\"changed\": {\"fields\": [\"question\", \"example\"]}}]',3,1),(815,'2019-08-16 20:14:00.083000','21','  3[List 2] 25. Sorted list - <p><strong>Given the sorted list, insert the value in the right position. </strong></p>\r\n\r\n<p><strong>It must be sorted in ascending order after insertion.</strong></p>',2,'[{\"changed\": {\"fields\": [\"question\"]}}]',3,1),(816,'2019-08-16 20:14:49.021000','13','  3[List 2] 24. Reverse a list - <p><strong>Reverse a list by swapping elements.</strong></p>',2,'[{\"changed\": {\"fields\": [\"explanation\", \"question\", \"example\"]}}]',3,1),(817,'2019-08-16 20:15:15.939000','12','  3[List 2] 23. Swap an element - <p><strong>Swap the second element and the last to the second element.</strong></p>',2,'[{\"changed\": {\"fields\": [\"question\", \"example\"]}}]',3,1),(818,'2019-08-16 20:16:09.556000','11','  3[List 2] 22. Swap elements - <p>Swap the first element and the last element.</p>',2,'[{\"changed\": {\"fields\": [\"explanation\", \"title\", \"question\", \"example\"]}}]',3,1),(819,'2019-08-16 20:16:17.769000','11','  3[List 2] 22. Swap elements - <p><strong>Swap the first element and the last element.</strong></p>',2,'[{\"changed\": {\"fields\": [\"question\"]}}]',3,1),(820,'2019-08-16 20:16:45.634000','10','  3[Math] 21. Write a function - <p><strong>Write a code to multiply two numbers.</strong></p>',2,'[{\"changed\": {\"fields\": [\"question\", \"example\"]}}]',3,1),(821,'2019-08-16 20:17:21.145000','9','  3[Math] 20. Operator precedence - <p><strong>What will be printed?</strong></p>',2,'[{\"changed\": {\"fields\": [\"question\", \"example\"]}}]',3,1),(822,'2019-08-16 20:18:30.864000','31','  2[List] 19. Split a list - <p><strong>Split the list into two lists. </strong></p>\r\n\r\n<p><strong>The first list contains odd numbers and the second list contains even numbers. </strong></p>',2,'[{\"changed\": {\"fields\": [\"question\", \"example\"]}}]',3,1),(823,'2019-08-16 20:19:31.554000','25','  2[Class] 18. Incorrect Class - <p><strong>Find the error in the code below.</strong></p>',2,'[{\"changed\": {\"fields\": [\"question\", \"example\"]}}]',3,1),(824,'2019-08-16 20:20:00.442000','25','  2[Class] 18. Incorrect Class - <p><strong>Find the error in the code below.</strong></p>',2,'[{\"changed\": {\"fields\": [\"example\"]}}]',3,1),(825,'2019-08-16 20:22:48.441000','25','  2[Class] 18. Incorrect Class - <p><strong>Find the error in the code below.</strong></p>',2,'[{\"changed\": {\"fields\": [\"example\", \"answer_header\", \"option1\"]}}]',3,1),(826,'2019-08-16 20:25:16.420000','24','  2[Class] 17. Class, Object - <p><strong>What will be printed?</strong></p>',2,'[{\"changed\": {\"fields\": [\"question\", \"example\"]}}]',3,1),(827,'2019-08-16 20:25:41.781000','24','  2[Class] 17. Class, Object - <p><strong>What will be printed?</strong></p>',2,'[{\"changed\": {\"fields\": [\"example\"]}}]',3,1),(828,'2019-08-16 20:26:25.041000','8','  2[Function] 16. Multiply function - <p><strong>What will be printed?</strong></p>',2,'[{\"changed\": {\"fields\": [\"question\", \"example\"]}}]',3,1),(829,'2019-08-16 20:26:58.865000','7','  2[Set] 15. Set contains - <p><strong>What will be printed?</strong></p>',2,'[{\"changed\": {\"fields\": [\"question\", \"example\"]}}]',3,1),(830,'2019-08-16 20:28:23.508000','6','  2[List] 14. List insert - <p><strong>What will be printed?</strong></p>',2,'[{\"changed\": {\"fields\": [\"question\", \"example\"]}}]',3,1),(831,'2019-08-16 20:30:38.837000','4','  2[List] 13. Find a value - <p><strong>What will be printed?</strong></p>',2,'[{\"changed\": {\"fields\": [\"question\", \"example\"]}}]',3,1),(832,'2019-08-16 20:31:17.277000','4','  2[List] 13. Find a value - <p><strong>What will be printed?</strong></p>',2,'[]',3,1),(833,'2019-08-16 20:32:26.311000','4','  2[List] 13. Find a value - <p><strong>What will be printed?</strong></p>',2,'[{\"changed\": {\"fields\": [\"example\"]}}]',3,1),(834,'2019-08-16 20:32:58.363000','4','  2[List] 13. Find a value - <p><strong>What will be printed?</strong></p>',2,'[{\"changed\": {\"fields\": [\"example\"]}}]',3,1),(835,'2019-08-16 20:34:08.571000','3','  2[String] 12. String concatenation - <p><strong>What will be printed?</strong></p>',2,'[{\"changed\": {\"fields\": [\"question\", \"example\"]}}]',3,1),(836,'2019-08-16 20:35:00.232000','3','  2[String] 12. String concatenation - <p><strong>What will be printed?</strong></p>',2,'[{\"changed\": {\"fields\": [\"example\"]}}]',3,1),(837,'2019-08-16 20:35:39.295000','2','  2[Dictionary] 11. Dictionary - <p><strong>What value will be printed?</strong></p>',2,'[{\"changed\": {\"fields\": [\"question\", \"example\"]}}]',3,1),(838,'2019-08-16 20:36:49.545000','20','  1[While] 10. Break - <p><strong>What will be printed?</strong></p>',2,'[{\"changed\": {\"fields\": [\"explanation\", \"question\", \"example\"]}}]',3,1),(839,'2019-08-16 20:37:17.901000','20','  1[While] 10. Break - <p><strong>What will be printed?</strong></p>',2,'[{\"changed\": {\"fields\": [\"example\"]}}]',3,1),(840,'2019-08-16 20:37:42.459000','20','  1[While] 10. Break - <p><strong>What will be printed?</strong></p>',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,1),(841,'2019-08-16 20:38:08.273000','20','  1[While] 10. Break - <p><strong>What will be printed?</strong></p>',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,1),(842,'2019-08-16 20:39:05.204000','19','  1[While] 9. Sum function - <p><strong>What value will be printed?</strong></p>',2,'[{\"changed\": {\"fields\": [\"explanation\", \"question\", \"example\"]}}]',3,1),(843,'2019-08-16 20:39:13.608000','36','  1[Print] 8. Print command - <p><strong>Choose the correct format of print.</strong></p>',2,'[{\"changed\": {\"fields\": [\"question\"]}}]',3,1),(844,'2019-08-16 20:39:28.506000','18','  1[Range] 7. Range summary - <p><strong>Which one is the incorrect format of range?</strong></p>',2,'[{\"changed\": {\"fields\": [\"question\"]}}]',3,1),(845,'2019-08-16 20:40:19.157000','17','  1[Range] 6. Range(start, stop, step) - <p><strong>What is the meaning of this?</strong></p>',2,'[{\"changed\": {\"fields\": [\"explanation\", \"question\", \"example\"]}}]',3,1),(846,'2019-08-16 20:41:54.471000','17','  1[Range] 6. Range(start, stop, step) - <p><strong>What is the meaning of this?</strong></p>',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,1),(847,'2019-08-16 20:42:11.203000','17','  1[Range] 6. Range(start, stop, step) - <p><strong>What is the meaning of this?</strong></p>',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,1),(848,'2019-08-16 20:42:36.075000','26','  1[DataType] 0. Basic data type - <p><strong>What is the incorrect data types in Python?</strong></p>',2,'[{\"changed\": {\"fields\": [\"question\"]}}]',3,1),(849,'2019-08-16 20:42:46.019000','32','  1[DataType] 1. List, Tuple - <p><strong>What is the incorrect data type in Python?</strong></p>',2,'[{\"changed\": {\"fields\": [\"question\"]}}]',3,1),(850,'2019-08-16 20:42:52.787000','1','  1[For] 2. Sum function - <p><strong>Which value will be printed?</strong></p>',2,'[{\"changed\": {\"fields\": [\"question\", \"example\"]}}]',3,1),(851,'2019-08-16 20:43:42.796000','1','  1[For] 2. Sum function - <p><strong>Which value will be printed?</strong></p>',2,'[{\"changed\": {\"fields\": [\"example\"]}}]',3,1),(852,'2019-08-16 20:44:24.369000','5','  1[While] 3. Add function - <p><strong>Which value will be printed?</strong></p>',2,'[{\"changed\": {\"fields\": [\"question\", \"example\"]}}]',3,1),(853,'2019-08-16 20:45:03.298000','15','  1[Range] 4. Range(stop) - <p><strong>What is the meaning of this?</strong></p>',2,'[{\"changed\": {\"fields\": [\"explanation\", \"question\", \"example\"]}}]',3,1),(854,'2019-08-16 20:45:39.368000','15','  1[Range] 4. Range(stop) - <p><strong>What is the meaning of this?</strong></p>',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,1),(855,'2019-08-16 20:46:31.497000','15','  1[Range] 4. Range(stop) - <p><strong>What is the meaning of this?</strong></p>',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,1),(856,'2019-08-16 20:47:25.020000','16','  1[Range] 5. Range(start, stop) - <p>What is the meaning of this?</p>',2,'[{\"changed\": {\"fields\": [\"explanation\", \"question\", \"example\"]}}]',3,1),(857,'2019-08-16 20:47:43.442000','16','  1[Range] 5. Range(start, stop) - <p><strong>What is the meaning of this?</strong></p>',2,'[{\"changed\": {\"fields\": [\"explanation\", \"question\"]}}]',3,1),(858,'2019-08-16 20:48:27.032000','17','  1[Range] 6. Range(start, stop, step) - <p><strong>What is the meaning of this?</strong></p>',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,1),(859,'2019-08-16 20:48:52.515000','26','  1[DataType] 0. Basic data type - <p><strong>What is the incorrect data types in Python?</strong></p>',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,1),(860,'2019-08-16 20:49:09.617000','32','  1[DataType] 1. List, Tuple - <p><strong>What is the incorrect data type in Python?</strong></p>',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,1),(861,'2019-08-16 20:51:37.390000','13','  3[List 2] 24. Reverse a list - <p><strong>Reverse a list by swapping elements.</strong></p>',2,'[]',3,1),(862,'2019-08-16 20:52:05.590000','16','  1[Range] 5. Range(start, stop) - <p><strong>What is the meaning of this?</strong></p>',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,1),(863,'2019-08-16 21:15:12.472000','58','  3[String 2] 57. Common multiple - <p><strong>Given a number, return the following rule.</strong></p>\r\n\r\n<p>&nbsp; &nbsp;&nbsp;<strong>&bull;&nbsp;</strong>If the number is a multiple of num1, return',2,'[{\"changed\": {\"fields\": [\"example\"]}}]',3,1),(864,'2019-08-17 08:58:35.752000','61','  2[List] 60.  - <p>Find the output of the code.</p>',1,'[{\"added\": {}}]',3,1),(865,'2019-08-17 08:59:53.517000','61','  2[List] 13. Remove List - <p>Find the output of the code.</p>',2,'[{\"changed\": {\"fields\": [\"title\"]}}]',3,1),(866,'2019-08-17 09:01:15.513000','61','  2[List] 13. Remove List - <p>Find the output of the code.</p>',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,1),(867,'2019-08-17 09:21:14.840000','4','  Junior-23. List',2,'[{\"changed\": {\"fields\": [\"image\"]}}]',2,1),(868,'2019-08-17 19:26:05.977000','61','  2[List] 13. Manage List - <p>Find the output of the code.</p>',2,'[{\"changed\": {\"fields\": [\"title\"]}}]',3,1),(869,'2019-08-17 19:48:55.348000','62','  2[List] 61. Append a value to the list',1,'[{\"added\": {}}]',3,1),(870,'2019-08-17 19:50:00.198000','62','  2[List] 61. Append a value to the list',2,'[{\"changed\": {\"fields\": [\"question\", \"example\"]}}]',3,1),(871,'2019-08-17 20:00:19.608000','62','  2[List] 61. Append a value to the list',2,'[{\"changed\": {\"fields\": [\"option4\"]}}]',3,1),(872,'2019-08-17 20:00:36.100000','79','61.  3',1,'[{\"added\": {}}]',4,1),(873,'2019-08-17 20:04:25.386000','62','  2[List] 61. List append',2,'[{\"changed\": {\"fields\": [\"title\"]}}]',3,1),(874,'2019-08-17 20:09:07.616000','61','  2[List] 13. Manage List',2,'[{\"changed\": {\"fields\": [\"question\"]}}]',3,1),(875,'2019-08-17 20:09:45.261000','61','  2[List] 13. Manage List',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,1),(876,'2019-08-17 21:02:38.147000','58','  3[String 2] 59. Leap year',2,'[{\"changed\": {\"fields\": [\"explanation\", \"title\", \"question\", \"example\"]}}]',3,1),(877,'2019-08-17 21:03:25.883000','76','59. 2020 366',2,'[{\"changed\": {\"fields\": [\"test\", \"expected_answer\"]}}]',4,1),(878,'2019-08-17 21:03:40.141000','75','59. 2019 365',2,'[{\"changed\": {\"fields\": [\"test\", \"expected_answer\"]}}]',4,1),(879,'2019-08-17 21:03:57.840000','80','59. 2000 365',1,'[{\"added\": {}}]',4,1),(880,'2019-08-17 21:04:18.130000','81','59. 1900 365',1,'[{\"added\": {}}]',4,1),(881,'2019-08-17 21:04:26.917000','80','59. 2000 366',2,'[{\"changed\": {\"fields\": [\"expected_answer\"]}}]',4,1),(882,'2019-08-17 21:05:10.142000','58','  3[String 2] 59. Leap year',2,'[{\"changed\": {\"fields\": [\"example\"]}}]',3,1),(883,'2019-08-17 21:47:01.051000','25','  2[Class] 21. Incorrect Class',2,'[{\"changed\": {\"fields\": [\"option1\"]}}]',3,1),(884,'2019-08-17 21:53:24.172000','58','  3[Math] 59. Leap year',2,'[{\"changed\": {\"fields\": [\"category\"]}}]',3,1),(885,'2019-08-17 21:53:44.608000','58','  3[Math] 59. Leap year',2,'[{\"changed\": {\"fields\": [\"answer_header\"]}}]',3,1),(886,'2019-08-17 23:59:58.802000','82','13.  4',1,'[{\"added\": {}}]',4,1),(887,'2019-08-18 00:02:21.846000','79','14.  4',2,'[{\"changed\": {\"fields\": [\"expected_answer\"]}}]',4,1),(888,'2019-08-19 02:32:17.219000','13','  Super Junior-13. Operator',2,'[{\"changed\": {\"fields\": [\"visible\"]}}]',2,1),(889,'2019-08-19 02:37:49.131000','63','  1[Operator] 62. Arithmetic Operator',1,'[{\"added\": {}}]',3,1),(890,'2019-08-19 02:38:02.262000','83','62.  3',1,'[{\"added\": {}}]',4,1),(891,'2019-08-19 02:38:59.000000','63','  1[Operator] 62. Arithmetic Operator',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,1),(892,'2019-08-19 02:49:39.618000','64','  2[String] 63. Same string',1,'[{\"added\": {}}]',3,1),(893,'2019-08-19 02:50:06.688000','84','63. \"abcc\"\r\n\"bcac\" True',1,'[{\"added\": {}}]',4,1),(894,'2019-08-19 02:50:19.206000','85','63. \"abb\"\r\n\"baa\" False',1,'[{\"added\": {}}]',4,1),(895,'2019-08-19 02:52:17.559000','64','  2[String] 63. String transform',2,'[{\"changed\": {\"fields\": [\"title\", \"question\"]}}]',3,1),(896,'2019-08-19 03:05:42.474000','65','  2[String] 64. Palindrome',1,'[{\"added\": {}}]',3,1),(897,'2019-08-19 03:05:57.789000','86','64. \"racecar\" True',1,'[{\"added\": {}}]',4,1),(898,'2019-08-19 03:06:10.812000','87','64. \"pypy\" False',1,'[{\"added\": {}}]',4,1),(899,'2019-08-19 03:19:23.097000','66','  2[List] 65. Adjacent same numbers',1,'[{\"added\": {}}]',3,1),(900,'2019-08-19 03:19:46.112000','88','65. Adjacent same numbers - [4, 4, 4, 1, 1, 1, 2, 3, 4] 3',1,'[{\"added\": {}}]',4,1),(901,'2019-08-19 03:19:56.849000','89','65. Adjacent same numbers - [1, 2, 3, 4] 1',1,'[{\"added\": {}}]',4,1),(902,'2019-08-19 03:21:44.784000','67','  3[List 2] 66. Maximum value',1,'[{\"added\": {}}]',3,1),(903,'2019-08-19 03:22:05.558000','90','66. Maximum value - [4, 1, 2, 6, 4, 5] 6',1,'[{\"added\": {}}]',4,1),(904,'2019-08-19 04:30:30.542000','71','Dayeon 2019-08-17 23:57:31.003772+00:00',3,'',12,1),(905,'2019-08-19 04:53:47.279000','64','  3[String 2] 63. String transform',2,'[{\"changed\": {\"fields\": [\"category\"]}}]',3,1),(906,'2019-08-19 04:54:20.609000','66','  3[List 2] 65. Adjacent same numbers',2,'[{\"changed\": {\"fields\": [\"category\"]}}]',3,1),(907,'2019-08-19 16:01:13.946000','78','61. Dayeon 08-18-2019 22:05',2,'[{\"changed\": {\"fields\": [\"answer\", \"right\", \"testcase\", \"stdout\", \"output\", \"expected_answer\"]}}]',12,1),(908,'2019-08-19 16:01:44.932000','78','61. Dayeon 08-18-2019 09:01',2,'[{\"changed\": {\"fields\": [\"date\"]}}]',12,1),(909,'2019-08-19 16:12:21.655000','66','  3[List 2] 65. Adjacent same numbers',2,'[{\"changed\": {\"fields\": [\"answer_header\"]}}]',3,1),(910,'2019-08-19 16:12:48.677000','64','  3[String 2] 63. String transform',2,'[{\"changed\": {\"fields\": [\"answer_header\"]}}]',3,1),(911,'2019-08-19 16:13:29.944000','59','  3[List 2] 60. Maximum profit',2,'[{\"changed\": {\"fields\": [\"answer_header\"]}}]',3,1),(912,'2019-08-19 16:14:04.729000','50','  3[Math] 51. Fibonacci',2,'[{\"changed\": {\"fields\": [\"answer_header\"]}}]',3,1),(913,'2019-08-19 16:14:19.850000','46','  3[Math] 47. Sum of external angle',2,'[{\"changed\": {\"fields\": [\"answer_header\"]}}]',3,1),(914,'2019-08-19 16:21:26.833000','67','  3[List 2] 66. Maximum value',2,'[{\"changed\": {\"fields\": [\"answer_header\"]}}]',3,1),(915,'2019-08-19 16:21:54.578000','65','  2[String] 64. Palindrome',2,'[{\"changed\": {\"fields\": [\"answer_header\"]}}]',3,1),(916,'2019-08-19 16:22:04.145000','64','  3[String 2] 63. String transform',2,'[]',3,1),(917,'2019-08-19 16:22:35.555000','60','  3[List 2] 61. Sum numbers',2,'[{\"changed\": {\"fields\": [\"answer_header\"]}}]',3,1),(918,'2019-08-19 16:22:49.211000','58','  3[Math] 59. Leap year',2,'[{\"changed\": {\"fields\": [\"answer_header\"]}}]',3,1),(919,'2019-08-19 16:23:01.498000','57','  3[Math] 58. Sum of digits',2,'[{\"changed\": {\"fields\": [\"answer_header\"]}}]',3,1),(920,'2019-08-19 16:23:24.615000','54','  3[List 2] 55. Swap the values',2,'[{\"changed\": {\"fields\": [\"answer_header\"]}}]',3,1),(921,'2019-08-19 16:32:14.591000','53','  3[For 2] 54. Print star',2,'[{\"changed\": {\"fields\": [\"answer_header\"]}}]',3,1),(922,'2019-08-19 16:33:26.350000','51','  3[List 2] 52. Merge lists',2,'[{\"changed\": {\"fields\": [\"answer_header\"]}}]',3,1),(923,'2019-08-19 16:33:41.681000','49','  3[For 2] 50. Print star',2,'[{\"changed\": {\"fields\": [\"answer_header\"]}}]',3,1),(924,'2019-08-19 16:33:53.662000','48','  3[List 2] 49. Common value',2,'[{\"changed\": {\"fields\": [\"answer_header\"]}}]',3,1),(925,'2019-08-19 16:34:06.928000','47','  3[List 2] 48. Check a value in a list',2,'[{\"changed\": {\"fields\": [\"answer_header\"]}}]',3,1),(926,'2019-08-19 16:34:27.008000','45','  3[Math] 46. Sum of internal angle',2,'[{\"changed\": {\"fields\": [\"answer_header\"]}}]',3,1),(927,'2019-08-19 16:34:35.977000','44','  3[For 2] 45. Remove duplicated character',2,'[{\"changed\": {\"fields\": [\"answer_header\"]}}]',3,1),(928,'2019-08-19 16:34:45.171000','43','  4[Stack] 44. Find valid parenthesis',2,'[{\"changed\": {\"fields\": [\"answer_header\"]}}]',3,1),(929,'2019-08-19 16:34:59.807000','40','  3[Math] 41. Find a trailing zeros',2,'[{\"changed\": {\"fields\": [\"answer_header\"]}}]',3,1),(930,'2019-08-19 16:35:09.334000','14','  4[Stack] 40. Reverse a list',2,'[{\"changed\": {\"fields\": [\"answer_header\"]}}]',3,1),(931,'2019-08-19 16:35:16.540000','39','  3[Math] 39. Power of 2',2,'[{\"changed\": {\"fields\": [\"answer_header\"]}}]',3,1),(932,'2019-08-19 16:35:25.274000','38','  3[Set 2] 38. Duplicated number',2,'[{\"changed\": {\"fields\": [\"answer_header\"]}}]',3,1),(933,'2019-08-19 16:35:33.407000','37','  3[For 2] 37. Second largest number',2,'[{\"changed\": {\"fields\": [\"answer_header\"]}}]',3,1),(934,'2019-08-19 16:35:41.286000','35','  3[Math] 36. Greatest common factor',2,'[{\"changed\": {\"fields\": [\"answer_header\"]}}]',3,1),(935,'2019-08-19 16:35:54.136000','34','  3[Math] 35. Leading zeros',2,'[{\"changed\": {\"fields\": [\"answer_header\"]}}]',3,1),(936,'2019-08-19 16:36:02.973000','33','  3[String 2] 34. Remove a word',2,'[{\"changed\": {\"fields\": [\"answer_header\"]}}]',3,1),(937,'2019-08-19 16:36:11.672000','30','  3[List 2] 33. Smallest number',2,'[{\"changed\": {\"fields\": [\"answer_header\"]}}]',3,1),(938,'2019-08-19 16:36:20.032000','29','  3[List 2] 32. Rotate a list',2,'[{\"changed\": {\"fields\": [\"answer_header\"]}}]',3,1),(939,'2019-08-19 16:36:28.113000','28','  3[Dictionary 2] 31. Frequency',2,'[{\"changed\": {\"fields\": [\"answer_header\"]}}]',3,1),(940,'2019-08-19 16:36:36.052000','27','  3[List 2] 30. Missing integer',2,'[{\"changed\": {\"fields\": [\"answer_header\"]}}]',3,1),(941,'2019-08-19 16:36:43.640000','23','  3[List 2] 29. Subarray',2,'[{\"changed\": {\"fields\": [\"answer_header\"]}}]',3,1),(942,'2019-08-19 16:36:50.796000','22','  3[Math] 28. Square root',2,'[{\"changed\": {\"fields\": [\"answer_header\"]}}]',3,1),(943,'2019-08-19 16:37:02.949000','21','  3[List 2] 27. Sorted list',2,'[{\"changed\": {\"fields\": [\"answer_header\"]}}]',3,1),(944,'2019-08-19 16:37:11.112000','13','  3[List 2] 26. Reverse a list',2,'[{\"changed\": {\"fields\": [\"answer_header\"]}}]',3,1),(945,'2019-08-19 16:37:19.341000','12','  3[List 2] 25. Swap an element',2,'[{\"changed\": {\"fields\": [\"answer_header\"]}}]',3,1),(946,'2019-08-19 16:37:27.288000','11','  3[List 2] 24. Swap elements',2,'[{\"changed\": {\"fields\": [\"answer_header\"]}}]',3,1),(947,'2019-08-19 16:37:36.289000','10','  3[Math] 23. Write a function',2,'[{\"changed\": {\"fields\": [\"answer_header\"]}}]',3,1),(948,'2019-08-19 16:38:04.321000','31','  2[List] 17. Split a list',2,'[{\"changed\": {\"fields\": [\"answer_header\"]}}]',3,1),(949,'2019-08-19 16:41:32.410000','55','  2[String] 56. String split',2,'[{\"changed\": {\"fields\": [\"answer_header\"]}}]',3,1),(950,'2019-08-19 16:41:46.221000','41','  1[DataType] 42. Datatype',2,'[{\"changed\": {\"fields\": [\"answer_header\"]}}]',3,1),(951,'2019-08-19 17:03:47.378000','68','  4[Stack] 67. Remove outermost parenthesis',1,'[{\"added\": {}}]',3,1),(952,'2019-08-19 17:04:14.013000','91','67. Remove outermost parenthesis - \'(()())\' \'()()\'',1,'[{\"added\": {}}]',4,1),(953,'2019-08-19 17:04:42.415000','92','67. Remove outermost parenthesis - \'()()\' \'\'',1,'[{\"added\": {}}]',4,1),(954,'2019-08-20 05:22:29.213000','33','x High-42. Linked List',1,'[{\"added\": {}}]',2,1),(955,'2019-08-20 05:22:43.374000','33','  High-42. Linked List',2,'[{\"changed\": {\"fields\": [\"visible\"]}}]',2,1),(956,'2019-08-20 05:23:28.247000','33','x High-42. Tree',2,'[{\"changed\": {\"fields\": [\"name\", \"desc\", \"visible\"]}}]',2,1),(957,'2019-08-20 05:23:40.861000','31','  High-40. Linked List',2,'[{\"changed\": {\"fields\": [\"desc\", \"visible\"]}}]',2,1),(958,'2019-08-20 05:33:01.869000','69','  4[Linked List] 68. Linked list',1,'[{\"added\": {}}]',3,1),(959,'2019-08-20 05:34:36.560000','69','  4[Linked List] 68. Linked list',2,'[{\"changed\": {\"fields\": [\"example\"]}}]',3,1),(960,'2019-08-20 05:35:06.682000','69','  4[Linked List] 68. Linked list',2,'[{\"changed\": {\"fields\": [\"example\"]}}]',3,1),(961,'2019-08-20 05:54:41.451000','69','  4[Linked List] 68. Find the max from linked list',2,'[{\"changed\": {\"fields\": [\"explanation\", \"title\", \"question\", \"example\", \"answer_header\"]}}]',3,1),(962,'2019-08-20 06:01:55.709000','69','  4[Linked List] 68. Find the max from linked list',2,'[{\"changed\": {\"fields\": [\"example\"]}}]',3,1),(963,'2019-08-20 06:02:09.489000','69','  4[Linked List] 68. Find the max from linked list',2,'[{\"changed\": {\"fields\": [\"example\"]}}]',3,1),(964,'2019-08-20 06:02:24.328000','69','  4[Linked List] 68. Find the max from linked list',2,'[{\"changed\": {\"fields\": [\"example\"]}}]',3,1),(965,'2019-08-20 06:06:39.326000','69','  4[Linked List] 68. Find the max from linked list',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,1),(966,'2019-08-20 06:07:04.986000','93','68. Find the max from linked list - Node[1, 4, 3, 2] 4',1,'[{\"added\": {}}]',4,1),(967,'2019-08-20 06:08:40.758000','80','68. Dayeon 08-20-2019 06:08',3,'',12,1),(968,'2019-08-20 06:21:27.533000','69','  4[Linked List] 68. Find the max from linked list',2,'[{\"changed\": {\"fields\": [\"explanation\", \"answer_header\"]}}]',3,1),(969,'2019-08-20 06:27:29.726000','69','  4[Linked List] 68. Find the maximum',2,'[{\"changed\": {\"fields\": [\"title\"]}}]',3,1),(970,'2019-08-20 07:55:40.952000','69','  4[Linked List] 68. Find the maximum',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,1),(971,'2019-08-20 08:05:28.294000','69','  4[Linked List] 68. Find the maximum',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,1),(972,'2019-08-20 08:06:11.268000','69','  4[Linked List] 68. Find the maximum',2,'[{\"changed\": {\"fields\": [\"explanation\", \"example\"]}}]',3,1),(973,'2019-08-20 08:07:36.882000','69','  4[Linked List] 68. Find the maximum',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,1),(974,'2019-08-20 08:12:35.487000','69','  4[Linked List] 68. Find the maximum',2,'[{\"changed\": {\"fields\": [\"answer_header\"]}}]',3,1),(975,'2019-08-20 08:12:48.692000','69','  4[Linked List] 68. Find the maximum',2,'[{\"changed\": {\"fields\": [\"answer_header\"]}}]',3,1),(976,'2019-08-20 08:17:46.902000','69','  4[Linked List] 68. Find the maximum',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,1),(977,'2019-08-22 04:04:17.442000','54','43. Dayeon 08-04-2019 09:47',2,'[{\"changed\": {\"fields\": [\"right\"]}}]',12,1),(978,'2019-08-24 03:41:39.903812','3','dayeon2',3,'',9,1),(979,'2019-08-24 05:28:10.450679','5','testtest2',3,'',9,1),(980,'2019-08-24 05:28:10.454113','4','youngwan2',3,'',9,1),(981,'2019-08-24 07:06:44.720468','6','youngwan2',3,'',9,1),(982,'2019-08-24 07:06:44.760516','7','youngwan4',3,'',9,1),(983,'2019-08-24 16:35:23.598206','80','67. Dayeon 08-24 16:33',2,'[{\"changed\": {\"fields\": [\"right\"]}}]',12,1),(984,'2019-08-24 16:35:59.406713','80','67. Dayeon 08-24 16:33',2,'[{\"changed\": {\"fields\": [\"right\"]}}]',12,1),(985,'2019-08-24 22:20:29.672039','80','67. Dayeon 08-24 16:33',2,'[{\"changed\": {\"fields\": [\"right\"]}}]',12,1),(986,'2019-08-24 22:20:48.599366','80','67. Dayeon 08-24 16:33',2,'[{\"changed\": {\"fields\": [\"right\"]}}]',12,1),(987,'2019-08-24 22:35:26.473343','80','67. Dayeon 08-24 16:33',2,'[{\"changed\": {\"fields\": [\"right\"]}}]',12,1),(988,'2019-08-24 22:39:05.528377','80','67. Dayeon 08-24 16:33',2,'[{\"changed\": {\"fields\": [\"right\"]}}]',12,1),(989,'2019-08-24 22:39:23.511925','80','67. Dayeon 08-24 16:33',3,'',12,1),(990,'2019-08-25 01:39:55.719790','38','34. Dayeon 2019-07-21 right:1',2,'[{\"changed\": {\"fields\": [\"date\"]}}]',12,1),(991,'2019-08-25 01:40:17.480635','81','68. Dayeon 2019-08-24 right:-1',3,'',12,1),(992,'2019-08-25 01:44:19.547009','82','51. Dayeon 2019-08-24 right:-1',3,'',12,1),(993,'2019-08-25 03:06:22.282511','51','42. Datatype -  1',2,'[{\"changed\": {\"fields\": [\"expected_answer\"]}}]',4,1),(994,'2019-08-25 03:06:56.003355','41','  1[DataType] 42. Datatype  08-03 10:15',2,'[{\"changed\": {\"fields\": [\"question\"]}}]',3,1),(995,'2019-08-25 03:26:21.670118','36','  1[Print] 8. Print command  08-01 00:45',2,'[{\"changed\": {\"fields\": [\"option1\"]}}]',3,1),(996,'2019-08-25 03:32:01.029139','36','  1[Print] 8. Print command  08-01 00:45',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,1),(997,'2019-08-25 03:33:05.131407','36','  1[Print] 8. Print command  08-01 00:45',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,1),(998,'2019-08-25 03:34:37.426846','36','  1[Print] 8. Print command  08-01 00:45',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,1),(999,'2019-08-25 03:36:05.387189','36','  1[Print] 8. Print command  08-01 00:45',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,1),(1000,'2019-08-25 03:36:34.222799','36','  1[Print] 8. Print command  08-01 00:45',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,1),(1001,'2019-08-25 03:36:47.318973','36','  1[Print] 8. Print command  08-01 00:45',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,1),(1002,'2019-08-25 03:37:47.560794','52','  1[Variable] 53. Valid variable  08-07 22:25',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,1),(1003,'2019-08-25 05:15:36.712642','8','youngwan4',3,'',9,1),(1004,'2019-08-25 05:19:40.319677','1','dayeon',2,'[{\"changed\": {\"fields\": [\"name\"]}}]',14,1),(1005,'2019-08-25 05:20:12.107944','2','dayeon',2,'[{\"changed\": {\"fields\": [\"is_staff\", \"is_superuser\"]}}]',9,1),(1006,'2019-08-26 03:31:20.941207','61','  2[List] 13. Manage List  08-17 01:35',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(1007,'2019-08-26 03:42:04.217061','26','  1[DataType] 0. Basic data type  07-22 23:03',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(1008,'2019-08-26 03:42:52.140268','26','  1[DataType] 0. Basic data type  07-22 23:03',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(1009,'2019-08-26 03:43:48.409083','26','  1[DataType] 0. Basic data type  07-22 23:03',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(1010,'2019-08-26 03:45:21.095058','63','  1[Operator] 62. Arithmetic Operator  08-18 19:32',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(1011,'2019-08-26 03:56:20.988900','70','  1[DataType] 69. Set, Dictionary  08-25 20:48',1,'[{\"added\": {}}]',3,2),(1012,'2019-08-26 03:56:37.062179','94','69. Set, Dictionary -  1',1,'[{\"added\": {}}]',4,2),(1013,'2019-08-26 03:58:39.638881','70','  1[DataType] 2. Set, Dictionary  08-25 20:48',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(1014,'2019-08-26 03:59:18.029665','70','  1[DataType] 2. Set, Dictionary  08-25 20:48',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(1015,'2019-08-26 03:59:27.656682','70','  1[DataType] 2. Set, Dictionary  08-25 20:48',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(1016,'2019-08-26 04:04:18.963878','32','  1[DataType] 1. List, Tuple  07-28 23:11',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(1017,'2019-08-27 10:37:35.041102','2','youngwan',1,'[{\"added\": {}}]',14,2),(1018,'2019-08-29 03:25:30.048318','52','  1[Variable] 54. Valid variable  08-07 22:25',2,'[{\"changed\": {\"fields\": [\"explanation\", \"question\"]}}]',3,2),(1019,'2019-08-29 03:25:56.008004','52','  1[Variable] 54. Valid variable  08-07 22:25',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(1020,'2019-08-29 03:26:43.683514','52','  1[Variable] 54. Valid variable  08-07 22:25',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(1021,'2019-08-29 03:27:11.359522','52','  1[Variable] 54. Valid variable  08-07 22:25',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(1022,'2019-08-29 03:27:43.920874','52','  1[Variable] 54. Valid variable  08-07 22:25',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(1023,'2019-08-29 03:28:27.746857','52','  1[Variable] 54. Valid variable  08-07 22:25',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(1024,'2019-08-29 03:36:14.628409','52','  1[Variable] 54. Valid variable  08-07 22:25',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(1025,'2019-08-29 03:41:32.850014','71','  1[Variable] 70. Variable naming convention  08-28 20:39',1,'[{\"added\": {}}]',3,2),(1026,'2019-08-29 03:41:43.160461','95','70. Variable naming convention -  2',1,'[{\"added\": {}}]',4,2),(1027,'2019-08-29 03:42:19.288122','52','  1[Variable] 54. Variable naming rule  08-07 22:25',2,'[{\"changed\": {\"fields\": [\"explanation\", \"title\"]}}]',3,2),(1028,'2019-08-29 03:50:25.769684','71','  1[Variable] 70. Variable naming convention  08-28 20:39',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(1029,'2019-08-29 03:50:41.763921','71','  1[Variable] 70. Variable naming convention  08-28 20:39',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(1030,'2019-08-29 03:51:36.993049','71','  1[Variable] 70. Variable naming convention  08-28 20:39',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(1031,'2019-08-29 03:52:35.651000','71','  1[Variable] 70. Variable naming convention  08-28 20:39',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(1032,'2019-08-29 06:06:04.610425','63','  1[Operator] 63. Arithmetic Operator  08-18 19:32',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(1033,'2019-08-29 06:07:00.260302','63','  1[Operator] 63. Arithmetic Operator  08-18 19:32',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(1034,'2019-08-29 06:09:43.080735','63','  1[Operator] 63. Arithmetic Operator  08-18 19:32',2,'[{\"changed\": {\"fields\": [\"question\", \"option1\", \"option2\", \"option3\", \"option4\"]}}]',3,2),(1035,'2019-08-29 06:11:23.653227','63','  1[Operator] 63. Arithmetic Operator  08-18 19:32',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(1036,'2019-08-29 06:27:12.028209','72','  1[Operator] 71. Relational Operator  08-28 23:18',1,'[{\"added\": {}}]',3,2),(1037,'2019-08-29 06:27:22.519481','96','71. Relational Operator -  4',1,'[{\"added\": {}}]',4,2),(1038,'2019-08-29 06:29:17.546182','72','  1[Operator] 71. Relational Operator  08-28 23:18',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(1039,'2019-08-29 06:30:04.247770','72','  1[Operator] 71. Relational Operator  08-28 23:18',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(1040,'2019-08-29 06:31:23.994975','72','  1[Operator] 71. Relational Operator  08-28 23:18',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(1041,'2019-08-29 06:34:07.760454','72','  1[Operator] 71. Relational Operator  08-28 23:18',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(1042,'2019-08-29 06:34:57.306748','72','  1[Operator] 71. Relational Operator  08-28 23:18',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(1043,'2019-08-29 06:36:09.760764','72','  1[Operator] 71. Relational Operator  08-28 23:18',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(1044,'2019-08-29 07:06:01.786008','71','  1[Variable] 70. Variable naming convention  08-28 20:39',2,'[{\"changed\": {\"fields\": [\"question\"]}}]',3,2),(1045,'2019-08-29 07:06:41.994712','71','  1[Variable] 70. Variable naming convention  08-28 20:39',2,'[{\"changed\": {\"fields\": [\"explanation\", \"question\"]}}]',3,2),(1046,'2019-08-29 07:42:08.314382','69','  4[Linked List] 69. Find the maximum  08-19 22:15',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(1047,'2019-08-29 07:44:45.068452','9','  3[Math] 23. Operator precedence  07-18 02:51',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(1048,'2019-08-29 07:47:52.992616','63','  1[Operator] 63. Arithmetic Operator  08-18 19:32',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(1049,'2019-08-29 07:51:05.268083','73','  1[Operator] 72. Assignment  08-29 00:12',1,'[{\"added\": {}}]',3,2),(1050,'2019-08-29 07:51:13.255912','97','72. Assignment -  12',1,'[{\"added\": {}}]',4,2),(1051,'2019-08-29 07:52:11.529588','73','  1[Operator] 72. Assign Operator  08-29 00:12',2,'[{\"changed\": {\"fields\": [\"title\"]}}]',3,2),(1052,'2019-08-29 07:52:30.591820','73','  1[Operator] 72. Assignment Operator  08-29 00:12',2,'[{\"changed\": {\"fields\": [\"title\"]}}]',3,2),(1053,'2019-08-29 08:05:55.558147','73','  1[Operator] 72. Assignment Operator  08-29 00:12',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(1054,'2019-08-29 08:06:54.503052','73','  1[Operator] 72. Assignment Operator  08-29 00:12',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(1055,'2019-08-29 08:07:25.914850','72','  1[Operator] 71. Relational Operator  08-28 23:18',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(1056,'2019-08-29 08:31:05.320610','74','  1[Operator] 73. Logical Operator  08-29 01:11',1,'[{\"added\": {}}]',3,2),(1057,'2019-08-29 08:31:13.674559','98','73. Logical Operator -  3',1,'[{\"added\": {}}]',4,2),(1058,'2019-08-29 08:32:14.137382','74','  1[Operator] 73. Logical Operator  08-29 01:11',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(1059,'2019-08-29 08:34:39.274801','72','  1[Operator] 71. Relational Operator  08-28 23:18',2,'[{\"changed\": {\"fields\": [\"option4\"]}}]',3,2),(1060,'2019-08-29 08:41:55.086443','19','  1[While] 10. Sum function  07-21 00:00',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(1061,'2019-08-29 08:42:37.238033','19','  1[While] 10. Sum function  07-21 00:00',2,'[]',3,2),(1062,'2019-08-29 08:43:42.043863','66','  3[List 2] 66. Adjacent same numbers  08-18 20:15',2,'[{\"changed\": {\"fields\": [\"example\"]}}]',3,2),(1063,'2019-08-29 08:47:26.091806','66','  3[List 2] 66. Adjacent same numbers  08-18 20:15',2,'[]',3,2),(1064,'2019-08-30 04:58:38.658673','75','  2[List] 74. Split an array into two with equal Sum  08-29 21:53',1,'[{\"added\": {}}]',3,2),(1065,'2019-08-30 04:58:57.875567','99','74. Split an array into two with equal Sum - [1, 3, 2, 2] True',1,'[{\"added\": {}}]',4,2),(1066,'2019-08-30 04:59:17.674792','100','74. Split an array into two with equal Sum - [1, 3, 5, 9] True',1,'[{\"added\": {}}]',4,2),(1067,'2019-08-30 04:59:25.701068','101','74. Split an array into two with equal Sum - [1, 2, 3, 4] False',1,'[{\"added\": {}}]',4,2),(1068,'2019-08-30 05:31:51.645446','76','  2[List] 75. Sliding Window Maximum  08-29 22:15',1,'[{\"added\": {}}]',3,2),(1069,'2019-08-30 05:32:34.742231','102','75. Sliding Window Maximum - [5, 3, 2, 6, 4, 3, 3]\r\n3 13',1,'[{\"added\": {}}]',4,2),(1070,'2019-08-31 04:03:14.130881','29','  Junior High-30. Advanced For',2,'[{\"changed\": {\"fields\": [\"name\"]}}]',2,2),(1071,'2019-08-31 04:03:30.458931','20','x Junior High-31. Advanced Integer',2,'[{\"changed\": {\"fields\": [\"name\"]}}]',2,2),(1072,'2019-08-31 04:03:45.378419','21','  Junior High-32. Advanced String',2,'[{\"changed\": {\"fields\": [\"name\"]}}]',2,2),(1073,'2019-08-31 04:03:56.643484','19','  Junior High-33. Advanced List',2,'[{\"changed\": {\"fields\": [\"name\"]}}]',2,2),(1074,'2019-08-31 04:04:11.953496','19','  Junior High-33. Advanced List',2,'[{\"changed\": {\"fields\": [\"desc\"]}}]',2,2),(1075,'2019-08-31 04:04:23.626240','28','x Junior High-34. Advanced Tuple',2,'[{\"changed\": {\"fields\": [\"name\"]}}]',2,2),(1076,'2019-08-31 04:04:32.446710','6','  Junior High-35. Advanced Set',2,'[{\"changed\": {\"fields\": [\"name\"]}}]',2,2),(1077,'2019-08-31 04:04:40.370781','2','  Junior High-36. AdvancedDictionary',2,'[{\"changed\": {\"fields\": [\"name\"]}}]',2,2),(1078,'2019-08-31 04:11:17.728159','53','  3[Advanced For] 55. Print star 2  08-08 22:20',2,'[{\"changed\": {\"fields\": [\"title\"]}}]',3,2),(1079,'2019-08-31 04:25:06.079682','77','  1[For] 76. For concept  08-30 21:12',1,'[{\"added\": {}}]',3,2),(1080,'2019-08-31 04:25:15.390164','103','76. For concept -  2',1,'[{\"added\": {}}]',4,2),(1081,'2019-08-31 04:39:22.001071','20','  1[While] 12. Break  07-21 00:09',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(1082,'2019-08-31 04:40:30.359151','20','  1[While] 12. Break  07-21 00:09',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(1083,'2019-08-31 04:59:59.884493','78','  1[While] 77. While  08-30 21:42',1,'[{\"added\": {}}]',3,2),(1084,'2019-08-31 05:00:08.009666','104','77. While -  1',1,'[{\"added\": {}}]',4,2),(1085,'2019-08-31 05:00:57.008620','78','  1[While] 77. While  08-30 21:42',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(1086,'2019-08-31 05:03:04.773046','78','  1[While] 77. While  08-30 21:42',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(1087,'2019-08-31 05:18:47.617942','78','  1[While] 77. While  08-30 21:42',2,'[]',3,2),(1088,'2019-08-31 07:33:45.893251','34','  Expert-43. Greedy',1,'[{\"added\": {}}]',2,2),(1089,'2019-08-31 07:46:52.522001','79','  5[Advanced Math] 78. Activity selection problem  08-31 00:29',1,'[{\"added\": {}}]',3,2),(1090,'2019-08-31 07:46:59.751003','79','  5[Greedy] 78. Activity selection problem  08-31 00:29',2,'[{\"changed\": {\"fields\": [\"category\"]}}]',3,2),(1091,'2019-08-31 07:47:32.882056','105','78. Activity selection problem - [1, 2, 4]\r\n[4, 5, 6] 2',1,'[{\"added\": {}}]',4,2),(1092,'2019-08-31 18:57:36.697258','26','  1[DataType] 0. Basic data type  07-22 23:03',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(1093,'2019-08-31 19:19:49.644984','75','  2[List] 76. Split an array into two with equal Sum  08-29 21:53',2,'[{\"changed\": {\"fields\": [\"question\"]}}]',3,2),(1094,'2019-08-31 19:20:03.027263','74','  1[Operator] 75. Logical Operator  08-29 01:11',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(1095,'2019-08-31 19:20:46.210272','73','  1[Operator] 74. Assignment Operator  08-29 00:12',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(1096,'2019-08-31 19:21:59.399237','72','  1[Operator] 73. Relational Operator  08-28 23:18',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(1097,'2019-08-31 19:22:11.857364','71','  1[Variable] 72. Variable naming convention  08-28 20:39',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(1098,'2019-08-31 19:22:23.535647','69','  4[Linked List] 71. Find the maximum  08-19 22:15',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(1099,'2019-08-31 19:23:00.908547','68','  4[Stack] 70. Remove outermost parenthesis  08-19 10:01',2,'[{\"changed\": {\"fields\": [\"question\"]}}]',3,2),(1100,'2019-08-31 19:25:51.263723','65','  2[String] 67. Palindrome  08-18 20:02',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(1101,'2019-08-31 19:26:12.812657','63','  1[Operator] 65. Arithmetic Operator  08-18 19:32',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(1102,'2019-08-31 19:26:33.584425','60','  3[Advanced List] 64. Sum numbers  08-15 21:15',2,'[{\"changed\": {\"fields\": [\"question\"]}}]',3,2),(1103,'2019-08-31 19:26:41.386697','59','  3[Advanced List] 63. Maximum profit  08-15 21:05',2,'[{\"changed\": {\"fields\": [\"question\"]}}]',3,2),(1104,'2019-08-31 19:26:55.254371','57','  3[Math] 61. Sum of digits  08-15 19:14',2,'[{\"changed\": {\"fields\": [\"question\"]}}]',3,2),(1105,'2019-08-31 19:27:10.289833','56','  2[String] 60. String join  08-09 16:25',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(1106,'2019-08-31 19:27:27.340646','56','  2[String] 60. String join  08-09 16:25',2,'[{\"changed\": {\"fields\": [\"question\"]}}]',3,2),(1107,'2019-08-31 19:27:39.933102','55','  2[String] 59. String split  08-09 15:03',2,'[{\"changed\": {\"fields\": [\"explanation\", \"question\"]}}]',3,2),(1108,'2019-08-31 19:27:49.620621','54','  3[Advanced List] 58. Swap the values  08-08 22:22',2,'[{\"changed\": {\"fields\": [\"question\"]}}]',3,2),(1109,'2019-08-31 19:28:05.776629','53','  3[Advanced For] 57. Print star 2  08-08 22:20',2,'[{\"changed\": {\"fields\": [\"question\"]}}]',3,2),(1110,'2019-08-31 19:28:18.087089','52','  1[Variable] 56. Variable naming rule  08-07 22:25',2,'[{\"changed\": {\"fields\": [\"explanation\", \"question\"]}}]',3,2),(1111,'2019-08-31 19:28:24.395850','51','  3[Advanced List] 55. Merge lists  08-06 17:59',2,'[{\"changed\": {\"fields\": [\"question\"]}}]',3,2),(1112,'2019-08-31 19:28:32.861038','50','  3[Math] 54. Fibonacci  08-06 17:51',2,'[{\"changed\": {\"fields\": [\"question\"]}}]',3,2),(1113,'2019-08-31 19:28:38.848124','49','  3[Advanced For] 53. Print star  08-05 18:34',2,'[{\"changed\": {\"fields\": [\"question\"]}}]',3,2),(1114,'2019-08-31 19:28:46.186196','48','  3[Advanced List] 52. Common value  08-05 18:30',2,'[{\"changed\": {\"fields\": [\"question\"]}}]',3,2),(1115,'2019-08-31 19:28:52.625226','47','  3[Advanced List] 51. Check a value in a list  08-05 18:28',2,'[{\"changed\": {\"fields\": [\"question\"]}}]',3,2),(1116,'2019-08-31 19:29:00.490852','46','  3[Math] 50. Sum of external angle  08-05 18:27',2,'[{\"changed\": {\"fields\": [\"question\"]}}]',3,2),(1117,'2019-08-31 19:29:13.534036','32','  1[DataType] 1. List, Tuple  07-28 23:11',2,'[{\"changed\": {\"fields\": [\"question\"]}}]',3,2),(1118,'2019-08-31 19:29:21.454063','70','  1[DataType] 2. Set, Dictionary  08-25 20:48',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(1119,'2019-08-31 19:29:32.682729','1','  1[For] 4. Sum function  07-17 02:33',2,'[{\"changed\": {\"fields\": [\"question\"]}}]',3,2),(1120,'2019-08-31 19:29:45.825850','16','  1[Range] 6. Range(start, stop)  07-20 14:24',2,'[{\"changed\": {\"fields\": [\"explanation\", \"question\"]}}]',3,2),(1121,'2019-08-31 19:29:56.165900','17','  1[Range] 7. Range(start, stop, step)  07-20 14:27',2,'[{\"changed\": {\"fields\": [\"explanation\", \"question\"]}}]',3,2),(1122,'2019-08-31 19:30:05.526921','15','  1[Range] 5. Range(stop)  07-20 11:03',2,'[{\"changed\": {\"fields\": [\"explanation\", \"question\"]}}]',3,2),(1123,'2019-08-31 19:30:12.041314','18','  1[Range] 8. Range summary  07-20 14:33',2,'[{\"changed\": {\"fields\": [\"question\"]}}]',3,2),(1124,'2019-08-31 19:30:22.902631','36','  1[Print] 9. Print command  08-01 00:45',2,'[{\"changed\": {\"fields\": [\"explanation\", \"question\"]}}]',3,2),(1125,'2019-08-31 19:30:33.226674','78','  1[While] 10. While  08-30 21:42',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(1126,'2019-08-31 19:30:43.016370','20','  1[While] 11. Break  07-21 00:09',2,'[{\"changed\": {\"fields\": [\"explanation\", \"question\"]}}]',3,2),(1127,'2019-08-31 19:30:53.882054','19','  1[While] 12. Sum function  07-21 00:00',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(1128,'2019-08-31 19:31:00.674172','5','  1[While] 13. Add function  07-18 02:47',2,'[{\"changed\": {\"fields\": [\"question\"]}}]',3,2),(1129,'2019-08-31 19:31:06.923854','2','  2[Dictionary] 14. Dictionary  07-17 02:48',2,'[{\"changed\": {\"fields\": [\"question\"]}}]',3,2),(1130,'2019-08-31 19:31:12.640229','3','  2[String] 15. String concatenation  07-18 02:45',2,'[{\"changed\": {\"fields\": [\"question\"]}}]',3,2),(1131,'2019-08-31 19:31:22.720351','61','  2[List] 16. Manage List  08-17 01:35',2,'[{\"changed\": {\"fields\": [\"explanation\", \"question\"]}}]',3,2),(1132,'2019-08-31 19:31:30.106357','62','  2[List] 17. List append  08-17 12:43',2,'[{\"changed\": {\"fields\": [\"question\"]}}]',3,2),(1133,'2019-08-31 19:31:38.941252','6','  2[List] 18. List insert  07-18 02:48',2,'[{\"changed\": {\"fields\": [\"question\"]}}]',3,2),(1134,'2019-08-31 19:31:45.595119','4','  2[List] 19. Find a value  07-18 02:46',2,'[{\"changed\": {\"fields\": [\"question\"]}}]',3,2),(1135,'2019-08-31 19:31:52.014680','31','  2[List] 20. Split a list  07-27 22:42',2,'[{\"changed\": {\"fields\": [\"question\"]}}]',3,2),(1136,'2019-08-31 19:32:14.961593','7','  2[Set] 21. Set contains  07-18 02:49',2,'[{\"changed\": {\"fields\": [\"question\"]}}]',3,2),(1137,'2019-08-31 19:32:22.950217','8','  2[Function] 22. Multiply function  07-18 02:49',2,'[{\"changed\": {\"fields\": [\"question\"]}}]',3,2),(1138,'2019-08-31 19:32:32.379174','24','  2[Class] 23. Class, Object  07-22 20:23',2,'[{\"changed\": {\"fields\": [\"explanation\", \"question\"]}}]',3,2),(1139,'2019-08-31 19:32:40.711249','25','  2[Class] 24. Incorrect Class  07-22 20:28',2,'[{\"changed\": {\"fields\": [\"question\"]}}]',3,2),(1140,'2019-08-31 19:32:52.062387','9','  3[Math] 25. Operator precedence  07-18 02:51',2,'[{\"changed\": {\"fields\": [\"explanation\", \"question\"]}}]',3,2),(1141,'2019-08-31 19:32:58.666088','10','  3[Math] 26. Write a function  07-18 02:52',2,'[{\"changed\": {\"fields\": [\"question\"]}}]',3,2),(1142,'2019-08-31 19:33:08.678793','11','  3[Advanced List] 27. Swap elements  07-18 02:53',2,'[{\"changed\": {\"fields\": [\"explanation\", \"question\"]}}]',3,2),(1143,'2019-08-31 19:33:15.406479','12','  3[Advanced List] 28. Swap an element  07-18 19:03',2,'[{\"changed\": {\"fields\": [\"question\"]}}]',3,2),(1144,'2019-08-31 19:33:28.292508','13','  3[Advanced List] 29. Reverse a list  07-18 19:20',2,'[{\"changed\": {\"fields\": [\"explanation\", \"question\"]}}]',3,2),(1145,'2019-08-31 19:33:35.811751','21','  3[Advanced List] 30. Sorted list  07-21 09:53',2,'[{\"changed\": {\"fields\": [\"question\"]}}]',3,2),(1146,'2019-08-31 19:33:46.940487','22','  3[Math] 31. Square root  07-21 10:42',2,'[{\"changed\": {\"fields\": [\"explanation\", \"question\"]}}]',3,2),(1147,'2019-08-31 19:33:58.602740','23','  3[Advanced List] 32. Subarray  07-22 20:14',2,'[{\"changed\": {\"fields\": [\"explanation\", \"question\"]}}]',3,2),(1148,'2019-08-31 19:34:06.246475','27','  3[Advanced List] 33. Missing integer  07-25 21:31',2,'[{\"changed\": {\"fields\": [\"question\"]}}]',3,2),(1149,'2019-08-31 19:34:12.721809','28','  3[AdvancedDictionary] 34. Frequency  07-26 00:36',2,'[{\"changed\": {\"fields\": [\"question\"]}}]',3,2),(1150,'2019-08-31 19:34:18.835324','29','  3[Advanced List] 35. Rotate a list  07-27 10:16',2,'[{\"changed\": {\"fields\": [\"question\"]}}]',3,2),(1151,'2019-08-31 19:34:25.050186','30','  3[Advanced List] 36. Smallest number  07-27 20:05',2,'[{\"changed\": {\"fields\": [\"question\"]}}]',3,2),(1152,'2019-08-31 19:34:32.834814','33','  3[Advanced String] 37. Remove a word  07-30 02:25',2,'[{\"changed\": {\"fields\": [\"question\"]}}]',3,2),(1153,'2019-08-31 19:34:39.052438','34','  3[Math] 38. Leading zeros  07-30 18:09',2,'[{\"changed\": {\"fields\": [\"question\"]}}]',3,2),(1154,'2019-08-31 19:34:46.027372','35','  3[Math] 39. Greatest common factor  07-31 21:12',2,'[{\"changed\": {\"fields\": [\"question\"]}}]',3,2),(1155,'2019-08-31 19:34:52.664859','37','  3[Advanced For] 40. Second largest number  08-01 01:21',2,'[{\"changed\": {\"fields\": [\"question\"]}}]',3,2),(1156,'2019-08-31 19:34:58.200109','38','  3[Advanced Set] 41. Duplicated number  08-01 21:12',2,'[{\"changed\": {\"fields\": [\"question\"]}}]',3,2),(1157,'2019-08-31 19:35:04.136360','39','  3[Math] 42. Power of 2  08-02 02:56',2,'[{\"changed\": {\"fields\": [\"question\"]}}]',3,2),(1158,'2019-08-31 19:35:15.041040','14','  4[Stack] 43. Reverse a list  07-19 11:55',2,'[{\"changed\": {\"fields\": [\"explanation\", \"question\"]}}]',3,2),(1159,'2019-08-31 19:35:22.918245','40','  3[Math] 44. Find a trailing zeros  08-02 21:57',2,'[{\"changed\": {\"fields\": [\"question\"]}}]',3,2),(1160,'2019-08-31 19:35:29.402573','41','  1[DataType] 45. Datatype  08-03 10:15',2,'[{\"changed\": {\"fields\": [\"question\"]}}]',3,2),(1161,'2019-08-31 19:35:35.853765','42','  1[DataType] 46. Invalid data type  08-03 20:47',2,'[{\"changed\": {\"fields\": [\"question\"]}}]',3,2),(1162,'2019-08-31 19:35:42.131016','43','  4[Stack] 47. Find valid parenthesis  08-04 09:07',2,'[{\"changed\": {\"fields\": [\"question\"]}}]',3,2),(1163,'2019-08-31 19:35:49.672141','44','  3[Advanced For] 48. Remove duplicated character  08-04 17:05',2,'[{\"changed\": {\"fields\": [\"question\"]}}]',3,2),(1164,'2019-08-31 19:35:55.596018','45','  3[Math] 49. Sum of internal angle  08-05 18:25',2,'[{\"changed\": {\"fields\": [\"question\"]}}]',3,2),(1165,'2019-08-31 19:38:27.791576','75','  3[Advanced List] 76. Split an array into two with equal Sum  08-29 21:53',2,'[{\"changed\": {\"fields\": [\"category\"]}}]',3,2),(1166,'2019-08-31 19:38:46.513911','76','  3[Advanced List] 77. Sliding Window Maximum  08-29 22:15',2,'[{\"changed\": {\"fields\": [\"category\"]}}]',3,2),(1167,'2019-08-31 19:39:02.731467','65','  3[Advanced String] 71. Palindrome  08-18 20:02',2,'[{\"changed\": {\"fields\": [\"category\"]}}]',3,2),(1168,'2019-09-01 00:18:03.163298','1','youngwan',2,'[{\"changed\": {\"fields\": [\"is_staff\", \"is_superuser\"]}}]',9,2),(1169,'2019-09-01 00:18:24.860631','1','youngwan',2,'[{\"changed\": {\"fields\": [\"is_staff\", \"is_superuser\"]}}]',9,2),(1170,'2019-09-01 01:20:54.890395','93','1.  2019-08-31 right:-1',3,'',12,2),(1171,'2019-09-01 05:35:51.751991','27','70 Total Quiz',2,'[{\"changed\": {\"fields\": [\"html\", \"desc\"]}}]',15,2),(1172,'2019-09-01 05:36:22.507268','23','10 Total Quiz',2,'[{\"changed\": {\"fields\": [\"html\", \"desc\"]}}]',15,2),(1173,'2019-09-01 05:37:39.571276','24','20 Total Quiz',2,'[{\"changed\": {\"fields\": [\"html\", \"desc\"]}}]',15,2),(1174,'2019-09-01 05:37:44.565411','23','10 Total Quiz',2,'[{\"changed\": {\"fields\": [\"html\"]}}]',15,2),(1175,'2019-09-01 05:37:51.253270','14','30 Total Quiz',2,'[{\"changed\": {\"fields\": [\"html\", \"desc\"]}}]',15,2),(1176,'2019-09-01 05:37:58.157821','25','40 Total Quiz',2,'[{\"changed\": {\"fields\": [\"html\", \"desc\"]}}]',15,2),(1177,'2019-09-01 05:38:06.333199','15','50 Total Quiz',2,'[{\"changed\": {\"fields\": [\"html\", \"desc\"]}}]',15,2),(1178,'2019-09-01 05:38:13.430561','26','60 Total Quiz',2,'[{\"changed\": {\"fields\": [\"html\", \"desc\"]}}]',15,2),(1179,'2019-09-01 05:38:19.839047','27','70 Total Quiz',2,'[{\"changed\": {\"fields\": [\"html\"]}}]',15,2),(1180,'2019-09-01 05:38:33.099690','28','80 Total Quiz',2,'[{\"changed\": {\"fields\": [\"html\", \"desc\"]}}]',15,2),(1181,'2019-09-01 05:38:40.230235','29','90 Total Quiz',2,'[{\"changed\": {\"fields\": [\"html\", \"desc\"]}}]',15,2),(1182,'2019-09-01 05:38:49.337482','16','100 Total Quiz',2,'[{\"changed\": {\"fields\": [\"html\", \"desc\"]}}]',15,2),(1183,'2019-09-01 05:39:01.194608','10','2 Quiz Per Day',2,'[{\"changed\": {\"fields\": [\"html\", \"desc\"]}}]',15,2),(1184,'2019-09-01 05:39:08.899422','11','3 Quiz Per Day',2,'[{\"changed\": {\"fields\": [\"html\", \"desc\"]}}]',15,2),(1185,'2019-09-01 05:39:16.907113','12','4 Quiz Per Day',2,'[{\"changed\": {\"fields\": [\"html\", \"desc\"]}}]',15,2),(1186,'2019-09-01 05:39:24.866593','13','5 Quiz Per Day',2,'[{\"changed\": {\"fields\": [\"html\", \"desc\"]}}]',15,2),(1187,'2019-09-01 05:39:33.285275','17','6 Quiz Per Day',2,'[{\"changed\": {\"fields\": [\"html\", \"desc\"]}}]',15,2),(1188,'2019-09-01 05:39:41.887762','18','7 Quiz Per Day',2,'[{\"changed\": {\"fields\": [\"html\", \"desc\"]}}]',15,2),(1189,'2019-09-01 05:39:49.448110','19','8 Quiz Per Day',2,'[{\"changed\": {\"fields\": [\"html\", \"desc\"]}}]',15,2),(1190,'2019-09-01 05:39:56.812404','20','9 Quiz Per Day',2,'[{\"changed\": {\"fields\": [\"html\", \"desc\"]}}]',15,2),(1191,'2019-09-01 05:40:07.744815','1','2 Day Streak',2,'[{\"changed\": {\"fields\": [\"html\", \"desc\"]}}]',15,2),(1192,'2019-09-01 05:40:18.607236','22','3 Day Streak',2,'[{\"changed\": {\"fields\": [\"html\", \"desc\"]}}]',15,2),(1193,'2019-09-01 05:40:26.640882','2','4 Day Streak',2,'[{\"changed\": {\"fields\": [\"html\", \"desc\"]}}]',15,2),(1194,'2019-09-01 05:40:34.107581','21','5 Day Streak',2,'[{\"changed\": {\"fields\": [\"html\", \"desc\"]}}]',15,2),(1195,'2019-09-01 05:40:42.074747','3','7 Day Streak',2,'[{\"changed\": {\"fields\": [\"html\", \"desc\"]}}]',15,2),(1196,'2019-09-01 05:40:49.827834','9','10 Day Streak',2,'[{\"changed\": {\"fields\": [\"html\", \"desc\"]}}]',15,2),(1197,'2019-09-01 05:48:44.694736','30','6 Day Streak',1,'[{\"added\": {}}]',15,2),(1198,'2019-09-01 05:49:16.325658','31','8 Day Streak',1,'[{\"added\": {}}]',15,2),(1199,'2019-09-01 05:49:34.231029','32','9 Day Streak',1,'[{\"added\": {}}]',15,2),(1200,'2019-09-01 05:58:54.682281','23','10 Total Quiz',2,'[{\"changed\": {\"fields\": [\"value\", \"html\", \"desc\"]}}]',15,2),(1201,'2019-09-01 05:59:00.935808','23','1 Total Quiz',2,'[{\"changed\": {\"fields\": [\"name\"]}}]',15,2),(1202,'2019-09-01 05:59:16.987498','24','5 Total Quiz',2,'[{\"changed\": {\"fields\": [\"name\", \"value\", \"html\", \"desc\"]}}]',15,2),(1203,'2019-09-01 05:59:30.150014','14','10 Total Quiz',2,'[{\"changed\": {\"fields\": [\"name\", \"value\", \"html\", \"desc\"]}}]',15,2),(1204,'2019-09-01 05:59:41.623653','25','20 Total Quiz',2,'[{\"changed\": {\"fields\": [\"name\", \"value\", \"html\", \"desc\"]}}]',15,2),(1205,'2019-09-01 05:59:51.309259','15','30 Total Quiz',2,'[{\"changed\": {\"fields\": [\"name\", \"value\", \"html\", \"desc\"]}}]',15,2),(1206,'2019-09-01 06:00:00.437748','26','50 Total Quiz',2,'[{\"changed\": {\"fields\": [\"name\", \"value\", \"html\", \"desc\"]}}]',15,2),(1207,'2019-09-01 06:00:18.340806','28','100 Total Quiz',2,'[{\"changed\": {\"fields\": [\"name\", \"value\", \"html\", \"desc\"]}}]',15,2),(1208,'2019-09-01 06:02:33.551569','29','150 Total Quiz',2,'[{\"changed\": {\"fields\": [\"name\", \"value\", \"html\", \"desc\"]}}]',15,2),(1209,'2019-09-01 06:02:51.636832','16','200 Total Quiz',2,'[{\"changed\": {\"fields\": [\"name\", \"value\", \"html\", \"desc\"]}}]',15,2),(1210,'2019-09-01 06:30:57.255836','23','1 Total Quiz',2,'[{\"changed\": {\"fields\": [\"html\"]}}]',15,2),(1211,'2019-09-01 06:31:01.970537','24','5 Total Quiz',2,'[{\"changed\": {\"fields\": [\"html\"]}}]',15,2),(1212,'2019-09-01 06:31:06.328648','14','10 Total Quiz',2,'[{\"changed\": {\"fields\": [\"html\"]}}]',15,2),(1213,'2019-09-01 06:31:10.408935','25','20 Total Quiz',2,'[{\"changed\": {\"fields\": [\"html\"]}}]',15,2),(1214,'2019-09-01 06:31:14.392437','15','30 Total Quiz',2,'[{\"changed\": {\"fields\": [\"html\"]}}]',15,2),(1215,'2019-09-01 06:31:19.065059','26','50 Total Quiz',2,'[{\"changed\": {\"fields\": [\"html\"]}}]',15,2),(1216,'2019-09-01 06:31:25.565115','27','70 Total Quiz',2,'[{\"changed\": {\"fields\": [\"html\"]}}]',15,2),(1217,'2019-09-01 06:31:29.969906','28','100 Total Quiz',2,'[{\"changed\": {\"fields\": [\"html\"]}}]',15,2),(1218,'2019-09-01 06:31:34.401798','29','150 Total Quiz',2,'[{\"changed\": {\"fields\": [\"html\"]}}]',15,2),(1219,'2019-09-01 06:31:38.529020','16','200 Total Quiz',2,'[{\"changed\": {\"fields\": [\"html\"]}}]',15,2),(1220,'2019-09-01 06:31:43.536963','10','2 Quiz Per Day',2,'[{\"changed\": {\"fields\": [\"html\"]}}]',15,2),(1221,'2019-09-01 06:31:48.813277','11','3 Quiz Per Day',2,'[{\"changed\": {\"fields\": [\"html\"]}}]',15,2),(1222,'2019-09-01 06:31:53.248731','12','4 Quiz Per Day',2,'[{\"changed\": {\"fields\": [\"html\"]}}]',15,2),(1223,'2019-09-01 06:31:57.949050','13','5 Quiz Per Day',2,'[{\"changed\": {\"fields\": [\"html\"]}}]',15,2),(1224,'2019-09-01 06:32:02.285995','17','6 Quiz Per Day',2,'[{\"changed\": {\"fields\": [\"html\"]}}]',15,2),(1225,'2019-09-01 06:32:06.549901','18','7 Quiz Per Day',2,'[{\"changed\": {\"fields\": [\"html\"]}}]',15,2),(1226,'2019-09-01 06:32:11.525288','19','8 Quiz Per Day',2,'[{\"changed\": {\"fields\": [\"html\"]}}]',15,2),(1227,'2019-09-01 06:32:16.207039','20','9 Quiz Per Day',2,'[{\"changed\": {\"fields\": [\"html\"]}}]',15,2),(1228,'2019-09-01 06:32:21.421855','1','2 Day Streak',2,'[{\"changed\": {\"fields\": [\"html\"]}}]',15,2),(1229,'2019-09-01 06:32:27.691901','22','3 Day Streak',2,'[{\"changed\": {\"fields\": [\"html\"]}}]',15,2),(1230,'2019-09-01 06:32:36.807034','2','4 Day Streak',2,'[{\"changed\": {\"fields\": [\"html\"]}}]',15,2),(1231,'2019-09-01 06:32:42.202381','21','5 Day Streak',2,'[{\"changed\": {\"fields\": [\"html\"]}}]',15,2),(1232,'2019-09-01 06:32:50.189984','30','6 Day Streak',2,'[{\"changed\": {\"fields\": [\"html\"]}}]',15,2),(1233,'2019-09-01 06:32:55.584694','3','7 Day Streak',2,'[{\"changed\": {\"fields\": [\"html\"]}}]',15,2),(1234,'2019-09-01 06:33:00.628937','31','8 Day Streak',2,'[{\"changed\": {\"fields\": [\"html\"]}}]',15,2),(1235,'2019-09-01 06:33:04.976477','32','9 Day Streak',2,'[{\"changed\": {\"fields\": [\"html\"]}}]',15,2),(1236,'2019-09-01 06:33:09.435768','9','10 Day Streak',2,'[{\"changed\": {\"fields\": [\"html\"]}}]',15,2),(1237,'2019-09-01 06:40:58.623398','4','Welcome',1,'[{\"added\": {}}]',16,2),(1238,'2019-09-01 06:41:52.612768','33','Welcome',1,'[{\"added\": {}}]',15,2),(1239,'2019-09-01 07:16:42.745175','34','Welcome',1,'[{\"added\": {}}]',15,2),(1240,'2019-09-01 07:17:08.729962','34','Welcome',3,'',15,2),(1241,'2019-09-01 07:17:25.138675','2','youngwan',2,'[{\"changed\": {\"fields\": [\"badges\"]}}]',14,2),(1242,'2019-09-01 07:26:10.282506','1','dayeon',2,'[{\"changed\": {\"fields\": [\"badges\"]}}]',14,2),(1243,'2019-09-01 07:26:30.954018','33','Welcome',2,'[{\"changed\": {\"fields\": [\"desc\"]}}]',15,2),(1244,'2019-09-01 07:28:01.851993','23','1 Total Quiz',2,'[{\"changed\": {\"fields\": [\"desc\"]}}]',15,2),(1245,'2019-09-01 07:29:24.292747','27','70 Total Quiz',2,'[{\"changed\": {\"fields\": [\"desc\"]}}]',15,2),(1246,'2019-09-01 07:31:33.111022','19','8 Quiz Per Day',2,'[{\"changed\": {\"fields\": [\"desc\"]}}]',15,2),(1247,'2019-09-01 07:31:55.695644','19','8 Quiz Per Day',2,'[{\"changed\": {\"fields\": [\"desc\"]}}]',15,2),(1248,'2019-09-01 07:32:40.455977','30','6 Day Streak',2,'[{\"changed\": {\"fields\": [\"desc\"]}}]',15,2),(1249,'2019-09-01 07:33:15.177147','24','5 Total Quiz',2,'[{\"changed\": {\"fields\": [\"desc\"]}}]',15,2),(1250,'2019-09-01 07:33:27.713350','14','10 Total Quiz',2,'[{\"changed\": {\"fields\": [\"desc\"]}}]',15,2),(1251,'2019-09-01 07:33:34.527725','25','20 Total Quiz',2,'[{\"changed\": {\"fields\": [\"desc\"]}}]',15,2),(1252,'2019-09-01 07:33:39.432686','15','30 Total Quiz',2,'[{\"changed\": {\"fields\": [\"desc\"]}}]',15,2),(1253,'2019-09-01 07:33:44.814816','26','50 Total Quiz',2,'[{\"changed\": {\"fields\": [\"desc\"]}}]',15,2),(1254,'2019-09-01 07:33:49.667451','27','70 Total Quiz',2,'[{\"changed\": {\"fields\": [\"desc\"]}}]',15,2),(1255,'2019-09-01 07:33:55.301539','28','100 Total Quiz',2,'[{\"changed\": {\"fields\": [\"desc\"]}}]',15,2),(1256,'2019-09-01 07:34:00.382572','29','150 Total Quiz',2,'[{\"changed\": {\"fields\": [\"desc\"]}}]',15,2),(1257,'2019-09-01 07:34:06.121185','16','200 Total Quiz',2,'[{\"changed\": {\"fields\": [\"desc\"]}}]',15,2),(1258,'2019-09-01 07:34:15.135340','10','2 Quiz Per Day',2,'[{\"changed\": {\"fields\": [\"desc\"]}}]',15,2),(1259,'2019-09-01 07:34:21.171224','11','3 Quiz Per Day',2,'[{\"changed\": {\"fields\": [\"desc\"]}}]',15,2),(1260,'2019-09-01 07:34:27.227023','12','4 Quiz Per Day',2,'[{\"changed\": {\"fields\": [\"desc\"]}}]',15,2),(1261,'2019-09-01 07:34:33.586613','13','5 Quiz Per Day',2,'[{\"changed\": {\"fields\": [\"desc\"]}}]',15,2),(1262,'2019-09-01 07:34:39.328140','17','6 Quiz Per Day',2,'[{\"changed\": {\"fields\": [\"desc\"]}}]',15,2),(1263,'2019-09-01 07:34:44.866741','18','7 Quiz Per Day',2,'[{\"changed\": {\"fields\": [\"desc\"]}}]',15,2),(1264,'2019-09-01 07:34:50.371879','19','8 Quiz Per Day',2,'[]',15,2),(1265,'2019-09-01 07:34:55.535632','20','9 Quiz Per Day',2,'[{\"changed\": {\"fields\": [\"desc\"]}}]',15,2),(1266,'2019-09-01 07:35:13.188804','1','2 Day Streak',2,'[{\"changed\": {\"fields\": [\"desc\"]}}]',15,2),(1267,'2019-09-01 07:35:18.490271','22','3 Day Streak',2,'[{\"changed\": {\"fields\": [\"desc\"]}}]',15,2),(1268,'2019-09-01 07:35:24.453749','2','4 Day Streak',2,'[{\"changed\": {\"fields\": [\"desc\"]}}]',15,2),(1269,'2019-09-01 07:35:29.819450','13','5 Quiz Per Day',2,'[{\"changed\": {\"fields\": [\"desc\"]}}]',15,2),(1270,'2019-09-01 07:35:39.195544','3','7 Day Streak',2,'[{\"changed\": {\"fields\": [\"desc\"]}}]',15,2),(1271,'2019-09-01 07:35:44.121321','31','8 Day Streak',2,'[{\"changed\": {\"fields\": [\"desc\"]}}]',15,2),(1272,'2019-09-01 07:35:48.980024','32','9 Day Streak',2,'[{\"changed\": {\"fields\": [\"desc\"]}}]',15,2),(1273,'2019-09-01 07:35:56.198843','9','10 Day Streak',2,'[{\"changed\": {\"fields\": [\"desc\"]}}]',15,2),(1274,'2019-09-01 07:54:39.376856','2','  Junior High-36. Advanced Dictionary',2,'[{\"changed\": {\"fields\": [\"name\"]}}]',2,2),(1275,'2019-09-01 08:41:00.668710','9','dayeon2',3,'',9,2),(1276,'2019-09-01 08:55:07.714486','94','0. dayeon3 2019-09-01 right:1',3,'',12,1),(1277,'2019-09-01 08:55:29.909920','3','dayeon3',2,'[{\"changed\": {\"fields\": [\"badges\"]}}]',14,1),(1278,'2019-09-01 21:00:23.975942','84','dayeon 2019-08-30',3,'',12,2),(1279,'2019-09-01 21:00:32.871972','92','70. dayeon 2019-08-31 right:-1',3,'',12,2),(1280,'2019-09-02 00:21:23.031322','15','  1[Range] 13. Range(stop)  07-20 11:03',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(1281,'2019-09-02 00:21:45.482348','16','  1[Range] 14. Range(start, stop)  07-20 14:24',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(1282,'2019-09-02 00:22:17.053293','17','  1[Range] 15. Range(start, stop, step)  07-20 14:27',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(1283,'2019-09-02 00:25:05.021388','17','  1[Range] 15. Range(start, stop, step)  07-20 14:27',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(1284,'2019-09-02 00:36:00.203463','10','dayeon2',3,'',9,2),(1285,'2019-09-02 00:36:00.233836','11','dayeon3',3,'',9,2),(1286,'2019-09-02 00:36:00.235461','12','guest',3,'',9,2),(1287,'2019-09-02 00:36:10.391938','4','guest',3,'',14,2),(1288,'2019-09-02 00:36:10.437577','3','dayeon3',3,'',14,2),(1289,'2019-09-02 03:47:55.965567','80','  3[Advanced For] 79. Mutiply  09-01 20:44',1,'[{\"added\": {}}]',3,2),(1290,'2019-09-02 20:20:53.477927','35','15 Total Quiz',1,'[{\"added\": {}}]',15,2),(1291,'2019-09-02 20:21:31.767980','36','40 Total Quiz',1,'[{\"added\": {}}]',15,2),(1292,'2019-09-02 20:21:55.340120','37','60 Total Quiz',1,'[{\"added\": {}}]',15,2),(1293,'2019-09-02 20:23:53.237367','38','80 Total Quiz',1,'[{\"added\": {}}]',15,2),(1294,'2019-09-02 20:24:14.402606','39','90 Total Quiz',1,'[{\"added\": {}}]',15,2),(1295,'2019-09-02 20:24:52.721187','40','110 Total Quiz',1,'[{\"added\": {}}]',15,2),(1296,'2019-09-02 20:25:28.144652','41','120 Total Quiz',1,'[{\"added\": {}}]',15,2),(1297,'2019-09-02 20:25:46.834897','42','130 Total Quiz',1,'[{\"added\": {}}]',15,2),(1298,'2019-09-02 20:26:05.638836','43','140 Total Quiz',1,'[{\"added\": {}}]',15,2),(1299,'2019-09-02 20:26:31.497325','44','160 Total Quiz',1,'[{\"added\": {}}]',15,2),(1300,'2019-09-02 20:26:48.475127','45','170 Total Quiz',1,'[{\"added\": {}}]',15,2),(1301,'2019-09-02 20:27:05.687864','46','180 Total Quiz',1,'[{\"added\": {}}]',15,2),(1302,'2019-09-02 20:27:22.551176','47','190 Total Quiz',1,'[{\"added\": {}}]',15,2),(1303,'2019-09-02 20:28:19.439771','48','210 Total Quiz',1,'[{\"added\": {}}]',15,2),(1304,'2019-09-02 20:28:36.381430','49','220 Total Quiz',1,'[{\"added\": {}}]',15,2),(1305,'2019-09-02 20:28:52.886147','50','230 Total Quiz',1,'[{\"added\": {}}]',15,2),(1306,'2019-09-02 20:29:08.511376','51','240 Total Quiz',1,'[{\"added\": {}}]',15,2),(1307,'2019-09-02 20:29:39.929410','52','250 Total Quiz',1,'[{\"added\": {}}]',15,2),(1308,'2019-09-02 20:29:57.084141','53','260 Total Quiz',1,'[{\"added\": {}}]',15,2),(1309,'2019-09-02 20:30:15.628273','54','270 Total Quiz',1,'[{\"added\": {}}]',15,2),(1310,'2019-09-02 20:30:36.855102','55','280 Total Quiz',1,'[{\"added\": {}}]',15,2),(1311,'2019-09-02 20:30:52.805824','56','290 Total Quiz',1,'[{\"added\": {}}]',15,2),(1312,'2019-09-02 20:31:10.426075','57','300 Total Quiz',1,'[{\"added\": {}}]',15,2),(1313,'2019-09-03 00:53:43.360371','81','  4[Linked List] 80. Reverse linked list  09-02 17:52',1,'[{\"added\": {}}]',3,2),(1314,'2019-09-03 05:30:14.863519','52','  1[Variable] 9. Variable naming rule  08-07 22:25(52)',2,'[{\"changed\": {\"fields\": [\"video\"]}}]',3,2),(1315,'2019-09-03 06:39:57.379680','96','71. dayeon 2019-09-01 right:1',2,'[{\"changed\": {\"fields\": [\"right\", \"stdout\"]}}]',12,2),(1316,'2019-09-03 06:40:24.102212','78','70. dayeon 2019-08-01 right:1',2,'[{\"changed\": {\"fields\": [\"date\"]}}]',12,2),(1317,'2019-09-03 06:40:46.236084','76','72. dayeon 2019-08-13 right:1',2,'[{\"changed\": {\"fields\": [\"date\"]}}]',12,2),(1318,'2019-09-03 06:40:56.395477','62','65. dayeon 2019-08-24 right:1',2,'[{\"changed\": {\"fields\": [\"date\"]}}]',12,2),(1319,'2019-09-03 06:41:32.712619','62','65. dayeon 2019-08-08 right:1',2,'[{\"changed\": {\"fields\": [\"date\"]}}]',12,2),(1320,'2019-09-03 07:08:36.293092','106','80. Reverse linked list - Node[1, 4, 3, 2, 5] Node[1, 4, 3, 2, 5]',1,'[{\"added\": {}}]',4,2),(1321,'2019-09-03 07:09:38.533508','97','80. dayeon 2019-09-03 right:-2',3,'',12,2),(1322,'2019-09-03 07:09:50.860824','106','80. Reverse linked list - Node[1, 4, 3, 2, 5] Node[5, 2, 3, 4, 1]',2,'[{\"changed\": {\"fields\": [\"expected_answer\"]}}]',4,2),(1323,'2019-09-03 07:11:27.342339','81','  4[Linked List] 80. Reverse linked list  09-02 17:52(81)',2,'[{\"changed\": {\"fields\": [\"answer_header\"]}}]',3,2),(1324,'2019-09-04 01:51:29.109798','74','  1[Operator] 8. Logical Operator  08-29 01:11(74)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(1325,'2019-09-04 01:53:14.513255','74','  1[Operator] 8. Logical Operator  08-29 01:11(74)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(1326,'2019-09-04 01:53:44.470704','74','  1[Operator] 8. Logical Operator  08-29 01:11(74)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(1327,'2019-09-04 01:54:09.852109','74','  1[Operator] 8. Logical Operator  08-29 01:11(74)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(1328,'2019-09-04 01:56:49.873106','74','  1[Operator] 8. Logical Operator  08-29 01:11(74)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(1329,'2019-09-04 02:13:05.988370','74','  1[Operator] 8. Logical Operator  08-29 01:11(74)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(1330,'2019-09-04 06:20:47.595267','74','  1[Operator] 8. Logical Operator  08-29 01:11(74)',2,'[{\"changed\": {\"fields\": [\"video\"]}}]',3,2),(1331,'2019-09-04 06:21:27.492223','74','  1[Operator] 8. Logical Operator  08-29 01:11(74)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(1332,'2019-09-04 06:21:55.789046','74','  1[Operator] 8. Logical Operator  08-29 01:11(74)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(1333,'2019-09-04 06:33:31.600859','74','  1[Operator] 8. Logical Operator  08-29 01:11(74)',2,'[{\"changed\": {\"fields\": [\"video\"]}}]',3,2),(1334,'2019-09-04 06:54:14.611172','16','  Super Junior-15. If',2,'[{\"changed\": {\"fields\": [\"visible\"]}}]',2,2),(1335,'2019-09-04 07:32:40.700527','82','  1[If] 81. If concept  09-04 00:19(82)',1,'[{\"added\": {}}]',3,2),(1336,'2019-09-04 07:32:55.454874','107','81. If concept -  3',1,'[{\"added\": {}}]',4,2),(1337,'2019-09-04 07:37:51.802140','12','  Super Junior-10. DataType',2,'[{\"changed\": {\"fields\": [\"desc\"]}}]',2,2),(1338,'2019-09-04 07:46:26.850929','82','  1[If] 16. If concept  09-04 00:19(82)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(1339,'2019-09-04 07:54:59.357643','1','Super Junior',2,'[{\"changed\": {\"fields\": [\"desc\"]}}]',13,2),(1340,'2019-09-04 07:59:10.891738','46','  3[Math] 72. Sum of external angle  08-05 18:27(46)',2,'[]',3,2),(1341,'2019-09-04 07:59:23.237742','46','  3[Math] 72. Sum of external angle  08-05 18:27(46)',2,'[]',3,2),(1342,'2019-09-04 07:59:46.729586','46','  3[Math] 72. Sum of external angle  08-05 18:27(46)',2,'[]',3,2),(1343,'2019-09-06 01:03:29.654708','82','  1[If] 16. If concept  09-04 00:19(82)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(1344,'2019-09-06 05:43:09.838675','72','  1[Operator] 6. Relational Operator  08-28 23:18(72)',2,'[{\"changed\": {\"fields\": [\"video\"]}}]',3,2),(1345,'2019-09-07 03:43:13.251344','82','  1[If] 16. If concept  09-04 00:19(82)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(1346,'2019-09-07 03:44:17.952401','82','  1[If] 16. If concept  09-04 00:19(82)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(1347,'2019-09-07 04:07:33.947560','82','  1[If] 16. If concept  09-04 00:19(82)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(1348,'2019-09-07 04:35:36.101313','82','  1[If] 16. If concept  09-04 00:19(82)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(1349,'2019-09-07 04:51:36.203013','82','  1[If] 16. If concept  09-04 00:19(82)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(1350,'2019-09-07 04:52:12.885435','98','16. dayeon 2019-09-06 right:1',3,'',12,2),(1351,'2019-09-07 07:49:51.801427','82','  1[If] 16. If concept  09-04 00:19(82)',2,'[{\"changed\": {\"fields\": [\"video\"]}}]',3,2),(1352,'2019-09-08 03:42:39.760197','70','  1[DataType] 2. Set, Dictionary  08-25 20:48(70)',2,'[{\"changed\": {\"fields\": [\"score\"]}}]',3,2),(1353,'2019-09-08 03:58:20.916638','20','15. dayeon 2019-07-19 right:1',3,'',12,2),(1354,'2019-09-08 03:58:21.077329','19','14. dayeon 2019-07-07 right:1',3,'',12,2),(1355,'2019-09-08 03:58:21.079259','18','13. dayeon 2019-07-10 right:1',3,'',12,2),(1356,'2019-09-08 03:58:21.080702','16','12. dayeon 2019-07-15 right:1',3,'',12,2),(1357,'2019-09-08 04:01:11.146902','15','  1[Range] 12. Range(stop)  07-20 11:03(15)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(1358,'2019-09-08 04:02:38.171771','16','  1[Range] 13. Range(start, stop)  07-20 14:24(16)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(1359,'2019-09-08 04:03:07.293555','15','  1[Range] 12. Range(stop)  07-20 11:03(15)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(1360,'2019-09-08 04:03:39.283752','17','  1[Range] 14. Range(start, stop, step)  07-20 14:27(17)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(1361,'2019-09-08 04:04:02.989234','16','  1[Range] 13. Range(start, stop)  07-20 14:24(16)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(1362,'2019-09-08 21:20:09.356890','83','  1[While] 82. While basic  09-08 14:11(83)',1,'[{\"added\": {}}]',3,2),(1363,'2019-09-08 21:20:19.920755','108','82. While basic -  4',1,'[{\"added\": {}}]',4,2),(1364,'2019-09-08 21:23:08.108162','83','  1[While] 82. While basic  09-08 14:11(83)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(1365,'2019-09-08 23:59:47.075119','83','  1[While] 19. While basic  09-08 14:11(83)',2,'[{\"changed\": {\"fields\": [\"question\"]}}]',3,2),(1366,'2019-09-09 00:01:45.143907','78','  1[While] 20. While  08-30 21:42(78)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(1367,'2019-09-09 00:06:44.672818','83','  1[While] 19. While concept  09-08 14:11(83)',2,'[{\"changed\": {\"fields\": [\"title\", \"explanation\"]}}]',3,2),(1368,'2019-09-09 00:27:32.397700','78','  1[While] 20. Break  08-30 21:42(78)',2,'[{\"changed\": {\"fields\": [\"title\", \"explanation\", \"example\", \"option1\", \"option2\", \"option3\", \"option4\"]}}]',3,2),(1369,'2019-09-09 00:29:29.767563','78','  1[While] 20. Break  08-30 21:42(78)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(1370,'2019-09-09 00:32:53.107597','78','  1[While] 20. Break  08-30 21:42(78)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(1371,'2019-09-09 00:33:05.976931','78','  1[While] 20. Break  08-30 21:42(78)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(1372,'2019-09-09 00:40:53.682605','20','  1[While] 21. Continue  07-21 00:09(20)',2,'[{\"changed\": {\"fields\": [\"title\", \"explanation\", \"example\"]}}]',3,2),(1373,'2019-09-09 00:41:18.020332','22','21. Continue -  12',2,'[{\"changed\": {\"fields\": [\"expected_answer\"]}}]',4,2),(1374,'2019-09-09 00:42:42.923433','15','  1[Range] 12. Range(stop)  07-20 11:03(15)',2,'[{\"changed\": {\"fields\": [\"example\"]}}]',3,2),(1375,'2019-09-09 00:43:01.239719','16','  1[Range] 13. Range(start, stop)  07-20 14:24(16)',2,'[{\"changed\": {\"fields\": [\"example\"]}}]',3,2),(1376,'2019-09-09 00:43:23.393511','17','  1[Range] 14. Range(start, stop, step)  07-20 14:27(17)',2,'[{\"changed\": {\"fields\": [\"example\"]}}]',3,2),(1377,'2019-09-09 00:44:33.679480','15','  1[Range] 12. Range(stop)  07-20 11:03(15)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(1378,'2019-09-09 00:44:49.417693','15','  1[Range] 12. Range(stop)  07-20 11:03(15)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(1379,'2019-09-09 00:45:02.005844','16','  1[Range] 13. Range(start, stop)  07-20 14:24(16)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(1380,'2019-09-09 00:45:10.302348','17','  1[Range] 14. Range(start, stop, step)  07-20 14:27(17)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(1381,'2019-09-09 00:48:40.805849','83','  1[While] 19. While concept  09-08 14:11(83)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(1382,'2019-09-09 00:51:53.535957','83','  1[While] 19. While concept  09-08 14:11(83)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(1383,'2019-09-09 00:54:11.858409','41','  1[DataType] 3. Data type summary  08-03 10:15(41)',2,'[{\"changed\": {\"fields\": [\"title\"]}}]',3,2),(1384,'2019-09-09 00:55:05.779908','41','  1[DataType] 3. Invalid data type  08-03 10:15(41)',2,'[{\"changed\": {\"fields\": [\"title\"]}}]',3,2),(1385,'2019-09-09 00:55:33.842355','42','  1[DataType] 4. Invalid list data type  08-03 20:47(42)',2,'[{\"changed\": {\"fields\": [\"title\"]}}]',3,2),(1386,'2019-09-09 00:59:29.505038','10','  Super Junior-14. Range',2,'[{\"changed\": {\"fields\": [\"desc\"]}}]',2,2),(1387,'2019-09-09 00:59:50.768754','12','  Super Junior-10. DataType',2,'[{\"changed\": {\"fields\": [\"desc\"]}}]',2,2),(1388,'2019-09-09 01:00:54.153877','13','  Super Junior-11. Operator',2,'[{\"changed\": {\"fields\": [\"desc\"]}}]',2,2),(1389,'2019-09-09 01:01:05.514879','14','  Super Junior-12. Variable',2,'[{\"changed\": {\"fields\": [\"desc\"]}}]',2,2),(1390,'2019-09-09 01:01:15.048822','15','  Super Junior-13. Print',2,'[{\"changed\": {\"fields\": [\"desc\"]}}]',2,2),(1391,'2019-09-09 07:08:58.039397','5','  Super Junior-17. While',2,'[{\"changed\": {\"fields\": [\"desc\"]}}]',2,2),(1392,'2019-09-09 07:21:27.686202','32','  1[DataType] 1. List, Tuple  07-28 23:11(32)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(1393,'2019-09-09 07:26:29.311356','84','  2[Function] 83. Function Concept  09-09 00:11(84)',1,'[{\"added\": {}}]',3,2),(1394,'2019-09-09 07:26:41.929614','109','83. Function Concept -  print_world()',1,'[{\"added\": {}}]',4,2),(1395,'2019-09-09 07:30:09.184104','84','  2[Function] 34. Function Concept  09-09 00:11(84)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(1396,'2019-09-09 07:38:42.150607','85','  2[Function] 84. Parameter  09-09 00:28(85)',1,'[{\"added\": {}}]',3,2),(1397,'2019-09-09 07:38:53.462475','110','84. Parameter -  10',1,'[{\"added\": {}}]',4,2),(1398,'2019-09-09 07:42:27.534685','85','  2[Function] 35. Parameter  09-09 00:28(85)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(1399,'2019-09-09 07:59:54.375298','86','  2[Function] 85. Return  09-09 00:49(86)',1,'[{\"added\": {}}]',3,2),(1400,'2019-09-09 08:00:27.964787','111','36. Return -  24',1,'[{\"added\": {}}]',4,2),(1401,'2019-09-09 08:02:33.105405','86','  2[Function] 36. Return  09-09 00:49(86)',2,'[{\"changed\": {\"fields\": [\"explanation\", \"example\"]}}]',3,2),(1402,'2019-09-10 04:11:16.405545','104','15. dayeon 2019-09-08 right:1',3,'',12,2),(1403,'2019-09-10 04:11:16.535108','103','14. dayeon 2019-09-08 right:1',3,'',12,2),(1404,'2019-09-10 04:11:16.536556','102','13. dayeon 2019-09-08 right:1',3,'',12,2),(1405,'2019-09-10 04:11:16.537571','101','12. dayeon 2019-09-08 right:1',3,'',12,2),(1406,'2019-09-10 08:14:45.331691','106','70.  2019-09-10 right:0',3,'',12,2),(1407,'2019-09-10 08:16:07.848191','105','12. dayeon 2019-09-08 right:1',2,'[{\"changed\": {\"fields\": [\"date\"]}}]',12,2),(1408,'2019-09-10 08:16:12.188401','107','13. dayeon 2019-09-08 right:1',2,'[{\"changed\": {\"fields\": [\"date\"]}}]',12,2),(1409,'2019-09-10 08:16:16.527210','108','14. dayeon 2019-09-08 right:1',2,'[{\"changed\": {\"fields\": [\"date\"]}}]',12,2),(1410,'2019-09-10 08:16:20.388526','109','15. dayeon 2019-09-08 right:1',2,'[{\"changed\": {\"fields\": [\"date\"]}}]',12,2),(1411,'2019-09-10 08:18:02.048624','15','  1[Range] 12. Range(stop)  07-20 11:03(15)',2,'[{\"changed\": {\"fields\": [\"video\"]}}]',3,2),(1412,'2019-09-11 03:39:29.784139','83','  1[While] 19. While concept  09-08 14:11(83)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(1413,'2019-09-11 09:04:59.615644','83','  1[While] 19. While concept  09-08 14:11(83)',2,'[{\"changed\": {\"fields\": [\"video\"]}}]',3,2),(1414,'2019-09-12 04:50:28.176798','5','guests',3,'',14,2),(1415,'2019-09-12 04:50:46.966269','13','guests',3,'',9,2),(1416,'2019-09-13 00:12:37.332136','84','  2[Function] 34. Function Concept  09-09 00:11(84)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(1417,'2019-09-13 02:16:14.608370','84','  2[Function] 34. Function Concept  09-09 00:11(84)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(1418,'2019-09-13 02:16:36.297498','85','  2[Function] 35. Parameter  09-09 00:28(85)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(1419,'2019-09-13 03:47:26.478914','86','  2[Function] 36. Return  09-09 00:49(86)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(1420,'2019-09-13 06:30:10.891565','77','  1[For] 17. For concept  08-30 21:12(77)',2,'[{\"changed\": {\"fields\": [\"video\", \"explanation\"]}}]',3,2),(1421,'2019-09-13 06:39:25.866925','84','  2[Function] 34. Function Concept  09-09 00:11(84)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(1422,'2019-09-15 02:11:21.711295','84','  2[Function] 34. Function Concept  09-09 00:11(84)',2,'[{\"changed\": {\"fields\": [\"video\"]}}]',3,2),(1423,'2019-09-18 02:44:41.512092','39','  3[Math] 73. Power of two  08-02 02:56(39)',2,'[{\"changed\": {\"fields\": [\"title\"]}}]',3,2),(1424,'2019-09-18 02:45:36.046820','10','  3[Math] 69. Multiply two numbers  07-18 02:52(10)',2,'[{\"changed\": {\"fields\": [\"title\"]}}]',3,2),(1425,'2019-09-18 02:51:13.891626','64','  3[Advanced String] 66. String transformation  08-18 19:47(64)',2,'[{\"changed\": {\"fields\": [\"title\"]}}]',3,2),(1426,'2019-09-18 02:52:11.601305','75','  3[Advanced List] 63. Split an array into two with equal sum  08-29 21:53(75)',2,'[{\"changed\": {\"fields\": [\"title\"]}}]',3,2),(1427,'2019-09-18 02:53:11.253980','60','  3[Advanced List] 60. Sum of the numbers  08-15 21:15(60)',2,'[{\"changed\": {\"fields\": [\"title\"]}}]',3,2),(1428,'2019-09-18 02:54:04.991874','48','  3[Advanced List] 56. Common value between two lists  08-05 18:30(48)',2,'[{\"changed\": {\"fields\": [\"title\"]}}]',3,2),(1429,'2019-09-18 02:54:43.533468','47','  3[Advanced List] 55. How many number less than k  08-05 18:28(47)',2,'[{\"changed\": {\"fields\": [\"title\"]}}]',3,2),(1430,'2019-09-18 02:54:56.794659','27','  3[Advanced List] 53. Missing number  07-25 21:31(27)',2,'[{\"changed\": {\"fields\": [\"title\"]}}]',3,2),(1431,'2019-09-18 02:55:55.338212','14','  4[Stack] 80. Reverse a list with stack  07-19 11:55(14)',2,'[{\"changed\": {\"fields\": [\"title\"]}}]',3,2),(1432,'2019-09-18 02:56:10.421476','14','  4[Stack] 80. Reverse a list using stack  07-19 11:55(14)',2,'[{\"changed\": {\"fields\": [\"title\"]}}]',3,2),(1433,'2019-09-18 02:57:55.802720','12','  3[Advanced List] 48. Swap elements 2  07-18 19:03(12)',2,'[{\"changed\": {\"fields\": [\"title\"]}}]',3,2),(1434,'2019-09-18 02:59:28.056333','25','  2[Class] 39. Find the error about class  07-22 20:28(25)',2,'[{\"changed\": {\"fields\": [\"title\"]}}]',3,2),(1435,'2019-09-18 02:59:51.214216','24','  2[Class] 38. Class and Object  07-22 20:23(24)',2,'[{\"changed\": {\"fields\": [\"title\"]}}]',3,2),(1436,'2019-09-18 03:01:10.638526','84','  2[Function] 34. Function  09-09 00:11(84)',2,'[{\"changed\": {\"fields\": [\"title\"]}}]',3,2),(1437,'2019-09-18 03:02:35.706012','31','  2[List] 32. Split a list by even and odd values  07-27 22:42(31)',2,'[{\"changed\": {\"fields\": [\"title\"]}}]',3,2),(1438,'2019-09-18 03:03:34.057481','4','  2[List] 31. Find the same value as the index  07-18 02:46(4)',2,'[{\"changed\": {\"fields\": [\"title\"]}}]',3,2),(1439,'2019-09-18 03:04:34.136547','6','  2[List] 30. Insert into List  07-18 02:48(6)',2,'[{\"changed\": {\"fields\": [\"title\"]}}]',3,2),(1440,'2019-09-18 03:04:45.261602','62','  2[List] 29. Append to List  08-17 12:43(62)',2,'[{\"changed\": {\"fields\": [\"title\"]}}]',3,2),(1441,'2019-09-18 03:06:14.205808','56','  2[String] 27. Join strings  08-09 16:25(56)',2,'[{\"changed\": {\"fields\": [\"title\", \"explanation\"]}}]',3,2),(1442,'2019-09-18 03:06:40.103703','55','  2[String] 26. Split a string  08-09 15:03(55)',2,'[{\"changed\": {\"fields\": [\"title\"]}}]',3,2),(1443,'2019-09-18 03:08:04.823390','83','  1[While] 19. While  09-08 14:11(83)',2,'[{\"changed\": {\"fields\": [\"title\"]}}]',3,2),(1444,'2019-09-18 03:09:02.923870','19','  1[While] 22. Sum using While  07-21 00:00(19)',2,'[{\"changed\": {\"fields\": [\"title\"]}}]',3,2),(1445,'2019-09-18 03:09:18.943041','1','  1[For] 18. Sum using For  07-17 02:33(1)',2,'[{\"changed\": {\"fields\": [\"title\"]}}]',3,2),(1446,'2019-09-18 03:09:28.852659','77','  1[For] 17. For  08-30 21:12(77)',2,'[{\"changed\": {\"fields\": [\"title\"]}}]',3,2),(1447,'2019-09-18 03:09:39.372547','82','  1[If] 16. If  09-04 00:19(82)',2,'[{\"changed\": {\"fields\": [\"title\"]}}]',3,2),(1448,'2019-09-18 03:10:09.049667','36','  1[Print] 11. Print  08-01 00:45(36)',2,'[{\"changed\": {\"fields\": [\"title\"]}}]',3,2),(1449,'2019-09-18 03:10:44.907411','70','  1[DataType] 2. Set and Dictionary  08-25 20:48(70)',2,'[{\"changed\": {\"fields\": [\"title\"]}}]',3,2),(1450,'2019-09-18 03:11:19.009159','32','  1[DataType] 1. List and Tuple  07-28 23:11(32)',2,'[{\"changed\": {\"fields\": [\"title\"]}}]',3,2),(1451,'2019-09-18 03:12:20.942832','19','  1[While] 22. Sum function using While  07-21 00:00(19)',2,'[{\"changed\": {\"fields\": [\"title\"]}}]',3,2),(1452,'2019-09-18 03:12:30.267125','1','  1[For] 18. Sum function using For  07-17 02:33(1)',2,'[{\"changed\": {\"fields\": [\"title\"]}}]',3,2),(1453,'2019-09-18 03:25:18.778459','47','  3[Advanced List] 55. How many numbers less than k  08-05 18:28(47)',2,'[{\"changed\": {\"fields\": [\"title\"]}}]',3,2),(1454,'2019-09-18 07:27:09.359113','17','  1[Range] 14. Range with start, stop, step  07-20 14:27(17)',2,'[{\"changed\": {\"fields\": [\"title\"]}}]',3,2),(1455,'2019-09-18 07:27:19.529508','16','  1[Range] 13. Range with start, stop  07-20 14:24(16)',2,'[{\"changed\": {\"fields\": [\"title\"]}}]',3,2),(1456,'2019-09-18 07:27:32.824578','15','  1[Range] 12. Range  07-20 11:03(15)',2,'[{\"changed\": {\"fields\": [\"title\"]}}]',3,2),(1457,'2019-09-18 08:07:48.948861','17','  1[Range] 14. Range with step  07-20 14:27(17)',2,'[{\"changed\": {\"fields\": [\"title\"]}}]',3,2),(1458,'2019-09-18 08:08:02.126070','16','  1[Range] 13. Range with start  07-20 14:24(16)',2,'[{\"changed\": {\"fields\": [\"title\"]}}]',3,2),(1459,'2019-09-19 03:57:06.990418','69','58. Swap the values - [3, 4, 5, 6, 7, 8, 9]\r\n2\r\n5 [3, 4, 5, 9, 8, 7, 6]',2,'[{\"changed\": {\"fields\": [\"test\"]}}]',4,2),(1460,'2019-09-19 03:57:15.053073','70','58. Swap the values - [1, 2, 3, 4, 5]\r\n1\r\n4 [1, 5, 4, 3, 2]',2,'[{\"changed\": {\"fields\": [\"test\"]}}]',4,2),(1461,'2019-09-19 05:54:11.621202','80','  3[Advanced For] 42. Multiply  09-01 20:44(80)',2,'[{\"changed\": {\"fields\": [\"title\"]}}]',3,2),(1462,'2019-09-19 05:55:20.058652','112','42. Multiply - 5 120',1,'[{\"added\": {}}]',4,2),(1463,'2019-09-19 06:56:27.089090','113','48. Swap elements 2 - abccbbd b',1,'[{\"added\": {}}]',4,2),(1464,'2019-09-19 06:57:39.309137','114','41. Duplicated number - [1, 3, 5, 3] True',1,'[{\"added\": {}}]',4,2),(1465,'2019-09-19 06:57:51.751195','115','41. Duplicated number - [1, 4, 6] False',1,'[{\"added\": {}}]',4,2),(1466,'2019-09-19 07:18:45.851950','15','PyPyKids',2,'[{\"changed\": {\"fields\": [\"is_staff\", \"is_superuser\"]}}]',9,2),(1467,'2019-09-19 07:18:52.789887','16','admin',2,'[{\"changed\": {\"fields\": [\"is_staff\", \"is_superuser\"]}}]',9,2),(1468,'2019-09-20 01:18:22.756909','18','  1[Range] 15. Range summary  07-20 14:33(18)',2,'[{\"changed\": {\"fields\": [\"question\", \"example\", \"quiz_type\", \"option1\", \"option2\", \"option3\", \"option4\"]}}]',3,2),(1469,'2019-09-20 01:18:43.900866','18','  1[Range] 15. Range summary  07-20 14:33(18)',2,'[{\"changed\": {\"fields\": [\"question\"]}}]',3,2),(1470,'2019-09-20 01:33:22.751501','20','15. Range summary -  ',2,'[{\"changed\": {\"fields\": [\"expected_output\", \"expected_stdout\"]}}]',4,2),(1471,'2019-09-20 03:30:54.140210','20','15. Range summary -  ',2,'[{\"changed\": {\"fields\": [\"expected_stdout\"]}}]',4,2),(1472,'2019-09-20 03:31:52.981008','82','  1[If] 16. If  09-04 00:19(82)',2,'[{\"changed\": {\"fields\": [\"score\"]}}]',3,2),(1473,'2019-09-20 03:42:33.035208','122','17. admin 2019-09-19 right:1',3,'',12,2),(1474,'2019-09-20 03:42:33.145202','121','9. admin 2019-09-19 right:1',3,'',12,2),(1475,'2019-09-20 03:42:33.147656','120','11. admin 2019-09-19 right:1',3,'',12,2),(1476,'2019-09-20 03:42:33.148746','119','5. admin 2019-09-19 right:1',3,'',12,2),(1477,'2019-09-20 03:42:33.150173','118','47. admin 2019-09-19 right:1',3,'',12,2),(1478,'2019-09-20 03:42:33.151100','117','55. admin 2019-09-19 right:-1',3,'',12,2),(1479,'2019-09-20 03:42:33.152836','116','48. admin 2019-09-19 right:-1',3,'',12,2),(1480,'2019-09-20 03:42:33.154566','115','10. admin 2019-09-19 right:1',3,'',12,2),(1481,'2019-09-20 03:42:33.155434','114','1. admin 2019-09-19 right:1',3,'',12,2),(1482,'2019-09-20 03:42:33.156222','113','0. admin 2019-09-19 right:1',3,'',12,2),(1483,'2019-09-20 04:14:59.235404','126','16. None 2019-09-19 right:1',3,'',12,16),(1484,'2019-09-20 04:14:59.396728','125','16. None 2019-09-19 right:1',3,'',12,16),(1485,'2019-09-20 04:14:59.400082','124','0. None 2019-09-19 right:1',3,'',12,16),(1486,'2019-09-20 04:14:59.401793','123','0. None 2019-09-19 right:-1',3,'',12,16),(1487,'2019-09-20 04:19:02.763549','127','16. None 2019-09-19 right:0',3,'',12,16),(1488,'2019-09-21 01:05:27.486191','55','  2[String] 26. Split a string  08-09 15:03(55)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,1),(1489,'2019-09-21 01:31:12.461971','32','  1[DataType] 1. List and Tuple  07-28 23:11(32)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,1),(1490,'2019-09-21 01:32:28.258651','26','  1[DataType] 0. Basic data type  07-22 23:03(26)',2,'[{\"changed\": {\"fields\": [\"question\"]}}]',3,1),(1491,'2019-09-21 17:36:02.239550','61','  2[List] 28. Manage List  08-17 01:35(61)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(1492,'2019-09-21 17:58:01.899445','61','  2[List] 28. Manage List  08-17 01:35(61)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(1493,'2019-09-21 18:02:24.567648','61','  2[List] 28. Manage List  08-17 01:35(61)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(1494,'2019-09-21 18:22:29.149936','61','  2[List] 28. Manage List  08-17 01:35(61)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(1495,'2019-09-21 18:30:41.713029','87','  2[Set] 86. Set  09-21 11:02(87)',1,'[{\"added\": {}}]',3,2),(1496,'2019-09-21 18:31:02.180649','116','86. Set -  ',1,'[{\"added\": {}}]',4,2),(1497,'2019-09-21 18:32:50.661245','87','  2[Set] 33. Set  09-21 11:02(87)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(1498,'2019-09-21 18:38:36.354745','77','  1[For] 17. For  08-30 21:12(77)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(1499,'2019-09-22 01:45:49.826577','87','  2[Set] 33. Set  09-21 11:02(87)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(1500,'2019-09-22 08:57:49.500191','87','  2[Set] 33. Set  09-21 11:02(87)',2,'[{\"changed\": {\"fields\": [\"video\"]}}]',3,16),(1501,'2019-09-23 01:33:07.513369','27','0. (26)dayeon 2019-07-25 right:1',3,'',12,2),(1502,'2019-09-23 01:34:10.670150','145','81. (14)None 2019-09-20 right:0',3,'',12,2),(1503,'2019-09-23 01:34:10.835217','144','81. (14)None 2019-09-20 right:0',3,'',12,2),(1504,'2019-09-23 01:34:10.836104','143','81. (14)None 2019-09-20 right:0',3,'',12,2),(1505,'2019-09-23 02:45:36.367203','1','  1[For] 18. Sum function using For  07-17 02:33(1)',2,'[{\"changed\": {\"fields\": [\"example\"]}}]',3,2),(1506,'2019-09-23 02:47:23.211053','3','  2[String] 25. String concatenation  07-18 02:45(3)',2,'[{\"changed\": {\"fields\": [\"example\"]}}]',3,2),(1507,'2019-09-23 04:02:04.973567','88','  1[If] 87. If Else  09-22 20:59(88)',1,'[{\"added\": {}}]',3,2),(1508,'2019-09-23 04:02:22.306905','117','87. If Else -  False',1,'[{\"added\": {}}]',4,2),(1509,'2019-09-23 04:03:21.781008','88','  1[If] 87. If Else  09-22 20:59(88)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,16),(1510,'2019-09-23 04:05:08.466698','89','  1[If] 88. If Elif Else  09-22 21:03(89)',1,'[{\"added\": {}}]',3,16),(1511,'2019-09-23 04:05:17.573534','118','88. If Elif Else -  3',1,'[{\"added\": {}}]',4,16),(1512,'2019-09-23 04:06:15.579162','82','  1[If] 16. If  09-04 00:19(82)',2,'[{\"changed\": {\"fields\": [\"explanation\", \"example\", \"option1\", \"option2\", \"option3\", \"option4\"]}}]',3,16),(1513,'2019-09-23 04:12:26.749816','90','  1[For] 89. For 2  09-22 21:09(90)',1,'[{\"added\": {}}]',3,16),(1514,'2019-09-23 04:12:37.635531','119','89. For 2 -  4',1,'[{\"added\": {}}]',4,16),(1515,'2019-09-23 04:14:39.070957','77','  1[For] 19. For  08-30 21:12(77)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,16),(1516,'2019-09-23 04:15:24.884041','89','  1[If] 18. If Elif Else  09-22 21:03(89)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,16),(1517,'2019-09-23 04:15:52.880811','88','  1[If] 17. If Else  09-22 20:59(88)',2,'[{\"changed\": {\"fields\": [\"example\"]}}]',3,16),(1518,'2019-09-23 04:16:58.891614','90','  1[For] 20. For in string  09-22 21:09(90)',2,'[{\"changed\": {\"fields\": [\"title\"]}}]',3,16),(1519,'2019-09-23 04:21:57.324334','1','  1[For] 21. Sum using For  07-17 02:33(1)',2,'[{\"changed\": {\"fields\": [\"title\"]}}]',3,16),(1520,'2019-09-23 04:22:15.740121','19','  1[While] 25. Sum using While  07-21 00:00(19)',2,'[{\"changed\": {\"fields\": [\"title\"]}}]',3,16),(1521,'2019-09-23 04:24:30.516623','19','  1[While] 25. Sum using While  07-21 00:00(19)',2,'[]',3,16),(1522,'2019-09-23 05:07:29.211193','91','  2[List] 90. Sum of odd numbers  09-22 21:45(91)',1,'[{\"added\": {}}]',3,16),(1523,'2019-09-23 05:07:44.673423','120','90. Sum of odd numbers - [2, 4, 5, 6, 7] 12',1,'[{\"added\": {}}]',4,16),(1524,'2019-09-23 07:35:35.294897','62','  2[List] 32. Append  08-17 12:43(62)',2,'[{\"changed\": {\"fields\": [\"title\", \"explanation\"]}}]',3,16),(1525,'2019-09-23 07:36:30.695143','61','  2[List] 31. Manage List  08-17 01:35(61)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,16),(1526,'2019-09-23 07:42:36.075982','6','  2[List] 33. Insert  07-18 02:48(6)',2,'[{\"changed\": {\"fields\": [\"title\", \"explanation\"]}}]',3,16),(1527,'2019-09-23 07:43:08.920510','6','  2[List] 33. Insert  07-18 02:48(6)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,16),(1528,'2019-09-23 07:43:29.408840','6','  2[List] 33. Insert  07-18 02:48(6)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,16),(1529,'2019-09-23 07:43:48.266234','6','  2[List] 33. Insert  07-18 02:48(6)',2,'[{\"changed\": {\"fields\": [\"example\"]}}]',3,16),(1530,'2019-09-23 07:46:02.434751','13','  3[Advanced List] 54. Reverse a list  07-18 19:20(13)',2,'[{\"changed\": {\"fields\": [\"example\"]}}]',3,16),(1531,'2019-09-23 07:47:08.791352','61','  2[List] 31. List  08-17 01:35(61)',2,'[{\"changed\": {\"fields\": [\"title\"]}}]',3,16),(1532,'2019-09-23 07:50:42.832228','61','  2[List] 31. List  08-17 01:35(61)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,16),(1533,'2019-09-23 07:51:13.055460','61','  2[List] 31. List  08-17 01:35(61)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,16),(1534,'2019-09-23 07:51:48.539059','32','  1[DataType] 1. List and Tuple  07-28 23:11(32)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,16),(1535,'2019-09-23 07:52:25.940044','32','  1[DataType] 1. List and Tuple  07-28 23:11(32)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,16),(1536,'2019-09-23 07:53:17.221852','26','  1[DataType] 0. Basic data type  07-22 23:03(26)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,16),(1537,'2019-09-23 07:53:50.720921','26','  1[DataType] 0. Basic data type  07-22 23:03(26)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,16),(1538,'2019-09-23 07:54:36.749404','70','  1[DataType] 2. Set and Dictionary  08-25 20:48(70)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,16),(1539,'2019-09-23 07:55:34.712711','26','  1[DataType] 0. Basic data type  07-22 23:03(26)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,16),(1540,'2019-09-23 07:55:53.912743','32','  1[DataType] 1. List and Tuple  07-28 23:11(32)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,16),(1541,'2019-09-23 07:57:00.084885','77','  1[For] 19. For  08-30 21:12(77)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,16),(1542,'2019-09-23 07:59:48.006296','7','  2[Set] 38. Exist  07-18 02:49(7)',2,'[{\"changed\": {\"fields\": [\"title\", \"explanation\"]}}]',3,16),(1543,'2019-09-23 08:00:21.952597','7','  2[Set] 38. Exist  07-18 02:49(7)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,16),(1544,'2019-09-23 08:02:25.671846','92','  2[Set] 91. Length  09-23 01:00(92)',1,'[{\"added\": {}}]',3,16),(1545,'2019-09-23 08:02:39.812935','121','91. Length - {1, 2, 3, 4, 5} 5',1,'[{\"added\": {}}]',4,16),(1546,'2019-09-23 08:07:09.844767','93','  2[Set] 92. Union  09-23 01:05(93)',1,'[{\"added\": {}}]',3,16),(1547,'2019-09-23 08:07:28.405404','122','92. Union - {1, 2, 3}, {3, 4, 5} {1, 2, 3, 4, 5}',1,'[{\"added\": {}}]',4,16),(1548,'2019-09-23 08:10:00.027257','87','  2[Set] 37. Set  09-21 11:02(87)',2,'[{\"changed\": {\"fields\": [\"explanation\", \"question\", \"example\", \"answer_header\"]}}]',3,16),(1549,'2019-09-23 08:10:21.251376','116','37. Set - {1, 2, 3, 5, 6} {1, 2, 3, 4, 5, 6}',2,'[{\"changed\": {\"fields\": [\"input\", \"expected_output\", \"expected_stdout\"]}}]',4,16),(1550,'2019-09-23 08:10:56.969079','87','  2[Set] 37. Set  09-21 11:02(87)',2,'[{\"changed\": {\"fields\": [\"question\"]}}]',3,16),(1551,'2019-09-23 08:11:19.005753','7','  2[Set] 38. Set exist  07-18 02:49(7)',2,'[{\"changed\": {\"fields\": [\"title\"]}}]',3,16),(1552,'2019-09-23 08:12:06.458619','92','  2[Set] 39. Set length  09-23 01:00(92)',2,'[{\"changed\": {\"fields\": [\"title\"]}}]',3,16),(1553,'2019-09-23 08:12:27.327871','62','  2[List] 32. Append to List  08-17 12:43(62)',2,'[{\"changed\": {\"fields\": [\"title\"]}}]',3,16),(1554,'2019-09-23 08:12:36.150905','6','  2[List] 33. Insert into List  07-18 02:48(6)',2,'[{\"changed\": {\"fields\": [\"title\"]}}]',3,16),(1555,'2019-09-23 08:13:09.969734','93','  2[Set] 40. Set Union  09-23 01:05(93)',2,'[{\"changed\": {\"fields\": [\"title\"]}}]',3,16),(1556,'2019-09-23 08:14:47.878262','87','  2[Set] 37. Set  09-21 11:02(87)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,16),(1557,'2019-09-23 08:37:14.702342','122','40. Set Union - {1, 2, 3}, {3, 4, 5} {1, 2, 3, 4, 5}',2,'[]',4,16),(1558,'2019-09-23 08:37:57.813011','87','  2[Set] 37. Set  09-21 11:02(87)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,16),(1559,'2019-09-23 08:38:32.352533','87','  2[Set] 37. Set  09-21 11:02(87)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,16),(1560,'2019-09-23 08:39:13.316604','87','  2[Set] 37. Set  09-21 11:02(87)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,16),(1561,'2019-09-23 08:40:41.444605','70','  1[DataType] 2. Set and Dictionary  08-25 20:48(70)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,16),(1562,'2019-09-23 08:41:38.664136','70','  1[DataType] 2. Set and Dictionary  08-25 20:48(70)',2,'[]',3,16),(1563,'2019-09-24 01:16:55.215779','94','  3[Math] 93. Average  09-23 18:14(94)',1,'[{\"added\": {}}]',3,2),(1564,'2019-09-24 01:17:26.262429','123','93. Average - [1, 2, 4, 5, 6] 3.6',1,'[{\"added\": {}}]',4,2),(1565,'2019-09-24 01:49:01.708125','95','  1[Operator] 94. Logical Operator - And  09-23 18:36(95)',1,'[{\"added\": {}}]',3,2),(1566,'2019-09-24 01:49:14.589942','124','94. Logical Operator - And -  4',1,'[{\"added\": {}}]',4,2),(1567,'2019-09-24 01:53:27.410535','95','  1[Operator] 94. Logical Operator(Not)  09-23 18:36(95)',2,'[{\"changed\": {\"fields\": [\"title\", \"explanation\"]}}]',3,2),(1568,'2019-09-24 01:53:41.235938','95','  1[Operator] 94. Logical Operator (Not)  09-23 18:36(95)',2,'[{\"changed\": {\"fields\": [\"title\"]}}]',3,2),(1569,'2019-09-24 01:58:27.988728','96','  1[Operator] 95. Logical Operator (And)  09-23 18:55(96)',1,'[{\"added\": {}}]',3,2),(1570,'2019-09-24 01:58:47.534372','125','95. Logical Operator (And) -  4',1,'[{\"added\": {}}]',4,2),(1571,'2019-09-24 01:59:37.848375','74','  1[Operator] 9. Logical Operator (Or)  08-29 01:11(74)',2,'[{\"changed\": {\"fields\": [\"title\", \"video\"]}}]',3,2),(1572,'2019-09-24 01:59:46.404438','95','  1[Operator] 8. Logical Operator (Not)  09-23 18:36(95)',2,'[{\"changed\": {\"fields\": [\"video\"]}}]',3,2),(1573,'2019-09-24 02:01:07.304427','96','  1[Operator] 10. Logical Operator (And)  09-23 18:55(96)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(1574,'2019-09-24 02:01:38.262138','74','  1[Operator] 9. Logical Operator (Or)  08-29 01:11(74)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(1575,'2019-09-24 02:16:45.549901','77','68. Maximum profit - [4, 3, 5, 8, 6] \"123\"',2,'[{\"changed\": {\"fields\": [\"expected_output\"]}}]',4,2),(1576,'2019-09-24 02:17:16.641415','77','68. Maximum profit - [4, 3, 5, 8, 6] [\"test\", \'test2\']',2,'[{\"changed\": {\"fields\": [\"expected_output\"]}}]',4,2),(1577,'2019-09-24 02:28:19.589293','167','68. (59)dayeon 2019-09-23 right:1',3,'',12,2),(1578,'2019-09-24 02:28:56.741917','77','68. Maximum profit - [4, 3, 5, 8, 6] [\"test\", \'test2\']',2,'[]',4,2),(1579,'2019-09-24 02:43:02.839721','59','  3[Advanced List] 68. Maximum profit  08-15 21:05(59)',2,'[{\"changed\": {\"fields\": [\"example\"]}}]',3,2),(1580,'2019-09-24 02:43:09.015265','77','68. Maximum profit - [4, 3, 5, 8, 6] 5',2,'[{\"changed\": {\"fields\": [\"expected_output\"]}}]',4,2),(1581,'2019-09-24 02:46:26.353492','77','68. Maximum profit - [4, 3, 5, 8, 6] [\"test\", \'test2\']',2,'[{\"changed\": {\"fields\": [\"expected_output\"]}}]',4,2),(1582,'2019-09-24 03:09:18.605936','77','68. Maximum profit - [4, 3, 5, 8, 6] [\'test\', \'test2\']',2,'[{\"changed\": {\"fields\": [\"expected_output\"]}}]',4,2),(1583,'2019-09-24 03:10:00.272545','77','68. Maximum profit - [4, 3, 5, 8, 6] 5',2,'[{\"changed\": {\"fields\": [\"expected_output\"]}}]',4,2),(1584,'2019-09-24 07:58:58.160371','3','  2[String] 30. Merge Strings  07-18 02:45(3)',2,'[{\"changed\": {\"fields\": [\"title\", \"explanation\"]}}]',3,15),(1585,'2019-09-24 08:00:53.497424','56','  2[String] 31. Merge strings using Join  08-09 16:25(56)',2,'[{\"changed\": {\"fields\": [\"title\", \"explanation\"]}}]',3,15),(1586,'2019-09-24 08:01:10.162928','3','  2[String] 30. Merge strings  07-18 02:45(3)',2,'[{\"changed\": {\"fields\": [\"title\"]}}]',3,15),(1587,'2019-09-24 08:01:23.813319','3','  2[String] 30. Merge strings  07-18 02:45(3)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,15),(1588,'2019-09-24 08:07:45.501836','97','  2[Integer] 96. Index a character  09-24 01:02(97)',1,'[{\"added\": {}}]',3,15),(1589,'2019-09-24 08:07:55.498960','126','96. Index a character -  3',1,'[{\"added\": {}}]',4,15),(1590,'2019-09-24 08:08:22.904336','97','  2[String] 96. Index a character  09-24 01:02(97)',2,'[{\"changed\": {\"fields\": [\"category\"]}}]',3,15),(1591,'2019-09-24 08:19:16.668677','61','  2[List] 34. Index a value from list  08-17 01:35(61)',2,'[{\"changed\": {\"fields\": [\"title\", \"explanation\", \"example\", \"option1\", \"option2\", \"option3\", \"option4\"]}}]',3,15),(1592,'2019-09-24 08:22:29.268634','98','  2[List] 97. Pop a value from list  09-24 01:17(98)',1,'[{\"added\": {}}]',3,15),(1593,'2019-09-24 08:22:45.879600','127','97. Pop a value from list -  4',1,'[{\"added\": {}}]',4,15),(1594,'2019-09-24 08:30:39.379424','99','  2[List] 98. Remove a value from a list  09-24 01:23(99)',1,'[{\"added\": {}}]',3,15),(1595,'2019-09-24 08:30:49.704874','128','98. Remove a value from a list -  3',1,'[{\"added\": {}}]',4,15),(1596,'2019-09-24 08:31:02.665179','98','  2[List] 97. Pop a value from a list  09-24 01:17(98)',2,'[{\"changed\": {\"fields\": [\"title\", \"explanation\"]}}]',3,15),(1597,'2019-09-24 08:32:41.785694','98','  2[List] 37. Pop a value from a list  09-24 01:17(98)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,15),(1598,'2019-09-24 08:33:15.942227','99','  2[List] 38. Remove a value from a list  09-24 01:23(99)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,15),(1599,'2019-09-24 08:34:05.257190','99','  2[List] 38. Remove a value from a list  09-24 01:23(99)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,15),(1600,'2019-09-24 08:35:00.894175','99','  2[List] 38. Remove a value from a list  09-24 01:23(99)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,15),(1601,'2019-09-24 08:36:38.273735','98','  2[List] 37. Pop a value from a list  09-24 01:17(98)',2,'[]',3,15),(1602,'2019-09-24 08:40:24.812236','70','  1[DataType] 2. Set and Dictionary  08-25 20:48(70)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,15),(1603,'2019-09-24 08:47:33.806946','100','  2[List] 99. Remove the duplicated values  09-24 01:44(100)',1,'[{\"added\": {}}]',3,2),(1604,'2019-09-24 08:47:49.822633','129','99. Remove the duplicated values - [1, 2, 3, 4, 5]\r\n[3, 4, 5, 6] [1, 2]',1,'[{\"added\": {}}]',4,2),(1605,'2019-09-24 09:14:37.204129','101','  2[List] 100. Remove negative values from a list  09-24 02:13(101)',1,'[{\"added\": {}}]',3,2),(1606,'2019-09-24 09:14:58.474335','130','100. Remove negative values from a list - [-2, 0, 1, -3, 4] [0, 1, 4]',1,'[{\"added\": {}}]',4,2),(1607,'2019-09-24 09:20:54.081424','102','  2[List] 101. Convert a string to a list  09-24 02:17(102)',1,'[{\"added\": {}}]',3,2),(1608,'2019-09-24 09:21:26.244400','131','101. Convert a string to a list - \"hello\" [\'h\', \'e\', \'l\', \'l\', \'o\']',1,'[{\"added\": {}}]',4,2),(1609,'2019-09-24 09:23:33.169948','44','  3[Advanced For] 59. Remove adjacent duplicated character  08-04 17:05(44)',2,'[{\"changed\": {\"fields\": [\"title\"]}}]',3,2),(1610,'2019-09-24 09:25:13.526759','103','  2[Set] 102. Remove duplicated values from a list  09-24 02:22(103)',1,'[{\"added\": {}}]',3,2),(1611,'2019-09-24 09:25:32.322988','132','102. Remove duplicated values from a list - [1, 2, 1, 2, 3] [1, 2, 3]',1,'[{\"added\": {}}]',4,2),(1612,'2019-09-25 02:59:58.593419','103','  2[Set] 49. Remove duplicated values from a list  09-24 02:22(103)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(1613,'2019-09-25 03:01:41.035393','5','  1[While] 28. Add function  07-18 02:47(5)',2,'[{\"changed\": {\"fields\": [\"example\"]}}]',3,2),(1614,'2019-09-25 03:29:30.148490','104','  1[Variable] 103. Create variables  09-24 20:02(104)',1,'[{\"added\": {}}]',3,2),(1615,'2019-09-25 03:29:45.525482','133','103. Create variables -  2',1,'[{\"added\": {}}]',4,2),(1616,'2019-09-25 03:33:27.268857','52','  1[Variable] 12. Variable naming rule  08-07 22:25(52)',2,'[{\"changed\": {\"fields\": [\"video\"]}}]',3,2),(1617,'2019-09-25 03:33:33.608700','104','  1[Variable] 11. Create variables  09-24 20:02(104)',2,'[{\"changed\": {\"fields\": [\"video\"]}}]',3,2),(1618,'2019-09-25 03:34:40.482307','52','  1[Variable] 12. Variable naming rule  08-07 22:25(52)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(1619,'2019-09-25 03:35:25.768762','104','  1[Variable] 11. Create variables  09-24 20:02(104)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(1620,'2019-09-25 03:48:35.662038','97','  2[String] 31. Index a character  09-24 01:02(97)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(1621,'2019-09-25 03:54:35.094765','97','  2[String] 31. Index a character  09-24 01:02(97)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(1622,'2019-09-25 03:57:31.396496','97','  2[String] 31. Index a character  09-24 01:02(97)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(1623,'2019-09-25 04:18:01.307910','105','  2[String] 104. Slice a string  09-24 20:49(105)',1,'[{\"added\": {}}]',3,2),(1624,'2019-09-25 04:18:24.494624','134','104. Slice a string - \'Hello World\' \'lo Wo\'',1,'[{\"added\": {}}]',4,2),(1625,'2019-09-25 04:23:40.070932','105','  2[String] 32. Slice a string  09-24 20:49(105)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(1626,'2019-09-25 04:29:34.404093','134','32. Slice a string - \'Hello World\' lo Wo',2,'[{\"changed\": {\"fields\": [\"expected_output\"]}}]',4,2),(1627,'2019-09-25 04:56:05.624114','134','32. Slice a string - \'Hello World\' lo Wo',2,'[]',4,2),(1628,'2019-09-25 04:56:58.111447','135','58. Frequency - \"abccbbd\" b',1,'[{\"added\": {}}]',4,2),(1629,'2019-09-25 04:58:42.702654','135','58. Frequency - \"abccbbd\" 3',2,'[{\"changed\": {\"fields\": [\"expected_output\"]}}]',4,2),(1630,'2019-09-25 05:02:01.779357','28','  3[Advanced Dictionary] 58. Frequency  07-26 00:36(28)',2,'[{\"changed\": {\"fields\": [\"question\", \"example\"]}}]',3,2),(1631,'2019-09-25 05:07:05.641225','91','101. Remove outermost parenthesis - \'(()())\' ()()',2,'[{\"changed\": {\"fields\": [\"expected_output\"]}}]',4,2),(1632,'2019-09-25 05:07:17.482615','92','101. Remove outermost parenthesis - \'()()\' ',2,'[{\"changed\": {\"fields\": [\"expected_output\"]}}]',4,2),(1633,'2019-09-25 05:07:36.451291','91','101. Remove outermost parenthesis - \'(()())\' ',2,'[{\"changed\": {\"fields\": [\"expected_output\"]}}]',4,2),(1634,'2019-09-25 05:10:43.391905','91','101. Remove outermost parenthesis - \'(()())\' \"\"',2,'[{\"changed\": {\"fields\": [\"expected_output\"]}}]',4,2),(1635,'2019-09-25 05:11:39.892082','91','101. Remove outermost parenthesis - \'(()())\' ()()',2,'[{\"changed\": {\"fields\": [\"expected_output\"]}}]',4,2),(1636,'2019-09-25 05:12:13.662691','92','101. Remove outermost parenthesis - \'(())\' ()',2,'[{\"changed\": {\"fields\": [\"input\", \"expected_output\"]}}]',4,2),(1637,'2019-09-25 05:15:12.987308','44','  3[Advanced For] 62. Remove adjacent duplicated character  08-04 17:05(44)',2,'[{\"changed\": {\"fields\": [\"question\"]}}]',3,2),(1638,'2019-09-25 05:15:42.227312','58','62. Remove adjacent duplicated character - \"abbac\" c',2,'[{\"changed\": {\"fields\": [\"input\", \"expected_output\"]}}]',4,2),(1639,'2019-09-25 05:16:17.544998','58','62. Remove adjacent duplicated character - \"aabbc\" c',2,'[{\"changed\": {\"fields\": [\"input\"]}}]',4,2),(1640,'2019-09-25 05:17:04.750908','18','  1[Range] 18. Range summary  07-20 14:33(18)',2,'[{\"changed\": {\"fields\": [\"question\"]}}]',3,2),(1641,'2019-09-25 05:25:51.179311','18','  1[Range] 18. Range summary  07-20 14:33(18)',2,'[]',3,2),(1642,'2019-09-25 05:31:33.720146','94','  3[Math] 89. Average  09-23 18:14(94)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(1643,'2019-09-25 05:46:50.339505','76','  3[Advanced List] 82. Sliding Window Maximum  08-29 22:15(76)',2,'[{\"changed\": {\"fields\": [\"question\"]}}]',3,2),(1644,'2019-09-25 05:57:00.985259','29','  3[Advanced List] 70. Rotate a list  07-27 10:16(29)',2,'[{\"changed\": {\"fields\": [\"example\"]}}]',3,2),(1645,'2019-09-25 05:57:28.567876','23','  3[Advanced List] 69. Subarray  07-22 20:14(23)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(1646,'2019-09-25 05:58:27.000720','13','  3[Advanced List] 67. Reverse a list  07-18 19:20(13)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(1647,'2019-09-25 05:59:16.919064','12','  3[Advanced List] 66. Swap 2nd elements  07-18 19:03(12)',2,'[{\"changed\": {\"fields\": [\"title\"]}}]',3,2),(1648,'2019-09-25 06:00:00.597902','49','  3[Advanced For] 63. Print triangle  08-05 18:34(49)',2,'[{\"changed\": {\"fields\": [\"title\"]}}]',3,2),(1649,'2019-09-25 06:00:14.697614','53','  3[Advanced For] 64. Print rectangle  08-08 22:20(53)',2,'[{\"changed\": {\"fields\": [\"title\"]}}]',3,2),(1650,'2019-09-25 06:00:55.895268','87','  2[Set] 47. Set  09-21 11:02(87)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(1651,'2019-09-25 06:01:07.874898','53','  3[Advanced For] 64. Print square  08-08 22:20(53)',2,'[{\"changed\": {\"fields\": [\"title\"]}}]',3,2),(1652,'2019-09-25 06:01:22.954689','44','  3[Advanced For] 62. Remove adjacent duplicated characters  08-04 17:05(44)',2,'[{\"changed\": {\"fields\": [\"title\"]}}]',3,2),(1653,'2019-09-25 06:03:57.052018','85','  2[Function] 53. Parameter  09-09 00:28(85)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(1654,'2019-09-25 06:06:08.532520','20','  1[While] 27. Continue  07-21 00:09(20)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(1655,'2019-09-25 06:08:14.361013','19','  1[While] 28. Sum using While  07-21 00:00(19)',2,'[{\"changed\": {\"fields\": [\"explanation\", \"question\"]}}]',3,2),(1656,'2019-09-25 06:08:59.702049','78','  1[While] 26. Break  08-30 21:42(78)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(1657,'2019-09-25 06:09:47.363121','20','  1[While] 27. Continue  07-21 00:09(20)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(1658,'2019-09-25 06:11:19.615084','83','  1[While] 25. While  09-08 14:11(83)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(1659,'2019-09-25 06:12:05.463112','78','  1[While] 26. Break  08-30 21:42(78)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(1660,'2019-09-26 01:14:13.818359','7','PyPyKids',2,'[{\"changed\": {\"fields\": [\"badges\"]}}]',14,15),(1661,'2019-09-26 01:14:30.240186','182','0. (26)PyPyKids 2019-09-25 right:1',3,'',12,15),(1662,'2019-09-29 06:55:56.568506','210','22. (77)tiny657 2019-09-26 right:-1',2,'[{\"changed\": {\"fields\": [\"date\", \"modified_date\"]}}]',12,2),(1663,'2019-09-29 07:05:46.806879','19','tiny657',2,'[{\"changed\": {\"fields\": [\"is_staff\", \"is_superuser\"]}}]',9,2),(1664,'2019-09-29 07:05:56.431757','18','administrator',2,'[{\"changed\": {\"fields\": [\"is_staff\", \"is_superuser\"]}}]',9,2),(1665,'2019-09-29 21:16:22.659303','91','  2[List] 44. Sum of odd numbers  09-22 21:45(91)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(1666,'2019-09-29 21:28:46.536627','94','  3[Math] 89. Average  09-23 18:14(94)',2,'[{\"changed\": {\"fields\": [\"explanation\", \"example\"]}}]',3,2),(1667,'2019-09-29 23:27:44.704559','105','  2[String] 32. Slice a string  09-24 20:49(105)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(1668,'2019-09-30 04:49:42.522425','202','60. (80)None 2019-09-28 right:0',3,'',12,2),(1669,'2019-09-30 04:49:42.528049','201','60. (80)None 2019-09-28 right:0',3,'',12,2),(1670,'2019-09-30 04:49:42.532980','200','60. (80)None 2019-09-28 right:0',3,'',12,2),(1671,'2019-09-30 04:49:42.537925','199','42. (102)None 2019-09-28 right:0',3,'',12,2),(1672,'2019-09-30 04:49:42.543001','198','42. (102)None 2019-09-28 right:0',3,'',12,2),(1673,'2019-09-30 04:49:42.547854','197','42. (102)None 2019-09-28 right:0',3,'',12,2),(1674,'2019-09-30 04:49:42.552830','196','42. (102)None 2019-09-28 right:0',3,'',12,2),(1675,'2019-09-30 04:49:42.558035','195','42. (102)None 2019-09-28 right:0',3,'',12,2),(1676,'2019-09-30 04:49:42.562937','194','42. (102)None 2019-09-28 right:0',3,'',12,2),(1677,'2019-09-30 04:49:42.568138','193','42. (102)None 2019-09-28 right:0',3,'',12,2),(1678,'2019-09-30 04:49:42.573268','192','42. (102)None 2019-09-28 right:0',3,'',12,2),(1679,'2019-09-30 04:49:52.904550','171','64. (53)None 2019-09-23 right:0',3,'',12,2),(1680,'2019-09-30 04:49:52.911121','170','64. (53)None 2019-09-23 right:0',3,'',12,2),(1681,'2019-09-30 07:18:58.659794','97','  2[String] 31. Index a character  09-24 01:02(97)',2,'[{\"changed\": {\"fields\": [\"video\"]}}]',3,2),(1682,'2019-09-30 08:03:34.037901','95','  1[Operator] 8. Logical Operator (Not)  09-23 18:36(95)',2,'[{\"changed\": {\"fields\": [\"explanation\", \"option2\"]}}]',3,2),(1683,'2019-10-02 02:54:08.924482','68','  4[Stack] 101. Remove outermost parenthesis  08-19 10:01(68)',2,'[{\"changed\": {\"fields\": [\"example\"]}}]',3,19),(1684,'2019-10-02 03:15:18.707950','43','  4[Stack] 100. Valid parentheses  08-04 09:07(43)',2,'[{\"changed\": {\"fields\": [\"title\", \"explanation\", \"question\"]}}]',3,19),(1685,'2019-10-02 03:41:23.017017','43','  4[Stack] 100. Valid parentheses  08-04 09:07(43)',2,'[{\"changed\": {\"fields\": [\"explanation\", \"hint\"]}}]',3,19),(1686,'2019-10-02 03:42:50.806267','43','  4[Stack] 100. Valid parentheses  08-04 09:07(43)',2,'[]',3,19),(1687,'2019-10-02 06:20:32.432960','14','  4[Stack] 99. Reverse a list using stack  07-19 11:55(14)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,19),(1688,'2019-10-02 07:01:54.201664','87','  2[Set] 47. Set  09-21 11:02(87)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,19),(1689,'2019-10-02 07:09:40.568527','106','  2[Dictionary] 105. Access a value of a dictionary  10-01 23:53(106)',1,'[{\"added\": {}}]',3,19),(1690,'2019-10-02 07:10:30.079362','136','105. Access a value of a dictionary - {\"brand\": \"Apple\", \"type\": \"Laptop\", \"year\": 2019}\r\n\"year\" 2019',1,'[{\"added\": {}}]',4,19),(1691,'2019-10-02 07:11:59.637585','106','  2[Dictionary] 105. Access a value of a dictionary  10-01 23:53(106)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,19),(1692,'2019-10-02 08:00:24.010321','107','  2[Dictionary] 106. Change a value of a dictionary  10-02 00:36(107)',1,'[{\"added\": {}}]',3,19),(1693,'2019-10-02 08:00:52.247370','137','106. Change a value of a dictionary - {\"brand\": \"PyPyKids\", \"language\": \"Python\", \"target\": \"Kids\"}\r\n\"Java\" {\"brand\": \"PyPyKids\", \"language\": \"Java\", \"target\": \"Kids\"}',1,'[{\"added\": {}}]',4,19),(1694,'2019-10-02 08:01:56.723075','137','106. Change a value of a dictionary - {\"brand\": \"PyPyKids\", \"language\": \"Python\", \"target\": \"Kids\"}\r\n\"Java\" {\'brand\': \'PyPyKids\', \'language\': \'Java\', \'target\': \'Kids\'}',2,'[{\"changed\": {\"fields\": [\"expected_output\"]}}]',4,19),(1695,'2019-10-02 08:14:55.390979','55','14. (36)dayeon 2019-08-04 right:1',2,'[{\"changed\": {\"fields\": [\"answer\"]}}]',12,19),(1696,'2019-10-02 08:15:53.270319','36','  1[Print] 14. Print  08-01 00:45(36)',2,'[{\"changed\": {\"fields\": [\"question\", \"hint\", \"quiz_type\", \"option1\", \"option2\", \"option3\", \"option4\"]}}]',3,19),(1697,'2019-10-02 08:16:25.395759','43','14. Print -  ',2,'[{\"changed\": {\"fields\": [\"expected_output\", \"expected_stdout\"]}}]',4,19),(1698,'2019-10-02 08:18:38.887361','36','  1[Print] 14. Print  08-01 00:45(36)',2,'[{\"changed\": {\"fields\": [\"example\", \"hint\"]}}]',3,19),(1699,'2019-10-03 01:14:11.177609','106','  2[Dictionary] 30. Access a value of a dictionary  10-01 23:53(106)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,19),(1700,'2019-10-03 01:16:05.187412','106','  2[Dictionary] 30. Access a value of a dictionary  10-01 23:53(106)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,19),(1701,'2019-10-03 01:18:20.654331','69','  4[Linked List] 104. Find the maximum  08-19 22:15(69)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,19),(1702,'2019-10-03 01:43:53.610251','69','  4[Linked List] 104. Find the maximum  08-19 22:15(69)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,19),(1703,'2019-10-03 02:47:05.298562','108','  2[Dictionary] 107. Add an item into a Dictionary  10-02 19:33(108)',1,'[{\"added\": {}}]',3,19),(1704,'2019-10-03 02:48:38.975895','138','107. (108) Add an item into a Dictionary - {\"brand\": \"PyPyKids\"}\r\n\"who\"\r\n\"Dayeon\" {\'brand\': \'PyPyKids\', \'who\': \'Dayeon\'}',1,'[{\"added\": {}}]',4,19),(1705,'2019-10-03 02:51:36.172732','108','  2[Dictionary] 107. Add an item into a Dictionary  10-02 19:33(108)',2,'[{\"changed\": {\"fields\": [\"question\"]}}]',3,19),(1706,'2019-10-03 02:57:21.960163','107','  2[Dictionary] 31. Change a value of a dictionary  10-02 00:36(107)',2,'[{\"changed\": {\"fields\": [\"explanation\", \"question\"]}}]',3,19),(1707,'2019-10-03 03:03:37.254436','106','  2[Dictionary] 30. Access a value of a dictionary  10-01 23:53(106)',2,'[{\"changed\": {\"fields\": [\"explanation\", \"example\"]}}]',3,19),(1708,'2019-10-03 03:04:43.980498','106','  2[Dictionary] 30. Access a value of a dictionary  10-01 23:53(106)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,19),(1709,'2019-10-03 03:05:43.422416','106','  2[Dictionary] 30. Access a value of a dictionary  10-01 23:53(106)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,19),(1710,'2019-10-03 03:06:30.654124','107','  2[Dictionary] 31. Change a value of a dictionary  10-02 00:36(107)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,19),(1711,'2019-10-03 03:07:23.051102','107','  2[Dictionary] 31. Change a value of a dictionary  10-02 00:36(107)',2,'[{\"changed\": {\"fields\": [\"explanation\", \"answer_header\"]}}]',3,19),(1712,'2019-10-03 03:07:50.388547','106','  2[Dictionary] 30. Access a value of a dictionary  10-01 23:53(106)',2,'[{\"changed\": {\"fields\": [\"answer_header\"]}}]',3,19),(1713,'2019-10-03 03:16:04.818076','106','  2[Dictionary] 30. Access a value of a dictionary  10-01 23:53(106)',2,'[{\"changed\": {\"fields\": [\"example\"]}}]',3,19),(1714,'2019-10-03 03:16:59.651662','106','  2[Dictionary] 30. Access a value of a dictionary  10-01 23:53(106)',2,'[{\"changed\": {\"fields\": [\"example\"]}}]',3,19),(1715,'2019-10-03 03:18:05.976820','107','  2[Dictionary] 31. Change a value of a dictionary  10-02 00:36(107)',2,'[{\"changed\": {\"fields\": [\"example\"]}}]',3,19),(1716,'2019-10-03 03:19:39.125454','108','  2[Dictionary] 32. Add an item into a Dictionary  10-02 19:33(108)',2,'[{\"changed\": {\"fields\": [\"example\"]}}]',3,19),(1717,'2019-10-03 03:44:45.688600','109','  2[Dictionary] 108. Remove a value from a dictionary  10-02 20:31(109)',1,'[{\"added\": {}}]',3,19),(1718,'2019-10-03 03:46:43.393574','139','108. (109) Remove a value from a dictionary - {\"brand\": \"PyPyKids\", \"language\": \"Python\", \"target\": \"Kids\"}\r\n\"language\" {\'brand\': \'PyPyKids\', \'target\': \'Kids\'}',1,'[{\"added\": {}}]',4,19),(1719,'2019-10-03 03:54:32.445889','108','  2[Dictionary] 32. Add an item into a Dictionary  10-02 19:33(108)',2,'[{\"changed\": {\"fields\": [\"explanation\", \"answer_header\"]}}]',3,19),(1720,'2019-10-03 03:56:54.430595','2','  2[Dictionary] 34. Dictionary length  07-17 02:48(2)',2,'[{\"changed\": {\"fields\": [\"title\", \"explanation\", \"question\", \"example\", \"quiz_type\", \"answer_header\"]}}]',3,19),(1721,'2019-10-03 03:57:27.447055','140','34. (2) Dictionary length - {\"brand\": \"PyPyKids\", \"language\": \"Python\", \"target\": \"Kids\"} 3',1,'[{\"added\": {}}]',4,19),(1722,'2019-10-03 04:09:27.322029','2','34(2). dayeon 2019-07-02 right:1',3,'',12,19),(1723,'2019-10-03 04:26:13.272061','110','  2[Dictionary] 109(110). For through a dictinoary  10-02 21:16',1,'[{\"added\": {}}]',3,19),(1724,'2019-10-03 04:27:09.243103','141','109(110). For through a dictinoary - {\"brand\": \"PyPyKids\", \"language\": \"Python\", \"target\": \"Kids\"} ',1,'[{\"added\": {}}]',4,19),(1725,'2019-10-03 04:27:50.095273','110','  2[Dictionary] 109(110). For through a dictinoary  10-02 21:16',2,'[{\"changed\": {\"fields\": [\"example\"]}}]',3,19),(1726,'2019-10-03 04:34:41.598113','110','  2[Dictionary] 109(110). Loop through a dictionary  10-02 21:16',2,'[{\"changed\": {\"fields\": [\"title\", \"question\", \"example\"]}}]',3,19),(1727,'2019-10-03 04:34:55.731389','141','109(110). Loop through a dictionary - {\"brand\": \"PyPyKids\", \"language\": \"Python\", \"target\": \"Kids\"} [\'brandPyPyKids\', \'languagePython\', \'targetKids\']',2,'[{\"changed\": {\"fields\": [\"expected_output\", \"expected_stdout\"]}}]',4,19),(1728,'2019-10-03 06:18:35.561738','41','  1[DataType] 3(41). Invalid data type  08-03 17:15',3,'',3,19),(1729,'2019-10-03 08:30:57.935254','42','  1[DataType] 4(42). Invalid list data type  08-04 03:47',3,'',3,19),(1730,'2019-10-03 08:34:08.679892','71','  1[Variable] 7(71). Variable naming convention  08-28 20:39',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,19),(1731,'2019-10-03 08:36:36.287240','63','  1[Operator] 9(63). Arithmetic Operator  08-18 19:32',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,19),(1732,'2019-10-03 08:39:00.157248','73','  1[Operator] 11(73). Assignment Operator  08-29 00:12',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,19),(1733,'2019-10-03 08:40:01.935723','74','  1[Operator] 13(74). Logical Operator (Or)  08-29 01:11',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,19),(1734,'2019-10-03 08:40:21.813028','96','  1[Operator] 14(96). Logical Operator (And)  09-23 18:55',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,19),(1735,'2019-10-03 08:41:14.049739','96','  1[Operator] 14(96). Logical Operator (And)  09-23 18:55',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,19),(1736,'2019-10-03 08:42:44.024293','82','  1[If] 19(82). If  09-04 00:19',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,19),(1737,'2019-10-03 08:43:50.499927','88','  1[If] 20(88). If Else  09-22 20:59',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,19),(1738,'2019-10-03 08:44:29.268112','89','  1[If] 21(89). If Elif Else  09-22 21:03',2,'[{\"changed\": {\"fields\": [\"explanation\", \"question\"]}}]',3,19),(1739,'2019-10-03 08:49:16.767537','77','  1[For] 22(77). For  08-30 21:12',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,19),(1740,'2019-10-03 08:49:39.805775','90','  1[For] 23(90). For in string  09-22 21:09',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,19),(1741,'2019-10-03 08:50:15.280363','90','  1[For] 23(90). For in string  09-22 21:09',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,19),(1742,'2019-10-03 08:51:04.771970','1','  1[For] 24(1). Sum by using For  07-17 02:33',2,'[{\"changed\": {\"fields\": [\"title\", \"explanation\"]}}]',3,19),(1743,'2019-10-03 08:51:56.639092','78','  1[While] 26(78). Break  08-30 21:42',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,19),(1744,'2019-10-03 08:52:31.311693','19','  1[While] 28(19). Sum using While  07-21 00:00',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,19),(1745,'2019-10-03 08:52:48.881583','19','  1[While] 28(19). Sum by using While  07-21 00:00',2,'[{\"changed\": {\"fields\": [\"title\"]}}]',3,19),(1746,'2019-10-03 08:53:16.328036','5','  1[While] 29(5). Add function  07-18 02:47',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,19),(1747,'2019-10-03 08:54:26.470282','85','  2[Function] 31(85). Parameter  09-09 00:28',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,19),(1748,'2019-10-03 08:55:47.119710','97','  2[String] 34(97). Index a character  09-24 01:02',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,19),(1749,'2019-10-03 09:02:37.670728','105','  2[String] 35(105). Slice a string  09-24 20:49',2,'[{\"changed\": {\"fields\": [\"explanation\", \"question\"]}}]',3,19),(1750,'2019-10-03 09:03:15.069580','3','  2[String] 36(3). Merge strings  07-18 02:45',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,19),(1751,'2019-10-03 09:04:10.805359','56','  2[String] 37(56). Merge strings using Join  08-09 16:25',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,19),(1752,'2019-10-03 09:06:14.783671','61','  2[List] 39(61). Index a value from list  08-17 01:35',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,19),(1753,'2019-10-03 09:06:47.718445','98','  2[List] 42(98). Pop a value from a list  09-24 01:17',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,19),(1754,'2019-10-03 09:07:14.203019','99','  2[List] 43(99). Remove a value from a list  09-24 01:23',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,19),(1755,'2019-10-03 09:12:14.961556','99','  2[List] 43(99). Remove a value from a list  09-24 01:23',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,19),(1756,'2019-10-03 09:13:57.568740','4','  2[List] 44(4). Find the same value as the index  07-18 02:46',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,19),(1757,'2019-10-03 09:14:56.995131','102','  2[List] 45(102). Convert a string to a list  09-24 02:17',2,'[{\"changed\": {\"fields\": [\"explanation\", \"question\"]}}]',3,19),(1758,'2019-10-03 09:15:31.123165','101','  2[List] 46(101). Remove negative values from a list  09-24 02:13',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,19),(1759,'2019-10-03 09:18:00.468262','100','  2[List] 48(100). Remove the duplicated values  09-24 01:44',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,19),(1760,'2019-10-04 08:16:51.361471','1','DailyLogin',1,'[{\"added\": {}}]',18,19),(1761,'2019-10-04 09:32:07.843413','1','DailyCheckIn',2,'[{\"changed\": {\"fields\": [\"name\"]}}]',18,19),(1762,'2019-10-04 10:09:24.478936','11','tiny657',2,'[{\"changed\": {\"fields\": [\"point\"]}}]',14,16),(1763,'2019-10-04 10:09:31.855992','8','admin',2,'[{\"changed\": {\"fields\": [\"point\"]}}]',14,16),(1764,'2019-10-08 03:45:54.309050','12','  Super Junior-10. Data Type',2,'[{\"changed\": {\"fields\": [\"name\"]}}]',2,19),(1765,'2019-10-08 04:15:24.049873','111','  2[Function] 110(111). Find the sum of 1 to the number  10-07 21:10',1,'[{\"added\": {}}]',3,19),(1766,'2019-10-08 04:15:40.457731','142','110(111). Find the sum of 1 to the number - 10 55',1,'[{\"added\": {}}]',4,19),(1767,'2019-10-08 04:16:59.090256','111','  2[Function] 34(111). Find the sum of 1 to the number  10-07 21:10',2,'[{\"changed\": {\"fields\": [\"question\"]}}]',3,19),(1768,'2019-10-08 04:18:19.312334','23','  Junior-24. Set',2,'[{\"changed\": {\"fields\": [\"desc\"]}}]',2,19),(1769,'2019-10-08 04:19:01.453964','24','  Junior-25. Dictionary',2,'[{\"changed\": {\"fields\": [\"desc\"]}}]',2,19),(1770,'2019-10-08 10:00:04.110210','40','10-08 dayeon DailyCheckIn',3,'',19,19),(1771,'2019-10-09 04:44:22.968525','5','  1[While] 29(5). Add function  07-18 02:47',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,19),(1772,'2019-10-09 04:54:29.829944','112','  2[String] 111(112). Type Casting  10-08 21:48',1,'[{\"added\": {}}]',3,19),(1773,'2019-10-09 04:54:49.027155','143','111(112). Type Casting - 10\r\n20 \'1020\'',1,'[{\"added\": {}}]',4,19),(1774,'2019-10-09 04:55:52.344532','112','  2[String] 111(112). Type Casting  10-08 21:48',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,19),(1775,'2019-10-09 04:56:24.137653','143','40(112). Type Casting - 10\r\n20 1020',2,'[{\"changed\": {\"fields\": [\"expected_output\"]}}]',4,19),(1776,'2019-10-10 06:21:36.320380','63','  1[Operator] 9(63). Arithmetic Operator  08-18 19:32',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,19),(1777,'2019-10-10 06:34:31.803360','63','  1[Operator] 9(63). Arithmetic Operator  08-18 19:32',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,19),(1778,'2019-10-10 06:38:04.210933','63','  1[Operator] 9(63). Arithmetic Operator  08-18 19:32',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,19),(1779,'2019-10-10 06:39:23.532043','63','  1[Operator] 9(63). Arithmetic Operator  08-18 19:32',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,19),(1780,'2019-10-10 06:52:33.408974','63','  1[Operator] 9(63). Arithmetic Operator  08-18 19:32',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,19),(1781,'2019-10-10 06:53:41.289224','63','  1[Operator] 9(63). Arithmetic Operator  08-18 19:32',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,19),(1782,'2019-10-10 06:54:13.972349','63','  1[Operator] 9(63). Arithmetic Operator  08-18 19:32',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,19),(1783,'2019-10-10 06:57:50.556779','247','102(46). None 2019-10-06 right:0',3,'',12,19),(1784,'2019-10-10 06:57:50.588937','246','102(46). None 2019-10-06 right:0',3,'',12,19),(1785,'2019-10-10 06:58:40.632551','237','18(18). None 2019-10-04 right:0',3,'',12,19),(1786,'2019-10-10 06:58:40.657179','236','3(32). None 2019-10-04 right:0',3,'',12,19),(1787,'2019-10-10 06:58:40.682030','235','3(32). None 2019-10-04 right:0',3,'',12,19),(1788,'2019-10-10 06:58:40.706352','234','110(81). None 2019-10-04 right:0',3,'',12,19),(1789,'2019-10-10 06:58:40.735203','233','110(81). None 2019-10-04 right:0',3,'',12,19),(1790,'2019-10-10 06:58:40.758749','232','110(81). None 2019-10-04 right:0',3,'',12,19),(1791,'2019-10-10 06:58:40.782924','231','110(81). None 2019-10-04 right:0',3,'',12,19),(1792,'2019-10-10 06:58:40.806359','230','110(81). None 2019-10-04 right:0',3,'',12,19),(1793,'2019-10-10 06:58:40.830150','229','110(81). None 2019-10-04 right:0',3,'',12,19),(1794,'2019-10-10 06:58:40.878158','228','110(81). None 2019-10-04 right:0',3,'',12,19),(1795,'2019-10-10 06:58:40.904289','227','110(81). None 2019-10-04 right:0',3,'',12,19),(1796,'2019-10-10 06:58:40.928990','226','110(81). None 2019-10-04 right:0',3,'',12,19),(1797,'2019-10-10 06:58:40.970356','225','110(81). None 2019-10-04 right:0',3,'',12,19),(1798,'2019-10-10 06:58:40.993263','224','110(81). None 2019-10-04 right:0',3,'',12,19),(1799,'2019-10-10 06:58:41.016638','223','110(81). None 2019-10-04 right:0',3,'',12,19),(1800,'2019-10-10 06:58:41.041010','222','110(81). None 2019-10-04 right:0',3,'',12,19),(1801,'2019-10-10 06:58:41.065295','221','110(81). None 2019-10-04 right:0',3,'',12,19),(1802,'2019-10-10 06:58:41.099953','220','110(81). None 2019-10-04 right:0',3,'',12,19),(1803,'2019-10-10 06:58:41.123242','219','110(81). None 2019-10-04 right:0',3,'',12,19),(1804,'2019-10-10 06:59:36.345312','238','5(104). None 2019-10-04 right:0',3,'',12,19),(1805,'2019-10-10 07:14:53.640588','71','  1[Variable] 7(71). Variable naming convention  08-28 20:39',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,19),(1806,'2019-10-10 07:17:33.318911','36','  1[Print] 8(36). Print  08-01 00:45',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,19),(1807,'2019-10-10 07:47:30.448574','36','  1[Print] 8(36). Print  08-01 00:45',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,19),(1808,'2019-10-10 07:49:18.906211','63','  1[Operator] 9(63). Arithmetic Operator  08-18 19:32',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,19),(1809,'2019-10-10 07:50:40.113999','63','  1[Operator] 9(63). Arithmetic Operator  08-18 19:32',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,19),(1810,'2019-10-10 07:52:32.203883','72','  1[Operator] 10(72). Relational Operator  08-28 23:18',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,19),(1811,'2019-10-10 07:54:10.247400','73','  1[Operator] 11(73). Assignment Operator  08-29 00:12',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,19),(1812,'2019-10-10 07:55:45.029560','95','  1[Operator] 12(95). Logical Operator (Not)  09-23 18:36',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,19),(1813,'2019-10-10 07:56:37.912729','95','  1[Operator] 12(95). Logical Operator (Not)  09-23 18:36',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,19),(1814,'2019-10-10 07:58:12.128586','95','  1[Operator] 12(95). Logical Operator (Not)  09-23 18:36',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,19),(1815,'2019-10-10 07:59:20.467799','74','  1[Operator] 13(74). Logical Operator (Or)  08-29 01:11',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,19),(1816,'2019-10-10 08:01:22.183379','96','  1[Operator] 14(96). Logical Operator (And)  09-23 18:55',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,19),(1817,'2019-10-10 08:02:42.719452','96','  1[Operator] 14(96). Logical Operator (And)  09-23 18:55',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,19),(1818,'2019-10-10 08:03:13.305303','74','  1[Operator] 13(74). Logical Operator (Or)  08-29 01:11',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,19),(1819,'2019-10-10 08:03:47.516214','15','  1[Range] 15(15). Range  07-20 11:03',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,19),(1820,'2019-10-10 08:04:30.997901','16','  1[Range] 16(16). Range with start  07-20 14:24',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,19),(1821,'2019-10-10 08:05:29.491009','17','  1[Range] 17(17). Range with step  07-20 14:27',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,19),(1822,'2019-10-10 08:07:16.973574','82','  1[If] 19(82). If  09-04 00:19',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,19),(1823,'2019-10-10 08:10:35.442590','88','  1[If] 20(88). If Else  09-22 20:59',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,19),(1824,'2019-10-10 08:11:21.001117','89','  1[If] 21(89). If Elif Else  09-22 21:03',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,19),(1825,'2019-10-10 08:14:16.159800','77','  1[For] 22(77). For  08-30 21:12',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,19),(1826,'2019-10-10 08:14:44.110566','77','  1[For] 22(77). For  08-30 21:12',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,19),(1827,'2019-10-10 08:21:04.902232','90','  1[For] 23(90). For in string  09-22 21:09',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,19),(1828,'2019-10-10 08:22:05.287053','83','  1[While] 25(83). While  09-08 14:11',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,19),(1829,'2019-10-10 08:23:36.013694','78','  1[While] 26(78). Break  08-30 21:42',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,19),(1830,'2019-10-10 08:24:17.788726','20','  1[While] 27(20). Continue  07-21 00:09',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,19),(1831,'2019-10-10 08:25:44.421572','19','  1[While] 28(19). Sum by using While  07-21 00:00',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,19),(1832,'2019-10-10 08:26:47.838578','85','  2[Function] 31(85). Parameter  09-09 00:28',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,19),(1833,'2019-10-10 08:28:17.960215','86','  2[Function] 32(86). Return  09-09 00:49',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,19),(1834,'2019-10-10 08:28:36.292027','86','  2[Function] 32(86). Return  09-09 00:49',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,19),(1835,'2019-10-10 08:29:51.923523','86','  2[Function] 32(86). Return  09-09 00:49',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,19),(1836,'2019-10-10 08:31:02.846458','86','  2[Function] 32(86). Return  09-09 00:49',2,'[]',3,19),(1837,'2019-10-10 08:31:51.814897','86','  2[Function] 32(86). Return  09-09 00:49',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,19),(1838,'2019-10-10 08:32:38.914886','111','  2[Function] 34(111). Find the sum of 1 to the number  10-07 21:10',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,19),(1839,'2019-10-10 08:33:30.934886','97','  2[String] 35(97). Index a character  09-24 01:02',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,19),(1840,'2019-10-10 08:33:52.314899','97','  2[String] 35(97). Index a character  09-24 01:02',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,19),(1841,'2019-10-10 08:34:39.501774','105','  2[String] 36(105). Slice a string  09-24 20:49',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,19),(1842,'2019-10-10 08:36:15.547213','105','  2[String] 36(105). Slice a string  09-24 20:49',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,19),(1843,'2019-10-10 08:37:10.325662','3','  2[String] 37(3). Merge strings  07-18 02:45',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,19),(1844,'2019-10-10 08:38:07.259596','56','  2[String] 38(56). Merge strings using Join  08-09 16:25',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,19),(1845,'2019-10-10 08:39:09.986404','55','  2[String] 39(55). Split a string  08-09 15:03',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,19),(1846,'2019-10-10 08:39:43.336843','112','  2[String] 40(112). Type Casting  10-08 21:48',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,19),(1847,'2019-10-10 08:42:51.209775','61','  2[List] 41(61). Index a value from list  08-17 01:35',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,19),(1848,'2019-10-10 08:43:20.794280','62','  2[List] 42(62). Append to List  08-17 12:43',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,19),(1849,'2019-10-10 08:44:03.772019','6','  2[List] 43(6). Insert into List  07-18 02:48',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,19),(1850,'2019-10-10 08:44:45.046461','6','  2[List] 43(6). Insert into List  07-18 02:48',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,19),(1851,'2019-10-10 08:45:06.434060','6','  2[List] 43(6). Insert into List  07-18 02:48',2,'[{\"changed\": {\"fields\": [\"example\"]}}]',3,19),(1852,'2019-10-10 08:45:29.973785','98','  2[List] 44(98). Pop a value from a list  09-24 01:17',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,19),(1853,'2019-10-10 08:47:18.874594','98','  2[List] 44(98). Pop a value from a list  09-24 01:17',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,19),(1854,'2019-10-10 08:47:40.539078','98','  2[List] 44(98). Pop a value from a list  09-24 01:17',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,19),(1855,'2019-10-10 08:49:14.553393','99','  2[List] 45(99). Remove a value from a list  09-24 01:23',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,19),(1856,'2019-10-10 08:50:13.648464','99','  2[List] 45(99). Remove a value from a list  09-24 01:23',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,19),(1857,'2019-10-10 08:51:31.581810','102','  2[List] 47(102). Convert a string to a list  09-24 02:17',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,19),(1858,'2019-10-10 08:52:17.397782','100','  2[List] 50(100). Remove the duplicated values  09-24 01:44',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,19),(1859,'2019-10-10 08:56:08.500709','87','  2[Set] 52(87). Set  09-21 11:02',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,19),(1860,'2019-10-10 08:56:45.663563','87','  2[Set] 52(87). Set  09-21 11:02',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,19),(1861,'2019-10-10 08:57:05.553707','7','  2[Set] 53(7). Set exist  07-18 02:49',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,19),(1862,'2019-10-10 08:57:35.335055','92','  2[Set] 54(92). Set length  09-23 01:00',2,'[{\"changed\": {\"fields\": [\"explanation\", \"question\"]}}]',3,19),(1863,'2019-10-10 08:59:17.217263','93','  2[Set] 55(93). Set Union  09-23 01:05',2,'[{\"changed\": {\"fields\": [\"explanation\", \"question\"]}}]',3,19),(1864,'2019-10-10 09:00:36.632902','106','  2[Dictionary] 57(106). Access a value of a dictionary  10-01 23:53',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,19),(1865,'2019-10-10 09:01:30.321604','107','  2[Dictionary] 58(107). Change a value of a dictionary  10-02 00:36',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,19),(1866,'2019-10-10 09:03:02.895996','107','  2[Dictionary] 58(107). Change a value of a dictionary  10-02 00:36',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,19),(1867,'2019-10-10 09:04:39.764672','108','  2[Dictionary] 59(108). Add an item into a Dictionary  10-02 19:33',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,19),(1868,'2019-10-10 09:04:59.997430','109','  2[Dictionary] 60(109). Remove a value from a dictionary  10-02 20:31',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,19),(1869,'2019-10-10 09:05:37.439707','2','  2[Dictionary] 61(2). Dictionary length  07-17 02:48',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,19),(1870,'2019-10-10 09:07:50.519802','110','  2[Dictionary] 62(110). Loop through a dictionary  10-02 21:16',2,'[{\"changed\": {\"fields\": [\"explanation\", \"question\"]}}]',3,19),(1871,'2019-10-10 09:08:25.644045','110','  2[Dictionary] 62(110). Loop through a dictionary  10-02 21:16',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,19),(1872,'2019-10-10 09:08:59.045665','80','  3[Advanced For] 65(80). Multiply  09-01 20:44',2,'[{\"changed\": {\"fields\": [\"example\"]}}]',3,19),(1873,'2019-10-10 09:10:59.704123','54','  3[Advanced List] 81(54). Swap the values  08-08 22:22',2,'[{\"changed\": {\"fields\": [\"example\"]}}]',3,19),(1874,'2019-10-10 09:11:23.404574','51','  3[Advanced List] 80(51). Merge lists  08-06 17:59',2,'[{\"changed\": {\"fields\": [\"example\"]}}]',3,19),(1875,'2019-10-10 09:11:46.089255','47','  3[Advanced List] 78(47). How many numbers less than k  08-05 18:28',2,'[{\"changed\": {\"fields\": [\"example\"]}}]',3,19),(1876,'2019-10-10 09:12:12.868660','29','  3[Advanced List] 75(29). Rotate a list  07-27 10:16',2,'[{\"changed\": {\"fields\": [\"example\"]}}]',3,19),(1877,'2019-10-10 09:12:40.421414','21','  3[Advanced List] 73(21). Sorted list  07-21 09:53',2,'[{\"changed\": {\"fields\": [\"example\"]}}]',3,19),(1878,'2019-10-10 09:12:56.565263','12','  3[Advanced List] 71(12). Swap 2nd elements  07-18 19:03',2,'[{\"changed\": {\"fields\": [\"example\"]}}]',3,19),(1879,'2019-10-10 09:13:25.574613','44','  3[Advanced For] 67(44). Remove adjacent duplicated characters  08-04 17:05',2,'[{\"changed\": {\"fields\": [\"example\"]}}]',3,19),(1880,'2019-10-10 09:14:14.942126','48','  3[Advanced List] 79(48). Common value between two lists  08-05 18:30',2,'[{\"changed\": {\"fields\": [\"example\"]}}]',3,19),(1881,'2019-10-10 09:14:57.561150','66','  3[Advanced List] 84(66). Adjacent same numbers  08-18 20:15',2,'[{\"changed\": {\"fields\": [\"example\"]}}]',3,19),(1882,'2019-10-10 09:15:30.685329','75','  3[Advanced List] 86(75). Split an array into two with equal sum  08-29 21:53',2,'[{\"changed\": {\"fields\": [\"example\"]}}]',3,19),(1883,'2019-10-10 09:15:57.731524','76','  3[Advanced List] 87(76). Sliding Window Maximum  08-29 22:15',2,'[{\"changed\": {\"fields\": [\"example\"]}}]',3,19),(1884,'2019-10-10 09:16:49.842147','64','  3[Advanced String] 89(64). String transformation  08-18 19:47',2,'[{\"changed\": {\"fields\": [\"example\"]}}]',3,19),(1885,'2019-10-10 09:17:18.259410','65','  3[Advanced String] 90(65). Palindrome  08-18 20:02',2,'[{\"changed\": {\"fields\": [\"example\"]}}]',3,19),(1886,'2019-10-10 09:17:38.202662','28','  3[Advanced Dictionary] 92(28). Frequency  07-26 00:36',2,'[{\"changed\": {\"fields\": [\"example\"]}}]',3,19),(1887,'2019-10-10 09:18:05.475999','94','  3[Math] 96(94). Average  09-23 18:14',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,19),(1888,'2019-10-10 09:18:27.050951','35','  3[Math] 98(35). Greatest common factor  07-31 21:12',2,'[{\"changed\": {\"fields\": [\"example\"]}}]',3,19),(1889,'2019-10-10 09:19:16.374604','58','  3[Math] 105(58). Leap year  08-15 19:17',2,'[{\"changed\": {\"fields\": [\"example\"]}}]',3,19),(1890,'2019-10-10 09:19:51.388134','14','  4[Stack] 106(14). Reverse a list using stack  07-19 11:55',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,19),(1891,'2019-10-10 09:21:11.005797','69','  4[Linked List] 109(69). Find the maximum  08-19 22:15',2,'[{\"changed\": {\"fields\": [\"example\"]}}]',3,19),(1892,'2019-10-10 09:22:51.997130','69','  4[Linked List] 109(69). Find the maximum  08-19 22:15',2,'[{\"changed\": {\"fields\": [\"answer_header\"]}}]',3,19),(1893,'2019-10-10 09:23:32.901169','69','  4[Linked List] 109(69). Find the maximum  08-19 22:15',2,'[{\"changed\": {\"fields\": [\"answer_header\"]}}]',3,19),(1894,'2019-10-10 09:23:49.796340','69','  4[Linked List] 109(69). Find the maximum  08-19 22:15',2,'[{\"changed\": {\"fields\": [\"answer_header\"]}}]',3,19),(1895,'2019-10-10 09:25:35.456812','69','  4[Linked List] 109(69). Find the maximum  08-19 22:15',2,'[]',3,19),(1896,'2019-10-10 09:26:04.670093','81','  4[Linked List] 110(81). Reverse linked list  09-02 17:52',2,'[{\"changed\": {\"fields\": [\"answer_header\"]}}]',3,19),(1897,'2019-10-10 09:31:31.169367','81','  4[Linked List] 110(81). Reverse linked list  09-02 17:52',2,'[{\"changed\": {\"fields\": [\"answer_header\"]}}]',3,19),(1898,'2019-10-10 09:32:14.742358','69','  4[Linked List] 109(69). Find the maximum  08-19 22:15',2,'[{\"changed\": {\"fields\": [\"answer_header\"]}}]',3,19),(1899,'2019-10-10 09:41:59.988656','111','  2[Function] 34(111). Find the sum of 1 to the number  10-07 21:10',2,'[{\"changed\": {\"fields\": [\"example\"]}}]',3,19),(1900,'2019-10-10 09:42:41.247090','56','  2[String] 38(56). Merge strings using Join  08-09 16:25',2,'[{\"changed\": {\"fields\": [\"example\"]}}]',3,19),(1901,'2019-10-11 05:05:01.629123','122','55(93). Set Union - {1, 2, 3}\r\n{3, 4, 5} {1, 2, 3, 4, 5}',2,'[{\"changed\": {\"fields\": [\"input\"]}}]',4,2),(1902,'2019-10-11 06:14:14.135337','63','  1[Operator] 9(63). Arithmetic Operator  08-18 19:32',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,16),(1903,'2019-10-11 06:32:41.927083','73','  1[Operator] 11(73). Assignment Operator  08-29 00:12',2,'[]',3,16),(1904,'2019-10-11 07:06:34.799601','83','  1[While] 25(83). While  09-08 14:11',2,'[{\"changed\": {\"fields\": [\"question\", \"example\"]}}]',3,16),(1905,'2019-10-11 07:08:43.208567','96','  1[Operator] 14(96). Logical Operator (And)  09-23 18:55',2,'[{\"changed\": {\"fields\": [\"question\", \"example\"]}}]',3,16),(1906,'2019-10-11 08:03:05.995355','102','  2[List] 47(102). Convert a string to a list  09-24 02:17',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,16),(1907,'2019-10-11 08:12:04.794763','26','  1[Data Type] 2(26). Basic data type  07-22 23:03',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,16),(1908,'2019-10-11 08:14:24.692941','26','  1[Data Type] 2(26). Basic data type  07-22 23:03',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,16),(1909,'2019-10-11 08:15:01.325566','26','  1[Data Type] 2(26). Basic data type  07-22 23:03',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,16),(1910,'2019-10-11 08:16:37.772237','26','  1[Data Type] 2(26). Basic data type  07-22 23:03',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,16),(1911,'2019-10-11 08:21:27.287639','26','  1[Data Type] 2(26). Basic data type  07-22 23:03',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,16),(1912,'2019-10-11 08:31:24.016371','26','  1[Data Type] 2(26). Basic data type  07-22 23:03',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,16),(1913,'2019-10-11 09:00:29.977982','26','  1[Data Type] 2(26). Basic data type  07-22 23:03',2,'[]',3,16),(1914,'2019-10-11 09:05:19.802881','32','  1[Data Type] 3(32). List and Tuple  07-28 23:11',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,16),(1915,'2019-10-11 09:14:51.192276','32','  1[Data Type] 3(32). List and Tuple  07-28 23:11',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,16),(1916,'2019-10-11 09:16:47.800730','32','  1[Data Type] 3(32). List and Tuple  07-28 23:11',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,16),(1917,'2019-10-11 09:19:35.877826','32','  1[Data Type] 3(32). List and Tuple  07-28 23:11',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,16),(1918,'2019-10-11 09:22:42.206556','36','  1[Print] 8(36). Print  08-01 00:45',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,16),(1919,'2019-10-11 09:27:48.215812','36','  1[Print] 8(36). Print  08-01 00:45',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,16),(1920,'2019-10-11 09:30:54.718849','26','  1[Data Type] 2(26). Basic data type  07-22 23:03',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,16),(1921,'2019-10-11 09:31:33.758484','26','  1[Data Type] 2(26). Basic data type  07-22 23:03',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,16),(1922,'2019-10-11 09:32:46.838485','32','  1[Data Type] 3(32). List and Tuple  07-28 23:11',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,16),(1923,'2019-10-11 09:34:08.918771','70','  1[Data Type] 4(70). Set and Dictionary  08-25 20:48',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,16),(1924,'2019-10-11 09:34:59.330126','104','  1[Variable] 5(104). Create variables  09-24 20:02',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,16),(1925,'2019-10-11 09:39:02.001052','52','  1[Variable] 6(52). Variable naming rule  08-07 22:25',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,16),(1926,'2019-10-11 09:39:45.818359','52','  1[Variable] 6(52). Variable naming rule  08-07 22:25',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,16),(1927,'2019-10-11 09:47:50.503109','71','  1[Variable] 7(71). Variable naming convention  08-28 20:39',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,16),(1928,'2019-10-11 09:48:32.708808','36','  1[Print] 8(36). Print  08-01 00:45',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,16),(1929,'2019-10-11 09:53:43.758780','63','  1[Operator] 9(63). Arithmetic Operator  08-18 19:32',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,16),(1930,'2019-10-11 10:01:25.267414','36','  1[Print] 8(36). Print  08-01 00:45',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,16),(1931,'2019-10-11 10:02:54.384065','63','  1[Operator] 9(63). Arithmetic Operator  08-18 19:32',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,16),(1932,'2019-10-11 16:46:13.653433','79','  5[Greedy] 111(79). Activity selection problem  08-31 00:29',2,'[{\"changed\": {\"fields\": [\"example\"]}}]',3,16),(1933,'2019-10-11 16:46:37.057645','81','  4[Linked List] 110(81). Reverse linked list  09-02 17:52',2,'[{\"changed\": {\"fields\": [\"example\"]}}]',3,16),(1934,'2019-10-11 16:48:43.602163','69','  4[Linked List] 109(69). Find the maximum  08-19 22:15',2,'[{\"changed\": {\"fields\": [\"explanation\", \"question\", \"example\"]}}]',3,16),(1935,'2019-10-11 16:52:25.730688','14','  4[Stack] 106(14). Reverse a list using stack  07-19 11:55',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,16),(1936,'2019-10-11 16:53:39.892192','58','  3[Math] 105(58). Leap year  08-15 19:17',2,'[{\"changed\": {\"fields\": [\"question\", \"example\"]}}]',3,16),(1937,'2019-10-11 16:54:37.041708','94','  3[Math] 96(94). Average  09-23 18:14',2,'[{\"changed\": {\"fields\": [\"example\"]}}]',3,16),(1938,'2019-10-11 16:55:23.244776','22','  3[Math] 95(22). Square root  07-21 10:42',2,'[{\"changed\": {\"fields\": [\"question\"]}}]',3,16),(1939,'2019-10-11 16:57:52.907562','9','  3[Math] 93(9). Operator precedence  07-18 02:51',2,'[{\"changed\": {\"fields\": [\"example\"]}}]',3,16),(1940,'2019-10-11 17:01:06.217897','23','  3[Advanced List] 74(23). Subarray  07-22 20:14',2,'[{\"changed\": {\"fields\": [\"example\"]}}]',3,16),(1941,'2019-10-11 17:01:20.470030','29','  3[Advanced List] 75(29). Rotate a list  07-27 10:16',2,'[{\"changed\": {\"fields\": [\"example\"]}}]',3,16),(1942,'2019-10-11 17:01:44.012675','59','  3[Advanced List] 82(59). Maximum profit  08-15 21:05',2,'[{\"changed\": {\"fields\": [\"example\"]}}]',3,16),(1943,'2019-10-11 17:02:19.652094','66','  3[Advanced List] 84(66). Adjacent same numbers  08-18 20:15',2,'[{\"changed\": {\"fields\": [\"example\"]}}]',3,16),(1944,'2019-10-11 18:19:13.847528','76','  3[Advanced List] 87(76). Sliding Window Maximum  08-29 22:15',2,'[{\"changed\": {\"fields\": [\"example\"]}}]',3,16),(1945,'2019-10-11 18:20:19.904454','66','  3[Advanced List] 84(66). Adjacent same numbers  08-18 20:15',2,'[{\"changed\": {\"fields\": [\"example\"]}}]',3,16),(1946,'2019-10-11 18:21:06.394085','59','  3[Advanced List] 82(59). Maximum profit  08-15 21:05',2,'[{\"changed\": {\"fields\": [\"question\"]}}]',3,16),(1947,'2019-10-11 18:22:16.747579','23','  3[Advanced List] 74(23). Subarray  07-22 20:14',2,'[{\"changed\": {\"fields\": [\"example\"]}}]',3,16),(1948,'2019-10-11 18:22:57.615497','13','  3[Advanced List] 72(13). Reverse a list  07-18 19:20',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,16),(1949,'2019-10-11 18:23:42.647486','11','  3[Advanced List] 70(11). Swap elements  07-18 02:53',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,16),(1950,'2019-10-11 18:24:26.931883','80','  3[Advanced For] 65(80). Multiply  09-01 20:44',2,'[{\"changed\": {\"fields\": [\"example\"]}}]',3,16),(1951,'2019-10-11 18:24:53.344574','25','  2[Class] 64(25). Find the error about class  07-22 20:28',2,'[{\"changed\": {\"fields\": [\"example\"]}}]',3,16),(1952,'2019-10-11 18:25:54.276421','24','  2[Class] 63(24). Class and Object  07-22 20:23',2,'[{\"changed\": {\"fields\": [\"explanation\", \"example\"]}}]',3,16),(1953,'2019-10-11 18:27:43.487151','110','  2[Dictionary] 62(110). Loop through a dictionary  10-02 21:16',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,16),(1954,'2019-10-11 18:28:19.373544','110','  2[Dictionary] 62(110). Loop through a dictionary  10-02 21:16',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,16),(1955,'2019-10-11 18:29:30.541031','2','  2[Dictionary] 61(2). Dictionary length  07-17 02:48',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,16),(1956,'2019-10-11 18:30:15.923101','109','  2[Dictionary] 60(109). Remove a value from a dictionary  10-02 20:31',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,16),(1957,'2019-10-11 21:18:00.906483','108','  2[Dictionary] 59(108). Add an item into a Dictionary  10-02 19:33',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,16),(1958,'2019-10-11 21:19:28.517181','107','  2[Dictionary] 58(107). Change a value of a dictionary  10-02 00:36',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,16),(1959,'2019-10-11 21:21:03.131099','106','  2[Dictionary] 57(106). Access a value of a dictionary  10-01 23:53',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,16),(1960,'2019-10-11 21:21:45.098588','106','  2[Dictionary] 57(106). Access a value of a dictionary  10-01 23:53',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,16),(1961,'2019-10-11 21:22:18.060497','106','  2[Dictionary] 57(106). Access a value of a dictionary  10-01 23:53',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,16),(1962,'2019-10-11 21:23:09.641745','103','  2[Set] 56(103). Remove duplicated values from a list  09-24 02:22',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,16),(1963,'2019-10-11 21:23:25.773286','103','  2[Set] 56(103). Remove duplicated values from a list  09-24 02:22',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,16),(1964,'2019-10-11 21:23:53.667487','103','  2[Set] 56(103). Remove duplicated values from a list  09-24 02:22',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,16),(1965,'2019-10-11 21:24:23.476708','103','  2[Set] 56(103). Remove duplicated values from a list  09-24 02:22',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,16),(1966,'2019-10-11 21:25:08.785831','93','  2[Set] 55(93). Set Union  09-23 01:05',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,16),(1967,'2019-10-11 21:25:37.687833','92','  2[Set] 54(92). Set length  09-23 01:00',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,16),(1968,'2019-10-11 21:26:05.469701','92','  2[Set] 54(92). Set length  09-23 01:00',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,16),(1969,'2019-10-11 22:13:39.572898','7','  2[Set] 53(7). Set exist  07-18 02:49',2,'[{\"changed\": {\"fields\": [\"explanation\", \"example\"]}}]',3,16),(1970,'2019-10-11 22:15:06.336350','87','  2[Set] 52(87). Set  09-21 11:02',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,16),(1971,'2019-10-11 22:15:27.716296','87','  2[Set] 52(87). Set  09-21 11:02',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,16),(1972,'2019-10-11 22:15:47.343131','87','  2[Set] 52(87). Set  09-21 11:02',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,16),(1973,'2019-10-11 22:16:10.163697','87','  2[Set] 52(87). Set  09-21 11:02',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,16),(1974,'2019-10-11 22:46:14.916822','100','  2[List] 50(100). Remove the duplicated values  09-24 01:44',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,16),(1975,'2019-10-11 22:47:29.280110','91','  2[List] 49(91). Sum of odd numbers  09-22 21:45',2,'[{\"changed\": {\"fields\": [\"example\"]}}]',3,16),(1976,'2019-10-11 22:48:22.915052','102','  2[List] 47(102). Convert a string to a list  09-24 02:17',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,16),(1977,'2019-10-11 22:49:01.395911','102','  2[List] 47(102). Convert a string to a list  09-24 02:17',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,16),(1978,'2019-10-11 22:49:36.232558','4','  2[List] 46(4). Find the same value as the index  07-18 02:46',2,'[{\"changed\": {\"fields\": [\"example\"]}}]',3,16),(1979,'2019-10-11 22:52:42.601174','99','  2[List] 45(99). Remove a value from a list  09-24 01:23',2,'[{\"changed\": {\"fields\": [\"explanation\", \"example\"]}}]',3,16),(1980,'2019-10-11 22:54:42.741352','98','  2[List] 44(98). Pop a value from a list  09-24 01:17',2,'[{\"changed\": {\"fields\": [\"explanation\", \"example\"]}}]',3,16),(1981,'2019-10-11 22:57:03.759236','6','  2[List] 43(6). Insert into List  07-18 02:48',2,'[{\"changed\": {\"fields\": [\"explanation\", \"example\"]}}]',3,16),(1982,'2019-10-11 22:57:33.934368','6','  2[List] 43(6). Insert into List  07-18 02:48',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,16),(1983,'2019-10-11 22:57:55.175907','6','  2[List] 43(6). Insert into List  07-18 02:48',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,16),(1984,'2019-10-11 22:58:52.777835','62','  2[List] 42(62). Append to List  08-17 12:43',2,'[{\"changed\": {\"fields\": [\"explanation\", \"example\"]}}]',3,16),(1985,'2019-10-11 23:00:14.059992','61','  2[List] 41(61). Index a value from list  08-17 01:35',2,'[{\"changed\": {\"fields\": [\"explanation\", \"example\"]}}]',3,16),(1986,'2019-10-11 23:02:16.914630','112','  2[String] 40(112). Type Casting  10-08 21:48',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,16),(1987,'2019-10-11 23:03:31.449022','55','  2[String] 39(55). Split a string  08-09 15:03',2,'[{\"changed\": {\"fields\": [\"explanation\", \"example\"]}}]',3,16),(1988,'2019-10-11 23:05:01.243372','56','  2[String] 38(56). Merge strings using Join  08-09 16:25',2,'[{\"changed\": {\"fields\": [\"explanation\", \"example\"]}}]',3,16),(1989,'2019-10-11 23:06:02.020103','3','  2[String] 37(3). Merge strings  07-18 02:45',2,'[{\"changed\": {\"fields\": [\"explanation\", \"example\"]}}]',3,16),(1990,'2019-10-11 23:07:26.872786','105','  2[String] 36(105). Slice a string  09-24 20:49',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,16),(1991,'2019-10-11 23:08:43.377812','97','  2[String] 35(97). Index a character  09-24 01:02',2,'[{\"changed\": {\"fields\": [\"explanation\", \"example\"]}}]',3,16),(1992,'2019-10-11 23:09:30.614715','111','  2[Function] 34(111). Find the sum of 1 to the number  10-07 21:10',2,'[{\"changed\": {\"fields\": [\"explanation\", \"example\"]}}]',3,16),(1993,'2019-10-11 23:10:12.500943','8','  2[Function] 33(8). Multiply function  07-18 02:49',2,'[{\"changed\": {\"fields\": [\"example\"]}}]',3,16),(1994,'2019-10-11 23:11:53.169466','86','  2[Function] 32(86). Return  09-09 00:49',2,'[{\"changed\": {\"fields\": [\"explanation\", \"example\"]}}]',3,16),(1995,'2019-10-11 23:13:51.536727','85','  2[Function] 31(85). Parameter  09-09 00:28',2,'[{\"changed\": {\"fields\": [\"explanation\", \"example\"]}}]',3,16),(1996,'2019-10-11 23:14:20.219745','85','  2[Function] 31(85). Parameter  09-09 00:28',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,16),(1997,'2019-10-11 23:15:30.069190','84','  2[Function] 30(84). Function  09-09 00:11',2,'[{\"changed\": {\"fields\": [\"explanation\", \"example\"]}}]',3,16),(1998,'2019-10-11 23:15:45.624199','84','  2[Function] 30(84). Function  09-09 00:11',2,'[{\"changed\": {\"fields\": [\"example\"]}}]',3,16),(1999,'2019-10-11 23:16:19.721365','84','  2[Function] 30(84). Function  09-09 00:11',2,'[{\"changed\": {\"fields\": [\"example\"]}}]',3,16),(2000,'2019-10-11 23:17:18.506753','5','  1[While] 29(5). Add function  07-18 02:47',2,'[{\"changed\": {\"fields\": [\"example\"]}}]',3,16),(2001,'2019-10-11 23:18:35.973007','19','  1[While] 28(19). Sum by using While  07-21 00:00',2,'[{\"changed\": {\"fields\": [\"explanation\", \"example\"]}}]',3,16),(2002,'2019-10-11 23:19:18.314130','20','  1[While] 27(20). Continue  07-21 00:09',2,'[{\"changed\": {\"fields\": [\"explanation\", \"example\"]}}]',3,16),(2003,'2019-10-11 23:20:01.615718','78','  1[While] 26(78). Break  08-30 21:42',2,'[{\"changed\": {\"fields\": [\"explanation\", \"example\"]}}]',3,16),(2004,'2019-10-11 23:22:50.142456','83','  1[While] 25(83). While  09-08 14:11',2,'[{\"changed\": {\"fields\": [\"explanation\", \"example\"]}}]',3,16),(2005,'2019-10-11 23:23:13.043438','83','  1[While] 25(83). While  09-08 14:11',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,16),(2006,'2019-10-11 23:23:52.392680','1','  1[For] 24(1). Sum by using For  07-17 02:33',2,'[{\"changed\": {\"fields\": [\"example\"]}}]',3,16),(2007,'2019-10-11 23:24:31.793553','90','  1[For] 23(90). For in string  09-22 21:09',2,'[{\"changed\": {\"fields\": [\"explanation\", \"example\"]}}]',3,16),(2008,'2019-10-11 23:25:09.739569','90','  1[For] 23(90). For in string  09-22 21:09',2,'[{\"changed\": {\"fields\": [\"example\"]}}]',3,16),(2009,'2019-10-11 23:25:28.911396','90','  1[For] 23(90). For in string  09-22 21:09',2,'[{\"changed\": {\"fields\": [\"example\"]}}]',3,16),(2010,'2019-10-11 23:26:49.242858','77','  1[For] 22(77). For  08-30 21:12',2,'[{\"changed\": {\"fields\": [\"explanation\", \"example\"]}}]',3,16),(2011,'2019-10-11 23:28:50.613257','89','  1[If] 21(89). If Elif Else  09-22 21:03',2,'[{\"changed\": {\"fields\": [\"explanation\", \"example\"]}}]',3,16),(2012,'2019-10-11 23:30:40.232551','89','  1[If] 21(89). If Elif Else  09-22 21:03',2,'[]',3,16),(2013,'2019-10-11 23:31:02.005752','89','  1[If] 21(89). If Elif Else  09-22 21:03',2,'[{\"changed\": {\"fields\": [\"example\"]}}]',3,16),(2014,'2019-10-11 23:31:54.209389','88','  1[If] 20(88). If Else  09-22 20:59',2,'[{\"changed\": {\"fields\": [\"explanation\", \"example\"]}}]',3,16),(2015,'2019-10-11 23:32:20.013905','88','  1[If] 20(88). If Else  09-22 20:59',2,'[{\"changed\": {\"fields\": [\"example\"]}}]',3,16),(2016,'2019-10-11 23:33:18.933716','82','  1[If] 19(82). If  09-04 00:19',2,'[{\"changed\": {\"fields\": [\"explanation\", \"example\"]}}]',3,16),(2017,'2019-10-11 23:38:12.653511','17','  1[Range] 17(17). Range with step  07-20 14:27',2,'[{\"changed\": {\"fields\": [\"explanation\", \"example\"]}}]',3,16),(2018,'2019-10-11 23:38:53.400821','16','  1[Range] 16(16). Range with start  07-20 14:24',2,'[{\"changed\": {\"fields\": [\"explanation\", \"example\"]}}]',3,16),(2019,'2019-10-11 23:39:31.049333','15','  1[Range] 15(15). Range  07-20 11:03',2,'[{\"changed\": {\"fields\": [\"explanation\", \"example\"]}}]',3,16),(2020,'2019-10-11 23:41:16.347912','96','  1[Operator] 14(96). Logical Operator (And)  09-23 18:55',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,16),(2021,'2019-10-11 23:41:40.563564','96','  1[Operator] 14(96). Logical Operator (And)  09-23 18:55',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,16),(2022,'2019-10-11 23:43:11.245883','74','  1[Operator] 13(74). Logical Operator (Or)  08-29 01:11',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,16),(2023,'2019-10-11 23:43:32.777656','74','  1[Operator] 13(74). Logical Operator (Or)  08-29 01:11',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,16),(2024,'2019-10-11 23:45:28.192295','95','  1[Operator] 12(95). Logical Operator (Not)  09-23 18:36',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,16),(2025,'2019-10-11 23:47:14.098342','73','  1[Operator] 11(73). Assignment Operator  08-29 00:12',2,'[{\"changed\": {\"fields\": [\"explanation\", \"example\"]}}]',3,16),(2026,'2019-10-11 23:50:38.559603','72','  1[Operator] 10(72). Relational Operator  08-28 23:18',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,16),(2027,'2019-10-11 23:52:07.348300','72','  1[Operator] 10(72). Relational Operator  08-28 23:18',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,16),(2028,'2019-10-11 23:56:04.132390','71','  1[Variable] 7(71). Variable naming convention  08-28 20:39',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,16),(2029,'2019-10-11 23:56:26.995091','71','  1[Variable] 7(71). Variable naming convention  08-28 20:39',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,16),(2030,'2019-10-11 23:57:17.591012','26','  1[Data Type] 2(26). Basic data type  07-22 23:03',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,16),(2031,'2019-10-11 23:57:57.483597','26','  1[Data Type] 2(26). Basic data type  07-22 23:03',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,16),(2032,'2019-10-12 18:36:21.922442','73','  1[Operator] 11(73). Assignment Operator  08-29 00:12',2,'[{\"changed\": {\"fields\": [\"example\"]}}]',3,2),(2033,'2019-10-12 21:42:07.702263','113','  3[Advanced For] 112(113). Nested For  10-12 13:04',1,'[{\"added\": {}}]',3,19),(2034,'2019-10-12 21:42:26.999799','144','112(113). Nested For - 4 [[1, 2, 3, 4], [2, 2, 3, 4], [3, 3, 3, 4], [4, 4, 4, 4]]',1,'[{\"added\": {}}]',4,19),(2035,'2019-10-12 21:46:08.729170','113','  3[Advanced For] 67(113). Nested For  10-12 13:04',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,19),(2036,'2019-10-12 21:48:48.970852','113','  3[Advanced For] 67(113). Nested For  10-12 13:04',2,'[{\"changed\": {\"fields\": [\"example\"]}}]',3,19),(2037,'2019-10-12 21:49:18.200666','144','67(113). Nested For - 4 [1, 2, 3, 4, 2, 2, 3, 4, 3, 3, 3, 4, 4, 4, 4, 4]',2,'[{\"changed\": {\"fields\": [\"expected_output\"]}}]',4,19),(2038,'2019-10-12 21:53:31.606937','114','  3[Advanced For] 113(114). Nested For for Sum  10-12 14:51',1,'[{\"added\": {}}]',3,2),(2039,'2019-10-12 21:54:22.565390','145','113(114). Nested For for Sum - 4 [1, 2, 3, 4, 2, 3, 4, 5, 3, 4, 5, 6, 4, 5, 6, 7]',1,'[{\"added\": {}}]',4,2),(2040,'2019-10-12 22:04:42.067837','115','  3[Advanced For] 114(115). Nested For for triangle  10-12 14:55',1,'[{\"added\": {}}]',3,19),(2041,'2019-10-12 22:04:57.601776','146','114(115). Nested For for triangle - 4 [1, 1, 2, 1, 2, 3, 1, 2, 3, 4]',1,'[{\"added\": {}}]',4,19),(2042,'2019-10-13 00:26:27.001270','91','  2[List] 49(91). Sum of odd numbers  09-22 21:45',2,'[{\"changed\": {\"fields\": [\"example\"]}}]',3,19),(2043,'2019-10-13 01:08:12.401411','4','  Junior-21. List',2,'[{\"changed\": {\"fields\": [\"image\"]}}]',2,19),(2044,'2019-10-13 01:08:18.952431','12','  Super Junior-10. Data Type',2,'[{\"changed\": {\"fields\": [\"image\"]}}]',2,19),(2045,'2019-10-13 06:12:14.659130','116','  2[List] 115(116). Minimum difference  10-12 23:06',1,'[{\"added\": {}}]',3,19),(2046,'2019-10-13 06:12:52.976300','147','115(116). Minimum difference - [1, 5, 10, 7] 2',1,'[{\"added\": {}}]',4,19),(2047,'2019-10-13 06:32:36.792996','117','  3[Advanced String] 116(117). Count strings  10-12 23:25',1,'[{\"added\": {}}]',3,19),(2048,'2019-10-13 06:33:13.741562','148','116(117). Count strings - \"hipypykipypydskids\" 2',1,'[{\"added\": {}}]',4,19),(2049,'2019-10-13 06:38:57.027924','149','95(117). Count strings - \"hello\" 0',1,'[{\"added\": {}}]',4,19),(2050,'2019-10-13 07:09:15.694118','118','  2[Dictionary] 117(118). Get a value of a dictionary  10-12 23:57',1,'[{\"added\": {}}]',3,19),(2051,'2019-10-13 07:09:52.034824','150','117(118). Get a value of a dictionary - {\"key1\": 1, \"key2\": 2}\r\n\"key3\" 0',1,'[{\"added\": {}}]',4,19),(2052,'2019-10-13 07:11:00.766723','118','  2[Dictionary] 117(118). Get a value of a dictionary  10-12 23:57',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,19),(2053,'2019-10-13 22:22:56.033911','106','  2[Dictionary] 58(106). Access a value of a dictionary  10-01 23:53',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(2054,'2019-10-13 22:55:52.446846','140','63(2). Dictionary length - {\'brand\': \'PyPyKids\', \'language\': \'Python\', \'target\': \'Kids\'} 3',2,'[{\"changed\": {\"fields\": [\"input\"]}}]',4,2),(2055,'2019-10-14 01:11:43.254356','140','63(2). Dictionary length - {\"brand\": \"PyPyKids\", \"language\": \"Python\", \"target\": \"Kids\"} 3',2,'[{\"changed\": {\"fields\": [\"input\"]}}]',4,2),(2056,'2019-10-14 01:12:05.684417','140','63(2). Dictionary length - {\"brand\":\"PyPyKids\",\"language\":\"Python\",\"target\":\"Kids\"} 3',2,'[{\"changed\": {\"fields\": [\"input\"]}}]',4,2),(2057,'2019-10-14 03:11:55.957655','119','  2[Dictionary] 118(119). Same value in dictionary  10-13 20:01',1,'[{\"added\": {}}]',3,2),(2058,'2019-10-14 03:12:31.228813','151','118(119). Same value in dictionary - {2:4,4:4,5:6} False',1,'[{\"added\": {}}]',4,2),(2059,'2019-10-14 03:14:02.677407','152','118(119). Same value in dictionary - {1:2,\"str\":4,2:2,\"hello\":\"hi\"} True',1,'[{\"added\": {}}]',4,2),(2060,'2019-10-14 03:14:18.040025','151','118(119). Same value in dictionary - {2:4,4:3,5:6} False',2,'[{\"changed\": {\"fields\": [\"input\"]}}]',4,2),(2061,'2019-10-14 03:14:55.024404','119','  2[Dictionary] 118(119). Check for same value in dictionary  10-13 20:01',2,'[{\"changed\": {\"fields\": [\"title\"]}}]',3,2),(2062,'2019-10-14 03:17:39.249006','109','  2[Dictionary] 62(109). Remove a value from a dictionary  10-02 20:31',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(2063,'2019-10-14 03:22:29.909418','118','  2[Dictionary] 59(118). Get a value of a dictionary  10-12 23:57',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(2064,'2019-10-14 03:38:59.284283','152','65(119). Check for same value in dictionary - {1:2,\"str\":4,5:2,\"hello\":\"hi\"} True',2,'[{\"changed\": {\"fields\": [\"input\"]}}]',4,2),(2065,'2019-10-14 03:39:20.295478','151','65(119). Check for same value in dictionary - {2:4,\"hello\":3,5:6} False',2,'[{\"changed\": {\"fields\": [\"input\"]}}]',4,2),(2066,'2019-10-14 03:46:07.289834','113','  3[Advanced For] 70(113). Nested For  10-12 13:04',2,'[{\"changed\": {\"fields\": [\"question\", \"example\"]}}]',3,2),(2067,'2019-10-14 04:11:35.834548','114','  3[Advanced For] 71(114). Nested For for Sum  10-12 14:51',2,'[{\"changed\": {\"fields\": [\"example\"]}}]',3,2),(2068,'2019-10-14 04:11:58.971933','145','71(114). Nested For for Sum - 4 [2, 3, 4, 5, 3, 4, 5, 6, 4, 5, 6, 7, 5, 6, 7, 8]',2,'[{\"changed\": {\"fields\": [\"expected_output\"]}}]',4,2),(2069,'2019-10-14 04:13:00.738593','153','71(114). Nested For for Sum - 3 [2, 3, 4, 3, 4, 5, 4, 5, 6]',1,'[{\"added\": {}}]',4,2),(2070,'2019-10-14 04:39:22.330095','115','  3[Advanced For] 72(115). Nested For for triangle  10-12 14:55',2,'[{\"changed\": {\"fields\": [\"explanation\", \"hint\"]}}]',3,2),(2071,'2019-10-14 06:01:56.830280','152','65(119). Check for same value in dictionary - {1: 2, \"str\": 4, 5: 2, \"hello\": \"hi\"} True',2,'[{\"changed\": {\"fields\": [\"input\"]}}]',4,19),(2072,'2019-10-14 06:02:13.128787','151','65(119). Check for same value in dictionary - {2: 4, \"hello\": 3, 5: 6} False',2,'[{\"changed\": {\"fields\": [\"input\"]}}]',4,19),(2073,'2019-10-14 06:04:05.723812','140','63(2). Dictionary length - {\"brand\": \"PyPyKids\", \"language\": \"Python\", \"target\": \"Kids\"} 3',2,'[{\"changed\": {\"fields\": [\"input\"]}}]',4,19),(2074,'2019-10-14 06:12:56.368897','120','  1[For] 119(120). Sum up to the number  10-13 23:09',1,'[{\"added\": {}}]',3,19),(2075,'2019-10-14 06:13:24.293227','154','119(120). Sum up to the number - 10 ',1,'[{\"added\": {}}]',4,19),(2076,'2019-10-14 06:18:47.580034','120','  1[For] 25(120). Sum up to 10  10-13 23:09',2,'[{\"changed\": {\"fields\": [\"title\", \"question\", \"example\"]}}]',3,19),(2077,'2019-10-14 06:19:00.503363','154','25(120). Sum up to 10 -  ',2,'[{\"changed\": {\"fields\": [\"input\"]}}]',4,19),(2078,'2019-10-14 06:20:37.683580','120','Sum up to 100 -    1 For 25(120)',2,'[{\"changed\": {\"fields\": [\"title\", \"question\", \"example\"]}}]',3,19),(2079,'2019-10-14 06:20:51.152435','154','25(120). Sum up to 100 -  ',2,'[{\"changed\": {\"fields\": [\"expected_stdout\"]}}]',4,19),(2080,'2019-10-14 06:34:01.065576','35','x Expert-44. Dynamic Programming',1,'[{\"added\": {}}]',2,19),(2081,'2019-10-14 06:35:03.496850','35','  Expert-44. Dynamic Programming',2,'[{\"changed\": {\"fields\": [\"visible\"]}}]',2,19),(2082,'2019-10-14 06:41:51.093974','35','x Expert-44. Dynamic Programming',2,'[{\"changed\": {\"fields\": [\"visible\"]}}]',2,19),(2083,'2019-10-14 06:53:42.224384','121','  3[Advanced Set] 120(121). Count duplicated values  10-13 23:50',1,'[{\"added\": {}}]',3,19),(2084,'2019-10-14 06:54:08.112598','155','120(121). Count duplicated values - [1, 2, 3, 4, 1, 2, 3, 3, 3] 3',1,'[{\"added\": {}}]',4,19),(2085,'2019-10-14 06:54:56.829813','121','  3[Advanced Set] 100(121). Count the number of duplicate values  10-13 23:50',2,'[{\"changed\": {\"fields\": [\"title\"]}}]',3,19),(2086,'2019-10-14 07:11:26.229998','122','  3[Math] 121(122). Rectangle with integer height and width  10-13 23:57',1,'[{\"added\": {}}]',3,19),(2087,'2019-10-14 07:11:38.760822','156','121(122). Rectangle with integer height and width - 17 False',1,'[{\"added\": {}}]',4,19),(2088,'2019-10-14 07:11:48.693248','157','121(122). Rectangle with integer height and width - 18 True',1,'[{\"added\": {}}]',4,19),(2089,'2019-10-14 07:38:23.240846','123','  3[Math] 122(123). Find a median  10-14 00:16',1,'[{\"added\": {}}]',3,19),(2090,'2019-10-14 07:38:42.243183','158','122(123). Find a median - [7, 6, 5, 3, 4, 2, 1] 4',1,'[{\"added\": {}}]',4,19),(2091,'2019-10-14 07:38:58.573587','159','122(123). Find a median - [3, 4, 5, 1, 2] 3',1,'[{\"added\": {}}]',4,19),(2092,'2019-10-14 08:08:47.660865','69','  4[Linked List] 119(69). Find the maximum  08-19 22:15',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,19),(2093,'2019-10-14 08:13:29.562530','124','  2[Dictionary] 123(124). Duplicate values in dictionary  10-14 01:11',1,'[{\"added\": {}}]',3,19),(2094,'2019-10-14 08:13:51.078402','160','123(124). Duplicate values in dictionary - {\"hello\": 1, \"hi\": 1} True',1,'[{\"added\": {}}]',4,19),(2095,'2019-10-14 08:14:02.055163','161','123(124). Duplicate values in dictionary - {\"hello\": 1, \"hi\": 2} False',1,'[{\"added\": {}}]',4,19),(2096,'2019-10-14 08:16:14.922070','47','  2[List] 86(47). How many numbers less than k  08-05 18:28',2,'[{\"changed\": {\"fields\": [\"category\"]}}]',3,19),(2097,'2019-10-14 08:17:38.806852','11','  2[List] 79(11). Swap elements  07-18 02:53',2,'[{\"changed\": {\"fields\": [\"category\"]}}]',3,19),(2098,'2019-10-14 08:18:01.438567','12','  2[List] 80(12). Swap 2nd elements  07-18 19:03',2,'[{\"changed\": {\"fields\": [\"category\"]}}]',3,19),(2099,'2019-10-14 08:19:00.399153','11','  2[List] 47(11). Swap 1st elements  07-18 02:53',2,'[{\"changed\": {\"fields\": [\"title\"]}}]',3,19),(2100,'2019-10-14 08:19:11.884838','11','  2[List] 47(11). Swap 1st element  07-18 02:53',2,'[{\"changed\": {\"fields\": [\"title\"]}}]',3,19),(2101,'2019-10-14 08:19:21.956028','12','  2[List] 48(12). Swap 2nd element  07-18 19:03',2,'[{\"changed\": {\"fields\": [\"title\"]}}]',3,19),(2102,'2019-10-14 08:24:15.208744','28','  3[Advanced Dictionary] 102(28). Most common character  07-26 00:36',2,'[{\"changed\": {\"fields\": [\"title\", \"question\"]}}]',3,19),(2103,'2019-10-14 08:29:25.233597','125','  3[Advanced Dictionary] 124(125). Most common word  10-14 01:26',1,'[{\"added\": {}}]',3,19),(2104,'2019-10-14 08:30:05.433703','162','124(125). Most common word - \"pypy kids pypy hello kids\" [\'pypy\', \'kids\']',1,'[{\"added\": {}}]',4,19),(2105,'2019-10-14 08:30:31.697730','163','124(125). Most common word - [\"hi\", \"hello\"] [\"hi\", \"hello\"]',1,'[{\"added\": {}}]',4,19),(2106,'2019-10-14 08:30:43.123706','163','124(125). Most common word - [\"hi\", \"hello\"] [\'hi\', \'hello\']',2,'[{\"changed\": {\"fields\": [\"expected_output\"]}}]',4,19),(2107,'2019-10-14 13:12:20.834894','54','  3[Advanced List] 89(54). Swap the values  08-08 22:22',2,'[{\"changed\": {\"fields\": [\"example\"]}}]',3,2),(2108,'2019-10-14 13:14:13.594152','69','89(54). Swap the values - [3, 4, 5, 6, 7, 8, 9]\r\n2\r\n5 [3, 4, 9, 8, 7, 6, 5]',2,'[{\"changed\": {\"fields\": [\"expected_output\"]}}]',4,2),(2109,'2019-10-14 13:15:16.929451','69','89(54). Swap the values - [3, 4, 5, 6, 7, 8, 9]\r\n2\r\n6 [3, 4, 9, 8, 7, 6, 5]',2,'[{\"changed\": {\"fields\": [\"input\"]}}]',4,2),(2110,'2019-10-14 13:15:42.925675','54','  3[Advanced List] 89(54). Swap the values  08-08 22:22',2,'[{\"changed\": {\"fields\": [\"example\"]}}]',3,2),(2111,'2019-10-14 16:58:15.132719','149','99(117). Count strings - \"hellohello\" 0',2,'[{\"changed\": {\"fields\": [\"input\"]}}]',4,19),(2112,'2019-10-14 16:58:46.284860','164','99(117). Count strings - \"pypykidshellohellogoodjob\" 1',1,'[{\"added\": {}}]',4,19),(2113,'2019-10-15 00:23:19.527821','123','  3[Math] 118(123). Find a median  10-14 00:16',2,'[{\"changed\": {\"fields\": [\"explanation\", \"example\"]}}]',3,2),(2114,'2019-10-15 00:25:10.598070','122','  3[Math] 117(122). Rectangle with integer height and width  10-13 23:57',2,'[{\"changed\": {\"fields\": [\"question\"]}}]',3,2),(2115,'2019-10-15 00:31:35.620179','105','124(79). Activity selection problem - [1, 2, 4, 6]\r\n[4, 5, 6, 8] 3',2,'[{\"changed\": {\"fields\": [\"input\", \"expected_output\"]}}]',4,2),(2116,'2019-10-15 00:46:01.632215','307','117(122). dayeon 2019-10-14 right:1',2,'[{\"changed\": {\"fields\": [\"answer\"]}}]',12,2),(2117,'2019-10-15 00:48:32.957235','164','99(117). Count strings - \"pypypypypypypy\" 0',2,'[{\"changed\": {\"fields\": [\"input\", \"expected_output\"]}}]',4,2),(2118,'2019-10-15 01:00:43.210004','165','99(117). Count strings - \"pykids\" 0',1,'[{\"added\": {}}]',4,2),(2119,'2019-10-15 01:02:50.624130','166','99(117). Count strings - \"pykidspykids\" 1',1,'[{\"added\": {}}]',4,2),(2120,'2019-10-15 01:08:16.976517','167','99(117). Count strings - \"pypyhellotricky\" 0',1,'[{\"added\": {}}]',4,2),(2121,'2019-10-15 01:37:25.816011','119','  2[Dictionary] 70(119). Check for same value in dictionary  10-14 03:01',3,'',3,1),(2122,'2019-10-15 01:38:01.112984','308','124(79). dayeon 2019-10-14 right:-1',2,'[{\"changed\": {\"fields\": [\"right\"]}}]',12,1),(2123,'2019-10-15 01:42:02.705999','126','  2[String] 125(126). Last N characters  10-14 18:35',1,'[{\"added\": {}}]',3,2),(2124,'2019-10-15 01:42:51.858245','168','125(126). Last N characters - \'hello\'\r\n5 \'hello\'',1,'[{\"added\": {}}]',4,2),(2125,'2019-10-15 01:43:32.926030','169','125(126). Last N characters - \'pypykids\'\r\n5 \'ykids\'',1,'[{\"added\": {}}]',4,2),(2126,'2019-10-15 01:46:01.630472','126','  2[String] 42(126). Last N characters  10-14 18:35',2,'[{\"changed\": {\"fields\": [\"question\"]}}]',3,2),(2127,'2019-10-15 01:48:43.879614','169','42(126). Last N characters - \'pypykids\'\r\n5 ykids',2,'[{\"changed\": {\"fields\": [\"expected_output\"]}}]',4,2),(2128,'2019-10-15 01:48:59.988121','168','42(126). Last N characters - \'hello\'\r\n5 hello',2,'[{\"changed\": {\"fields\": [\"expected_output\"]}}]',4,2),(2129,'2019-10-15 01:56:29.855819','127','  3[Math] 126(127). Integer or decimal  10-14 18:51',1,'[{\"added\": {}}]',3,2),(2130,'2019-10-15 01:57:39.083159','170','126(127). Integer or decimal - [1.3, 3.7] True',1,'[{\"added\": {}}]',4,2),(2131,'2019-10-15 01:58:02.892352','171','126(127). Integer or decimal - [2.4, 4.3] False',1,'[{\"added\": {}}]',4,2),(2132,'2019-10-15 02:19:26.881094','127','Integer or decimal -    3 Math 115(127)',2,'[{\"changed\": {\"fields\": [\"explanation\", \"question\", \"example\"]}}]',3,2),(2133,'2019-10-15 02:19:47.116413','170','115(127). Integer or decimal - [2.3, 3.7] True',2,'[{\"changed\": {\"fields\": [\"input\"]}}]',4,2),(2134,'2019-10-15 07:25:22.068028','106','Access a value of a dictionary -    2 Dictionary 64(106)',2,'[{\"changed\": {\"fields\": [\"video\"]}}]',3,19),(2135,'2019-10-15 07:50:35.363353','8','Use other function -    2 Function 35(8)',2,'[{\"changed\": {\"fields\": [\"title\"]}}]',3,19),(2136,'2019-10-15 07:57:32.505824','128','Longest common prefix -    2 String 127(128)',1,'[{\"added\": {}}]',3,19),(2137,'2019-10-15 07:57:46.717442','172','127(128). Longest common prefix - [\"abc\", \"abd\", abg\"] \'ab\'',1,'[{\"added\": {}}]',4,19),(2138,'2019-10-15 07:58:16.082043','173','127(128). Longest common prefix - [\"abcde\", \"abcd\", \"abc\", \"abcf\"] \'abc\'',1,'[{\"added\": {}}]',4,19),(2139,'2019-10-15 08:05:38.772801','129','Add one to the list -    2 List 128(129)',1,'[{\"added\": {}}]',3,2),(2140,'2019-10-15 08:06:18.190915','174','128(129). Add one to the list - [9] [1, 0]',1,'[{\"added\": {}}]',4,2),(2141,'2019-10-15 08:06:41.579553','175','128(129). Add one to the list - [3, 9] [4, 0]',1,'[{\"added\": {}}]',4,2),(2142,'2019-10-15 08:07:19.509487','176','128(129). Add one to the list - [4, 5] [4, 6]',1,'[{\"added\": {}}]',4,2),(2143,'2019-10-15 08:13:38.899828','130','Reverse a number -    3 Math 129(130)',1,'[{\"added\": {}}]',3,19),(2144,'2019-10-15 08:13:58.441961','177','129(130). Reverse a number - 1234 4321',1,'[{\"added\": {}}]',4,2),(2145,'2019-10-15 08:14:16.373784','178','129(130). Reverse a number - 30302 20303',1,'[{\"added\": {}}]',4,2),(2146,'2019-10-15 08:27:40.922798','131','Number distance game -    3 Math 130(131)',1,'[{\"added\": {}}]',3,19),(2147,'2019-10-15 08:28:02.111389','179','130(131). Number distance game - 1234\r\n4321 6',1,'[{\"added\": {}}]',4,2),(2148,'2019-10-15 08:28:27.690311','180','130(131). Number distance game - 141\r\n443 5',1,'[{\"added\": {}}]',4,2),(2149,'2019-10-15 08:31:48.870537','132','Move ones to the last -    2 List 131(132)',1,'[{\"added\": {}}]',3,19),(2150,'2019-10-15 08:32:11.577399','181','131(132). Move ones to the last - [1, 2, 3, 4, 3, 1, 2] [2, 3, 4, 3, 2, 1, 1]',1,'[{\"added\": {}}]',4,2),(2151,'2019-10-15 08:32:36.640798','182','131(132). Move ones to the last - [4, 1, 3, 1, 2, 1, 1] [4, 3, 2, 1, 1, 1]',1,'[{\"added\": {}}]',4,2),(2152,'2019-10-15 08:40:54.584770','133','Sum of two lists -    3 Advanced List 132(133)',1,'[{\"added\": {}}]',3,19),(2153,'2019-10-15 08:41:19.106915','183','132(133). Sum of two lists - [9, 9]\r\n[1] [1, 0, 0]',1,'[{\"added\": {}}]',4,2),(2154,'2019-10-15 08:41:45.220505','184','132(133). Sum of two lists - [1, 2, 3]\r\n[7, 7] [2, 0, 0]',1,'[{\"added\": {}}]',4,2),(2155,'2019-10-15 08:47:11.135247','79','95(66). 1. dayeon 2019-10-14 Adjacent same numbers right:1',2,'[{\"changed\": {\"fields\": [\"answer\"]}}]',12,2),(2156,'2019-10-15 08:55:21.383330','89','95(66). Adjacent same numbers - [4, 4, 4, 1, 1, 1, 2, 3, 4] 3',2,'[{\"changed\": {\"fields\": [\"input\", \"expected_output\"]}}]',4,2),(2157,'2019-10-15 08:56:25.860547','89','95(66). Adjacent same numbers - [1, 2, 3, 4] 1',2,'[{\"changed\": {\"fields\": [\"input\", \"expected_output\"]}}]',4,2),(2158,'2019-10-15 09:05:14.320262','64','10-15 1. dayeon DailyCheckIn',3,'',19,19),(2159,'2019-10-15 09:05:26.848361','1','1. dayeon',2,'[{\"changed\": {\"fields\": [\"point\"]}}]',14,19),(2160,'2019-10-15 09:19:51.540550','66','Adjacent same numbers -    3 Advanced List 95(66)',2,'[{\"changed\": {\"fields\": [\"question\", \"example\"]}}]',3,19),(2161,'2019-10-15 18:01:45.798426','65','10-15 1. dayeon DailyCheckIn',3,'',19,2),(2162,'2019-10-15 18:01:59.668349','1','1. dayeon',2,'[{\"changed\": {\"fields\": [\"point\"]}}]',14,2),(2163,'2019-10-16 01:49:42.425585','182','60(132). Move ones to the last - [4, 1, 3, 1, 2, 1, 1] [4, 3, 2, 1, 1, 1, 1]',2,'[{\"changed\": {\"fields\": [\"expected_output\"]}}]',4,2),(2164,'2019-10-16 02:03:00.818308','172','44(128). Longest common prefix - [\"abc\", \"abd\", \"abg\"] \'ab\'',2,'[{\"changed\": {\"fields\": [\"input\"]}}]',4,2),(2165,'2019-10-16 02:05:15.222005','128','Longest common prefix -    2 String 44(128)',2,'[{\"changed\": {\"fields\": [\"question\", \"example\"]}}]',3,2),(2166,'2019-10-16 02:08:30.805214','173','44(128). Longest common prefix - [\"abcde\", \"abcd\", \"abc\", \"abcf\"] abc',2,'[{\"changed\": {\"fields\": [\"expected_output\"]}}]',4,2),(2167,'2019-10-16 02:08:47.606199','172','44(128). Longest common prefix - [\"abc\", \"abd\", \"abg\"] ab',2,'[{\"changed\": {\"fields\": [\"expected_output\"]}}]',4,2),(2168,'2019-10-16 02:27:48.529053','77','93(59). Maximum profit - [4, 3, 5, 8, 6, 2] 5',2,'[{\"changed\": {\"fields\": [\"input\"]}}]',4,2),(2169,'2019-10-16 02:38:45.618165','35','  Expert-44. Dynamic Programming',2,'[{\"changed\": {\"fields\": [\"visible\"]}}]',2,2),(2170,'2019-10-16 02:39:34.528703','59','Maximum profit -    5 Dynamic Programming 93(59)',2,'[{\"changed\": {\"fields\": [\"category\"]}}]',3,2),(2171,'2019-10-16 02:47:39.485317','185','95(66). Adjacent same numbers - [1,4,4,5,5,2,3,6,66,5,5,5] 3',1,'[{\"added\": {}}]',4,2),(2172,'2019-10-16 03:55:05.234847','133','Sum of two lists -    3 Advanced List 100(133)',2,'[{\"changed\": {\"fields\": [\"answer_header\"]}}]',3,2),(2173,'2019-10-16 04:07:22.817849','186','106(121). Count the number of duplicate values - [1, 2, 3, 4, 1, 2, 3, 4, 5] 4',1,'[{\"added\": {}}]',4,2),(2174,'2019-10-16 04:08:25.540227','121','Count the number of duplicate values -    3 Advanced Set 106(121)',2,'[{\"changed\": {\"fields\": [\"example\"]}}]',3,2),(2175,'2019-10-16 08:42:51.281743','134','Find the middle of a linked list. -    4 Linked List 133(134)',1,'[{\"added\": {}}]',3,19),(2176,'2019-10-16 08:43:52.920941','134','Find the middle of a linked list. -    4 Linked List 133(134)',2,'[{\"changed\": {\"fields\": [\"example\"]}}]',3,19),(2177,'2019-10-16 08:44:55.758465','134','Find the middle of a linked list. -    4 Linked List 133(134)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,19),(2178,'2019-10-16 08:45:40.451721','134','Find the middle of a linked list. -    4 Linked List 133(134)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,19),(2179,'2019-10-16 08:46:11.428664','187','133(134). Find the middle of a linked list. - Node[1, 2, 3, 4, 5] 3',1,'[{\"added\": {}}]',4,19),(2180,'2019-10-16 08:46:30.163058','188','133(134). Find the middle of a linked list. - Node[1, 2, 4, 5, 6, 7] 4',1,'[{\"added\": {}}]',4,19),(2181,'2019-10-16 09:00:21.139872','135','Find Nth node from the end of a linked list -    4 Linked List 134(135)',1,'[{\"added\": {}}]',3,19),(2182,'2019-10-16 09:00:50.221023','189','134(135). Find Nth node from the end of a linked list - Node[1, 2, 4, 5, 6, 7]\r\n2 6',1,'[{\"added\": {}}]',4,19),(2183,'2019-10-16 09:01:20.539162','190','134(135). Find Nth node from the end of a linked list - Node[1, 2, 4, 5, 6, 7, 8, 9]\r\n3 7',1,'[{\"added\": {}}]',4,19),(2184,'2019-10-16 09:04:19.615731','135','Find Nth node from the end of a linked list -    4 Linked List 132(135)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,19),(2185,'2019-10-16 09:35:41.610196','50','Fibonacci -    5 Dynamic Programming 119(50)',2,'[{\"changed\": {\"fields\": [\"category\"]}}]',3,19),(2186,'2019-10-16 09:40:50.496346','76','Sliding Window Maximum -    5 Dynamic Programming 97(76)',2,'[{\"changed\": {\"fields\": [\"category\"]}}]',3,19),(2187,'2019-10-16 09:52:44.285529','36','x Expert-45. Keep',1,'[{\"added\": {}}]',2,19),(2188,'2019-10-16 09:52:55.725575','136','Detect a cycle in the list. - x  4 Tree 135(136)',1,'[{\"added\": {}}]',3,19),(2189,'2019-10-16 09:53:05.821084','136','Detect a cycle in the list. - x  5 Keep 135(136)',2,'[{\"changed\": {\"fields\": [\"category\"]}}]',3,19),(2190,'2019-10-17 02:21:38.603323','137','Find all prime numbers less than k -    3 Math 136(137)',1,'[{\"added\": {}}]',3,19),(2191,'2019-10-17 02:21:57.475430','191','136(137). Find all prime numbers less than k - 20 [2, 3, 5, 7, 11, 13, 17, 19]',1,'[{\"added\": {}}]',4,19),(2192,'2019-10-17 02:22:08.835240','192','136(137). Find all prime numbers less than k - 10 [2, 3, 5, 7]',1,'[{\"added\": {}}]',4,19),(2193,'2019-10-17 04:18:23.942028','125','Most common word -    3 Advanced Dictionary 106(125)',2,'[{\"changed\": {\"fields\": [\"answer_header\"]}}]',3,2),(2194,'2019-10-17 04:30:45.029486','163','106(125). Most common word - \"hi hello\" [\'hi\', \'hello\']',2,'[{\"changed\": {\"fields\": [\"input\"]}}]',4,2),(2195,'2019-10-17 04:31:22.627194','162','106(125). Most common word - \"pypy hello kids pypy kids\" [\'pypy\', \'kids\']',2,'[{\"changed\": {\"fields\": [\"input\"]}}]',4,2),(2196,'2019-10-17 04:31:56.738318','162','106(125). Most common word - \"pypy hello kids pypy kids\" [\'pypy\', \'kids\']',2,'[]',4,2),(2197,'2019-10-17 04:32:39.719479','193','106(125). Most common word - \"hello pypy pypy kids\" [\'pypy\']',1,'[{\"added\": {}}]',4,2),(2198,'2019-10-17 05:12:59.078942','138','Binary number -    3 Math 137(138)',1,'[{\"added\": {}}]',3,19),(2199,'2019-10-17 05:13:24.968462','194','137(138). Binary number - 10 1010',1,'[{\"added\": {}}]',4,19),(2200,'2019-10-17 05:13:37.353291','195','137(138). Binary number - 16 10000',1,'[{\"added\": {}}]',4,19),(2201,'2019-10-17 05:15:45.198661','138','Binary number -    3 Math 125(138)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,19),(2202,'2019-10-17 05:18:10.233217','138','Binary number -    3 Math 125(138)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,19),(2203,'2019-10-17 05:19:02.402883','138','Binary number -    3 Math 125(138)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,19),(2204,'2019-10-17 05:21:00.196358','138','Binary number -    3 Math 125(138)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,19),(2205,'2019-10-17 07:28:57.741828','58','11 Day Streak',1,'[{\"added\": {}}]',15,19),(2206,'2019-10-17 07:29:53.462272','59','12 Day Streak',1,'[{\"added\": {}}]',15,19),(2207,'2019-10-17 07:30:11.321717','60','13 Day Streak',1,'[{\"added\": {}}]',15,19),(2208,'2019-10-17 07:30:30.610404','61','14 Day Streak',1,'[{\"added\": {}}]',15,19),(2209,'2019-10-18 04:25:54.716797','158','122(123). Find a median - [7, 6, 5, 3, 4, 2, 1] 4',2,'[{\"changed\": {\"fields\": [\"input\"]}}]',4,2),(2210,'2019-10-18 04:36:23.666885','138','Binary number -    3 Math 125(138)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(2211,'2019-10-18 20:17:22.010971','24','Class and Object -    2 Class 74(24)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(2212,'2019-10-18 20:31:04.988201','24','Class and Object -    2 Class 74(24)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(2213,'2019-10-18 20:52:49.183700','24','Class and Object -    2 Class 74(24)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(2214,'2019-10-19 18:01:42.298325','24','Class and Object -    2 Class 74(24)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,19),(2215,'2019-10-19 18:19:09.190515','24','Class and Object -    2 Class 74(24)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,19),(2216,'2019-10-19 18:47:22.288748','24','Class and Object -    2 Class 74(24)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,19),(2217,'2019-10-19 18:53:41.762635','24','Class and Object -    2 Class 74(24)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,19),(2218,'2019-10-19 19:04:19.425176','24','Class and Object -    2 Class 74(24)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,19),(2219,'2019-10-19 19:26:23.708109','24','Method -    2 Class 74(24)',2,'[{\"changed\": {\"fields\": [\"title\", \"explanation\"]}}]',3,19),(2220,'2019-10-19 19:26:28.370684','139','Class and Object -    2 Class 138(139)',1,'[{\"added\": {}}]',3,19),(2221,'2019-10-19 19:32:56.170251','139','Class and Object -    2 Class 138(139)',2,'[{\"changed\": {\"fields\": [\"question\", \"example\"]}}]',3,19),(2222,'2019-10-19 19:33:00.303115','24','Method -    2 Class 74(24)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,19),(2223,'2019-10-19 19:40:41.457522','139','Class and Object -    2 Class 74(139)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,19),(2224,'2019-10-19 19:46:26.013223','139','Class and Object -    2 Class 74(139)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,19),(2225,'2019-10-19 19:47:44.892415','24','Method -    2 Class 75(24)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,19),(2226,'2019-10-19 19:48:37.429615','24','Method -    2 Class 75(24)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,19),(2227,'2019-10-19 19:50:05.690603','24','Method -    2 Class 75(24)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,19),(2228,'2019-10-19 19:55:55.216811','139','Class and Object -    2 Class 74(139)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,19),(2229,'2019-10-19 19:58:18.004892','139','Class and Object -    2 Class 74(139)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,19),(2230,'2019-10-19 19:58:47.368812','139','Class and Object -    2 Class 74(139)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,19),(2231,'2019-10-19 19:59:30.723090','139','Class and Object -    2 Class 74(139)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,19),(2232,'2019-10-19 20:03:32.580118','139','Class and Object -    2 Class 74(139)',2,'[]',3,19),(2233,'2019-10-19 20:21:06.831565','140','Access member variables -    2 Class 139(140)',1,'[{\"added\": {}}]',3,19),(2234,'2019-10-19 20:23:08.727466','140','Member variables -    2 Class 139(140)',2,'[{\"changed\": {\"fields\": [\"title\"]}}]',3,19),(2235,'2019-10-19 20:28:47.026159','140','Member variables -    2 Class 139(140)',2,'[{\"changed\": {\"fields\": [\"example\"]}}]',3,19),(2236,'2019-10-19 20:33:18.076672','139','Class and Object -    2 Class 74(139)',2,'[{\"changed\": {\"fields\": [\"explanation\", \"question\", \"example\", \"quiz_type\", \"option1\", \"option2\", \"option3\", \"option4\"]}}]',3,19),(2237,'2019-10-19 20:33:42.712833','196','139(140). Member variables -  1',1,'[{\"added\": {}}]',4,19),(2238,'2019-10-19 20:33:52.242793','24','Method -    2 Class 75(24)',2,'[]',3,19),(2239,'2019-10-19 20:36:06.005674','129','Add one to the list -    3 Advanced List 99(129)',2,'[{\"changed\": {\"fields\": [\"category\"]}}]',3,19),(2240,'2019-10-19 20:44:28.680360','24','Method -    2 Class 76(24)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,19),(2241,'2019-10-19 21:01:45.148564','140','Member variables -    2 Class 75(140)',2,'[{\"changed\": {\"fields\": [\"explanation\", \"question\", \"example\", \"answer_header\"]}}]',3,19),(2242,'2019-10-19 21:03:26.809858','196','75(140). Member variables -  ',2,'[{\"changed\": {\"fields\": [\"expected_output\", \"expected_stdout\"]}}]',4,19),(2243,'2019-10-19 21:04:58.091621','197','74(139). Class and Object -  1',1,'[{\"added\": {}}]',4,19),(2244,'2019-10-19 21:13:38.076513','24','Method -    2 Class 76(24)',2,'[{\"changed\": {\"fields\": [\"question\", \"example\", \"answer_header\"]}}]',3,19),(2245,'2019-10-19 21:14:22.887187','28','76(24). Method -  ',2,'[{\"changed\": {\"fields\": [\"expected_output\", \"expected_stdout\"]}}]',4,19),(2246,'2019-10-19 21:14:47.297647','24','Method -    2 Class 76(24)',2,'[{\"changed\": {\"fields\": [\"quiz_type\"]}}]',3,19),(2247,'2019-10-19 21:15:22.632775','24','Method -    2 Class 76(24)',2,'[{\"changed\": {\"fields\": [\"answer_header\"]}}]',3,19),(2248,'2019-10-19 21:16:11.116132','24','Method -    2 Class 76(24)',2,'[{\"changed\": {\"fields\": [\"answer_header\"]}}]',3,19),(2249,'2019-10-19 21:17:39.119060','140','Member variables -    2 Class 75(140)',2,'[{\"changed\": {\"fields\": [\"explanation\", \"quiz_type\"]}}]',3,19),(2250,'2019-10-19 21:18:39.837141','140','Member variables -    2 Class 75(140)',2,'[{\"changed\": {\"fields\": [\"answer_header\"]}}]',3,19),(2251,'2019-10-19 21:22:56.251223','140','Member variables -    2 Class 75(140)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,19),(2252,'2019-10-19 21:24:24.263146','71','Variable naming convention -    1 Variable 8(71)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,19),(2253,'2019-10-19 21:25:28.502909','71','Variable naming convention -    1 Variable 8(71)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,19),(2254,'2019-10-19 21:27:30.827299','95','Logical Operator (Not) -    1 Operator 13(95)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,19),(2255,'2019-10-19 21:28:17.305222','15','Range -    1 Range 16(15)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,19),(2256,'2019-10-19 21:28:37.178527','16','Range with start -    1 Range 17(16)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,19),(2257,'2019-10-19 21:28:49.898081','17','Range with step -    1 Range 18(17)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,19),(2258,'2019-10-19 21:29:33.014306','82','If -    1 If 20(82)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,19),(2259,'2019-10-19 21:31:28.608051','77','For -    1 For 23(77)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,19),(2260,'2019-10-19 21:31:56.585237','77','For -    1 For 23(77)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,19),(2261,'2019-10-19 21:33:00.191332','90','For in string -    1 For 24(90)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,19),(2262,'2019-10-19 21:33:38.448901','120','Sum up to 100 -    1 For 26(120)',2,'[{\"changed\": {\"fields\": [\"question\"]}}]',3,19),(2263,'2019-10-19 21:35:28.344409','5','Add function -    1 While 31(5)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,19),(2264,'2019-10-20 03:26:36.055715','85','Parameter -    2 Function 33(85)',2,'[{\"changed\": {\"fields\": [\"example\"]}}]',3,19),(2265,'2019-10-20 03:27:19.557156','86','Return -    2 Function 34(86)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,19),(2266,'2019-10-20 03:30:04.143892','105','Slice a string -    2 String 38(105)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,19),(2267,'2019-10-20 03:32:22.352180','56','Merge strings using Join -    2 String 40(56)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,19),(2268,'2019-10-20 03:33:04.362498','126','Last N characters -    2 String 42(126)',2,'[{\"changed\": {\"fields\": [\"example\"]}}]',3,19),(2269,'2019-10-20 03:34:33.596648','61','Index a value from list -    2 List 45(61)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,19),(2270,'2019-10-20 03:37:28.878853','62','Append to List -    2 List 46(62)',2,'[{\"changed\": {\"fields\": [\"example\"]}}]',3,19),(2271,'2019-10-20 03:37:36.547923','79','46(62). Append to List -  3',2,'[{\"changed\": {\"fields\": [\"expected_output\"]}}]',4,19),(2272,'2019-10-20 03:37:44.789351','73','46(62). 1. dayeon 2019-08-18 Append to List right:1',2,'[{\"changed\": {\"fields\": [\"answer\"]}}]',12,19),(2273,'2019-10-20 03:40:30.897807','101','Remove negative values from a list -    2 List 54(101)',2,'[{\"changed\": {\"fields\": [\"question\"]}}]',3,19),(2274,'2019-10-20 03:41:42.786962','91','Sum of odd numbers -    2 List 56(91)',2,'[{\"changed\": {\"fields\": [\"question\"]}}]',3,19),(2275,'2019-10-20 03:42:30.377001','100','Remove the duplicated values -    2 List 57(100)',2,'[{\"changed\": {\"fields\": [\"explanation\", \"question\"]}}]',3,19),(2276,'2019-10-20 03:55:04.478668','50','Fibonacci -    5 Dynamic Programming 135(50)',2,'[{\"changed\": {\"fields\": [\"explanation\", \"question\"]}}]',3,19),(2277,'2019-10-20 03:56:19.017809','50','Fibonacci -    5 Dynamic Programming 135(50)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,19),(2278,'2019-10-20 03:56:37.697222','50','Fibonacci -    5 Dynamic Programming 135(50)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,19),(2279,'2019-10-20 03:56:52.797177','50','Fibonacci -    5 Dynamic Programming 135(50)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,19),(2280,'2019-10-20 03:57:20.239629','50','Fibonacci -    5 Dynamic Programming 135(50)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,19),(2281,'2019-10-20 03:57:39.959238','50','Fibonacci -    5 Dynamic Programming 135(50)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,19),(2282,'2019-10-20 03:58:04.521827','135','Find N-th node from the end of a linked list -    4 Linked List 134(135)',2,'[{\"changed\": {\"fields\": [\"title\", \"explanation\"]}}]',3,19),(2283,'2019-10-20 04:02:19.924363','14','Reverse a list using stack -    4 Stack 128(14)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,19),(2284,'2019-10-20 04:06:46.550967','138','Binary number -    3 Math 127(138)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,19),(2285,'2019-10-20 04:08:46.668610','63','Arithmetic Operator -    1 Operator 10(63)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,19),(2286,'2019-10-20 04:09:23.672031','63','Arithmetic Operator -    1 Operator 10(63)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,19),(2287,'2019-10-20 04:10:55.307763','138','Binary number -    3 Math 127(138)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,19),(2288,'2019-10-20 04:12:04.259140','137','Find all prime numbers less than k -    3 Math 126(137)',2,'[{\"changed\": {\"fields\": [\"explanation\", \"question\", \"example\"]}}]',3,19),(2289,'2019-10-20 04:12:37.618882','122','Rectangle with integer height and width -    3 Math 123(122)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,19),(2290,'2019-10-20 04:12:54.298895','122','Rectangle with integer height and width -    3 Math 123(122)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,19),(2291,'2019-10-20 04:14:48.180251','58','Leap year -    3 Math 122(58)',2,'[{\"changed\": {\"fields\": [\"example\"]}}]',3,19),(2292,'2019-10-20 04:15:17.692549','58','Leap year -    3 Math 122(58)',2,'[{\"changed\": {\"fields\": [\"example\"]}}]',3,19),(2293,'2019-10-20 04:16:53.665030','58','Leap year -    3 Math 122(58)',2,'[]',3,19),(2294,'2019-10-20 04:17:58.666643','39','Power of two -    3 Math 115(39)',2,'[{\"changed\": {\"fields\": [\"question\"]}}]',3,19),(2295,'2019-10-20 04:58:20.019953','176','130(68). 1. dayeon 2019-09-24 Remove outermost parenthesis right:-1',2,'[{\"changed\": {\"fields\": [\"right\"]}}]',12,2),(2296,'2019-10-20 05:08:33.142913','140','Member variables -    2 Class 75(140)',2,'[{\"changed\": {\"fields\": [\"question\"]}}]',3,2),(2297,'2019-10-20 17:08:00.365757','139','Class and Object -    2 Class 74(139)',2,'[]',3,2),(2298,'2019-10-20 17:09:10.136686','139','Class and Object -    2 Class 74(139)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(2299,'2019-10-20 17:30:37.932476','140','Member variables -    2 Class 75(140)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,19),(2300,'2019-10-20 17:38:05.297433','24','Method -    2 Class 76(24)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,19),(2301,'2019-10-20 19:46:11.310232','140','Instance variables -    2 Class 75(140)',2,'[{\"changed\": {\"fields\": [\"title\", \"explanation\"]}}]',3,2),(2302,'2019-10-20 19:48:02.990812','139','Class and Object -    2 Class 74(139)',2,'[{\"changed\": {\"fields\": [\"explanation\", \"question\", \"option1\", \"option2\", \"option3\", \"option4\"]}}]',3,2),(2303,'2019-10-21 00:14:54.162328','140','Instance variables -    2 Class 75(140)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,19),(2304,'2019-10-21 00:15:39.376882','24','Method -    2 Class 76(24)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,19),(2305,'2019-10-21 00:21:26.628569','13','Reverse a list -    3 Advanced List 86(13)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,19),(2306,'2019-10-21 00:22:06.155545','13','Reverse a list -    3 Advanced List 86(13)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,19),(2307,'2019-10-21 00:27:15.453094','139','Class and Object -    2 Class 74(139)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,19),(2308,'2019-10-21 00:30:26.034954','13','Reverse a list -    3 Advanced List 86(13)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,19),(2309,'2019-10-21 00:41:23.936823','141','Convert a list to a dictionary -    2 Dictionary 140(141)',1,'[{\"added\": {}}]',3,19),(2310,'2019-10-21 00:41:44.524575','198','140(141). Convert a list to a dictionary - [1, 2, 3, 4, 5, 6] {1: 2, 3: 4, 5: 6}',1,'[{\"added\": {}}]',4,19),(2311,'2019-10-21 01:23:13.717405','131','Number distance game -    3 Math 121(131)',2,'[{\"changed\": {\"fields\": [\"answer_header\"]}}]',3,19),(2312,'2019-10-21 01:41:02.617779','179','121(131). Number distance game - 1234\r\n4321 8',2,'[{\"changed\": {\"fields\": [\"expected_output\"]}}]',4,19),(2313,'2019-10-21 02:00:48.433467','25','Find the error about class -    2 Class 78(25)',2,'[{\"changed\": {\"fields\": [\"answer_header\", \"option2\"]}}]',3,2),(2314,'2019-10-21 02:29:16.260255','139','Class and Object -    2 Class 75(139)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(2315,'2019-10-21 02:48:42.757802','139','Class and Object -    2 Class 75(139)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(2316,'2019-10-21 02:54:54.165190','139','Class and Object -    2 Class 75(139)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(2317,'2019-10-21 03:21:13.693788','140','Instance variables -    2 Class 76(140)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(2318,'2019-10-21 03:32:24.655537','24','Method -    2 Class 77(24)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(2319,'2019-10-21 03:35:57.763686','24','Method -    2 Class 77(24)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(2320,'2019-10-21 03:37:24.079854','24','Method -    2 Class 77(24)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(2321,'2019-10-21 06:42:17.505629','139','Class and Object -    2 Class 75(139)',2,'[{\"changed\": {\"fields\": [\"video\"]}}]',3,2),(2322,'2019-10-22 01:41:44.168185','142','Zig-zag list -    3 Advanced For 141(142)',1,'[{\"added\": {}}]',3,2),(2323,'2019-10-22 01:42:25.398505','142','Zigzag list -    3 Advanced For 141(142)',2,'[{\"changed\": {\"fields\": [\"title\"]}}]',3,2),(2324,'2019-10-22 01:45:34.327886','199','141(142). Zigzag list - 3 [[1, 2, 3], [6, 5, 4], [7, 8, 9]]',1,'[{\"added\": {}}]',4,2),(2325,'2019-10-22 01:46:55.128000','200','141(142). Zigzag list - 4 [[1, 2, 3, 4], [8, 7, 6, 5], [9, 10, 11, 12], [16, 15, 14, 13]]',1,'[{\"added\": {}}]',4,2),(2326,'2019-10-22 01:49:07.617621','142','Zigzag list -    3 Advanced For 87(142)',2,'[{\"changed\": {\"fields\": [\"question\"]}}]',3,2),(2327,'2019-10-22 01:50:58.771897','143','Zigzag list 2 -    3 Advanced For 142(143)',1,'[{\"added\": {}}]',3,2),(2328,'2019-10-22 01:51:19.500049','201','142(143). Zigzag list 2 - 3 [[1, 2, 9], [4, 3, 8], [5, 6, 7]]',1,'[{\"added\": {}}]',4,2),(2329,'2019-10-22 01:51:50.824766','202','142(143). Zigzag list 2 - 4 [[1, 2, 9, 10], [4, 3, 8, 11], [5, 6, 7, 12], [16, 15, 14, 13]]',1,'[{\"added\": {}}]',4,2),(2330,'2019-10-22 02:10:05.740252','144','Zigzag list 3 -    3 Advanced For 143(144)',1,'[{\"added\": {}}]',3,2),(2331,'2019-10-22 02:11:42.219415','143','Zigzag list 2 -    3 Advanced For 88(143)',2,'[{\"changed\": {\"fields\": [\"example\"]}}]',3,2),(2332,'2019-10-22 02:14:14.196858','144','Zigzag list 3 -    3 Advanced For 143(144)',2,'[{\"changed\": {\"fields\": [\"question\", \"example\"]}}]',3,2),(2333,'2019-10-22 02:15:48.839613','144','Zigzag list 3 -    3 Advanced For 143(144)',2,'[{\"changed\": {\"fields\": [\"example\"]}}]',3,2),(2334,'2019-10-22 02:16:09.546700','144','Zigzag list 3 -    3 Advanced For 143(144)',2,'[{\"changed\": {\"fields\": [\"example\"]}}]',3,2),(2335,'2019-10-22 02:16:48.832645','144','Zigzag list 3 -    3 Advanced For 143(144)',2,'[{\"changed\": {\"fields\": [\"example\"]}}]',3,2),(2336,'2019-10-22 02:18:37.645450','143','Zigzag list 2 -    3 Advanced For 88(143)',2,'[{\"changed\": {\"fields\": [\"example\"]}}]',3,2),(2337,'2019-10-22 02:18:56.275182','143','Zigzag list 2 -    3 Advanced For 88(143)',2,'[{\"changed\": {\"fields\": [\"example\"]}}]',3,2),(2338,'2019-10-22 02:19:13.431625','143','Zigzag list 2 -    3 Advanced For 88(143)',2,'[{\"changed\": {\"fields\": [\"example\"]}}]',3,2),(2339,'2019-10-22 02:19:59.114597','142','Zigzag list -    3 Advanced For 87(142)',2,'[{\"changed\": {\"fields\": [\"example\"]}}]',3,2),(2340,'2019-10-22 02:20:13.713866','142','Zigzag list -    3 Advanced For 87(142)',2,'[{\"changed\": {\"fields\": [\"answer_header\"]}}]',3,2),(2341,'2019-10-22 02:20:29.911905','143','Zigzag list 2 -    3 Advanced For 88(143)',2,'[{\"changed\": {\"fields\": [\"answer_header\"]}}]',3,2),(2342,'2019-10-22 02:44:50.166612','145','Maximum of set -    2 Set 144(145)',1,'[{\"added\": {}}]',3,2),(2343,'2019-10-22 02:45:46.402124','203','144(145). Maximum of set - {3, 4, 5, 2, 7, 9, 13, 24, 36} 36',1,'[{\"added\": {}}]',4,2),(2344,'2019-10-22 02:46:28.933235','204','144(145). Maximum of set - {3, 4, 2, 7, 5} 7',1,'[{\"added\": {}}]',4,2),(2345,'2019-10-22 02:51:46.390163','67','Maximum value -    2 List 54(67)',2,'[{\"changed\": {\"fields\": [\"category\"]}}]',3,2),(2346,'2019-10-22 02:58:40.815054','205','144(144). Zigzag list 3 - 3 [[1, 2, 6], [3, 5, 7], [4, 8, 9]]',1,'[{\"added\": {}}]',4,2),(2347,'2019-10-22 02:59:34.336501','206','144(144). Zigzag list 3 - 4 [[1, 2, 6, 7], [3, 5, 8, 13], [4, 9, 12, 14], [10, 11, 15, 16]]',1,'[{\"added\": {}}]',4,2),(2348,'2019-10-22 03:03:46.765357','146','Vertical list -    3 Advanced For 145(146)',1,'[{\"added\": {}}]',3,2),(2349,'2019-10-22 03:04:10.581037','207','145(146). Vertical list - 3 [[1, 4, 7], [2, 5, 8], [3, 6, 9]',1,'[{\"added\": {}}]',4,2),(2350,'2019-10-22 03:04:36.031450','208','145(146). Vertical list - 4 [[1, 5, 9, 13], [2, 6, 10, 14], [3, 7, 11, 15], [4, 8, 12, 16]]',1,'[{\"added\": {}}]',4,2),(2351,'2019-10-22 03:08:24.667211','146','Vertical list -    3 Advanced For 89(146)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(2352,'2019-10-22 03:09:09.331619','146','Vertical list -    3 Advanced For 89(146)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(2353,'2019-10-22 03:26:39.667641','147','Area and circumference of circle -    3 Math 146(147)',1,'[{\"added\": {}}]',3,2),(2354,'2019-10-22 03:27:05.280182','209','146(147). Area and circumference of circle - 4 25.12\r\n50.24',1,'[{\"added\": {}}]',4,2),(2355,'2019-10-22 03:27:16.224671','210','146(147). Area and circumference of circle - 5 31.4\r\n78.5',1,'[{\"added\": {}}]',4,2),(2356,'2019-10-22 03:27:21.486957','147','Area and circumference of circle -    3 Math 146(147)',2,'[]',3,2),(2357,'2019-10-22 03:43:34.493414','147','Area and circumference of circle -    3 Math 146(147)',2,'[{\"changed\": {\"fields\": [\"explanation\", \"question\", \"example\"]}}]',3,2),(2358,'2019-10-22 03:43:52.289227','209','146(147). Area and circumference of circle - 4 50.24\r\n25.12',2,'[{\"changed\": {\"fields\": [\"expected_output\"]}}]',4,2),(2359,'2019-10-22 03:44:01.585928','210','146(147). Area and circumference of circle - 5 78.5\r\n31.4',2,'[{\"changed\": {\"fields\": [\"expected_output\"]}}]',4,2),(2360,'2019-10-22 03:55:07.036103','147','Circumference and area of a circle -    3 Math 146(147)',2,'[{\"changed\": {\"fields\": [\"title\", \"explanation\"]}}]',3,2),(2361,'2019-10-22 04:15:34.783810','147','Circumference and area of a circle -    3 Math 146(147)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(2362,'2019-10-22 04:16:15.568387','147','Circumference and area of a circle -    3 Math 146(147)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(2363,'2019-10-22 04:17:21.388469','147','Circumference and area of a circle -    3 Math 146(147)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(2364,'2019-10-22 04:17:40.551170','147','Circumference and area of a circle -    3 Math 146(147)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(2365,'2019-10-22 06:39:00.132847','91','136(68). Remove outermost parenthesis - \'()(()())\' ()()',2,'[{\"changed\": {\"fields\": [\"input\"]}}]',4,2),(2366,'2019-10-22 06:39:31.848901','68','Remove outermost parenthesis -    4 Stack 136(68)',2,'[{\"changed\": {\"fields\": [\"example\"]}}]',3,2),(2367,'2019-10-22 06:40:20.024134','135','Find Nth node from the end of a linked list -    4 Linked List 140(135)',2,'[{\"changed\": {\"fields\": [\"title\"]}}]',3,2),(2368,'2019-10-22 06:43:03.346453','50','Fibonacci -    5 Dynamic Programming 141(50)',2,'[{\"changed\": {\"fields\": [\"explanation\", \"question\", \"example\"]}}]',3,2),(2369,'2019-10-22 06:53:56.935628','32','95(23). Subarray - [-4, 3, -4, 4, -5, 8, -11, 10] 7',2,'[{\"changed\": {\"fields\": [\"input\", \"expected_output\"]}}]',4,2),(2370,'2019-10-22 06:55:09.307765','23','Subarray -    5 Dynamic Programming 95(23)',2,'[{\"changed\": {\"fields\": [\"category\"]}}]',3,2),(2371,'2019-10-22 06:55:26.845380','28','95(23). 1. dayeon 2019-07-26 Subarray right:-1',2,'[{\"changed\": {\"fields\": [\"right\"]}}]',12,2),(2372,'2019-10-22 07:00:32.545654','131','Number distance game -    3 Math 127(131)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(2373,'2019-10-22 08:05:57.707208','23','Maximum Subarray -    3 Advanced List 95(23)',2,'[{\"changed\": {\"fields\": [\"title\", \"category\"]}}]',3,2),(2374,'2019-10-22 08:06:59.630872','23','Maximum Subarray -    5 Dynamic Programming 95(23)',2,'[{\"changed\": {\"fields\": [\"category\"]}}]',3,2),(2375,'2019-10-22 08:15:38.148416','67','Maximum value -    2 List 54(67)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(2376,'2019-10-22 08:16:28.355282','67','Maximum value -    2 List 54(67)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(2377,'2019-10-22 08:44:40.766453','148','Target sum of subarray -    3 Advanced Set 147(148)',1,'[{\"added\": {}}]',3,2),(2378,'2019-10-22 08:45:03.511901','211','147(148). Target sum of subarray - [1, 2, 3, 4, 5]\r\n7 True',1,'[{\"added\": {}}]',4,2),(2379,'2019-10-22 08:45:21.031092','212','147(148). Target sum of subarray - [1, 2, 3, 4, 5]\r\n8 False',1,'[{\"added\": {}}]',4,2),(2380,'2019-10-22 08:45:33.893958','211','147(148). Target sum of subarray - [1, 2, 3, 4, 5, 6, 7]\r\n15 True',2,'[{\"changed\": {\"fields\": [\"input\"]}}]',4,2),(2381,'2019-10-22 16:29:37.414565','4','High',2,'[{\"changed\": {\"fields\": [\"desc\"]}}]',13,2),(2382,'2019-10-22 16:29:52.927993','5','Expert',2,'[{\"changed\": {\"fields\": [\"desc\"]}}]',13,2),(2383,'2019-10-22 16:30:31.542384','2','Junior',2,'[{\"changed\": {\"fields\": [\"desc\"]}}]',13,2),(2384,'2019-10-22 16:32:00.710592','3','Junior High',2,'[{\"changed\": {\"fields\": [\"desc\"]}}]',13,2),(2385,'2019-10-22 23:05:22.313397','207','89(146). Vertical list - 3 [[1, 4, 7], [2, 5, 8], [3, 6, 9]]',2,'[{\"changed\": {\"fields\": [\"expected_output\"]}}]',4,2),(2386,'2019-10-22 23:32:19.949914','146','Vertical list -    3 Advanced For 89(146)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(2387,'2019-10-22 23:33:06.409443','146','Vertical list -    3 Advanced For 89(146)',2,'[]',3,2),(2388,'2019-10-23 00:08:36.093179','148','Target sum of subarray -    3 Advanced Set 113(148)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(2389,'2019-10-23 00:10:35.846658','148','Target sum of subarray -    3 Advanced Set 113(148)',2,'[{\"changed\": {\"fields\": [\"explanation\", \"example\"]}}]',3,2),(2390,'2019-10-23 00:10:59.222709','148','Target sum of subarray -    3 Advanced Set 113(148)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(2391,'2019-10-23 00:11:38.628853','148','Target sum of subarray -    3 Advanced Set 113(148)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(2392,'2019-10-23 02:05:50.643221','114','Nested For for Sum -    3 Advanced For 84(114)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(2393,'2019-10-23 02:06:52.246095','114','Nested For for Sum -    3 Advanced For 84(114)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(2394,'2019-10-23 02:14:37.443590','114','Nested For for Sum -    3 Advanced For 84(114)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(2395,'2019-10-23 02:15:14.142412','114','Nested For for Sum -    3 Advanced For 84(114)',2,'[{\"changed\": {\"fields\": [\"hint\"]}}]',3,2),(2396,'2019-10-23 02:17:34.468280','149','Nested For for Maximum at each position -    3 Advanced For 148(149)',1,'[{\"added\": {}}]',3,2),(2397,'2019-10-23 02:18:01.742631','213','148(149). Nested For for Maximum at each position - 4 [[1, 2, 3, 4], [2, 2, 3, 4], [3, 3, 3, 4], [4, 4, 4, 4]]',1,'[{\"added\": {}}]',4,2),(2398,'2019-10-23 02:19:33.735371','214','148(149). Nested For for Maximum at each position - 3 [[1, 2, 3], [2, 2, 3], [3, 3, 3]]',1,'[{\"added\": {}}]',4,2),(2399,'2019-10-23 02:21:33.107272','114','Nested For for Sum -    3 Advanced For 84(114)',2,'[{\"changed\": {\"fields\": [\"question\"]}}]',3,2),(2400,'2019-10-23 02:23:25.507237','149','Nested For for Maximum at each position -    3 Advanced For 85(149)',2,'[{\"changed\": {\"fields\": [\"example\"]}}]',3,2),(2401,'2019-10-23 02:23:49.322850','149','Nested For for Maximum at each position -    3 Advanced For 85(149)',2,'[{\"changed\": {\"fields\": [\"hint\"]}}]',3,2),(2402,'2019-10-23 02:45:19.652505','150','Nested For for Cross -    3 Advanced For 149(150)',1,'[{\"added\": {}}]',3,2),(2403,'2019-10-23 02:45:52.933096','215','149(150). Nested For for Cross - 4 [[1, 0, 0, 1], [0, 1, 1, 0], [0, 1, 1, 0], [1, 0, 0, 1]]',1,'[{\"added\": {}}]',4,2),(2404,'2019-10-23 02:46:25.341599','216','149(150). Nested For for Cross - 5 [[1, 0, 0, 0, 1], [0, 1, 0, 1, 0], [0, 0, 1, 0, 0], [0, 1, 0, 1, 0], [1, 0, 0, 0, 1]]',1,'[{\"added\": {}}]',4,2),(2405,'2019-10-23 02:51:43.107369','150','Nested For for Cross -    3 Advanced For 87(150)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(2406,'2019-10-23 02:53:27.633376','49','Draw a triangle -    3 Advanced For 89(49)',2,'[{\"changed\": {\"fields\": [\"title\"]}}]',3,2),(2407,'2019-10-23 02:53:44.149996','53','Draw a square -    3 Advanced For 90(53)',2,'[{\"changed\": {\"fields\": [\"title\"]}}]',3,2),(2408,'2019-10-23 02:55:54.523007','150','Nested For for drawing diagonally. -    3 Advanced For 89(150)',2,'[{\"changed\": {\"fields\": [\"title\"]}}]',3,2),(2409,'2019-10-23 02:56:50.050753','115','Nested For for triangle -    3 Advanced For 86(115)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(2410,'2019-10-23 03:21:30.151694','150','Nested For for drawing diagonally. -    3 Advanced For 89(150)',2,'[{\"changed\": {\"fields\": [\"example\"]}}]',3,2),(2411,'2019-10-23 03:41:01.780653','147','Circumference and area of a circle -    3 Math 126(147)',2,'[{\"changed\": {\"fields\": [\"question\", \"example\"]}}]',3,2),(2412,'2019-10-23 03:41:36.109719','147','Circumference and area of a circle -    3 Math 126(147)',2,'[{\"changed\": {\"fields\": [\"question\", \"example\"]}}]',3,2),(2413,'2019-10-23 03:41:58.311979','210','126(147). Circumference and area of a circle - 5 78\r\n31',2,'[{\"changed\": {\"fields\": [\"expected_output\"]}}]',4,2),(2414,'2019-10-23 03:42:10.294543','209','126(147). Circumference and area of a circle - 4 50\r\n25',2,'[{\"changed\": {\"fields\": [\"expected_output\"]}}]',4,2),(2415,'2019-10-23 03:43:29.349735','150','Nested For for drawing diagonally. -    3 Advanced For 89(150)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(2416,'2019-10-23 04:19:59.924083','150','Draw 1s diagonally -    3 Advanced For 89(150)',2,'[{\"changed\": {\"fields\": [\"title\"]}}]',3,2),(2417,'2019-10-23 04:20:17.643288','149','Maximum index at each position -    3 Advanced For 88(149)',2,'[{\"changed\": {\"fields\": [\"title\"]}}]',3,2),(2418,'2019-10-23 04:20:41.705372','114','Sum of the indexes -    3 Advanced For 87(114)',2,'[{\"changed\": {\"fields\": [\"title\"]}}]',3,2),(2419,'2019-10-24 02:44:13.081063','151','Reverse a string -    2 String 150(151)',1,'[{\"added\": {}}]',3,2),(2420,'2019-10-24 02:44:39.696704','217','150(151). Reverse a string - \"hello\" \'olleh\'',1,'[{\"added\": {}}]',4,2),(2421,'2019-10-24 02:44:55.235774','218','150(151). Reverse a string - \"python\" nohtyp',1,'[{\"added\": {}}]',4,2),(2422,'2019-10-24 02:45:05.335131','217','150(151). Reverse a string - \"hello\" olleh',2,'[{\"changed\": {\"fields\": [\"expected_output\"]}}]',4,2),(2423,'2019-10-24 03:22:30.247050','152','Width and Height of 2D List -    2 List 151(152)',1,'[{\"added\": {}}]',3,2),(2424,'2019-10-24 03:23:26.711675','219','59(152). Width and Height of 2D List - [[1, 2, 3], [4, 5, 6]] 5',1,'[{\"added\": {}}]',4,2),(2425,'2019-10-24 03:23:58.331507','220','59(152). Width and Height of 2D List - [[1, 2, 3, 4], [5, 6, 7, 8]] 6',1,'[{\"added\": {}}]',4,2),(2426,'2019-10-24 04:20:49.572878','153','Maximum square -    5 Dynamic Programming 152(153)',1,'[{\"added\": {}}]',3,2),(2427,'2019-10-24 04:24:09.850250','152','Width and Height of 2D List -    2 List 59(152)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(2428,'2019-10-24 04:25:08.945991','152','Width and Height of 2D List -    2 List 59(152)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(2429,'2019-10-24 04:42:19.134245','221','152(153). Maximum square - [[0, 1, 1, 1], [1, 1, 1, 1], [0, 1, 1, 1]] 9',1,'[{\"added\": {}}]',4,2),(2430,'2019-10-24 04:42:46.994854','222','152(153). Maximum square - [[0, 1, 1], [1, 1, 1], [1, 0, 0]] 4',1,'[{\"added\": {}}]',4,2),(2431,'2019-10-24 04:43:26.744171','153','Maximum square -    5 Dynamic Programming 152(153)',2,'[{\"changed\": {\"fields\": [\"example\"]}}]',3,2),(2432,'2019-10-24 04:52:12.201933','153','Maximum square -    5 Dynamic Programming 152(153)',2,'[{\"changed\": {\"fields\": [\"hint\"]}}]',3,2),(2433,'2019-10-24 05:45:38.738807','153','Maximum square -    5 Dynamic Programming 152(153)',2,'[{\"changed\": {\"fields\": [\"explanation\", \"question\", \"hint\"]}}]',3,2),(2434,'2019-10-24 05:51:29.325259','153','Maximum square -    5 Dynamic Programming 152(153)',2,'[]',3,2),(2435,'2019-10-24 05:59:25.742235','153','Maximum square -    5 Dynamic Programming 152(153)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(2436,'2019-10-24 06:00:08.353483','153','Maximum square -    5 Dynamic Programming 152(153)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(2437,'2019-10-24 06:02:36.480149','153','Maximum square -    5 Dynamic Programming 152(153)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(2438,'2019-10-24 06:09:52.959331','153','Maximum square -    5 Dynamic Programming 152(153)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(2439,'2019-10-24 06:10:27.081447','153','Maximum square -    5 Dynamic Programming 152(153)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(2440,'2019-10-24 06:10:52.004272','153','Maximum square -    5 Dynamic Programming 152(153)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(2441,'2019-10-24 07:11:07.651710','153','Maximum square -    5 Dynamic Programming 152(153)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(2442,'2019-10-24 07:28:22.932005','153','Maximum square -    5 Dynamic Programming 152(153)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(2443,'2019-10-24 07:30:22.599411','153','Maximum square -    5 Dynamic Programming 152(153)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(2444,'2019-10-24 07:30:55.553934','153','Maximum square -    5 Dynamic Programming 152(153)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(2445,'2019-10-24 07:31:16.332783','153','Maximum square -    5 Dynamic Programming 152(153)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(2446,'2019-10-24 07:36:00.850461','153','Maximum square -    5 Dynamic Programming 152(153)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(2447,'2019-10-24 07:45:27.848645','153','Maximum square -    5 Dynamic Programming 152(153)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(2448,'2019-10-24 08:38:07.538210','152','Width and Height of 2D List -    2 List 59(152)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(2449,'2019-10-24 08:40:42.304071','152','Width and Height of 2D List -    2 List 59(152)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(2450,'2019-10-24 09:23:49.967210','152','Width and Height of 2D List -    2 List 59(152)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(2451,'2019-10-24 09:27:13.632880','147','Circumference and area of a circle -    3 Math 128(147)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(2452,'2019-10-24 09:28:00.915597','152','Width and Height of 2D List -    2 List 59(152)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(2453,'2019-10-25 01:52:37.032085','9','Operator precedence -    3 Math 120(9)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(2454,'2019-10-25 01:53:03.660247','9','Operator precedence -    3 Math 120(9)',2,'[{\"changed\": {\"fields\": [\"example\"]}}]',3,2),(2455,'2019-10-25 01:53:23.496939','9','Operator precedence -    3 Math 120(9)',2,'[{\"changed\": {\"fields\": [\"example\"]}}]',3,2),(2456,'2019-10-25 01:55:08.970761','63','Arithmetic Operator -    1 Operator 10(63)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(2457,'2019-10-25 01:55:35.963581','138','Binary number -    3 Math 139(138)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(2458,'2019-10-25 01:56:29.160141','63','Arithmetic Operator -    1 Operator 10(63)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(2459,'2019-10-25 01:59:14.359245','63','Arithmetic Operator -    1 Operator 10(63)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(2460,'2019-10-25 01:59:34.845114','138','Binary number -    3 Math 139(138)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(2461,'2019-10-25 02:00:08.618849','138','Binary number -    3 Math 139(138)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(2462,'2019-10-25 02:03:21.917885','151','Reverse a string -    2 String 44(151)',2,'[{\"changed\": {\"fields\": [\"question\"]}}]',3,2),(2463,'2019-10-25 03:37:36.258925','154','Find minimum changes to contain k distinct elements -    5 Greedy 153(154)',1,'[{\"added\": {}}]',3,2),(2464,'2019-10-25 03:38:43.284835','223','153(154). Find minimum changes to contain k distinct elements - [1, 3, 2, 4, 2, 4, 5]\r\n2 3',1,'[{\"added\": {}}]',4,2),(2465,'2019-10-25 03:39:00.660733','224','153(154). Find minimum changes to contain k distinct elements - [1, 3, 1, 3, 2, 4, 4, 3]\r\n3 1',1,'[{\"added\": {}}]',4,2),(2466,'2019-10-25 03:40:17.422472','154','Minimum changes to contain k distinct elements -    5 Greedy 147(154)',2,'[{\"changed\": {\"fields\": [\"title\"]}}]',3,2),(2467,'2019-10-25 05:04:54.297754','155','Create a linked list from a list -    4 Linked List 154(155)',1,'[{\"added\": {}}]',3,2),(2468,'2019-10-25 05:05:21.361749','225','154(155). Create a linked list from a list - [1, 2, 3, 4] Node[1, 2, 3, 4]',1,'[{\"added\": {}}]',4,2),(2469,'2019-10-25 05:05:33.982543','226','154(155). Create a linked list from a list - [3, 2, 1] Node[3, 2, 1]',1,'[{\"added\": {}}]',4,2),(2470,'2019-10-25 05:06:31.951087','155','Create a linked list from a list -    4 Linked List 154(155)',2,'[{\"changed\": {\"fields\": [\"answer_header\"]}}]',3,2),(2471,'2019-10-25 05:10:51.568689','348','154(155). 1. dayeon 2019-10-24 Create a linked list from a list right:-1',3,'',12,2),(2472,'2019-10-25 06:13:30.380664','225','154(155). Create a linked list from a list - [1, 2, 3, 4] 1 -> 2 -> 3 -> 4',2,'[{\"changed\": {\"fields\": [\"expected_output\"]}}]',4,2),(2473,'2019-10-25 06:14:28.167980','226','154(155). Create a linked list from a list - [3, 2, 1] 3 -> 2 -> 1',2,'[{\"changed\": {\"fields\": [\"expected_output\"]}}]',4,2),(2474,'2019-10-25 06:16:06.090738','106','144(81). Reverse linked list - Node[1, 4, 3, 2, 5] 5 -> 2 -> 3 -> 4 -> 1',2,'[{\"changed\": {\"fields\": [\"expected_output\"]}}]',4,2),(2475,'2019-10-25 06:18:43.727827','69','Find the maximum -    4 Linked List 143(69)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(2476,'2019-10-25 06:19:27.126017','69','Find the maximum -    4 Linked List 143(69)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(2477,'2019-10-25 06:38:09.903195','69','Find the maximum -    4 Linked List 143(69)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(2478,'2019-10-25 06:41:51.709579','69','Find the maximum -    4 Linked List 143(69)',2,'[]',3,2),(2479,'2019-10-25 07:05:53.881989','69','Find the maximum -    4 Linked List 143(69)',2,'[{\"changed\": {\"fields\": [\"explanation\", \"example\"]}}]',3,2),(2480,'2019-10-25 07:09:18.785679','69','Find the maximum -    4 Linked List 143(69)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(2481,'2019-10-25 07:10:17.373361','69','Find the maximum -    4 Linked List 143(69)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(2482,'2019-10-25 07:11:05.492861','69','Find the maximum -    4 Linked List 143(69)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(2483,'2019-10-25 07:27:13.273177','152','Width and Height of 2D List -    2 List 59(152)',2,'[{\"changed\": {\"fields\": [\"example\"]}}]',3,2),(2484,'2019-10-26 00:36:53.691918','62','15 Day Streak',1,'[{\"added\": {}}]',15,2),(2485,'2019-10-26 00:47:33.410054','63','10 Quiz Per Day',1,'[{\"added\": {}}]',15,2),(2486,'2019-10-26 00:48:07.007433','64','11 Quiz Per Day',1,'[{\"added\": {}}]',15,2),(2487,'2019-10-26 00:48:31.888324','65','12 Quiz Per Day',1,'[{\"added\": {}}]',15,2),(2488,'2019-10-26 00:48:49.405176','66','13 Quiz Per Day',1,'[{\"added\": {}}]',15,2),(2489,'2019-10-26 00:49:11.427005','67','14 Quiz Per Day',1,'[{\"added\": {}}]',15,2),(2490,'2019-10-26 00:49:33.168336','68','15 Quiz Per Day',1,'[{\"added\": {}}]',15,2),(2491,'2019-10-26 03:44:31.601124','10','2 Quiz Per Day',2,'[{\"changed\": {\"fields\": [\"html\"]}}]',15,2),(2492,'2019-10-26 03:45:24.774196','20','9 Quiz Per Day',2,'[{\"changed\": {\"fields\": [\"html\"]}}]',15,2),(2493,'2019-10-26 03:45:48.000695','63','10 Quiz Per Day',2,'[{\"changed\": {\"fields\": [\"html\"]}}]',15,2),(2494,'2019-10-26 03:45:55.465910','58','11 Day Streak',2,'[{\"changed\": {\"fields\": [\"html\"]}}]',15,2),(2495,'2019-10-26 03:46:03.070349','59','12 Day Streak',2,'[{\"changed\": {\"fields\": [\"html\"]}}]',15,2),(2496,'2019-10-26 03:46:16.085162','61','14 Day Streak',2,'[{\"changed\": {\"fields\": [\"html\"]}}]',15,2),(2497,'2019-10-26 03:46:34.885106','60','13 Day Streak',2,'[{\"changed\": {\"fields\": [\"html\"]}}]',15,2),(2498,'2019-10-26 04:52:02.862157','23','1 Total Quiz',2,'[{\"changed\": {\"fields\": [\"gray_html\"]}}]',15,2),(2499,'2019-10-26 04:53:38.194815','23','1 Total Quiz',2,'[{\"changed\": {\"fields\": [\"gray_html\"]}}]',15,2),(2500,'2019-10-26 04:55:05.454338','24','5 Total Quiz',2,'[{\"changed\": {\"fields\": [\"gray_html\"]}}]',15,2),(2501,'2019-10-26 04:55:14.500296','14','10 Total Quiz',2,'[{\"changed\": {\"fields\": [\"html\"]}}]',15,2),(2502,'2019-10-26 04:55:22.936455','35','15 Total Quiz',2,'[{\"changed\": {\"fields\": [\"gray_html\"]}}]',15,2),(2503,'2019-10-26 04:55:35.161019','25','20 Total Quiz',2,'[{\"changed\": {\"fields\": [\"gray_html\"]}}]',15,2),(2504,'2019-10-26 04:55:42.140344','15','30 Total Quiz',2,'[{\"changed\": {\"fields\": [\"gray_html\"]}}]',15,2),(2505,'2019-10-26 04:55:49.871002','36','40 Total Quiz',2,'[{\"changed\": {\"fields\": [\"gray_html\"]}}]',15,2),(2506,'2019-10-26 04:55:57.576384','26','50 Total Quiz',2,'[{\"changed\": {\"fields\": [\"gray_html\"]}}]',15,2),(2507,'2019-10-26 04:56:06.034472','37','60 Total Quiz',2,'[{\"changed\": {\"fields\": [\"gray_html\"]}}]',15,2),(2508,'2019-10-26 04:56:13.138766','27','70 Total Quiz',2,'[{\"changed\": {\"fields\": [\"gray_html\"]}}]',15,2),(2509,'2019-10-26 04:56:20.606218','38','80 Total Quiz',2,'[{\"changed\": {\"fields\": [\"gray_html\"]}}]',15,2),(2510,'2019-10-26 04:56:27.972675','39','90 Total Quiz',2,'[{\"changed\": {\"fields\": [\"gray_html\"]}}]',15,2),(2511,'2019-10-26 04:56:36.064689','28','100 Total Quiz',2,'[{\"changed\": {\"fields\": [\"gray_html\"]}}]',15,2),(2512,'2019-10-26 04:56:43.710945','40','110 Total Quiz',2,'[{\"changed\": {\"fields\": [\"gray_html\"]}}]',15,2),(2513,'2019-10-26 04:56:51.026490','41','120 Total Quiz',2,'[{\"changed\": {\"fields\": [\"gray_html\"]}}]',15,2),(2514,'2019-10-26 04:56:58.415690','42','130 Total Quiz',2,'[{\"changed\": {\"fields\": [\"gray_html\"]}}]',15,2),(2515,'2019-10-26 04:57:05.462275','43','140 Total Quiz',2,'[{\"changed\": {\"fields\": [\"gray_html\"]}}]',15,2),(2516,'2019-10-26 04:57:13.445692','29','150 Total Quiz',2,'[{\"changed\": {\"fields\": [\"gray_html\"]}}]',15,2),(2517,'2019-10-26 04:57:21.387017','44','160 Total Quiz',2,'[{\"changed\": {\"fields\": [\"gray_html\"]}}]',15,2),(2518,'2019-10-26 04:57:28.543037','45','170 Total Quiz',2,'[{\"changed\": {\"fields\": [\"gray_html\"]}}]',15,2),(2519,'2019-10-26 04:57:36.851783','46','180 Total Quiz',2,'[{\"changed\": {\"fields\": [\"gray_html\"]}}]',15,2),(2520,'2019-10-26 04:57:45.094054','47','190 Total Quiz',2,'[{\"changed\": {\"fields\": [\"gray_html\"]}}]',15,2),(2521,'2019-10-26 04:57:53.054753','16','200 Total Quiz',2,'[{\"changed\": {\"fields\": [\"gray_html\"]}}]',15,2),(2522,'2019-10-26 04:58:00.783408','48','210 Total Quiz',2,'[{\"changed\": {\"fields\": [\"gray_html\"]}}]',15,2),(2523,'2019-10-26 04:58:08.601126','49','220 Total Quiz',2,'[{\"changed\": {\"fields\": [\"gray_html\"]}}]',15,2),(2524,'2019-10-26 04:58:16.674994','50','230 Total Quiz',2,'[{\"changed\": {\"fields\": [\"gray_html\"]}}]',15,2),(2525,'2019-10-26 04:58:24.017781','51','240 Total Quiz',2,'[{\"changed\": {\"fields\": [\"gray_html\"]}}]',15,2),(2526,'2019-10-26 04:58:33.650518','52','250 Total Quiz',2,'[{\"changed\": {\"fields\": [\"gray_html\"]}}]',15,2),(2527,'2019-10-26 04:58:42.354731','53','260 Total Quiz',2,'[{\"changed\": {\"fields\": [\"gray_html\"]}}]',15,2),(2528,'2019-10-26 04:58:50.445109','54','270 Total Quiz',2,'[{\"changed\": {\"fields\": [\"gray_html\"]}}]',15,2),(2529,'2019-10-26 04:58:59.266786','55','280 Total Quiz',2,'[{\"changed\": {\"fields\": [\"gray_html\"]}}]',15,2),(2530,'2019-10-26 04:59:07.665962','56','290 Total Quiz',2,'[{\"changed\": {\"fields\": [\"gray_html\"]}}]',15,2),(2531,'2019-10-26 04:59:15.880364','57','300 Total Quiz',2,'[{\"changed\": {\"fields\": [\"gray_html\"]}}]',15,2),(2532,'2019-10-26 04:59:38.299955','10','2 Quiz Per Day',2,'[{\"changed\": {\"fields\": [\"gray_html\"]}}]',15,2),(2533,'2019-10-26 04:59:55.548694','11','3 Quiz Per Day',2,'[{\"changed\": {\"fields\": [\"gray_html\"]}}]',15,2),(2534,'2019-10-26 05:00:08.686834','12','4 Quiz Per Day',2,'[{\"changed\": {\"fields\": [\"gray_html\"]}}]',15,2),(2535,'2019-10-26 05:00:18.247824','13','5 Quiz Per Day',2,'[{\"changed\": {\"fields\": [\"gray_html\"]}}]',15,2),(2536,'2019-10-26 05:00:28.464096','17','6 Quiz Per Day',2,'[{\"changed\": {\"fields\": [\"gray_html\"]}}]',15,2),(2537,'2019-10-26 05:00:38.975192','18','7 Quiz Per Day',2,'[{\"changed\": {\"fields\": [\"gray_html\"]}}]',15,2),(2538,'2019-10-26 05:00:47.742790','19','8 Quiz Per Day',2,'[{\"changed\": {\"fields\": [\"gray_html\"]}}]',15,2),(2539,'2019-10-26 05:00:57.474683','20','9 Quiz Per Day',2,'[{\"changed\": {\"fields\": [\"gray_html\"]}}]',15,2),(2540,'2019-10-26 05:01:09.790594','63','10 Quiz Per Day',2,'[{\"changed\": {\"fields\": [\"gray_html\"]}}]',15,2),(2541,'2019-10-26 05:01:20.029231','64','11 Quiz Per Day',2,'[{\"changed\": {\"fields\": [\"gray_html\"]}}]',15,2),(2542,'2019-10-26 05:01:27.889693','65','12 Quiz Per Day',2,'[{\"changed\": {\"fields\": [\"gray_html\"]}}]',15,2),(2543,'2019-10-26 05:01:35.365754','66','13 Quiz Per Day',2,'[{\"changed\": {\"fields\": [\"gray_html\"]}}]',15,2),(2544,'2019-10-26 05:01:42.807809','67','14 Quiz Per Day',2,'[{\"changed\": {\"fields\": [\"gray_html\"]}}]',15,2),(2545,'2019-10-26 05:01:53.087635','68','15 Quiz Per Day',2,'[{\"changed\": {\"fields\": [\"gray_html\"]}}]',15,2),(2546,'2019-10-26 05:02:18.383971','1','2 Day Streak',2,'[{\"changed\": {\"fields\": [\"gray_html\"]}}]',15,2),(2547,'2019-10-26 05:02:28.061025','22','3 Day Streak',2,'[{\"changed\": {\"fields\": [\"gray_html\"]}}]',15,2),(2548,'2019-10-26 05:02:45.072184','2','4 Day Streak',2,'[{\"changed\": {\"fields\": [\"gray_html\"]}}]',15,2),(2549,'2019-10-26 05:02:54.110797','21','5 Day Streak',2,'[{\"changed\": {\"fields\": [\"gray_html\"]}}]',15,2),(2550,'2019-10-26 05:03:03.255697','30','6 Day Streak',2,'[{\"changed\": {\"fields\": [\"gray_html\"]}}]',15,2),(2551,'2019-10-26 05:03:10.610692','3','7 Day Streak',2,'[{\"changed\": {\"fields\": [\"gray_html\"]}}]',15,2),(2552,'2019-10-26 05:03:18.692520','31','8 Day Streak',2,'[{\"changed\": {\"fields\": [\"gray_html\"]}}]',15,2),(2553,'2019-10-26 05:03:26.048434','32','9 Day Streak',2,'[{\"changed\": {\"fields\": [\"gray_html\"]}}]',15,2),(2554,'2019-10-26 05:03:33.993278','9','10 Day Streak',2,'[{\"changed\": {\"fields\": [\"gray_html\"]}}]',15,2),(2555,'2019-10-26 05:03:41.091173','58','11 Day Streak',2,'[{\"changed\": {\"fields\": [\"gray_html\"]}}]',15,2),(2556,'2019-10-26 05:03:51.616149','59','12 Day Streak',2,'[{\"changed\": {\"fields\": [\"gray_html\"]}}]',15,2),(2557,'2019-10-26 05:04:23.725116','58','11 Day Streak',2,'[{\"changed\": {\"fields\": [\"gray_html\"]}}]',15,2),(2558,'2019-10-26 05:04:33.546162','60','13 Day Streak',2,'[{\"changed\": {\"fields\": [\"gray_html\"]}}]',15,2),(2559,'2019-10-26 05:04:43.750595','61','14 Day Streak',2,'[{\"changed\": {\"fields\": [\"gray_html\"]}}]',15,2),(2560,'2019-10-26 05:04:53.875562','62','15 Day Streak',2,'[{\"changed\": {\"fields\": [\"gray_html\"]}}]',15,2),(2561,'2019-10-26 05:08:48.734253','14','10 Total Quiz',2,'[{\"changed\": {\"fields\": [\"html\", \"gray_html\"]}}]',15,2),(2562,'2019-10-26 06:56:49.614071','104','Create variables -    1 Variable 6(104)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(2563,'2019-10-26 07:21:33.878643','86','Return -    2 Function 34(86)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(2564,'2019-10-26 07:21:58.332955','86','Return -    2 Function 34(86)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(2565,'2019-10-26 07:24:28.382045','87','Set -    2 Set 64(87)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(2566,'2019-10-26 07:25:09.278159','7','Set exist -    2 Set 65(7)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(2567,'2019-10-26 07:25:59.407569','92','Set length -    2 Set 66(92)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(2568,'2019-10-26 07:33:38.076037','33','Welcome',2,'[{\"changed\": {\"fields\": [\"gray_html\"]}}]',15,2),(2569,'2019-10-26 07:36:43.564781','62','15 Day Streak',2,'[{\"changed\": {\"fields\": [\"gray_html\"]}}]',15,2),(2570,'2019-10-26 07:38:16.368161','62','15 Day Streak',2,'[{\"changed\": {\"fields\": [\"gray_html\"]}}]',15,2),(2571,'2019-10-26 07:38:40.473040','61','14 Day Streak',2,'[{\"changed\": {\"fields\": [\"gray_html\"]}}]',15,2),(2572,'2019-10-27 01:20:29.469218','135','Find Nth node from the end of a linked list -    4 Linked List 147(135)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(2573,'2019-10-27 01:24:21.425900','135','Find Nth node from the end of a linked list -    4 Linked List 147(135)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(2574,'2019-10-27 01:34:52.406605','69','Find the maximum of a linked list -    4 Linked List 143(69)',2,'[{\"changed\": {\"fields\": [\"title\"]}}]',3,2),(2575,'2019-10-27 02:37:11.635462','83','143(69). 1. dayeon 2019-08-27 Find the maximum of a linked list right:1',3,'',12,2),(2576,'2019-10-27 22:42:37.872741','190','147(135). Find Nth node from the end of a linked list - 1 -> 2 -> 4 -> 5 -> 6 -> 7 -> 8 -> 9\r\n3 7',2,'[{\"changed\": {\"fields\": [\"input\"]}}]',4,2),(2577,'2019-10-27 22:43:03.375138','189','147(135). Find Nth node from the end of a linked list - 1 -> 2 -> 4 -> 5 -> 6 -> 7\r\n2 6',2,'[{\"changed\": {\"fields\": [\"input\"]}}]',4,2),(2578,'2019-10-27 22:43:23.887461','188','146(134). Find the middle of a linked list. - 1 -> 2 -> 4 -> 5 -> 6 -> 7 4',2,'[{\"changed\": {\"fields\": [\"input\"]}}]',4,2),(2579,'2019-10-27 22:43:40.660348','187','146(134). Find the middle of a linked list. - 1 -> 2 -> 3 -> 4 -> 5 3',2,'[{\"changed\": {\"fields\": [\"input\"]}}]',4,2),(2580,'2019-10-27 22:44:04.188310','93','143(69). Find the maximum of a linked list - Node[1, 4, 3, 2] 4',2,'[]',4,2),(2581,'2019-10-27 22:44:37.741951','190','147(135). Find Nth node from the end of a linked list - Node[1, 2, 4, 5, 6, 7, 8, 9]\r\n3 7',2,'[{\"changed\": {\"fields\": [\"input\"]}}]',4,2),(2582,'2019-10-27 22:45:08.777460','189','147(135). Find Nth node from the end of a linked list - Node[1, 2, 4, 5, 6, 7]\r\n2 6',2,'[{\"changed\": {\"fields\": [\"input\"]}}]',4,2),(2583,'2019-10-27 22:45:40.318299','188','146(134). Find the middle of a linked list. - Node[1, 2, 4, 5, 6, 7] 4',2,'[{\"changed\": {\"fields\": [\"input\"]}}]',4,2),(2584,'2019-10-27 22:45:57.561164','187','146(134). Find the middle of a linked list. - Node[1, 2, 3, 4, 5] 3',2,'[{\"changed\": {\"fields\": [\"input\"]}}]',4,2),(2585,'2019-10-28 00:11:10.985183','69','Find the maximum of a linked list -    4 Linked List 143(69)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(2586,'2019-10-28 01:05:59.591461','227','117(148). Target sum of subarray - [4, 4, 4, 1, 1, 1, 1]\r\n10 True',1,'[{\"added\": {}}]',4,2),(2587,'2019-10-28 01:07:26.956347','227','117(148). Target sum of subarray - [4, 4, 4, 4, 1, 1, 1, 1]\r\n14 True',2,'[{\"changed\": {\"fields\": [\"input\"]}}]',4,2),(2588,'2019-10-28 01:21:24.920220','148','Target sum of subarray -    5 Greedy 147(148)',2,'[{\"changed\": {\"fields\": [\"category\"]}}]',3,2),(2589,'2019-10-28 03:04:31.191152','148','Target sum of subarray -    5 Greedy 147(148)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(2590,'2019-10-28 03:09:34.383941','228','147(148). Target sum of subarray - [1, 2, 3, 4, 5, 6, 7]\r\n11 True',1,'[{\"added\": {}}]',4,2),(2591,'2019-10-28 03:39:15.805271','66','Adjacent same numbers -    3 Advanced List 107(66)',2,'[{\"changed\": {\"fields\": [\"question\"]}}]',3,2),(2592,'2019-10-28 03:43:23.278501','185','107(66). Adjacent same numbers - [1, 4, 4, 5, 5, 2, 3, 6, 7, 5, 5, 5] 3',2,'[{\"changed\": {\"fields\": [\"input\"]}}]',4,2),(2593,'2019-10-28 04:27:17.293352','66','Adjacent same numbers -    3 Advanced List 107(66)',2,'[{\"changed\": {\"fields\": [\"example\"]}}]',3,2),(2594,'2019-10-28 04:37:37.706734','138','Binary number -    3 Math 138(138)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(2595,'2019-10-29 03:41:23.957474','136','Next greater value -    4 Stack 154(136)',2,'[{\"changed\": {\"fields\": [\"title\", \"question\", \"example\", \"category\", \"visible\", \"answer_header\"]}}]',3,2),(2596,'2019-10-29 03:41:57.084905','229','154(136). Next greater value - [1, 4, 5, 3] [4, 5, -1, -1]',1,'[{\"added\": {}}]',4,2),(2597,'2019-10-29 03:42:19.565609','230','154(136). Next greater value - [2, 5, 3, 6, 7, 8] [5, 6, 6, 7, 8, -1]',1,'[{\"added\": {}}]',4,2),(2598,'2019-10-29 03:44:05.090146','136','Next greater value -    4 Stack 142(136)',2,'[{\"changed\": {\"fields\": [\"example\"]}}]',3,2),(2599,'2019-10-29 04:30:59.149627','156','How many pairs of parenthesis -    2 String 155(156)',1,'[{\"added\": {}}]',3,2),(2600,'2019-10-29 04:32:19.965546','231','155(156). How many pairs of parenthesis - \'()()(())\' 4',1,'[{\"added\": {}}]',4,2),(2601,'2019-10-29 04:32:49.686700','232','155(156). How many pairs of parenthesis - \'(()())\' 3',1,'[{\"added\": {}}]',4,2),(2602,'2019-10-29 04:33:07.767137','231','155(156). How many pairs of parenthesis - \'()()(())\' 4',2,'[]',4,2),(2603,'2019-10-29 04:36:52.364507','156','How many pairs of parenthesis -    2 String 42(156)',2,'[{\"changed\": {\"fields\": [\"question\", \"example\"]}}]',3,2),(2604,'2019-10-29 04:37:14.182224','231','42(156). How many pairs of parenthesis - \'()()(()))\' 4',2,'[{\"changed\": {\"fields\": [\"input\"]}}]',4,2),(2605,'2019-10-29 04:38:33.267373','233','42(156). How many pairs of parenthesis - \'(((((\' 0',1,'[{\"added\": {}}]',4,2),(2606,'2019-10-29 04:39:35.107722','156','How many pairs of parenthesis -    4 Stack 42(156)',2,'[{\"changed\": {\"fields\": [\"category\"]}}]',3,2),(2607,'2019-10-29 05:05:12.909298','81','Reverse linked list -    4 Linked List 146(81)',2,'[{\"changed\": {\"fields\": [\"answer_header\"]}}]',3,2),(2608,'2019-10-29 05:05:53.878552','68','Remove outermost parenthesis -    4 Stack 142(68)',2,'[{\"changed\": {\"fields\": [\"question\"]}}]',3,2),(2609,'2019-10-29 06:12:51.408577','136','Next greater value -    4 Stack 143(136)',2,'[{\"changed\": {\"fields\": [\"question\"]}}]',3,2),(2610,'2019-10-30 00:12:05.417555','157','Rotate a 2D list by 90 degress -    3 Advanced List 156(157)',1,'[{\"added\": {}}]',3,2),(2611,'2019-10-30 00:12:51.800434','234','156(157). Rotate a 2D list by 90 degress - [[1, 2, 3], [4, 5, 6], [7, 8, 9]] [[7, 4, 1], [8, 5, 2], [9, 6, 3]]',1,'[{\"added\": {}}]',4,2),(2612,'2019-10-30 00:13:34.001371','235','156(157). Rotate a 2D list by 90 degress - [[1, 2, 3, 4], [5, 6, 7, 8], [9, 10, 11, 12], [13, 14, 15, 16]] [[13, 9, 5, 1], [14, 10, 6, 2], [15, 11, 7, 3], [16, 12, 8, 4]]',1,'[{\"added\": {}}]',4,2),(2613,'2019-10-30 00:49:14.623878','157','Rotate a 2D list by 90 degress -    3 Advanced For 100(157)',2,'[{\"changed\": {\"fields\": [\"category\"]}}]',3,2),(2614,'2019-10-30 01:45:31.405225','236','143(136). Next greater value - [2, 5, 3, 4, 8, 7] [5, 8, 4, 8, -1, -1]',1,'[{\"added\": {}}]',4,2),(2615,'2019-10-30 03:54:37.761299','158','Initialize a list -    2 List 157(158)',1,'[{\"added\": {}}]',3,2),(2616,'2019-10-30 03:55:03.781179','237','157(158). Initialize a list - 2\r\n4 [[0, 0, 0, 0], [0, 0, 0, 0]]',1,'[{\"added\": {}}]',4,2),(2617,'2019-10-30 03:55:25.096544','238','157(158). Initialize a list - 2\r\n3 [[0, 0, 0], [0, 0, 0]]',1,'[{\"added\": {}}]',4,2),(2618,'2019-10-30 07:05:48.071339','159','Find a value in Binary Search Tree -    4 Tree 158(159)',1,'[{\"added\": {}}]',3,2),(2619,'2019-10-30 07:08:29.687347','239','158(159). Find a value in Binary Search Tree - Tree[4, [2, [1, None, None], None], [6, None, [8, None, None]]]\r\n6 True',1,'[{\"added\": {}}]',4,2),(2620,'2019-10-30 07:36:57.904977','159','Find a value in Binary Search Tree -    4 Tree 158(159)',2,'[{\"changed\": {\"fields\": [\"answer_header\"]}}]',3,2),(2621,'2019-10-30 07:58:20.679285','240','158(159). Find a value in Binary Search Tree - Tree[4, [2, [1, None, None], None], [6, None, [8, None, None]]]\r\n1 True',1,'[{\"added\": {}}]',4,2),(2622,'2019-10-30 07:58:33.902860','241','158(159). Find a value in Binary Search Tree - Tree[4, [2, [1, None, None], None], [6, None, [8, None, None]]]\r\n5 False',1,'[{\"added\": {}}]',4,2),(2623,'2019-10-30 08:54:09.852766','239','158(159). Find a value in Binary Search Tree - [4, 2, 6, 1, None, None, 8]\r\n6 True',2,'[{\"changed\": {\"fields\": [\"input\"]}}]',4,2),(2624,'2019-10-30 08:54:17.297365','240','158(159). Find a value in Binary Search Tree - [4, 2, 6, 1, None, None, 8]\r\n1 True',2,'[{\"changed\": {\"fields\": [\"input\"]}}]',4,2),(2625,'2019-10-30 08:54:31.280183','241','158(159). Find a value in Binary Search Tree - Tree[4, 2, 6, 1, None, None, 8]\r\n5 False',2,'[{\"changed\": {\"fields\": [\"input\"]}}]',4,2),(2626,'2019-10-30 08:54:37.759520','240','158(159). Find a value in Binary Search Tree - Tree[4, 2, 6, 1, None, None, 8]\r\n1 True',2,'[{\"changed\": {\"fields\": [\"input\"]}}]',4,2),(2627,'2019-10-30 08:54:43.659331','239','158(159). Find a value in Binary Search Tree - Tree[4, 2, 6, 1, None, None, 8]\r\n6 True',2,'[{\"changed\": {\"fields\": [\"input\"]}}]',4,2),(2628,'2019-10-30 09:06:16.633823','159','Check if a value exists in Binary Search Tree -    4 Tree 158(159)',2,'[{\"changed\": {\"fields\": [\"title\", \"explanation\", \"example\"]}}]',3,2),(2629,'2019-10-30 09:11:09.093309','159','Check if Binary Search Tree has a specific value -    4 Tree 158(159)',2,'[{\"changed\": {\"fields\": [\"title\", \"explanation\", \"example\"]}}]',3,2),(2630,'2019-10-31 04:52:34.097683','158','Initialize a list -    2 List 51(158)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(2631,'2019-10-31 06:45:59.474389','159','Check if Binary Search Tree has a specific value -    4 Tree 158(159)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(2632,'2019-10-31 06:48:06.218441','33','  High-41. Tree',2,'[{\"changed\": {\"fields\": [\"desc\", \"visible\"]}}]',2,2),(2633,'2019-10-31 07:10:42.041954','160','Make a Binary Tree - x  4 Tree 159(160)',1,'[{\"added\": {}}]',3,2),(2634,'2019-10-31 07:19:00.363383','160','Make a Binary Tree - x  4 Tree 159(160)',2,'[{\"changed\": {\"fields\": [\"explanation\", \"example\"]}}]',3,19),(2635,'2019-10-31 07:19:20.311995','160','Make a Binary Tree -    4 Tree 159(160)',2,'[{\"changed\": {\"fields\": [\"visible\"]}}]',3,19),(2636,'2019-10-31 07:20:13.633873','160','Make a Binary Tree -    4 Tree 159(160)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,19),(2637,'2019-10-31 07:21:33.749316','160','Make a Binary Tree -    4 Tree 159(160)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,19),(2638,'2019-10-31 07:22:29.008028','160','Make a Binary Tree -    4 Tree 159(160)',2,'[{\"changed\": {\"fields\": [\"question\"]}}]',3,19),(2639,'2019-10-31 07:23:04.807530','242','159(160). Make a Binary Tree -  Tree[1, 2, 3]',1,'[{\"added\": {}}]',4,2),(2640,'2019-10-31 07:26:20.450537','160','Make a Binary Tree -    4 Tree 150(160)',2,'[{\"changed\": {\"fields\": [\"explanation\", \"answer_header\"]}}]',3,19),(2641,'2019-10-31 08:18:09.788105','161','Traverse left nodes of Binary Tree -    4 Tree 160(161)',1,'[{\"added\": {}}]',3,2),(2642,'2019-10-31 08:18:36.275452','243','160(161). Traverse left nodes of Binary Tree - Tree[1, 2, 3, 4]\r\n4 True',1,'[{\"added\": {}}]',4,2),(2643,'2019-10-31 08:18:50.511201','244','160(161). Traverse left nodes of Binary Tree - Tree[1, 2, 3, 4]\r\n3 False',1,'[{\"added\": {}}]',4,2),(2644,'2019-10-31 08:22:04.836971','161','Traverse left nodes of Binary Tree -    4 Tree 160(161)',2,'[{\"changed\": {\"fields\": [\"example\"]}}]',3,2),(2645,'2019-11-01 04:25:11.208672','161','Traverse left nodes of Binary Tree -    4 Tree 151(161)',2,'[{\"changed\": {\"fields\": [\"answer_header\"]}}]',3,2),(2646,'2019-11-01 04:25:41.689765','159','Check if Binary Search Tree has a specific value -    4 Tree 152(159)',2,'[{\"changed\": {\"fields\": [\"answer_header\"]}}]',3,2),(2647,'2019-11-01 05:09:33.134902','162','lowest common ancestor in bineary search tree -    4 Tree 161(162)',1,'[{\"added\": {}}]',3,19),(2648,'2019-11-01 05:10:06.983936','245','161(162). lowest common ancestor in bineary search tree - Tree[8, 4, 10, 2, 6, 9, None, None, 3] 4',1,'[{\"added\": {}}]',4,2),(2649,'2019-11-01 05:11:45.322760','162','lowest common ancestor in bineary search tree -    4 Tree 161(162)',2,'[{\"changed\": {\"fields\": [\"question\", \"example\"]}}]',3,19),(2650,'2019-11-01 05:16:29.139873','162','lowest common ancestor in bineary search tree -    4 Tree 152(162)',2,'[{\"changed\": {\"fields\": [\"answer_header\"]}}]',3,2),(2651,'2019-11-01 05:18:07.840244','162','lowest common ancestor in bineary search tree -    4 Tree 152(162)',2,'[{\"changed\": {\"fields\": [\"example\"]}}]',3,2),(2652,'2019-11-01 05:18:22.336355','245','152(162). lowest common ancestor in bineary search tree - Tree[8, 4, 10, 2, 6, 9, None, None, 3]\r\n3\r\n6 4',2,'[{\"changed\": {\"fields\": [\"input\"]}}]',4,2),(2653,'2019-11-01 05:18:51.832665','162','lowest common ancestor in bineary search tree -    4 Tree 152(162)',2,'[{\"changed\": {\"fields\": [\"answer_header\"]}}]',3,2),(2654,'2019-11-02 02:40:29.462922','158','Initialize a list -    2 List 51(158)',2,'[{\"changed\": {\"fields\": [\"question\", \"example\"]}}]',3,2),(2655,'2019-11-02 02:40:47.484362','237','51(158). Initialize a list - 2\r\n4 [[0, 0, 0, 1], [0, 0, 0, 1]]',2,'[{\"changed\": {\"fields\": [\"expected_output\"]}}]',4,2),(2656,'2019-11-02 02:40:58.801778','238','51(158). Initialize a list - 2\r\n3 [[0, 0, 1], [0, 0, 1]]',2,'[{\"changed\": {\"fields\": [\"expected_output\"]}}]',4,2),(2657,'2019-11-02 02:43:10.226669','158','Initialize a list -    2 List 51(158)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(2658,'2019-11-02 02:57:04.568316','148','Target sum of subarray -    5 Greedy 154(148)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(2659,'2019-11-02 04:15:31.147014','163','Count ways to reach the stair -    5 Dynamic Programming 162(163)',1,'[{\"added\": {}}]',3,2),(2660,'2019-11-02 04:27:50.801727','163','Count ways to reach the stair -    5 Dynamic Programming 162(163)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,19),(2661,'2019-11-02 04:28:13.027272','246','162(163). Count ways to reach the stair - 5 5',1,'[{\"added\": {}}]',4,2),(2662,'2019-11-02 04:28:42.119186','247','162(163). Count ways to reach the stair - 1 1',1,'[{\"added\": {}}]',4,2),(2663,'2019-11-02 04:28:51.003923','246','162(163). Count ways to reach the stair - 5 8',2,'[{\"changed\": {\"fields\": [\"expected_output\"]}}]',4,2),(2664,'2019-11-02 04:30:03.257482','163','Count ways to reach the stair -    5 Dynamic Programming 158(163)',2,'[{\"changed\": {\"fields\": [\"question\"]}}]',3,19),(2665,'2019-11-02 04:33:38.793575','163','Count ways to reach the stair -    5 Dynamic Programming 158(163)',2,'[{\"changed\": {\"fields\": [\"explanation\", \"question\", \"example\"]}}]',3,19),(2666,'2019-11-02 04:39:34.945836','163','Count ways to reach the stair -    5 Dynamic Programming 158(163)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(2667,'2019-11-02 05:30:14.186517','164','Copy list - x  2 List 163(164)',1,'[{\"added\": {}}]',3,19),(2668,'2019-11-02 06:00:32.910955','164','Copy list - x  2 List 163(164)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,19),(2669,'2019-11-02 06:01:45.774709','164','Copy list - x  2 List 163(164)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,19),(2670,'2019-11-02 06:02:05.084840','164','Copy list - x  2 List 163(164)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,19),(2671,'2019-11-02 06:03:03.754344','164','Copy list - x  2 List 163(164)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,19),(2672,'2019-11-02 06:03:49.945418','164','Copy list - x  2 List 163(164)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,19),(2673,'2019-11-02 06:06:03.967616','164','Copy list - x  2 List 163(164)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,19),(2674,'2019-11-02 06:06:41.748896','164','Copy list - x  2 List 163(164)',2,'[{\"changed\": {\"fields\": [\"example\"]}}]',3,19),(2675,'2019-11-02 06:08:22.990941','248','163(164). Copy list -  60',1,'[{\"added\": {}}]',4,19),(2676,'2019-11-02 06:10:13.782916','164','Copy list -    2 List 52(164)',2,'[{\"changed\": {\"fields\": [\"visible\"]}}]',3,2),(2677,'2019-11-02 06:16:13.916559','164','Copy list -    2 List 52(164)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,19),(2678,'2019-11-02 06:17:56.938045','164','Copy list -    2 List 52(164)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(2679,'2019-11-02 06:28:55.228331','164','Copy list -    2 List 52(164)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(2680,'2019-11-02 18:55:44.156085','165','Greatest row -    3 Advanced List 164(165)',1,'[{\"added\": {}}]',3,2),(2681,'2019-11-02 18:56:23.686751','249','164(165). Greatest row - [[0, 2, 5, 1], [3, 6, 2, 8], [9, 1, 2, 1]] 1',1,'[{\"added\": {}}]',4,2),(2682,'2019-11-02 19:11:20.808393','165','Greatest row of 2D list -    3 Advanced List 105(165)',2,'[{\"changed\": {\"fields\": [\"title\"]}}]',3,2),(2683,'2019-11-02 19:44:47.919222','157','Rotate 2D list by 90 degrees -    3 Advanced For 96(157)',2,'[{\"changed\": {\"fields\": [\"title\", \"explanation\"]}}]',3,19),(2684,'2019-11-02 19:52:09.964195','157','Rotate 2D list by 90 degrees -    3 Advanced For 96(157)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,19),(2685,'2019-11-02 19:55:51.695652','157','Rotate 2D list by 90 degrees -    3 Advanced For 96(157)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,19),(2686,'2019-11-02 19:56:50.069415','157','Rotate 2D list by 90 degrees -    3 Advanced For 96(157)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,19),(2687,'2019-11-02 19:57:47.314289','157','Rotate 2D list by 90 degrees -    3 Advanced For 96(157)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,19),(2688,'2019-11-02 21:32:12.669911','159','Check if Binary Search Tree has a specific value -    4 Tree 155(159)',2,'[{\"changed\": {\"fields\": [\"example\"]}}]',3,19),(2689,'2019-11-02 21:44:21.282775','14','Reverse a list using stack -    4 Stack 142(14)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,19),(2690,'2019-11-02 21:47:42.208392','14','Reverse a list using stack -    4 Stack 142(14)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,19),(2691,'2019-11-02 21:48:22.172655','14','Reverse a list using stack -    4 Stack 142(14)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,19),(2692,'2019-11-02 21:49:57.897621','14','Reverse a list using stack -    4 Stack 142(14)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,19),(2693,'2019-11-02 22:08:37.034437','9','  High-38. Stack',2,'[{\"changed\": {\"fields\": [\"desc\"]}}]',2,2),(2694,'2019-11-02 22:20:53.750300','14','Reverse a list using stack -    4 Stack 142(14)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(2695,'2019-11-03 00:34:33.637518','14','Reverse a list using stack -    4 Stack 142(14)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(2696,'2019-11-03 04:45:34.302735','5','Add function -    1 While 31(5)',2,'[{\"changed\": {\"fields\": [\"example\"]}}]',3,19),(2697,'2019-11-03 23:57:44.152643','161','Traverse left nodes of Binary Tree -    4 Tree 153(161)',2,'[{\"changed\": {\"fields\": [\"answer_header\"]}}]',3,2),(2698,'2019-11-04 01:47:25.881420','160','Make a Binary Tree -    4 Tree 152(160)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(2699,'2019-11-04 04:00:39.376172','162','Lowest common ancestor in Binary Search Tree -    4 Tree 154(162)',2,'[{\"changed\": {\"fields\": [\"title\"]}}]',3,2),(2700,'2019-11-04 04:01:19.958154','250','154(162). Lowest common ancestor in Binary Search Tree - Tree[8, 4, 10, 2, 6, 9, None, None, 3]\r\n9\r\n10 10',1,'[{\"added\": {}}]',4,2),(2701,'2019-11-04 04:10:17.680228','189','151(135). Find Nth node from the end of a linked list - Node[1, 2, 4, 5, 6, 7]\r\n2 6',2,'[]',4,2),(2702,'2019-11-04 04:11:07.476964','189','151(135). Find Nth node from the end of a linked list - Node[1, 2, 4, 5, 6, 7]\r\n2 6',2,'[]',4,2),(2703,'2019-11-04 04:11:59.067407','189','151(135). Find Nth node from the end of a linked list - Node[1, 2, 4, 5, 6, 7]\r\n2 6',2,'[]',4,2),(2704,'2019-11-04 04:15:44.815046','135','Find Nth node from the end of a linked list -    4 Linked List 151(135)',2,'[{\"changed\": {\"fields\": [\"answer_header\"]}}]',3,2),(2705,'2019-11-05 03:14:39.348354','166','Maximum value of Tree -    4 Tree 165(166)',1,'[{\"added\": {}}]',3,2),(2706,'2019-11-05 03:15:33.253544','166','Maximum value of Tree -    4 Tree 165(166)',2,'[{\"changed\": {\"fields\": [\"example\"]}}]',3,19),(2707,'2019-11-05 03:15:57.669181','251','165(166). Maximum value of Tree - Tree[1, 10, 3, 4, 5, 6, None] 10',1,'[{\"added\": {}}]',4,19),(2708,'2019-11-05 03:16:23.062689','252','165(166). Maximum value of Tree - Tree[1, 2, 3, 4, 5, 6, 7] 7',1,'[{\"added\": {}}]',4,19),(2709,'2019-11-05 03:20:07.626093','166','Maximum value of Tree -    4 Tree 165(166)',2,'[{\"changed\": {\"fields\": [\"answer_header\"]}}]',3,19),(2710,'2019-11-05 04:35:44.618122','167','Next valid parenthesis -    4 Stack 166(167)',1,'[{\"added\": {}}]',3,2),(2711,'2019-11-05 04:38:47.820618','253','166(167). Next valid parenthesis - (((){}) )',1,'[{\"added\": {}}]',4,2),(2712,'2019-11-05 04:39:06.839252','254','166(167). Next valid parenthesis - ((())[[] ]',1,'[{\"added\": {}}]',4,2),(2713,'2019-11-05 04:39:26.110675','255','166(167). Next valid parenthesis - (((){})) -1',1,'[{\"added\": {}}]',4,2),(2714,'2019-11-05 04:41:51.907790','167','Next valid symbol -    4 Stack 166(167)',2,'[{\"changed\": {\"fields\": [\"title\", \"question\", \"example\"]}}]',3,2),(2715,'2019-11-05 04:43:03.708319','143','Zigzag list 2 - x  3 Advanced For 98(143)',2,'[{\"changed\": {\"fields\": [\"visible\"]}}]',3,19),(2716,'2019-11-05 04:43:28.039767','144','Zigzag list 3 - x  3 Advanced For 99(144)',2,'[{\"changed\": {\"fields\": [\"visible\"]}}]',3,19),(2717,'2019-11-07 05:04:15.818046','168','   Maximum level of Binary Tree 4 Tree 167(168)',1,'[{\"added\": {}}]',3,2),(2718,'2019-11-07 05:05:23.022910','168','   Maximum level of Binary Tree 4 Tree 167(168)',2,'[{\"changed\": {\"fields\": [\"example\"]}}]',3,19),(2719,'2019-11-07 05:05:49.610530','256','167(168). Maximum level of Binary Tree - Tree[1, 2, 3] 2',1,'[{\"added\": {}}]',4,2),(2720,'2019-11-07 05:06:12.620062','257','167(168). Maximum level of Binary Tree - Tree[1, 10, 3, 4, 5, 6, 7, None, None, None, None, 8, None] 4',1,'[{\"added\": {}}]',4,2),(2721,'2019-11-07 05:24:46.236294','168','   Maximum level of Binary Tree 4 Tree 156(168)',2,'[{\"changed\": {\"fields\": [\"question\"]}}]',3,2),(2722,'2019-11-07 05:38:05.406667','169','   Valid custom tree 4 Tree 168(169)',1,'[{\"added\": {}}]',3,19),(2723,'2019-11-07 05:38:31.020560','258','168(169). Valid custom tree - Tree[8, 4, 3, 1, 3, 2, 1] Tree',1,'[{\"added\": {}}]',4,19),(2724,'2019-11-07 05:39:09.859400','259','168(169). Valid custom tree - Tree[8, 4, 3, 1, 5, 2, 1] False',1,'[{\"added\": {}}]',4,19),(2725,'2019-11-07 05:41:22.328169','169','   Valid custom Tree 4 Tree 156(169)',2,'[{\"changed\": {\"fields\": [\"title\"]}}]',3,19),(2726,'2019-11-07 06:11:04.384261','258','156(169). Valid custom Tree - Tree[8, 4, 3, 1, 3, 2, 1] True',2,'[{\"changed\": {\"fields\": [\"expected_output\"]}}]',4,19),(2727,'2019-11-07 17:08:34.196705','170','   Decode passcode 3 Advanced String 169(170)',1,'[{\"added\": {}}]',3,19),(2728,'2019-11-07 17:09:29.493679','260','169(170). Decode passcode - 13 2',1,'[{\"added\": {}}]',4,2),(2729,'2019-11-07 17:09:39.700149','261','169(170). Decode passcode - 123 4',1,'[{\"added\": {}}]',4,2),(2730,'2019-11-07 17:11:35.886541','170','   Decode passcode 3 Advanced String 118(170)',2,'[{\"changed\": {\"fields\": [\"answer_header\"]}}]',3,2),(2731,'2019-11-07 17:14:25.124992','170','   Decode passcode 3 Advanced String 118(170)',2,'[{\"changed\": {\"fields\": [\"hint\"]}}]',3,2),(2732,'2019-11-07 17:15:43.509583','262','118(170). Decode passcode - \"01\" 0',1,'[{\"added\": {}}]',4,2),(2733,'2019-11-07 17:15:53.822190','261','118(170). Decode passcode - \"123\" 4',2,'[{\"changed\": {\"fields\": [\"input\"]}}]',4,2),(2734,'2019-11-07 17:16:04.375216','260','118(170). Decode passcode - \"13\" 2',2,'[{\"changed\": {\"fields\": [\"input\"]}}]',4,2),(2735,'2019-11-07 17:16:36.423739','170','   Decode passcode 3 Advanced String 118(170)',2,'[{\"changed\": {\"fields\": [\"example\", \"answer_header\"]}}]',3,2),(2736,'2019-11-07 17:51:06.175778','261','118(170). Decode passcode - \"123\" 3',2,'[{\"changed\": {\"fields\": [\"expected_output\"]}}]',4,2),(2737,'2019-11-08 03:43:43.847922','171','   Valid Binary Search Tree 4 Tree 170(171)',1,'[{\"added\": {}}]',3,19),(2738,'2019-11-08 03:44:50.486517','159','   Check if Binary Search Tree has a specific value 4 Tree 159(159)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,19),(2739,'2019-11-08 03:45:25.704501','263','170(171). Valid Binary Search Tree - Tree[8, 4, 6, 1, 3, 5, 7] True',1,'[{\"added\": {}}]',4,19),(2740,'2019-11-08 03:45:48.107628','264','170(171). Valid Binary Search Tree - Tree[8, 4, 6, 1, 6, 5, 7] False',1,'[{\"added\": {}}]',4,19),(2741,'2019-11-08 03:46:56.315634','171','   Valid Binary Search Tree 4 Tree 170(171)',2,'[{\"changed\": {\"fields\": [\"example\"]}}]',3,2),(2742,'2019-11-08 03:54:14.346635','37','x High-46. Recursion',1,'[{\"added\": {}}]',2,2),(2743,'2019-11-08 03:54:33.691742','37','  High-46. Recursion',2,'[{\"changed\": {\"fields\": [\"visible\"]}}]',2,2),(2744,'2019-11-08 03:56:18.896006','170','   Decode passcode 4 Recursion 142(170)',2,'[{\"changed\": {\"fields\": [\"category\"]}}]',3,2),(2745,'2019-11-08 04:17:20.595719','172','   Factorial of a Number 4 Recursion 171(172)',1,'[{\"added\": {}}]',3,2),(2746,'2019-11-08 04:17:38.407508','265','171(172). Factorial of a Number -  15',1,'[{\"added\": {}}]',4,2),(2747,'2019-11-08 04:20:28.853669','173','   Divide a number 4 Recursion 172(173)',1,'[{\"added\": {}}]',3,2),(2748,'2019-11-08 04:21:27.918644','266','172(173). Divide a number -  4',1,'[{\"added\": {}}]',4,2),(2749,'2019-11-08 05:52:57.944296','172','   Factorial of a Number 4 Recursion 142(172)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(2750,'2019-11-08 05:54:09.646802','172','   Factorial of a Number 4 Recursion 142(172)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(2751,'2019-11-08 05:54:57.901246','172','   Factorial of a Number 4 Recursion 142(172)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(2752,'2019-11-08 05:56:12.749363','172','   Factorial of a Number 4 Recursion 142(172)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(2753,'2019-11-08 05:56:49.768941','172','   Factorial of a Number 4 Recursion 142(172)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(2754,'2019-11-08 05:57:09.601353','172','   Factorial of a Number 4 Recursion 142(172)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(2755,'2019-11-08 06:00:44.404663','172','   Factorial of a Number 4 Recursion 142(172)',2,'[{\"changed\": {\"fields\": [\"explanation\", \"example\"]}}]',3,2),(2756,'2019-11-08 06:09:40.883193','170','   Decode passcode 4 Recursion 144(170)',2,'[{\"changed\": {\"fields\": [\"hint\"]}}]',3,2),(2757,'2019-11-09 01:06:03.518236','255','149(167). Next valid symbol - \"(((){}))\" -1',2,'[{\"changed\": {\"fields\": [\"input\"]}}]',4,2),(2758,'2019-11-09 01:06:12.314202','254','149(167). Next valid symbol - \"((())[[]\" ]',2,'[{\"changed\": {\"fields\": [\"input\"]}}]',4,2),(2759,'2019-11-09 01:06:21.325851','253','149(167). Next valid symbol - \"(((){})\" )',2,'[{\"changed\": {\"fields\": [\"input\"]}}]',4,2),(2760,'2019-11-10 07:02:29.944051','174','-- Quiz 1 Data Type 173(174)',1,'[{\"added\": {}}]',3,2),(2761,'2019-11-10 07:20:56.183175','174','-- Quiz 1 Data Type 173(174)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(2762,'2019-11-10 07:22:56.904474','174','-- Quiz 1 Data Type 173(174)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(2763,'2019-11-10 07:23:29.242856','174','-- Quiz 1 Data Type 173(174)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(2764,'2019-11-10 07:27:26.346715','174','-- Quiz 1 Data Type 173(174)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(2765,'2019-11-10 07:35:20.154680','174','-- Quiz 1 Data Type 173(174)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(2766,'2019-11-10 07:36:30.815161','174','-- Quiz 1 Data Type 173(174)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(2767,'2019-11-10 07:38:41.041000','174','-- Quiz 1 Data Type 173(174)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(2768,'2019-11-10 07:40:56.880966','174','-- Quiz 1 Data Type 173(174)',2,'[]',3,2),(2769,'2019-11-16 06:12:48.431862','117','   Count strings 3 Advanced String 117(117)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(2770,'2019-11-16 06:18:54.753661','175','   consecutive number 2 String 174(175)',1,'[{\"added\": {}}]',3,2),(2771,'2019-11-16 06:19:13.949125','267','174(175). consecutive number - \"2 3 4 5 6\" True',1,'[{\"added\": {}}]',4,2),(2772,'2019-11-16 06:19:25.235058','268','174(175). consecutive number - \"3 5 6 7 8\" False',1,'[{\"added\": {}}]',4,2),(2773,'2019-11-16 06:23:16.210398','176','   Smallest gap 2 List 175(176)',1,'[{\"added\": {}}]',3,2),(2774,'2019-11-16 06:23:47.035446','269','175(176). Smallest gap - [10, 5, 8, 15] 2',1,'[{\"added\": {}}]',4,2),(2775,'2019-11-16 06:24:02.025511','270','175(176). Smallest gap - [2, 4, 6, 8, 1] 1',1,'[{\"added\": {}}]',4,2),(2776,'2019-11-16 06:27:29.932899','269','65(176). Smallest gap - \"aabbbccdddd\" a2b3c2d4',2,'[{\"changed\": {\"fields\": [\"input\", \"expected_output\"]}}]',4,2),(2777,'2019-11-16 06:27:44.294248','270','65(176). Smallest gap - \"aaaaabb\" a5b2',2,'[{\"changed\": {\"fields\": [\"input\", \"expected_output\"]}}]',4,2),(2778,'2019-11-16 06:28:06.667462','176','   String compression 2 List 65(176)',2,'[{\"changed\": {\"fields\": [\"title\", \"question\", \"example\", \"answer_header\"]}}]',3,2),(2779,'2019-11-16 06:30:04.030854','177','   Pick first character 2 String 176(177)',1,'[{\"added\": {}}]',3,2),(2780,'2019-11-16 06:30:32.406800','271','176(177). Pick first character - \"Welcome to the world\" Wttw',1,'[{\"added\": {}}]',4,2),(2781,'2019-11-16 06:30:48.112915','272','176(177). Pick first character - \"Hello, I am Dayeon\" HIaD',1,'[{\"added\": {}}]',4,2),(2782,'2019-11-16 06:34:46.821580','178','   Convert list 2 List 177(178)',1,'[{\"added\": {}}]',3,2),(2783,'2019-11-16 06:35:23.818246','273','177(178). Convert list - [1, 2, 3, 4]\r\n[5, 6, 7, 8] [[1, 5], [2, 6], [3, 7], [4, 8]]',1,'[{\"added\": {}}]',4,2),(2784,'2019-11-16 06:35:55.887655','274','177(178). Convert list - [1, 2, 3, 4]\r\n[\"d\", \"c\", \"b\", \"a\"] [[1, \"d\"], [2, \"c\"], [3, \"b\"], [4, \"a\"]]',1,'[{\"added\": {}}]',4,2),(2785,'2019-11-16 06:39:12.571730','274','68(178). Convert list - [1, 2, 3, 4]\r\n[\"d\", \"c\", \"b\", \"a\"] [[1, \'d\'], [2, \'c\'], [3, \'b\'], [4, \'a\']]',2,'[{\"changed\": {\"fields\": [\"expected_output\"]}}]',4,2),(2786,'2019-11-16 06:45:41.631302','275','44(175). consecutive number - \"8 9 10 11\" True',1,'[{\"added\": {}}]',4,19),(2787,'2019-11-17 22:56:35.353955','18','   Range summary 1 Range 19(18)',3,'',3,2),(2788,'2019-11-21 03:36:44.338399','276','66(176). String compression - \"bbbba\" b4a1',1,'[{\"added\": {}}]',4,2),(2789,'2020-02-02 18:57:44.914308','169','   Valid custom Tree 4 Tree 163(169)',2,'[{\"changed\": {\"fields\": [\"example\"]}}]',3,2),(2790,'2020-02-03 00:59:20.873392','170','   Decode passcode 4 Recursion 148(170)',2,'[{\"changed\": {\"fields\": [\"example\"]}}]',3,2),(2791,'2020-02-03 01:00:42.188403','277','163(169). Valid custom Tree - Tree[8, 4, 3, 5] False',1,'[{\"added\": {}}]',4,2),(2792,'2020-02-04 05:44:58.517285','263','167(171). Valid Binary Search Tree - Tree[8, 4, 6, 1, 3, 5, 7] False',2,'[{\"changed\": {\"fields\": [\"expected_output\"]}}]',4,2),(2793,'2020-02-08 07:17:22.891591','171','   Valid Binary Search Tree 4 Tree 167(171)',2,'[{\"changed\": {\"fields\": [\"answer_header\"]}}]',3,2);
/*!40000 ALTER TABLE `django_admin_log` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `django_content_type`
--

DROP TABLE IF EXISTS `django_content_type`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `django_content_type` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `app_label` varchar(100) NOT NULL,
  `model` varchar(100) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `django_content_type_app_label_model_76bd3d3b_uniq` (`app_label`,`model`)
) ENGINE=InnoDB AUTO_INCREMENT=20 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `django_content_type`
--

LOCK TABLES `django_content_type` WRITE;
/*!40000 ALTER TABLE `django_content_type` DISABLE KEYS */;
INSERT INTO `django_content_type` VALUES (6,'admin','logentry'),(8,'auth','group'),(7,'auth','permission'),(9,'auth','user'),(10,'contenttypes','contenttype'),(12,'list','answer'),(15,'list','badge'),(16,'list','badgetype'),(2,'list','category'),(14,'list','customuser'),(13,'list','difficulty'),(18,'list','pointtype'),(3,'list','quiz'),(17,'list','quizscore'),(1,'list','quiztype'),(4,'list','testcase'),(5,'list','usercode'),(19,'list','userpoint'),(11,'sessions','session');
/*!40000 ALTER TABLE `django_content_type` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `django_migrations`
--

DROP TABLE IF EXISTS `django_migrations`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `django_migrations` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `app` varchar(255) NOT NULL,
  `name` varchar(255) NOT NULL,
  `applied` datetime(6) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=121 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `django_migrations`
--

LOCK TABLES `django_migrations` WRITE;
/*!40000 ALTER TABLE `django_migrations` DISABLE KEYS */;
INSERT INTO `django_migrations` VALUES (1,'contenttypes','0001_initial','2019-08-23 23:41:50.191866'),(2,'auth','0001_initial','2019-08-23 23:41:50.278941'),(3,'admin','0001_initial','2019-08-23 23:41:50.431124'),(4,'admin','0002_logentry_remove_auto_add','2019-08-23 23:41:50.477765'),(5,'admin','0003_logentry_add_action_flag_choices','2019-08-23 23:41:50.489018'),(6,'contenttypes','0002_remove_content_type_name','2019-08-23 23:41:50.536843'),(7,'auth','0002_alter_permission_name_max_length','2019-08-23 23:41:50.562602'),(8,'auth','0003_alter_user_email_max_length','2019-08-23 23:41:50.597087'),(9,'auth','0004_alter_user_username_opts','2019-08-23 23:41:50.605708'),(10,'auth','0005_alter_user_last_login_null','2019-08-23 23:41:50.639130'),(11,'auth','0006_require_contenttypes_0002','2019-08-23 23:41:50.641289'),(12,'auth','0007_alter_validators_add_error_messages','2019-08-23 23:41:50.649900'),(13,'auth','0008_alter_user_username_max_length','2019-08-23 23:41:50.680145'),(14,'auth','0009_alter_user_last_name_max_length','2019-08-23 23:41:50.708798'),(15,'auth','0010_alter_group_name_max_length','2019-08-23 23:41:50.733780'),(16,'auth','0011_update_proxy_permissions','2019-08-23 23:41:50.741980'),(17,'list','0001_initial','2019-08-23 23:41:50.814707'),(18,'list','0002_auto_20190717_0236','2019-08-23 23:41:50.991539'),(19,'list','0003_auto_20190717_0240','2019-08-23 23:41:51.022933'),(20,'list','0004_auto_20190717_0244','2019-08-23 23:41:51.076671'),(21,'list','0005_auto_20190717_2227','2019-08-23 23:41:51.104089'),(22,'list','0006_remove_answer_case','2019-08-23 23:41:51.140546'),(23,'list','0007_auto_20190717_2235','2019-08-23 23:41:51.152122'),(24,'list','0008_auto_20190717_2320','2019-08-23 23:41:51.201849'),(25,'list','0009_quiz_answer_header','2019-08-23 23:41:51.221811'),(26,'list','0010_auto_20190718_0111','2019-08-23 23:41:51.288258'),(27,'list','0011_auto_20190718_0244','2019-08-23 23:41:51.341236'),(28,'list','0012_quiz_markdown_explanation','2019-08-23 23:41:51.361968'),(29,'list','0013_auto_20190719_1102','2019-08-23 23:41:51.413080'),(30,'list','0014_auto_20190720_0943','2019-08-23 23:41:51.490331'),(31,'list','0015_auto_20190720_1433','2019-08-23 23:41:51.514085'),(32,'list','0016_auto_20190723_0039','2019-08-23 23:41:51.520524'),(33,'list','0017_quiz_video','2019-08-23 23:41:51.545585'),(34,'list','0018_auto_20190724_1855','2019-08-23 23:41:51.569015'),(35,'list','0019_auto_20190725_2131','2019-08-23 23:41:51.593908'),(36,'list','0020_auto_20190726_1110','2019-08-23 23:41:51.601711'),(37,'list','0021_auto_20190726_1130','2019-08-23 23:41:51.629199'),(38,'list','0022_auto_20190726_1134','2019-08-23 23:41:51.648974'),(39,'list','0023_category_difficulty','2019-08-23 23:41:51.666531'),(40,'list','0024_category_desc','2019-08-23 23:41:51.698694'),(41,'list','0025_auto_20190726_1822','2019-08-23 23:41:51.714646'),(42,'list','0026_category_image','2019-08-23 23:41:51.730374'),(43,'list','0027_auto_20190730_2110','2019-08-23 23:41:51.775866'),(44,'list','0028_answer_print_result','2019-08-23 23:41:51.793603'),(45,'list','0029_auto_20190801_0051','2019-08-23 23:41:51.805960'),(46,'list','0030_auto_20190801_0056','2019-08-23 23:41:51.818801'),(47,'list','0031_auto_20190801_0108','2019-08-23 23:41:51.842920'),(48,'list','0032_auto_20190801_0112','2019-08-23 23:41:51.857720'),(49,'list','0033_badge_user','2019-08-23 23:41:51.884098'),(50,'list','0034_auto_20190801_1559','2019-08-23 23:41:51.961844'),(51,'list','0035_badge_html','2019-08-23 23:41:51.977134'),(52,'list','0036_category_visible','2019-08-23 23:41:52.002317'),(53,'list','0037_auto_20190802_1405','2019-08-23 23:41:52.007186'),(54,'list','0038_quiz_order','2019-08-23 23:41:52.045951'),(55,'list','0039_auto_20190802_1913','2019-08-23 23:41:52.091110'),(56,'list','0040_remove_badge_condition','2019-08-23 23:41:52.182874'),(57,'list','0041_badge_desc','2019-08-23 23:41:52.199217'),(58,'list','0042_difficulty_desc','2019-08-23 23:41:52.212038'),(59,'list','0043_auto_20190804_0109','2019-08-23 23:41:52.236863'),(60,'list','0044_quiz_title','2019-08-23 23:41:52.268270'),(61,'list','0045_auto_20190816_0027','2019-08-23 23:41:52.303661'),(62,'list','0046_auto_20190816_0030','2019-08-23 23:41:52.309831'),(63,'list','0047_auto_20190816_0035','2019-08-23 23:41:52.315852'),(64,'list','0048_auto_20190817_1414','2019-08-23 23:41:52.328356'),(65,'sessions','0001_initial','2019-08-23 23:41:52.340422'),(66,'list','0049_auto_20190824_0145','2019-08-24 08:54:34.863853'),(67,'list','0050_remove_customuser_badges','2019-08-24 08:54:35.074819'),(68,'list','0051_delete_customuser','2019-08-24 08:54:35.104435'),(69,'list','0052_auto_20190824_0207','2019-08-24 09:07:52.751372'),(70,'list','0053_auto_20190824_0933','2019-08-24 16:33:20.865677'),(71,'list','0054_auto_20190824_1537','2019-08-24 22:38:00.143189'),(72,'list','0055_auto_20190824_1739','2019-08-25 00:39:09.119800'),(73,'list','0056_answer_created_at','2019-08-25 00:51:41.934957'),(74,'list','0057_auto_20190824_1831','2019-08-25 01:31:54.062181'),(75,'list','0058_auto_20190824_1840','2019-08-25 01:40:32.315126'),(76,'list','0059_auto_20190824_1841','2019-08-25 01:41:54.269710'),(77,'list','0060_auto_20190824_1842','2019-08-25 01:42:59.241404'),(78,'list','0061_auto_20190824_1845','2019-08-25 01:45:33.424047'),(79,'list','0062_good','2019-09-07 22:23:53.961209'),(80,'list','0063_auto_20190907_1547','2019-09-07 22:47:43.657336'),(81,'list','0064_auto_20190907_1900','2019-09-08 02:00:20.687867'),(82,'list','0065_quiz_score','2019-09-08 03:05:19.218265'),(83,'list','0066_auto_20190907_2026','2019-09-08 03:26:34.148638'),(84,'list','0067_auto_20190917_2330','2019-09-18 06:30:12.812400'),(85,'list','0068_auto_20190917_2333','2019-09-18 06:33:20.737756'),(86,'list','0069_auto_20190917_2333','2019-09-18 06:33:47.406948'),(87,'list','0070_auto_20190917_2334','2019-09-18 06:34:28.929626'),(88,'list','0071_auto_20190919_1826','2019-09-20 01:26:21.382320'),(89,'list','0072_auto_20190919_1828','2019-09-20 01:28:43.061394'),(90,'list','0073_auto_20190919_1832','2019-09-20 01:32:21.396785'),(91,'list','0074_remove_answer_name','2019-09-20 03:46:05.314790'),(92,'list','0075_answer_name','2019-09-20 03:46:18.108149'),(93,'list','0076_auto_20190919_2047','2019-09-20 03:47:44.191786'),(94,'list','0077_auto_20190919_2104','2019-09-20 04:04:31.051626'),(95,'list','0078_auto_20190920_0042','2019-09-20 07:43:00.429849'),(96,'list','0079_auto_20190923_0126','2019-09-23 08:26:06.401671'),(97,'list','0080_answer_modified_date','2019-09-29 06:53:37.841905'),(98,'list','0081_auto_20191001_2042','2019-10-02 03:42:26.069801'),(99,'list','0082_auto_20191004_0112','2019-10-04 08:12:54.691113'),(100,'list','0083_auto_20191004_0155','2019-10-04 08:55:21.987168'),(101,'list','0084_auto_20191004_0209','2019-10-04 09:09:13.573054'),(102,'list','0085_auto_20191004_0210','2019-10-04 09:10:17.075041'),(103,'list','0086_auto_20191004_0221','2019-10-04 09:21:34.025992'),(104,'list','0087_auto_20191008_0258','2019-10-08 09:58:04.909990'),(105,'list','0088_auto_20191010_0002','2019-10-10 07:02:13.647270'),(106,'list','0089_auto_20191010_0010','2019-10-10 07:10:19.333996'),(107,'list','0090_auto_20191012_0008','2019-10-12 07:08:38.607926'),(108,'list','0091_auto_20191020_0004','2019-10-20 07:04:25.826709'),(109,'list','0092_auto_20191020_0006','2019-10-20 07:06:04.044637'),(110,'list','0093_auto_20191020_0008','2019-10-20 07:09:00.921278'),(111,'list','0094_auto_20191020_0957','2019-10-20 16:57:21.427415'),(112,'list','0095_auto_20191020_0957','2019-10-20 16:57:40.175504'),(113,'list','0096_auto_20191020_0958','2019-10-20 16:58:06.340220'),(114,'list','0097_auto_20191020_0959','2019-10-20 16:59:04.351987'),(115,'list','0098_auto_20191020_1011','2019-10-20 17:24:12.149272'),(116,'list','0099_auto_20191020_1021','2019-10-20 17:24:12.204049'),(117,'list','0100_auto_20191020_1021','2019-10-20 17:24:12.402801'),(118,'list','0101_auto_20191020_1027','2019-10-20 17:27:45.543436'),(119,'list','0102_auto_20191024_2231','2019-10-25 05:31:59.504464'),(120,'list','0103_badge_gray_html','2019-10-26 04:47:22.710188');
/*!40000 ALTER TABLE `django_migrations` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `django_session`
--

DROP TABLE IF EXISTS `django_session`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `django_session` (
  `session_key` varchar(40) NOT NULL,
  `session_data` longtext NOT NULL,
  `expire_date` datetime(6) NOT NULL,
  PRIMARY KEY (`session_key`),
  KEY `django_session_expire_date_a5c62663` (`expire_date`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `django_session`
--

LOCK TABLES `django_session` WRITE;
/*!40000 ALTER TABLE `django_session` DISABLE KEYS */;
INSERT INTO `django_session` VALUES ('0vgiwvdor15t9dc0bo0vhjhd8s382ezl','NjY0YzY3YWQxMjk5MzFmYzQ4YjY4MmM0NjJiOWQ5ZDllOGMzY2I3OTp7Il9hdXRoX3VzZXJfaWQiOiIxOSIsIl9hdXRoX3VzZXJfYmFja2VuZCI6ImRqYW5nby5jb250cmliLmF1dGguYmFja2VuZHMuTW9kZWxCYWNrZW5kIiwiX2F1dGhfdXNlcl9oYXNoIjoiZWEyMjU3ZWJkMTliNGJlZjAzZTQ3OTA0YzVjNzI5YmQ2N2E4OTQ2YSJ9','2019-10-26 17:56:50.307623'),('0wjb9zio5piz1z3tobvpv6x72md823f2','NjY0YzY3YWQxMjk5MzFmYzQ4YjY4MmM0NjJiOWQ5ZDllOGMzY2I3OTp7Il9hdXRoX3VzZXJfaWQiOiIxOSIsIl9hdXRoX3VzZXJfYmFja2VuZCI6ImRqYW5nby5jb250cmliLmF1dGguYmFja2VuZHMuTW9kZWxCYWNrZW5kIiwiX2F1dGhfdXNlcl9oYXNoIjoiZWEyMjU3ZWJkMTliNGJlZjAzZTQ3OTA0YzVjNzI5YmQ2N2E4OTQ2YSJ9','2019-11-19 04:20:34.683462'),('13vwk5wtq5juutlvhddb04u1ucfwezrb','NDhlY2U1MWNlYzgwZTkzMmY4MjE2NDlkMzVkM2U2ZTQ3YWU3ODFlZDp7Il9hdXRoX3VzZXJfaWQiOiIyNSIsIl9hdXRoX3VzZXJfYmFja2VuZCI6ImRqYW5nby5jb250cmliLmF1dGguYmFja2VuZHMuTW9kZWxCYWNrZW5kIiwiX2F1dGhfdXNlcl9oYXNoIjoiNjcyNTRmNWExMjhlMTI0ZmQ2OWE2YzQxNzJhODhmMDM0ZTg2NGZjZCJ9','2019-12-03 11:12:10.894430'),('17ja3oc1rzqlna77sxkivocw8udx8wn0','YjQ1OTI3ZjU3MmU2ZDBhMDBhNWZmMjhiMTY4YWMzOGIxYzhiMDRiZTp7Il9hdXRoX3VzZXJfaWQiOiIxIiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoiZGphbmdvLmNvbnRyaWIuYXV0aC5iYWNrZW5kcy5Nb2RlbEJhY2tlbmQiLCJfYXV0aF91c2VyX2hhc2giOiJjZmQxYjI2NGRmYmExNzQzNzBiZWM0MmYzNDA1ZDU1OWJhODYxYWQ3In0=','2019-09-15 07:17:35.926735'),('1v9icmq67siek17y4x1oe89ru5pu5gna','NWEzMmUwN2FjNzc0NTY1ZTRmYzkyMzJmNGIzZjk5NjlhOGQ5ZDgzYTp7Il9hdXRoX3VzZXJfaWQiOiIyIiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoiZGphbmdvLmNvbnRyaWIuYXV0aC5iYWNrZW5kcy5Nb2RlbEJhY2tlbmQiLCJfYXV0aF91c2VyX2hhc2giOiIxOGNhM2NkMTNkMjI1MDE2ZWUwZGMxMjEzM2M4NDMzMTRkOTY1MDRmIn0=','2019-11-13 02:04:06.994703'),('28bjgxo2vkqm3ohv3zfucw1jjbkxu1w2','NjY0YzY3YWQxMjk5MzFmYzQ4YjY4MmM0NjJiOWQ5ZDllOGMzY2I3OTp7Il9hdXRoX3VzZXJfaWQiOiIxOSIsIl9hdXRoX3VzZXJfYmFja2VuZCI6ImRqYW5nby5jb250cmliLmF1dGguYmFja2VuZHMuTW9kZWxCYWNrZW5kIiwiX2F1dGhfdXNlcl9oYXNoIjoiZWEyMjU3ZWJkMTliNGJlZjAzZTQ3OTA0YzVjNzI5YmQ2N2E4OTQ2YSJ9','2019-11-13 07:17:48.301101'),('2c2cxotlojjdfak9l8ng70egus6wk36i','NWEzMmUwN2FjNzc0NTY1ZTRmYzkyMzJmNGIzZjk5NjlhOGQ5ZDgzYTp7Il9hdXRoX3VzZXJfaWQiOiIyIiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoiZGphbmdvLmNvbnRyaWIuYXV0aC5iYWNrZW5kcy5Nb2RlbEJhY2tlbmQiLCJfYXV0aF91c2VyX2hhc2giOiIxOGNhM2NkMTNkMjI1MDE2ZWUwZGMxMjEzM2M4NDMzMTRkOTY1MDRmIn0=','2019-10-17 03:58:42.145832'),('2j76nb8csgehfx1ndcy2dfyql201ls2a','NWEzMmUwN2FjNzc0NTY1ZTRmYzkyMzJmNGIzZjk5NjlhOGQ5ZDgzYTp7Il9hdXRoX3VzZXJfaWQiOiIyIiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoiZGphbmdvLmNvbnRyaWIuYXV0aC5iYWNrZW5kcy5Nb2RlbEJhY2tlbmQiLCJfYXV0aF91c2VyX2hhc2giOiIxOGNhM2NkMTNkMjI1MDE2ZWUwZGMxMjEzM2M4NDMzMTRkOTY1MDRmIn0=','2020-04-01 04:25:57.332234'),('32frvgjqrw44b62r15f36nspxn2j7mig','NjY0YzY3YWQxMjk5MzFmYzQ4YjY4MmM0NjJiOWQ5ZDllOGMzY2I3OTp7Il9hdXRoX3VzZXJfaWQiOiIxOSIsIl9hdXRoX3VzZXJfYmFja2VuZCI6ImRqYW5nby5jb250cmliLmF1dGguYmFja2VuZHMuTW9kZWxCYWNrZW5kIiwiX2F1dGhfdXNlcl9oYXNoIjoiZWEyMjU3ZWJkMTliNGJlZjAzZTQ3OTA0YzVjNzI5YmQ2N2E4OTQ2YSJ9','2019-11-03 06:31:28.515928'),('3osi3o5vhksv9pcrqqjwooobk6di2iv1','NWEzMmUwN2FjNzc0NTY1ZTRmYzkyMzJmNGIzZjk5NjlhOGQ5ZDgzYTp7Il9hdXRoX3VzZXJfaWQiOiIyIiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoiZGphbmdvLmNvbnRyaWIuYXV0aC5iYWNrZW5kcy5Nb2RlbEJhY2tlbmQiLCJfYXV0aF91c2VyX2hhc2giOiIxOGNhM2NkMTNkMjI1MDE2ZWUwZGMxMjEzM2M4NDMzMTRkOTY1MDRmIn0=','2019-11-29 21:05:27.340842'),('3p88u4yrbzzzj13ghddj8wb3i4incoev','NWEzMmUwN2FjNzc0NTY1ZTRmYzkyMzJmNGIzZjk5NjlhOGQ5ZDgzYTp7Il9hdXRoX3VzZXJfaWQiOiIyIiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoiZGphbmdvLmNvbnRyaWIuYXV0aC5iYWNrZW5kcy5Nb2RlbEJhY2tlbmQiLCJfYXV0aF91c2VyX2hhc2giOiIxOGNhM2NkMTNkMjI1MDE2ZWUwZGMxMjEzM2M4NDMzMTRkOTY1MDRmIn0=','2020-06-13 16:12:11.478874'),('478ud5705whpb4fn9hc9quplo958ur6y','NjY0YzY3YWQxMjk5MzFmYzQ4YjY4MmM0NjJiOWQ5ZDllOGMzY2I3OTp7Il9hdXRoX3VzZXJfaWQiOiIxOSIsIl9hdXRoX3VzZXJfYmFja2VuZCI6ImRqYW5nby5jb250cmliLmF1dGguYmFja2VuZHMuTW9kZWxCYWNrZW5kIiwiX2F1dGhfdXNlcl9oYXNoIjoiZWEyMjU3ZWJkMTliNGJlZjAzZTQ3OTA0YzVjNzI5YmQ2N2E4OTQ2YSJ9','2019-11-10 02:35:07.480982'),('4paar4dcovhmqioe1kp6vvf4wgmww5tk','YjQ1OTI3ZjU3MmU2ZDBhMDBhNWZmMjhiMTY4YWMzOGIxYzhiMDRiZTp7Il9hdXRoX3VzZXJfaWQiOiIxIiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoiZGphbmdvLmNvbnRyaWIuYXV0aC5iYWNrZW5kcy5Nb2RlbEJhY2tlbmQiLCJfYXV0aF91c2VyX2hhc2giOiJjZmQxYjI2NGRmYmExNzQzNzBiZWM0MmYzNDA1ZDU1OWJhODYxYWQ3In0=','2019-09-15 08:28:12.960483'),('59myyq78hrm9a2vapg0fookneo6ywl1h','ZTc3OWFmNTMwMzlhZGY5N2U3MTU3YmNjNmUyNDA0ODA2YzRjY2ExMzp7Il9hdXRoX3VzZXJfaWQiOiIxNSIsIl9hdXRoX3VzZXJfYmFja2VuZCI6ImRqYW5nby5jb250cmliLmF1dGguYmFja2VuZHMuTW9kZWxCYWNrZW5kIiwiX2F1dGhfdXNlcl9oYXNoIjoiMTlmNDQ1MDBmOWFkYzkzN2M3Y2U4MzUwMmY5ODIyMTE0NDQ0NDdiNSJ9','2019-10-10 01:07:33.977748'),('5a4b42sjdiejmgd5wam4thbl4r2v6hl2','NjY0YzY3YWQxMjk5MzFmYzQ4YjY4MmM0NjJiOWQ5ZDllOGMzY2I3OTp7Il9hdXRoX3VzZXJfaWQiOiIxOSIsIl9hdXRoX3VzZXJfYmFja2VuZCI6ImRqYW5nby5jb250cmliLmF1dGguYmFja2VuZHMuTW9kZWxCYWNrZW5kIiwiX2F1dGhfdXNlcl9oYXNoIjoiZWEyMjU3ZWJkMTliNGJlZjAzZTQ3OTA0YzVjNzI5YmQ2N2E4OTQ2YSJ9','2019-11-14 07:28:46.193317'),('5qjf3rh7gkymz73xpve89lc4m4x1igil','NWEzMmUwN2FjNzc0NTY1ZTRmYzkyMzJmNGIzZjk5NjlhOGQ5ZDgzYTp7Il9hdXRoX3VzZXJfaWQiOiIyIiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoiZGphbmdvLmNvbnRyaWIuYXV0aC5iYWNrZW5kcy5Nb2RlbEJhY2tlbmQiLCJfYXV0aF91c2VyX2hhc2giOiIxOGNhM2NkMTNkMjI1MDE2ZWUwZGMxMjEzM2M4NDMzMTRkOTY1MDRmIn0=','2019-11-03 16:21:53.296771'),('5sg5v14mktf30ur404ihjt59maqmhcjd','NWEzMmUwN2FjNzc0NTY1ZTRmYzkyMzJmNGIzZjk5NjlhOGQ5ZDgzYTp7Il9hdXRoX3VzZXJfaWQiOiIyIiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoiZGphbmdvLmNvbnRyaWIuYXV0aC5iYWNrZW5kcy5Nb2RlbEJhY2tlbmQiLCJfYXV0aF91c2VyX2hhc2giOiIxOGNhM2NkMTNkMjI1MDE2ZWUwZGMxMjEzM2M4NDMzMTRkOTY1MDRmIn0=','2020-06-12 19:44:31.995351'),('64mjkg99wt0gw695j1zi61nc5n63zlik','NWEzMmUwN2FjNzc0NTY1ZTRmYzkyMzJmNGIzZjk5NjlhOGQ5ZDgzYTp7Il9hdXRoX3VzZXJfaWQiOiIyIiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoiZGphbmdvLmNvbnRyaWIuYXV0aC5iYWNrZW5kcy5Nb2RlbEJhY2tlbmQiLCJfYXV0aF91c2VyX2hhc2giOiIxOGNhM2NkMTNkMjI1MDE2ZWUwZGMxMjEzM2M4NDMzMTRkOTY1MDRmIn0=','2019-10-12 05:45:44.214757'),('701cvgws5dms9jn5wkgfjmamo904yvmr','NjY0YzY3YWQxMjk5MzFmYzQ4YjY4MmM0NjJiOWQ5ZDllOGMzY2I3OTp7Il9hdXRoX3VzZXJfaWQiOiIxOSIsIl9hdXRoX3VzZXJfYmFja2VuZCI6ImRqYW5nby5jb250cmliLmF1dGguYmFja2VuZHMuTW9kZWxCYWNrZW5kIiwiX2F1dGhfdXNlcl9oYXNoIjoiZWEyMjU3ZWJkMTliNGJlZjAzZTQ3OTA0YzVjNzI5YmQ2N2E4OTQ2YSJ9','2019-11-12 05:08:29.571617'),('7aa7xljjpv9nrvewbfvudiy5w70675vz','NWEzMmUwN2FjNzc0NTY1ZTRmYzkyMzJmNGIzZjk5NjlhOGQ5ZDgzYTp7Il9hdXRoX3VzZXJfaWQiOiIyIiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoiZGphbmdvLmNvbnRyaWIuYXV0aC5iYWNrZW5kcy5Nb2RlbEJhY2tlbmQiLCJfYXV0aF91c2VyX2hhc2giOiIxOGNhM2NkMTNkMjI1MDE2ZWUwZGMxMjEzM2M4NDMzMTRkOTY1MDRmIn0=','2019-10-28 16:59:07.679523'),('7tvgk9arn2nd8lcbpl75diubxu382ahe','NjY0YzY3YWQxMjk5MzFmYzQ4YjY4MmM0NjJiOWQ5ZDllOGMzY2I3OTp7Il9hdXRoX3VzZXJfaWQiOiIxOSIsIl9hdXRoX3VzZXJfYmFja2VuZCI6ImRqYW5nby5jb250cmliLmF1dGguYmFja2VuZHMuTW9kZWxCYWNrZW5kIiwiX2F1dGhfdXNlcl9oYXNoIjoiZWEyMjU3ZWJkMTliNGJlZjAzZTQ3OTA0YzVjNzI5YmQ2N2E4OTQ2YSJ9','2019-11-13 03:57:06.048255'),('8njoguingwryba3lxuptp6tylglr2ffj','NjY0YzY3YWQxMjk5MzFmYzQ4YjY4MmM0NjJiOWQ5ZDllOGMzY2I3OTp7Il9hdXRoX3VzZXJfaWQiOiIxOSIsIl9hdXRoX3VzZXJfYmFja2VuZCI6ImRqYW5nby5jb250cmliLmF1dGguYmFja2VuZHMuTW9kZWxCYWNrZW5kIiwiX2F1dGhfdXNlcl9oYXNoIjoiZWEyMjU3ZWJkMTliNGJlZjAzZTQ3OTA0YzVjNzI5YmQ2N2E4OTQ2YSJ9','2019-11-13 07:16:26.489098'),('8t5y7dwmuyfanurnu5m795bevdg8evj2','YjQ1OTI3ZjU3MmU2ZDBhMDBhNWZmMjhiMTY4YWMzOGIxYzhiMDRiZTp7Il9hdXRoX3VzZXJfaWQiOiIxIiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoiZGphbmdvLmNvbnRyaWIuYXV0aC5iYWNrZW5kcy5Nb2RlbEJhY2tlbmQiLCJfYXV0aF91c2VyX2hhc2giOiJjZmQxYjI2NGRmYmExNzQzNzBiZWM0MmYzNDA1ZDU1OWJhODYxYWQ3In0=','2019-09-10 10:36:57.051547'),('9befu4iouunvhkhcft8zjydv2qpgt02a','ZDdiNmU5YjA1YjI3MjUzMjliNTdjYTAxMGQxNTk4NzBiYWYxMWFhYTp7Il9hdXRoX3VzZXJfaWQiOiIyMyIsIl9hdXRoX3VzZXJfYmFja2VuZCI6ImRqYW5nby5jb250cmliLmF1dGguYmFja2VuZHMuTW9kZWxCYWNrZW5kIiwiX2F1dGhfdXNlcl9oYXNoIjoiMjkwZjJkMzFjZDAzNjcxYmI0OGUyMzMzOWJmZGI3MzRkOTAxZDliNSJ9','2019-11-10 17:43:30.105889'),('9tm2x83vn5yedi5sgfk31nrm2p6qwk6e','NWEzMmUwN2FjNzc0NTY1ZTRmYzkyMzJmNGIzZjk5NjlhOGQ5ZDgzYTp7Il9hdXRoX3VzZXJfaWQiOiIyIiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoiZGphbmdvLmNvbnRyaWIuYXV0aC5iYWNrZW5kcy5Nb2RlbEJhY2tlbmQiLCJfYXV0aF91c2VyX2hhc2giOiIxOGNhM2NkMTNkMjI1MDE2ZWUwZGMxMjEzM2M4NDMzMTRkOTY1MDRmIn0=','2019-10-25 22:17:21.992080'),('9wxmr6eq0x7ta96ca2qkqr7cbs7vpuij','NjY0YzY3YWQxMjk5MzFmYzQ4YjY4MmM0NjJiOWQ5ZDllOGMzY2I3OTp7Il9hdXRoX3VzZXJfaWQiOiIxOSIsIl9hdXRoX3VzZXJfYmFja2VuZCI6ImRqYW5nby5jb250cmliLmF1dGguYmFja2VuZHMuTW9kZWxCYWNrZW5kIiwiX2F1dGhfdXNlcl9oYXNoIjoiZWEyMjU3ZWJkMTliNGJlZjAzZTQ3OTA0YzVjNzI5YmQ2N2E4OTQ2YSJ9','2019-11-17 17:19:16.393871'),('at7y6qyfddmezs58gzqarf5dpfzr7w5t','NWEzMmUwN2FjNzc0NTY1ZTRmYzkyMzJmNGIzZjk5NjlhOGQ5ZDgzYTp7Il9hdXRoX3VzZXJfaWQiOiIyIiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoiZGphbmdvLmNvbnRyaWIuYXV0aC5iYWNrZW5kcy5Nb2RlbEJhY2tlbmQiLCJfYXV0aF91c2VyX2hhc2giOiIxOGNhM2NkMTNkMjI1MDE2ZWUwZGMxMjEzM2M4NDMzMTRkOTY1MDRmIn0=','2019-10-13 06:55:19.115781'),('b8x09pft9laakbsp252t0ko0pbi0s33w','YjQ1OTI3ZjU3MmU2ZDBhMDBhNWZmMjhiMTY4YWMzOGIxYzhiMDRiZTp7Il9hdXRoX3VzZXJfaWQiOiIxIiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoiZGphbmdvLmNvbnRyaWIuYXV0aC5iYWNrZW5kcy5Nb2RlbEJhY2tlbmQiLCJfYXV0aF91c2VyX2hhc2giOiJjZmQxYjI2NGRmYmExNzQzNzBiZWM0MmYzNDA1ZDU1OWJhODYxYWQ3In0=','2020-01-20 22:49:04.102419'),('bx5u5ht2l3ezkykp6pa0nqxgnhj2h32h','NjY0YzY3YWQxMjk5MzFmYzQ4YjY4MmM0NjJiOWQ5ZDllOGMzY2I3OTp7Il9hdXRoX3VzZXJfaWQiOiIxOSIsIl9hdXRoX3VzZXJfYmFja2VuZCI6ImRqYW5nby5jb250cmliLmF1dGguYmFja2VuZHMuTW9kZWxCYWNrZW5kIiwiX2F1dGhfdXNlcl9oYXNoIjoiZWEyMjU3ZWJkMTliNGJlZjAzZTQ3OTA0YzVjNzI5YmQ2N2E4OTQ2YSJ9','2019-11-12 05:06:40.051456'),('c6y3fmv7bzkltba4unq2om6inubjt3qm','NjY0YzY3YWQxMjk5MzFmYzQ4YjY4MmM0NjJiOWQ5ZDllOGMzY2I3OTp7Il9hdXRoX3VzZXJfaWQiOiIxOSIsIl9hdXRoX3VzZXJfYmFja2VuZCI6ImRqYW5nby5jb250cmliLmF1dGguYmFja2VuZHMuTW9kZWxCYWNrZW5kIiwiX2F1dGhfdXNlcl9oYXNoIjoiZWEyMjU3ZWJkMTliNGJlZjAzZTQ3OTA0YzVjNzI5YmQ2N2E4OTQ2YSJ9','2019-11-21 17:10:15.885722'),('c8bdizidxx8z4b2690q85q9c26k4jc67','NWEzMmUwN2FjNzc0NTY1ZTRmYzkyMzJmNGIzZjk5NjlhOGQ5ZDgzYTp7Il9hdXRoX3VzZXJfaWQiOiIyIiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoiZGphbmdvLmNvbnRyaWIuYXV0aC5iYWNrZW5kcy5Nb2RlbEJhY2tlbmQiLCJfYXV0aF91c2VyX2hhc2giOiIxOGNhM2NkMTNkMjI1MDE2ZWUwZGMxMjEzM2M4NDMzMTRkOTY1MDRmIn0=','2019-12-24 21:47:54.484451'),('c9gf56dp6o4eriy9zq3km6xux67diecb','NWEzMmUwN2FjNzc0NTY1ZTRmYzkyMzJmNGIzZjk5NjlhOGQ5ZDgzYTp7Il9hdXRoX3VzZXJfaWQiOiIyIiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoiZGphbmdvLmNvbnRyaWIuYXV0aC5iYWNrZW5kcy5Nb2RlbEJhY2tlbmQiLCJfYXV0aF91c2VyX2hhc2giOiIxOGNhM2NkMTNkMjI1MDE2ZWUwZGMxMjEzM2M4NDMzMTRkOTY1MDRmIn0=','2020-02-11 17:28:40.576839'),('ce593659612f87qbclo7goe9gzmflsmo','NWEzMmUwN2FjNzc0NTY1ZTRmYzkyMzJmNGIzZjk5NjlhOGQ5ZDgzYTp7Il9hdXRoX3VzZXJfaWQiOiIyIiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoiZGphbmdvLmNvbnRyaWIuYXV0aC5iYWNrZW5kcy5Nb2RlbEJhY2tlbmQiLCJfYXV0aF91c2VyX2hhc2giOiIxOGNhM2NkMTNkMjI1MDE2ZWUwZGMxMjEzM2M4NDMzMTRkOTY1MDRmIn0=','2019-10-12 18:50:58.707805'),('cpvoaqk9flznj7b8kal0z8enjboj8xyk','NWEzMmUwN2FjNzc0NTY1ZTRmYzkyMzJmNGIzZjk5NjlhOGQ5ZDgzYTp7Il9hdXRoX3VzZXJfaWQiOiIyIiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoiZGphbmdvLmNvbnRyaWIuYXV0aC5iYWNrZW5kcy5Nb2RlbEJhY2tlbmQiLCJfYXV0aF91c2VyX2hhc2giOiIxOGNhM2NkMTNkMjI1MDE2ZWUwZGMxMjEzM2M4NDMzMTRkOTY1MDRmIn0=','2019-09-10 10:18:59.035798'),('dlb2vs7vveyg540ac5wtp8kxencxfpoq','NjY0YzY3YWQxMjk5MzFmYzQ4YjY4MmM0NjJiOWQ5ZDllOGMzY2I3OTp7Il9hdXRoX3VzZXJfaWQiOiIxOSIsIl9hdXRoX3VzZXJfYmFja2VuZCI6ImRqYW5nby5jb250cmliLmF1dGguYmFja2VuZHMuTW9kZWxCYWNrZW5kIiwiX2F1dGhfdXNlcl9oYXNoIjoiZWEyMjU3ZWJkMTliNGJlZjAzZTQ3OTA0YzVjNzI5YmQ2N2E4OTQ2YSJ9','2019-10-26 18:30:15.548991'),('dvm95bgojp2v45gsdkudk4h9m62k0u9a','NWEzMmUwN2FjNzc0NTY1ZTRmYzkyMzJmNGIzZjk5NjlhOGQ5ZDgzYTp7Il9hdXRoX3VzZXJfaWQiOiIyIiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoiZGphbmdvLmNvbnRyaWIuYXV0aC5iYWNrZW5kcy5Nb2RlbEJhY2tlbmQiLCJfYXV0aF91c2VyX2hhc2giOiIxOGNhM2NkMTNkMjI1MDE2ZWUwZGMxMjEzM2M4NDMzMTRkOTY1MDRmIn0=','2020-03-27 07:37:40.305729'),('dxe6c6z5od9jc3u9b0bigaca5xi7e96o','NjY0YzY3YWQxMjk5MzFmYzQ4YjY4MmM0NjJiOWQ5ZDllOGMzY2I3OTp7Il9hdXRoX3VzZXJfaWQiOiIxOSIsIl9hdXRoX3VzZXJfYmFja2VuZCI6ImRqYW5nby5jb250cmliLmF1dGguYmFja2VuZHMuTW9kZWxCYWNrZW5kIiwiX2F1dGhfdXNlcl9oYXNoIjoiZWEyMjU3ZWJkMTliNGJlZjAzZTQ3OTA0YzVjNzI5YmQ2N2E4OTQ2YSJ9','2019-11-21 17:48:54.988597'),('f48bq9po2k59km2xklkbzedduysuk33a','NjY0YzY3YWQxMjk5MzFmYzQ4YjY4MmM0NjJiOWQ5ZDllOGMzY2I3OTp7Il9hdXRoX3VzZXJfaWQiOiIxOSIsIl9hdXRoX3VzZXJfYmFja2VuZCI6ImRqYW5nby5jb250cmliLmF1dGguYmFja2VuZHMuTW9kZWxCYWNrZW5kIiwiX2F1dGhfdXNlcl9oYXNoIjoiZWEyMjU3ZWJkMTliNGJlZjAzZTQ3OTA0YzVjNzI5YmQ2N2E4OTQ2YSJ9','2019-11-14 07:23:39.275494'),('fb3hxr5ys8k9jhifn34zaqxmihhtkt5o','NjY0YzY3YWQxMjk5MzFmYzQ4YjY4MmM0NjJiOWQ5ZDllOGMzY2I3OTp7Il9hdXRoX3VzZXJfaWQiOiIxOSIsIl9hdXRoX3VzZXJfYmFja2VuZCI6ImRqYW5nby5jb250cmliLmF1dGguYmFja2VuZHMuTW9kZWxCYWNrZW5kIiwiX2F1dGhfdXNlcl9oYXNoIjoiZWEyMjU3ZWJkMTliNGJlZjAzZTQ3OTA0YzVjNzI5YmQ2N2E4OTQ2YSJ9','2019-11-08 05:05:53.579846'),('fgrancpk3qgoulpopkgncky283m7ta98','NjY0YzY3YWQxMjk5MzFmYzQ4YjY4MmM0NjJiOWQ5ZDllOGMzY2I3OTp7Il9hdXRoX3VzZXJfaWQiOiIxOSIsIl9hdXRoX3VzZXJfYmFja2VuZCI6ImRqYW5nby5jb250cmliLmF1dGguYmFja2VuZHMuTW9kZWxCYWNrZW5kIiwiX2F1dGhfdXNlcl9oYXNoIjoiZWEyMjU3ZWJkMTliNGJlZjAzZTQ3OTA0YzVjNzI5YmQ2N2E4OTQ2YSJ9','2019-10-28 05:34:19.402175'),('g40yo2hg5d90uo31jw511asbkav8pu17','YjQ1OTI3ZjU3MmU2ZDBhMDBhNWZmMjhiMTY4YWMzOGIxYzhiMDRiZTp7Il9hdXRoX3VzZXJfaWQiOiIxIiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoiZGphbmdvLmNvbnRyaWIuYXV0aC5iYWNrZW5kcy5Nb2RlbEJhY2tlbmQiLCJfYXV0aF91c2VyX2hhc2giOiJjZmQxYjI2NGRmYmExNzQzNzBiZWM0MmYzNDA1ZDU1OWJhODYxYWQ3In0=','2020-01-01 00:21:02.246966'),('gi50ugwof2hgf5z3kayg6xi8yuli2yyo','NWEzMmUwN2FjNzc0NTY1ZTRmYzkyMzJmNGIzZjk5NjlhOGQ5ZDgzYTp7Il9hdXRoX3VzZXJfaWQiOiIyIiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoiZGphbmdvLmNvbnRyaWIuYXV0aC5iYWNrZW5kcy5Nb2RlbEJhY2tlbmQiLCJfYXV0aF91c2VyX2hhc2giOiIxOGNhM2NkMTNkMjI1MDE2ZWUwZGMxMjEzM2M4NDMzMTRkOTY1MDRmIn0=','2019-10-13 05:42:43.680548'),('gqczofzjxlftpvrm0fjtmu4lc9z3zyfp','NjY0YzY3YWQxMjk5MzFmYzQ4YjY4MmM0NjJiOWQ5ZDllOGMzY2I3OTp7Il9hdXRoX3VzZXJfaWQiOiIxOSIsIl9hdXRoX3VzZXJfYmFja2VuZCI6ImRqYW5nby5jb250cmliLmF1dGguYmFja2VuZHMuTW9kZWxCYWNrZW5kIiwiX2F1dGhfdXNlcl9oYXNoIjoiZWEyMjU3ZWJkMTliNGJlZjAzZTQ3OTA0YzVjNzI5YmQ2N2E4OTQ2YSJ9','2019-11-14 04:49:16.285829'),('gv1vtwixkfb6o0wftixkjsd6k2ail293','NWEzMmUwN2FjNzc0NTY1ZTRmYzkyMzJmNGIzZjk5NjlhOGQ5ZDgzYTp7Il9hdXRoX3VzZXJfaWQiOiIyIiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoiZGphbmdvLmNvbnRyaWIuYXV0aC5iYWNrZW5kcy5Nb2RlbEJhY2tlbmQiLCJfYXV0aF91c2VyX2hhc2giOiIxOGNhM2NkMTNkMjI1MDE2ZWUwZGMxMjEzM2M4NDMzMTRkOTY1MDRmIn0=','2019-12-24 02:10:25.716397'),('gwcmsdnkcnrs3altybd1vz4by4d3g8dw','NWEzMmUwN2FjNzc0NTY1ZTRmYzkyMzJmNGIzZjk5NjlhOGQ5ZDgzYTp7Il9hdXRoX3VzZXJfaWQiOiIyIiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoiZGphbmdvLmNvbnRyaWIuYXV0aC5iYWNrZW5kcy5Nb2RlbEJhY2tlbmQiLCJfYXV0aF91c2VyX2hhc2giOiIxOGNhM2NkMTNkMjI1MDE2ZWUwZGMxMjEzM2M4NDMzMTRkOTY1MDRmIn0=','2019-09-10 22:22:55.294765'),('h3i9cwibco4z8pdi97ul5wlypgy69mgt','ZjJmOWY1NmQ4MTQ5OGMzNGE5MGYyNmM2Y2NiYjc5NTI5ZTUxZDhjYjp7Il9hdXRoX3VzZXJfaWQiOiIyMSIsIl9hdXRoX3VzZXJfYmFja2VuZCI6ImRqYW5nby5jb250cmliLmF1dGguYmFja2VuZHMuTW9kZWxCYWNrZW5kIiwiX2F1dGhfdXNlcl9oYXNoIjoiMTRmZDJiMWMzNDk1Mzk5MjIzOTVmMGU1MGQ5ODc0Yzk5MjQzMmM1ZSJ9','2019-10-15 19:26:37.396820'),('h4w901apbxk2wx1vwuapluybq6b17j6c','NjY0YzY3YWQxMjk5MzFmYzQ4YjY4MmM0NjJiOWQ5ZDllOGMzY2I3OTp7Il9hdXRoX3VzZXJfaWQiOiIxOSIsIl9hdXRoX3VzZXJfYmFja2VuZCI6ImRqYW5nby5jb250cmliLmF1dGguYmFja2VuZHMuTW9kZWxCYWNrZW5kIiwiX2F1dGhfdXNlcl9oYXNoIjoiZWEyMjU3ZWJkMTliNGJlZjAzZTQ3OTA0YzVjNzI5YmQ2N2E4OTQ2YSJ9','2019-11-18 05:46:54.390918'),('ho073r3w00sycibbmt5v5a78jegu20j1','NjY0YzY3YWQxMjk5MzFmYzQ4YjY4MmM0NjJiOWQ5ZDllOGMzY2I3OTp7Il9hdXRoX3VzZXJfaWQiOiIxOSIsIl9hdXRoX3VzZXJfYmFja2VuZCI6ImRqYW5nby5jb250cmliLmF1dGguYmFja2VuZHMuTW9kZWxCYWNrZW5kIiwiX2F1dGhfdXNlcl9oYXNoIjoiZWEyMjU3ZWJkMTliNGJlZjAzZTQ3OTA0YzVjNzI5YmQ2N2E4OTQ2YSJ9','2019-10-18 07:40:47.349661'),('homvpyl3nuv8jh1gld8kq610mbped84x','NWEzMmUwN2FjNzc0NTY1ZTRmYzkyMzJmNGIzZjk5NjlhOGQ5ZDgzYTp7Il9hdXRoX3VzZXJfaWQiOiIyIiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoiZGphbmdvLmNvbnRyaWIuYXV0aC5iYWNrZW5kcy5Nb2RlbEJhY2tlbmQiLCJfYXV0aF91c2VyX2hhc2giOiIxOGNhM2NkMTNkMjI1MDE2ZWUwZGMxMjEzM2M4NDMzMTRkOTY1MDRmIn0=','2020-05-01 01:56:55.162308'),('ihnz97iskgaw2w84cikhu928fa5qk6kj','NWEzMmUwN2FjNzc0NTY1ZTRmYzkyMzJmNGIzZjk5NjlhOGQ5ZDgzYTp7Il9hdXRoX3VzZXJfaWQiOiIyIiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoiZGphbmdvLmNvbnRyaWIuYXV0aC5iYWNrZW5kcy5Nb2RlbEJhY2tlbmQiLCJfYXV0aF91c2VyX2hhc2giOiIxOGNhM2NkMTNkMjI1MDE2ZWUwZGMxMjEzM2M4NDMzMTRkOTY1MDRmIn0=','2019-11-01 02:57:56.778326'),('iszrt73ej47pefma181hqyya37vwmyy7','YjQ1OTI3ZjU3MmU2ZDBhMDBhNWZmMjhiMTY4YWMzOGIxYzhiMDRiZTp7Il9hdXRoX3VzZXJfaWQiOiIxIiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoiZGphbmdvLmNvbnRyaWIuYXV0aC5iYWNrZW5kcy5Nb2RlbEJhY2tlbmQiLCJfYXV0aF91c2VyX2hhc2giOiJjZmQxYjI2NGRmYmExNzQzNzBiZWM0MmYzNDA1ZDU1OWJhODYxYWQ3In0=','2020-01-14 03:46:05.328518'),('jjzqntzjw7pktztw2kfip2g0myh3ir00','ZDdiNmU5YjA1YjI3MjUzMjliNTdjYTAxMGQxNTk4NzBiYWYxMWFhYTp7Il9hdXRoX3VzZXJfaWQiOiIyMyIsIl9hdXRoX3VzZXJfYmFja2VuZCI6ImRqYW5nby5jb250cmliLmF1dGguYmFja2VuZHMuTW9kZWxCYWNrZW5kIiwiX2F1dGhfdXNlcl9oYXNoIjoiMjkwZjJkMzFjZDAzNjcxYmI0OGUyMzMzOWJmZGI3MzRkOTAxZDliNSJ9','2019-10-27 16:15:39.420017'),('jq6hyguwr5uj44czblyy4r4762efpmhq','NWEzMmUwN2FjNzc0NTY1ZTRmYzkyMzJmNGIzZjk5NjlhOGQ5ZDgzYTp7Il9hdXRoX3VzZXJfaWQiOiIyIiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoiZGphbmdvLmNvbnRyaWIuYXV0aC5iYWNrZW5kcy5Nb2RlbEJhY2tlbmQiLCJfYXV0aF91c2VyX2hhc2giOiIxOGNhM2NkMTNkMjI1MDE2ZWUwZGMxMjEzM2M4NDMzMTRkOTY1MDRmIn0=','2019-11-01 02:57:56.070202'),('jswqwfgmasn9ysolnwnababck4e07p82','NWEzMmUwN2FjNzc0NTY1ZTRmYzkyMzJmNGIzZjk5NjlhOGQ5ZDgzYTp7Il9hdXRoX3VzZXJfaWQiOiIyIiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoiZGphbmdvLmNvbnRyaWIuYXV0aC5iYWNrZW5kcy5Nb2RlbEJhY2tlbmQiLCJfYXV0aF91c2VyX2hhc2giOiIxOGNhM2NkMTNkMjI1MDE2ZWUwZGMxMjEzM2M4NDMzMTRkOTY1MDRmIn0=','2019-10-13 05:46:43.923285'),('kj094oydirghucjo3myg3oexpfjg40zb','NjY0YzY3YWQxMjk5MzFmYzQ4YjY4MmM0NjJiOWQ5ZDllOGMzY2I3OTp7Il9hdXRoX3VzZXJfaWQiOiIxOSIsIl9hdXRoX3VzZXJfYmFja2VuZCI6ImRqYW5nby5jb250cmliLmF1dGguYmFja2VuZHMuTW9kZWxCYWNrZW5kIiwiX2F1dGhfdXNlcl9oYXNoIjoiZWEyMjU3ZWJkMTliNGJlZjAzZTQ3OTA0YzVjNzI5YmQ2N2E4OTQ2YSJ9','2019-11-07 09:11:35.693243'),('lthjnv6ibzmqhjhxtpzkzagup6ulev41','NjY0YzY3YWQxMjk5MzFmYzQ4YjY4MmM0NjJiOWQ5ZDllOGMzY2I3OTp7Il9hdXRoX3VzZXJfaWQiOiIxOSIsIl9hdXRoX3VzZXJfYmFja2VuZCI6ImRqYW5nby5jb250cmliLmF1dGguYmFja2VuZHMuTW9kZWxCYWNrZW5kIiwiX2F1dGhfdXNlcl9oYXNoIjoiZWEyMjU3ZWJkMTliNGJlZjAzZTQ3OTA0YzVjNzI5YmQ2N2E4OTQ2YSJ9','2019-10-18 10:07:28.970959'),('m9m144q0iykqlsrzo84b5yihws4mbzlk','NWEzMmUwN2FjNzc0NTY1ZTRmYzkyMzJmNGIzZjk5NjlhOGQ5ZDgzYTp7Il9hdXRoX3VzZXJfaWQiOiIyIiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoiZGphbmdvLmNvbnRyaWIuYXV0aC5iYWNrZW5kcy5Nb2RlbEJhY2tlbmQiLCJfYXV0aF91c2VyX2hhc2giOiIxOGNhM2NkMTNkMjI1MDE2ZWUwZGMxMjEzM2M4NDMzMTRkOTY1MDRmIn0=','2019-12-03 05:36:07.625025'),('mati0xdy73w8i7qm7lshydr3yq565m6t','NWEzMmUwN2FjNzc0NTY1ZTRmYzkyMzJmNGIzZjk5NjlhOGQ5ZDgzYTp7Il9hdXRoX3VzZXJfaWQiOiIyIiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoiZGphbmdvLmNvbnRyaWIuYXV0aC5iYWNrZW5kcy5Nb2RlbEJhY2tlbmQiLCJfYXV0aF91c2VyX2hhc2giOiIxOGNhM2NkMTNkMjI1MDE2ZWUwZGMxMjEzM2M4NDMzMTRkOTY1MDRmIn0=','2019-11-17 23:50:26.762544'),('nur9p7bc7982a0df7z6g56maehk5dpmm','NjY0YzY3YWQxMjk5MzFmYzQ4YjY4MmM0NjJiOWQ5ZDllOGMzY2I3OTp7Il9hdXRoX3VzZXJfaWQiOiIxOSIsIl9hdXRoX3VzZXJfYmFja2VuZCI6ImRqYW5nby5jb250cmliLmF1dGguYmFja2VuZHMuTW9kZWxCYWNrZW5kIiwiX2F1dGhfdXNlcl9oYXNoIjoiZWEyMjU3ZWJkMTliNGJlZjAzZTQ3OTA0YzVjNzI5YmQ2N2E4OTQ2YSJ9','2019-11-08 05:16:43.989032'),('o4xsc5ergs53bwsxz89emeikx6pz1y6d','OGE1MzhjMzk0NDJjMTBmMzk1MjkzZjJiMWI1YTY1YTMyZjY5YjVkZjp7Il9hdXRoX3VzZXJfaWQiOiIyNCIsIl9hdXRoX3VzZXJfYmFja2VuZCI6ImRqYW5nby5jb250cmliLmF1dGguYmFja2VuZHMuTW9kZWxCYWNrZW5kIiwiX2F1dGhfdXNlcl9oYXNoIjoiNTY2N2NmYmZmY2ZiZmMwYWU5MTE0ZGQyMmVlZGM4ZDYzNTllODJiMiJ9','2020-01-14 22:19:16.486972'),('ole5flvjkvglf8syje16pxvh6xj40q1c','NjY0YzY3YWQxMjk5MzFmYzQ4YjY4MmM0NjJiOWQ5ZDllOGMzY2I3OTp7Il9hdXRoX3VzZXJfaWQiOiIxOSIsIl9hdXRoX3VzZXJfYmFja2VuZCI6ImRqYW5nby5jb250cmliLmF1dGguYmFja2VuZHMuTW9kZWxCYWNrZW5kIiwiX2F1dGhfdXNlcl9oYXNoIjoiZWEyMjU3ZWJkMTliNGJlZjAzZTQ3OTA0YzVjNzI5YmQ2N2E4OTQ2YSJ9','2019-11-01 03:51:20.998755'),('p79aldil8djnay9y194f2yymaotczfdh','NWEzMmUwN2FjNzc0NTY1ZTRmYzkyMzJmNGIzZjk5NjlhOGQ5ZDgzYTp7Il9hdXRoX3VzZXJfaWQiOiIyIiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoiZGphbmdvLmNvbnRyaWIuYXV0aC5iYWNrZW5kcy5Nb2RlbEJhY2tlbmQiLCJfYXV0aF91c2VyX2hhc2giOiIxOGNhM2NkMTNkMjI1MDE2ZWUwZGMxMjEzM2M4NDMzMTRkOTY1MDRmIn0=','2019-12-30 07:39:04.519110'),('pexv19n7c1x6a55ritdvpx438tnzu9br','YjQ1OTI3ZjU3MmU2ZDBhMDBhNWZmMjhiMTY4YWMzOGIxYzhiMDRiZTp7Il9hdXRoX3VzZXJfaWQiOiIxIiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoiZGphbmdvLmNvbnRyaWIuYXV0aC5iYWNrZW5kcy5Nb2RlbEJhY2tlbmQiLCJfYXV0aF91c2VyX2hhc2giOiJjZmQxYjI2NGRmYmExNzQzNzBiZWM0MmYzNDA1ZDU1OWJhODYxYWQ3In0=','2019-10-19 06:41:03.179711'),('pfu8cggti0d95lh1cbm8un7ls7773fty','NWEzMmUwN2FjNzc0NTY1ZTRmYzkyMzJmNGIzZjk5NjlhOGQ5ZDgzYTp7Il9hdXRoX3VzZXJfaWQiOiIyIiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoiZGphbmdvLmNvbnRyaWIuYXV0aC5iYWNrZW5kcy5Nb2RlbEJhY2tlbmQiLCJfYXV0aF91c2VyX2hhc2giOiIxOGNhM2NkMTNkMjI1MDE2ZWUwZGMxMjEzM2M4NDMzMTRkOTY1MDRmIn0=','2019-11-01 20:09:55.113164'),('q29lywleyw6ysk88wniki62ammr22lht','NjY0YzY3YWQxMjk5MzFmYzQ4YjY4MmM0NjJiOWQ5ZDllOGMzY2I3OTp7Il9hdXRoX3VzZXJfaWQiOiIxOSIsIl9hdXRoX3VzZXJfYmFja2VuZCI6ImRqYW5nby5jb250cmliLmF1dGguYmFja2VuZHMuTW9kZWxCYWNrZW5kIiwiX2F1dGhfdXNlcl9oYXNoIjoiZWEyMjU3ZWJkMTliNGJlZjAzZTQ3OTA0YzVjNzI5YmQ2N2E4OTQ2YSJ9','2019-12-06 06:37:02.204301'),('q3j65r1149h89g2yfhtnvia3gwpenuur','NWEzMmUwN2FjNzc0NTY1ZTRmYzkyMzJmNGIzZjk5NjlhOGQ5ZDgzYTp7Il9hdXRoX3VzZXJfaWQiOiIyIiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoiZGphbmdvLmNvbnRyaWIuYXV0aC5iYWNrZW5kcy5Nb2RlbEJhY2tlbmQiLCJfYXV0aF91c2VyX2hhc2giOiIxOGNhM2NkMTNkMjI1MDE2ZWUwZGMxMjEzM2M4NDMzMTRkOTY1MDRmIn0=','2020-05-08 03:21:11.983824'),('q5mqhwx00y5khel2lwyq9hz0tzy8kd50','NWEzMmUwN2FjNzc0NTY1ZTRmYzkyMzJmNGIzZjk5NjlhOGQ5ZDgzYTp7Il9hdXRoX3VzZXJfaWQiOiIyIiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoiZGphbmdvLmNvbnRyaWIuYXV0aC5iYWNrZW5kcy5Nb2RlbEJhY2tlbmQiLCJfYXV0aF91c2VyX2hhc2giOiIxOGNhM2NkMTNkMjI1MDE2ZWUwZGMxMjEzM2M4NDMzMTRkOTY1MDRmIn0=','2020-02-16 18:34:25.542288'),('qbcgjn5r5uh3e9585xxz44h1cm7yfj8e','NWEzMmUwN2FjNzc0NTY1ZTRmYzkyMzJmNGIzZjk5NjlhOGQ5ZDgzYTp7Il9hdXRoX3VzZXJfaWQiOiIyIiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoiZGphbmdvLmNvbnRyaWIuYXV0aC5iYWNrZW5kcy5Nb2RlbEJhY2tlbmQiLCJfYXV0aF91c2VyX2hhc2giOiIxOGNhM2NkMTNkMjI1MDE2ZWUwZGMxMjEzM2M4NDMzMTRkOTY1MDRmIn0=','2019-11-01 18:17:12.076666'),('qkxc9tgmioe4o5g1modgfoofiiziesoy','NWEzMmUwN2FjNzc0NTY1ZTRmYzkyMzJmNGIzZjk5NjlhOGQ5ZDgzYTp7Il9hdXRoX3VzZXJfaWQiOiIyIiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoiZGphbmdvLmNvbnRyaWIuYXV0aC5iYWNrZW5kcy5Nb2RlbEJhY2tlbmQiLCJfYXV0aF91c2VyX2hhc2giOiIxOGNhM2NkMTNkMjI1MDE2ZWUwZGMxMjEzM2M4NDMzMTRkOTY1MDRmIn0=','2020-03-03 21:10:05.726058'),('qlh2m7n7e9pc5ldl9712t9awk6g8ozrd','OGE1MzhjMzk0NDJjMTBmMzk1MjkzZjJiMWI1YTY1YTMyZjY5YjVkZjp7Il9hdXRoX3VzZXJfaWQiOiIyNCIsIl9hdXRoX3VzZXJfYmFja2VuZCI6ImRqYW5nby5jb250cmliLmF1dGguYmFja2VuZHMuTW9kZWxCYWNrZW5kIiwiX2F1dGhfdXNlcl9oYXNoIjoiNTY2N2NmYmZmY2ZiZmMwYWU5MTE0ZGQyMmVlZGM4ZDYzNTllODJiMiJ9','2020-01-02 04:23:33.904881'),('r6xyjcv60ss0rlp44vo2lbz3heg7g8y8','NjY0YzY3YWQxMjk5MzFmYzQ4YjY4MmM0NjJiOWQ5ZDllOGMzY2I3OTp7Il9hdXRoX3VzZXJfaWQiOiIxOSIsIl9hdXRoX3VzZXJfYmFja2VuZCI6ImRqYW5nby5jb250cmliLmF1dGguYmFja2VuZHMuTW9kZWxCYWNrZW5kIiwiX2F1dGhfdXNlcl9oYXNoIjoiZWEyMjU3ZWJkMTliNGJlZjAzZTQ3OTA0YzVjNzI5YmQ2N2E4OTQ2YSJ9','2019-10-26 17:58:21.179016'),('s48wvlukik4aiclexymxuqj9rb81nw4v','NjY0YzY3YWQxMjk5MzFmYzQ4YjY4MmM0NjJiOWQ5ZDllOGMzY2I3OTp7Il9hdXRoX3VzZXJfaWQiOiIxOSIsIl9hdXRoX3VzZXJfYmFja2VuZCI6ImRqYW5nby5jb250cmliLmF1dGguYmFja2VuZHMuTW9kZWxCYWNrZW5kIiwiX2F1dGhfdXNlcl9oYXNoIjoiZWEyMjU3ZWJkMTliNGJlZjAzZTQ3OTA0YzVjNzI5YmQ2N2E4OTQ2YSJ9','2019-11-03 04:40:27.687150'),('siwrx8fjq9w3fieqtp2z38czks8nz142','YjQ1OTI3ZjU3MmU2ZDBhMDBhNWZmMjhiMTY4YWMzOGIxYzhiMDRiZTp7Il9hdXRoX3VzZXJfaWQiOiIxIiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoiZGphbmdvLmNvbnRyaWIuYXV0aC5iYWNrZW5kcy5Nb2RlbEJhY2tlbmQiLCJfYXV0aF91c2VyX2hhc2giOiJjZmQxYjI2NGRmYmExNzQzNzBiZWM0MmYzNDA1ZDU1OWJhODYxYWQ3In0=','2019-08-09 18:30:45.913000'),('sl3uq4qjqqi050ar02ee2xwc6v42ookh','NjY0YzY3YWQxMjk5MzFmYzQ4YjY4MmM0NjJiOWQ5ZDllOGMzY2I3OTp7Il9hdXRoX3VzZXJfaWQiOiIxOSIsIl9hdXRoX3VzZXJfYmFja2VuZCI6ImRqYW5nby5jb250cmliLmF1dGguYmFja2VuZHMuTW9kZWxCYWNrZW5kIiwiX2F1dGhfdXNlcl9oYXNoIjoiZWEyMjU3ZWJkMTliNGJlZjAzZTQ3OTA0YzVjNzI5YmQ2N2E4OTQ2YSJ9','2019-11-21 06:09:33.986457'),('u494mszriwzemvupc16lz6a8p2s1woew','YjQ1OTI3ZjU3MmU2ZDBhMDBhNWZmMjhiMTY4YWMzOGIxYzhiMDRiZTp7Il9hdXRoX3VzZXJfaWQiOiIxIiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoiZGphbmdvLmNvbnRyaWIuYXV0aC5iYWNrZW5kcy5Nb2RlbEJhY2tlbmQiLCJfYXV0aF91c2VyX2hhc2giOiJjZmQxYjI2NGRmYmExNzQzNzBiZWM0MmYzNDA1ZDU1OWJhODYxYWQ3In0=','2019-07-31 09:31:47.963000'),('u8lqcfzkwxcms7a30q9ksqv9895v9zlw','NjY0YzY3YWQxMjk5MzFmYzQ4YjY4MmM0NjJiOWQ5ZDllOGMzY2I3OTp7Il9hdXRoX3VzZXJfaWQiOiIxOSIsIl9hdXRoX3VzZXJfYmFja2VuZCI6ImRqYW5nby5jb250cmliLmF1dGguYmFja2VuZHMuTW9kZWxCYWNrZW5kIiwiX2F1dGhfdXNlcl9oYXNoIjoiZWEyMjU3ZWJkMTliNGJlZjAzZTQ3OTA0YzVjNzI5YmQ2N2E4OTQ2YSJ9','2019-10-28 01:10:44.103663'),('ui4szlcjp7tfw46k6jb504w10ti9965a','NWEzMmUwN2FjNzc0NTY1ZTRmYzkyMzJmNGIzZjk5NjlhOGQ5ZDgzYTp7Il9hdXRoX3VzZXJfaWQiOiIyIiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoiZGphbmdvLmNvbnRyaWIuYXV0aC5iYWNrZW5kcy5Nb2RlbEJhY2tlbmQiLCJfYXV0aF91c2VyX2hhc2giOiIxOGNhM2NkMTNkMjI1MDE2ZWUwZGMxMjEzM2M4NDMzMTRkOTY1MDRmIn0=','2019-10-28 06:01:17.605147'),('v0e10zzfny8ax6vv7isvde9m5p98xxto','NjY0YzY3YWQxMjk5MzFmYzQ4YjY4MmM0NjJiOWQ5ZDllOGMzY2I3OTp7Il9hdXRoX3VzZXJfaWQiOiIxOSIsIl9hdXRoX3VzZXJfYmFja2VuZCI6ImRqYW5nby5jb250cmliLmF1dGguYmFja2VuZHMuTW9kZWxCYWNrZW5kIiwiX2F1dGhfdXNlcl9oYXNoIjoiZWEyMjU3ZWJkMTliNGJlZjAzZTQ3OTA0YzVjNzI5YmQ2N2E4OTQ2YSJ9','2019-11-16 02:42:25.811509'),('v0vfhpjif58hdkbqletrqykvvgkgg66f','ZDdiNmU5YjA1YjI3MjUzMjliNTdjYTAxMGQxNTk4NzBiYWYxMWFhYTp7Il9hdXRoX3VzZXJfaWQiOiIyMyIsIl9hdXRoX3VzZXJfYmFja2VuZCI6ImRqYW5nby5jb250cmliLmF1dGguYmFja2VuZHMuTW9kZWxCYWNrZW5kIiwiX2F1dGhfdXNlcl9oYXNoIjoiMjkwZjJkMzFjZDAzNjcxYmI0OGUyMzMzOWJmZGI3MzRkOTAxZDliNSJ9','2019-12-01 02:40:05.879032'),('wxb43qqhdwp6cjl1orsb0b9n575wmos4','OGE1MzhjMzk0NDJjMTBmMzk1MjkzZjJiMWI1YTY1YTMyZjY5YjVkZjp7Il9hdXRoX3VzZXJfaWQiOiIyNCIsIl9hdXRoX3VzZXJfYmFja2VuZCI6ImRqYW5nby5jb250cmliLmF1dGguYmFja2VuZHMuTW9kZWxCYWNrZW5kIiwiX2F1dGhfdXNlcl9oYXNoIjoiNTY2N2NmYmZmY2ZiZmMwYWU5MTE0ZGQyMmVlZGM4ZDYzNTllODJiMiJ9','2019-12-25 22:07:44.146628'),('x2mz09wj7os9l4hcm8xpyqdwb0z332s0','NjY0YzY3YWQxMjk5MzFmYzQ4YjY4MmM0NjJiOWQ5ZDllOGMzY2I3OTp7Il9hdXRoX3VzZXJfaWQiOiIxOSIsIl9hdXRoX3VzZXJfYmFja2VuZCI6ImRqYW5nby5jb250cmliLmF1dGguYmFja2VuZHMuTW9kZWxCYWNrZW5kIiwiX2F1dGhfdXNlcl9oYXNoIjoiZWEyMjU3ZWJkMTliNGJlZjAzZTQ3OTA0YzVjNzI5YmQ2N2E4OTQ2YSJ9','2019-11-11 00:04:49.005603'),('xb9kaj7twg2v3w6bo8jnwjqbreogxozp','NjY0YzY3YWQxMjk5MzFmYzQ4YjY4MmM0NjJiOWQ5ZDllOGMzY2I3OTp7Il9hdXRoX3VzZXJfaWQiOiIxOSIsIl9hdXRoX3VzZXJfYmFja2VuZCI6ImRqYW5nby5jb250cmliLmF1dGguYmFja2VuZHMuTW9kZWxCYWNrZW5kIiwiX2F1dGhfdXNlcl9oYXNoIjoiZWEyMjU3ZWJkMTliNGJlZjAzZTQ3OTA0YzVjNzI5YmQ2N2E4OTQ2YSJ9','2019-11-19 03:16:54.432638'),('xrn6lshywq2kn2e5zxtt4l086ohhexre','NWEzMmUwN2FjNzc0NTY1ZTRmYzkyMzJmNGIzZjk5NjlhOGQ5ZDgzYTp7Il9hdXRoX3VzZXJfaWQiOiIyIiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoiZGphbmdvLmNvbnRyaWIuYXV0aC5iYWNrZW5kcy5Nb2RlbEJhY2tlbmQiLCJfYXV0aF91c2VyX2hhc2giOiIxOGNhM2NkMTNkMjI1MDE2ZWUwZGMxMjEzM2M4NDMzMTRkOTY1MDRmIn0=','2020-03-26 20:02:13.175629'),('xx6a6xzry9ufhxf49t5og69rmlpxp38e','NWEzMmUwN2FjNzc0NTY1ZTRmYzkyMzJmNGIzZjk5NjlhOGQ5ZDgzYTp7Il9hdXRoX3VzZXJfaWQiOiIyIiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoiZGphbmdvLmNvbnRyaWIuYXV0aC5iYWNrZW5kcy5Nb2RlbEJhY2tlbmQiLCJfYXV0aF91c2VyX2hhc2giOiIxOGNhM2NkMTNkMjI1MDE2ZWUwZGMxMjEzM2M4NDMzMTRkOTY1MDRmIn0=','2020-07-03 07:47:44.744413'),('ygy5o4735dpzhh20v3paq3yvs1n670lg','NjY0YzY3YWQxMjk5MzFmYzQ4YjY4MmM0NjJiOWQ5ZDllOGMzY2I3OTp7Il9hdXRoX3VzZXJfaWQiOiIxOSIsIl9hdXRoX3VzZXJfYmFja2VuZCI6ImRqYW5nby5jb250cmliLmF1dGguYmFja2VuZHMuTW9kZWxCYWNrZW5kIiwiX2F1dGhfdXNlcl9oYXNoIjoiZWEyMjU3ZWJkMTliNGJlZjAzZTQ3OTA0YzVjNzI5YmQ2N2E4OTQ2YSJ9','2019-11-03 05:11:19.401469'),('yvi1wo504loejfrrwjhomnk5mq34oecu','YjQ1OTI3ZjU3MmU2ZDBhMDBhNWZmMjhiMTY4YWMzOGIxYzhiMDRiZTp7Il9hdXRoX3VzZXJfaWQiOiIxIiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoiZGphbmdvLmNvbnRyaWIuYXV0aC5iYWNrZW5kcy5Nb2RlbEJhY2tlbmQiLCJfYXV0aF91c2VyX2hhc2giOiJjZmQxYjI2NGRmYmExNzQzNzBiZWM0MmYzNDA1ZDU1OWJhODYxYWQ3In0=','2019-08-18 08:06:21.283000'),('z2jwb4sqyo086856w3g9az041wby5k8k','NjY0YzY3YWQxMjk5MzFmYzQ4YjY4MmM0NjJiOWQ5ZDllOGMzY2I3OTp7Il9hdXRoX3VzZXJfaWQiOiIxOSIsIl9hdXRoX3VzZXJfYmFja2VuZCI6ImRqYW5nby5jb250cmliLmF1dGguYmFja2VuZHMuTW9kZWxCYWNrZW5kIiwiX2F1dGhfdXNlcl9oYXNoIjoiZWEyMjU3ZWJkMTliNGJlZjAzZTQ3OTA0YzVjNzI5YmQ2N2E4OTQ2YSJ9','2019-12-08 19:19:28.404649'),('z7rmmar4bej2lh8jb6n33c0j5053cgt4','NjY0YzY3YWQxMjk5MzFmYzQ4YjY4MmM0NjJiOWQ5ZDllOGMzY2I3OTp7Il9hdXRoX3VzZXJfaWQiOiIxOSIsIl9hdXRoX3VzZXJfYmFja2VuZCI6ImRqYW5nby5jb250cmliLmF1dGguYmFja2VuZHMuTW9kZWxCYWNrZW5kIiwiX2F1dGhfdXNlcl9oYXNoIjoiZWEyMjU3ZWJkMTliNGJlZjAzZTQ3OTA0YzVjNzI5YmQ2N2E4OTQ2YSJ9','2019-11-10 23:37:50.959303');
/*!40000 ALTER TABLE `django_session` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `list_answer`
--

DROP TABLE IF EXISTS `list_answer`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `list_answer` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `answer` longtext NOT NULL,
  `date` date NOT NULL,
  `right` int(11) NOT NULL,
  `output` longtext NOT NULL,
  `quiz_id` int(11) DEFAULT NULL,
  `expected_output` longtext NOT NULL,
  `input` longtext NOT NULL,
  `stdout` longtext NOT NULL,
  `expected_stdout` longtext NOT NULL,
  `customuser_id` int(11) NOT NULL,
  `modified_date` datetime(6) NOT NULL,
  PRIMARY KEY (`id`),
  KEY `list_answer_quiz_id_d9497b4c_fk_list_quiz_id` (`quiz_id`),
  KEY `list_answer_customuser_id_f68a815b_fk_list_customuser_id` (`customuser_id`),
  KEY `list_answer_date_right_c382be93_idx` (`date`,`right`),
  KEY `list_answer_modified_date_96dcc0fb_idx` (`modified_date`),
  CONSTRAINT `list_answer_customuser_id_f68a815b_fk_list_customuser_id` FOREIGN KEY (`customuser_id`) REFERENCES `list_customuser` (`id`),
  CONSTRAINT `list_answer_quiz_id_d9497b4c_fk_list_quiz_id` FOREIGN KEY (`quiz_id`) REFERENCES `list_quiz` (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=416 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `list_answer`
--

LOCK TABLES `list_answer` WRITE;
/*!40000 ALTER TABLE `list_answer` DISABLE KEYS */;
INSERT INTO `list_answer` VALUES (1,'10','2019-07-01',1,'',1,'','','','',1,'2019-09-28 00:00:00.000000'),(3,'123','2019-07-02',1,'',3,'','','','',1,'2019-09-28 00:00:00.000000'),(4,'5','2019-07-21',1,'',4,'','','','',1,'2019-09-28 00:00:00.000000'),(5,'15','2019-07-09',1,'',5,'','','','',1,'2019-09-28 00:00:00.000000'),(6,'banana','2019-07-04',1,'',6,'','','','',1,'2019-09-28 00:00:00.000000'),(7,'True','2019-06-24',1,'',7,'','','','',1,'2019-09-28 00:00:00.000000'),(8,'14','2019-06-30',1,'',8,'','','','',1,'2019-09-28 00:00:00.000000'),(9,'14','2019-07-21',1,'',9,'','','','',1,'2019-09-28 00:00:00.000000'),(10,'def solve(num1, num2):\r\n    return num1*num2','2019-07-06',1,'',10,'','','','',1,'2019-09-28 00:00:00.000000'),(12,'def solve(nums):\r\n    nums[0],nums[-1]=nums[-1],nums[0]\r\n    return nums','2019-07-09',1,'',11,'','','','',1,'2019-09-28 00:00:00.000000'),(13,'def solve(nums):\r\n    nums[1],nums[-2]=nums[-2],nums[1]\r\n    return nums','2019-07-16',1,'',12,'','','','',1,'2019-09-28 00:00:00.000000'),(14,'def solve(nums):\r\n    for i in range(int(len(nums)/2)):\r\n        nums[i],nums[-(i+1)]=nums[-(i+1)],nums[i]\r\n    return nums','2019-07-12',1,'',13,'','','','',1,'2019-09-28 00:00:00.000000'),(17,'def solve(nums):\r\n    stack=[]\r\n    for i in range(len(nums)):\r\n        stack.append(nums.pop())\r\n    return stack','2019-06-29',1,'',14,'','','','',1,'2019-09-28 00:00:00.000000'),(21,'10','2019-07-15',1,'',19,'','','','',1,'2019-09-28 00:00:00.000000'),(22,'12','2019-07-12',1,'',20,'','','','',1,'2019-09-28 00:00:00.000000'),(25,'def solve(nums, num):\r\n    for i in range(len(nums)):\r\n        if nums[i]>num:\r\n            nums.insert(i,num)\r\n            break\r\n    return nums','2019-06-27',1,'',21,'','','','',1,'2019-09-28 00:00:00.000000'),(26,'def solve(num):\r\n    for i in range(num):\r\n        if i*i==num:\r\n            return i','2019-07-18',1,'',22,'','','','',1,'2019-09-28 00:00:00.000000'),(28,'def solve(nums):\r\n   max,sum=0,0\r\n   for num in nums:\r\n       sum=num+sum\r\n       if sum>max:\r\n           max=sum\r\n   return max','2019-07-26',-1,'2',23,'7','[-4, 3, -4, 4, -5, 8, -11, 10]','','',1,'2019-10-21 00:00:00.000000'),(29,'class Rectangle:\r\n    def __init__(self, height, width):\r\n        self.height = height\r\n        self.width = width\r\n\r\n    def getArea(self):\r\n        return self.height*self.width\r\n\r\n\r\nrectangle = Rectangle(10, 20)\r\nprint(rectangle.getArea())','2019-07-26',1,'',24,'','','','',1,'2019-10-20 00:00:00.000000'),(30,'4','2019-07-26',1,'',25,'','','','',1,'2019-09-28 00:00:00.000000'),(31,'def solve(str):\r\n    sett = set(str)\r\n    map = {}\r\n    for key in sett:\r\n        map[key] = 0\r\n    for i in str:\r\n        map[i] += 1\r\n    max = 0\r\n    for i in map:\r\n        if map[i] > max:\r\n            max = map[i]\r\n    return max','2019-07-28',1,'',28,'','','','',1,'2019-10-16 00:00:00.000000'),(32,'def solve(nums):\r\n    min=nums[0]\r\n    for num in nums:\r\n        if min>num:\r\n            min=num\r\n    return min','2019-07-28',1,'',30,'','','','',1,'2019-09-28 00:00:00.000000'),(33,'def solve(nums):\r\n    even,odd=[],[]\r\n    for num in nums:\r\n        if num%2==0:\r\n            even.append(num)\r\n        else:\r\n            odd.append(num)\r\n    return odd, even','2019-07-28',1,'',31,'','','','',1,'2019-09-28 00:00:00.000000'),(36,'4','2019-07-30',1,'',32,'','','','',1,'2019-09-28 00:00:00.000000'),(37,'def solve(num):\r\n    j=0\r\n    while num<1:\r\n        num=num*10\r\n        j=j+1\r\n    return j-1\r\n        ','2019-07-31',1,'',34,'','','','',1,'2019-09-28 00:00:00.000000'),(38,'def solve(str):\r\n    strs=str.split()\r\n    del strs[2]\r\n    return \" \".join(strs)','2019-07-21',1,'',33,'','','','',1,'2019-09-28 00:00:00.000000'),(39,'def solve(nums, n):\r\n    ans=[]\r\n    for num in range(n):\r\n        nums.append(nums[0])\r\n        del nums[0]\r\n    return nums\r\n        ','2019-07-31',1,'',29,'','','','',1,'2019-09-28 00:00:00.000000'),(40,'def solve(nums):\r\n    for i in range(1,len(nums)):\r\n        if i in nums:\r\n            pass\r\n        else:\r\n            return i','2019-07-31',1,'',27,'','','','',1,'2019-09-28 00:00:00.000000'),(42,'def solve(nums):\r\n    max=nums[0]\r\n    for num in nums:\r\n        if num>0:\r\n            max=num\r\n    nums.remove(max)\r\n    sm=nums[0]\r\n    for num in nums:\r\n        if num>sm:\r\n            sm=num\r\n    return sm','2019-08-01',1,'',37,'','','','',1,'2019-09-28 00:00:00.000000'),(43,'def solve(num1, num2):\r\n    num3=0\r\n    if num2>num1:\r\n        num1,num2=num2,num1\r\n    while abs(num1-num2)>0:\r\n        num3=abs(num1-num2)\r\n        num1,num2=num2,num3\r\n    return num2','2019-08-02',1,'',35,'','','','',1,'2019-09-28 00:00:00.000000'),(49,'def solve(nums):\r\n    sett=set()\r\n    for num in nums:\r\n        sett.add(num)\r\n    if len(nums)>len(sett):\r\n        return True\r\n    return False\r\n        ','2019-08-03',1,'',38,'','','','',1,'2019-09-28 00:00:00.000000'),(50,'def solve(num):\r\n    if num==0:\r\n        return False\r\n    while num!=1:\r\n        if num%2==1:\r\n            return False\r\n        num=num/2\r\n    return True','2019-08-03',1,'',39,'','','','',1,'2019-09-28 00:00:00.000000'),(51,'def solve(num):\r\n    count=0\r\n    while int(num)==num:\r\n        num/=10\r\n        count+=1\r\n    return count-1','2019-08-03',1,'',40,'','','','',1,'2019-09-28 00:00:00.000000'),(55,'print(\"hello world\"','2019-08-04',1,'',36,'','','','',1,'2019-09-28 00:00:00.000000'),(58,'def solve(str):\r\n    strs=[]\r\n    for ch in str:\r\n        strs.append(ch)\r\n    i=1\r\n    while i<len(strs):\r\n        if strs[i]==strs[i-1]:\r\n            del strs[i]\r\n            del strs[i-1]\r\n            i=0\r\n        i+=1\r\n    return \"\".join(strs)                ','2019-08-10',1,'',44,'','','','',1,'2019-09-28 00:00:00.000000'),(59,'def solve(nums1, nums2):\r\n    ans=[]\r\n    for num in nums1:\r\n        if num in nums2:\r\n            ans.append(num)\r\n    return ans','2019-08-06',1,'',48,'','','','',1,'2019-09-28 00:00:00.000000'),(60,'def solve(num):\r\n    s,lis=0,[]\r\n    for i in range(num):\r\n        s+=1\r\n        lis.append(\'*\'*s)\r\n    return lis','2019-08-06',1,'',49,'','','','',1,'2019-09-28 00:00:00.000000'),(61,'def solve(k, nums):\r\n    ans=0\r\n    for num in nums:\r\n        if num<k:\r\n            ans+=1\r\n    return ans','2019-08-06',1,'',47,'','','','',1,'2019-09-28 00:00:00.000000'),(62,'def solve(list1, list2):\r\n    ans=[]\r\n    while len(list1)!=0 or len(list2)!=0:\r\n        if len(list1)==0:\r\n            ans.append(list2[0])\r\n            del list2[0]\r\n        elif len(list2)==0:\r\n            ans.append(list1[0])\r\n            del list1[0]\r\n        elif list1[0]>list2[0]:\r\n            ans.append(list2[0])\r\n            del list2[0]\r\n        else:\r\n            ans.append(list1[0])\r\n            del list1[0]\r\n    return ans','2019-08-08',1,'',51,'','','','',1,'2019-09-28 00:00:00.000000'),(63,'def solve(n):\r\n    return (n-2)*180','2019-08-07',1,'',45,'','','','',1,'2019-09-28 00:00:00.000000'),(65,'3','2019-08-08',1,'',52,'','','','',1,'2019-09-28 00:00:00.000000'),(66,'4','2019-08-10',1,'',55,'','','','',1,'2019-09-28 00:00:00.000000'),(67,'4','2019-08-10',1,'',56,'','','','',1,'2019-09-28 00:00:00.000000'),(68,'def solve(str):\r\n    nums, i = [], 0\r\n    for ch in str:\r\n        nums.append(ch)\r\n    while len(nums) - 1 > i:\r\n        i += 1\r\n        if nums[i] == \")\":\r\n            if nums[i - 1] == \"(\":\r\n                del nums[i]\r\n                del nums[i - 1]\r\n                i = 0\r\n    if len(nums) == 0:\r\n        return True\r\n    return False','2019-08-14',1,'',43,'','','','',1,'2019-10-29 04:45:42.544870'),(69,'def solve(num):\r\n    star, dash, ans=0, num, []\r\n    while dash>0:\r\n        star+=1\r\n        dash-=1\r\n        ans.append(\"-\"*dash+\"*\"*star)\r\n    return ans\r\n            ','2019-08-16',1,'',53,'','','','',1,'2019-09-28 00:00:00.000000'),(70,'def solve(year):\r\n    if year%4==0:\r\n        if year%100==0:\r\n            if year%400==0:\r\n                return 366\r\n            return 365\r\n        return 366\r\n    return 365\r\n    ','2019-08-17',1,'',58,'','','','',1,'2019-09-28 00:00:00.000000'),(72,'4','2019-08-18',1,'',61,'','','','',1,'2019-09-28 00:00:00.000000'),(73,'3','2019-08-18',1,'',62,'','','','',1,'2019-09-28 00:00:00.000000'),(74,'def solve(num):\r\n    num=str(num)\r\n    ans=0\r\n    for s in num:\r\n        ans+=int(s)\r\n    return ans','2019-08-18',1,'',57,'','','','',1,'2019-09-28 00:00:00.000000'),(75,'3','2019-08-19',1,'',63,'','','','',1,'2019-09-28 00:00:00.000000'),(76,'def solve(str):\r\n    nums=[]\r\n    for ch in str:\r\n        nums.append(ch)\r\n    for i in range(len(nums)):\r\n        if nums[i]!=nums[len(nums)-1-i]:\r\n            return False\r\n    return True','2019-08-13',1,'',65,'','','','',1,'2019-09-28 00:00:00.000000'),(77,'def solve(nums):\r\n    return max(nums)','2019-08-19',1,'',67,'','','','',1,'2019-10-21 00:00:00.000000'),(78,'def sum(num1, num2):\r\n    return num1 + num2\r\ndef solve(nums):\r\n    ans = sum(nums[0], nums[1])\r\n    for i in range(2, len(nums)):\r\n        ans=ans+nums[i]\r\n    return ans','2019-08-01',1,'',60,'','','','',1,'2019-09-28 00:00:00.000000'),(79,'def solve(nums):\r\n    max,ans=1,1\r\n    for i in range(1,len(nums)):\r\n        if nums[i]==nums[i-1]:\r\n            ans+=1\r\n        else:\r\n            ans=1\r\n        if ans>max:\r\n            max=ans\r\n    return max','2019-10-14',1,'',66,'','','','',1,'2019-10-15 00:00:00.000000'),(85,'1','2019-08-30',1,'',70,'','','','',1,'2019-09-28 00:00:00.000000'),(86,'4','2019-08-30',1,'',72,'','','','',1,'2019-09-28 00:00:00.000000'),(87,'12\r\n','2019-08-30',1,'',73,'','','','',1,'2019-09-28 00:00:00.000000'),(88,'3','2019-08-30',1,'',74,'','','','',1,'2019-09-28 00:00:00.000000'),(89,'2','2019-08-30',1,'',71,'','','','',1,'2019-09-28 00:00:00.000000'),(90,'2','2019-08-30',1,'',77,'','','','',1,'2019-09-28 00:00:00.000000'),(91,'1','2019-08-30',1,'',78,'','','','',1,'2019-09-28 00:00:00.000000'),(95,'4','2019-09-01',1,'',26,'','','','',1,'2019-09-28 00:00:00.000000'),(96,'def solve(str1, str2):\r\n    if len(str1)!=len(str2):\r\n        return False\r\n    while len(str1)>0:\r\n        if str1[0] in str2:\r\n            str2=str2.replace(str1[0], \"\", 1)\r\n            str1=str1[1:]\r\n        else:\r\n            return False\r\n    return True','2019-09-01',1,'',64,'','','','',1,'2019-09-28 00:00:00.000000'),(99,'3','2019-09-06',1,'',82,'','','','',1,'2019-09-28 00:00:00.000000'),(100,'def solve(num):\r\n    ans=1\r\n    for i in range(1,num+1):\r\n        ans=i*ans\r\n    return ans','2019-09-07',1,'',80,'','','','',1,'2019-09-28 00:00:00.000000'),(105,'3','2019-09-08',1,'',15,'','','','',1,'2019-09-28 00:00:00.000000'),(107,'3','2019-09-08',1,'',16,'','','','',1,'2019-09-28 00:00:00.000000'),(108,'2','2019-09-08',1,'',17,'','','','',1,'2019-09-28 00:00:00.000000'),(110,'4','2019-09-11',1,'',83,'','','','',1,'2019-09-28 00:00:00.000000'),(111,'print_world()\r\n','2019-09-12',1,'',84,'','','','',1,'2019-09-28 00:00:00.000000'),(112,'def solve(nums, num1, num2):\r\n    for i in range(num1,int((num2+1)/2)+1):\r\n        nums[i],nums[-(i)]=nums[-(i)],nums[i]\r\n    return nums\r\n    ','2019-10-14',1,'',54,'','','','',1,'2019-10-14 00:00:00.000000'),(128,'3','2019-09-19',1,'',82,'','','','',8,'2019-09-28 00:00:00.000000'),(129,'3','2019-09-19',1,'',15,'','','','',8,'2019-09-28 00:00:00.000000'),(130,'3','2019-09-19',1,'',16,'','','','',8,'2019-09-28 00:00:00.000000'),(131,'4','2019-09-19',1,'',72,'','','','',8,'2019-09-28 00:00:00.000000'),(132,'10','2019-09-19',-2,'10',73,'','','','',8,'2019-09-28 00:00:00.000000'),(133,'3','2019-09-19',1,'',74,'','','','',8,'2019-09-28 00:00:00.000000'),(134,'3','2019-09-19',1,'',52,'','','','',8,'2019-09-28 00:00:00.000000'),(135,'2','2019-09-20',1,'',71,'','','','',8,'2019-10-10 00:00:00.000000'),(136,'# Definition for linked list.\r\nclass Node:\r\n    def __init__(self, val):\r\n        self.val = val\r\n        self.next = None\r\n\r\ndef solve(list):\r\n    # Please insert your code here.\r\n    return 1','2019-09-20',-1,'1',81,'Node[5, 2, 3, 4, 1]','Node[1, 4, 3, 2, 5]','','',8,'2019-09-28 00:00:00.000000'),(137,'10','2019-09-20',1,'',1,'','','','',8,'2019-09-28 00:00:00.000000'),(138,'def solve(num1, num2):\r\n    return num1*num2\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    ','2019-09-20',1,'',10,'','','','',8,'2019-09-28 00:00:00.000000'),(140,'2','2019-09-20',1,'',77,'','','','',8,'2019-09-28 00:00:00.000000'),(141,'4','2019-09-20',1,'',83,'','','','',8,'2019-09-28 00:00:00.000000'),(142,'1','2019-09-20',1,'',78,'','','','',8,'2019-09-28 00:00:00.000000'),(146,'def solve(nums):','2019-09-20',-1,'None',14,'[5, 4, 3, 2, 1]','[1, 2, 3, 4, 5]','Traceback (most recent call last):\n  File \"./list/users/checks/admin.py\", line 5, in <module>\n    from solutions.admin import solve\n  File \"/Users/Shared/code/PyPyKids/list/users/checks/solutions/admin.py\", line 1\n    def solve(nums):\n                   ^\nSyntaxError: unexpected EOF while parsing\n','',8,'2019-09-28 00:00:00.000000'),(147,'5','2019-09-20',1,'',4,'','','','',8,'2019-09-28 00:00:00.000000'),(148,'def solve(num):\r\n    s = 1\r\n    for i in range(num+1):\r\n        print(i+1)\r\n        s *= i\r\n    return s','2019-09-20',-2,'0',80,'120','5','1\n2\n3\n4\n5\n6\n','',8,'2019-09-28 00:00:00.000000'),(149,'4','2019-09-20',1,'',26,'','','','',2,'2019-09-28 00:00:00.000000'),(150,'4','2019-09-20',1,'',32,'','','','',2,'2019-09-28 00:00:00.000000'),(151,'1','2019-09-20',1,'',70,'','','','',2,'2019-09-28 00:00:00.000000'),(154,'1-0','2019-09-20',-1,'1-0',1,'','','','',2,'2019-09-28 00:00:00.000000'),(156,'nums = {1, 2, 3}\r\nsa\r\n# insert the code after this line\r\n\r\nprint(nums.update([4,5]))','2019-09-21',-2,'Traceback (most recent call last):\n  File \"./list/users/checks/solutions/admin.py\", line 2, in <module>\n    sa\nNameError: name \'sa\' is not defined\n',87,'','{1, 2, 3, 5, 6}','','',8,'2019-09-28 00:00:00.000000'),(157,'nums = {1, 2, 3, 4, 5}\r\n\r\n# insert the code after this line\r\nprint(nums)','2019-09-22',1,'',87,'','','','',6,'2019-09-28 00:00:00.000000'),(158,'def solve(num):\r\n    return num*360-(num-2)*180','2019-09-22',1,'',46,'','','','',1,'2019-09-28 00:00:00.000000'),(159,'def solve(nums):\r\n    nums.add(4)\r\n    return nums','2019-09-22',1,'',87,'','','','',1,'2019-10-17 00:00:00.000000'),(160,'10\r\n','2019-09-22',1,'',85,'','','','',1,'2019-09-28 00:00:00.000000'),(161,'24','2019-09-22',1,'',86,'','','','',1,'2019-09-28 00:00:00.000000'),(162,'4','2019-09-22',1,'',26,'','','','',6,'2019-09-28 00:00:00.000000'),(163,'False','2019-09-22',1,'',88,'','','','',8,'2019-09-28 00:00:00.000000'),(164,'def solve(nums):\r\n    return len(nums)','2019-09-23',1,'',92,'','','','',8,'2019-09-28 00:00:00.000000'),(165,'def solve(nums):\r\n    even, odd = [], []\r\n    for num in nums:\r\n        if num % 2 == 0:\r\n            even.append(num)\r\n        else:\r\n            odd.append(num)\r\n    return odd, event','2019-09-23',-2,'None',31,'[1, 3, 5]\n[2, 4, 6]','[1, 2, 3, 4, 5, 6]','Traceback (most recent call last):\n  File \"./list/users/checks/admin.py\", line 44, in <module>\n    answer = main(sys.argv[1:])\n  File \"./list/users/checks/admin.py\", line 9, in main\n    return output(solve(input(argv[0])))\n  File \"/Users/Shared/code/PyPyKids/list/users/checks/solutions/admin.py\", line 8, in solve\n    return odd, event\nNameError: name \'event\' is not defined\n','',8,'2019-09-28 00:00:00.000000'),(166,'def solve(nums):\r\n    s = 0\r\n    for num in nums:\r\n        s+=num\r\n    return s/len(nums)3','2019-09-23',-2,'None',94,'3.6','[1, 2, 4, 5, 6]','Traceback (most recent call last):\n  File \"/tmp/check_admin.py\", line 4, in <module>\n    from solution_admin import solve\n  File \"/private/tmp/solution_admin.py\", line 5\n    return s/len(nums)3\n                      ^\nSyntaxError: invalid syntax\n','',8,'2019-10-06 00:00:00.000000'),(168,'def solve(nums):\r\n    return','2019-09-23',-1,'None',14,'[5, 4, 3, 2, 1]','[1, 2, 3, 4, 5]','','',10,'2019-09-28 00:00:00.000000'),(169,'def solve(prices):\r\n    print(prices)\r\n    return [\"test\", \"test2\"]','2019-09-23',1,'',59,'','','','',10,'2019-09-28 00:00:00.000000'),(172,'def solve(num):\r\n    return num','2019-09-23',-1,'4',53,'[\'---*\', \'--**\', \'-***\', \'****\']','4','','',10,'2019-09-28 00:00:00.000000'),(173,'3','2019-09-24',1,'',97,'','','','',1,'2019-09-28 00:00:00.000000'),(174,'def solve(str):\r\n    return str[3:8]','2019-09-24',-1,'lo Wo',105,'\'lo Wo\'','\'Hello World\'','','',8,'2019-09-28 00:00:00.000000'),(175,'def solve(str):\r\n    return str[3:8]','2019-09-24',1,'',105,'','','','',2,'2019-09-28 00:00:00.000000'),(176,'def solve(str):\r\n    stack, data, ans = [], \'\', \'\'\r\n    for ch in str:\r\n        if ch == \'(\':\r\n            stack.append(ch)\r\n        else:\r\n            stack.pop()\r\n            if len(stack) > 0:\r\n                data = \'(\' + data + \')\'\r\n            else:\r\n                ans = data\r\n                data = \'\'\r\n\r\n    return ans\r\n    ','2019-11-04',-1,'(())',68,'()()','\'()(()())\'','','',1,'2019-11-05 04:49:00.070347'),(177,'def solve(str):\r\n    return \"\"','2019-09-24',-1,'',68,'\"\"','\'(()())\'','','',2,'2019-09-28 00:00:00.000000'),(178,'3','2019-09-25',1,'',15,'','','','',7,'2019-09-28 00:00:00.000000'),(179,'3','2019-09-25',1,'',16,'','','','',7,'2019-09-28 00:00:00.000000'),(180,'2','2019-09-25',1,'',17,'','','','',7,'2019-09-28 00:00:00.000000'),(183,'4','2019-09-25',1,'',26,'','','','',7,'2019-09-28 00:00:00.000000'),(184,'4','2019-09-28',1,'',95,'','','','',1,'2019-09-28 00:00:00.000000'),(185,'2','2019-09-28',1,'',104,'','','','',1,'2019-09-28 00:00:00.000000'),(186,'False\r\n','2019-09-28',1,'',88,'','','','',1,'2019-09-28 00:00:00.000000'),(187,'3','2019-09-28',1,'',89,'','','','',1,'2019-09-28 00:00:00.000000'),(188,'4','2019-09-28',1,'',90,'','','','',1,'2019-09-28 00:00:00.000000'),(189,'4','2019-09-28',1,'',96,'','','','',1,'2019-09-28 00:00:00.000000'),(190,'4','2019-09-28',1,'',98,'','','','',1,'2019-09-28 00:00:00.000000'),(191,'3','2019-09-28',1,'',99,'','','','',1,'2019-09-28 00:00:00.000000'),(203,'def solve(num):\r\n    return num','2019-09-28',-1,'None',22,'5','25','Traceback (most recent call last):\n  File \"/tmp/check_tiny657.py\", line 49, in <module>\n    f = open(\"./list/users/answers/tiny657\", \"w+\")\nFileNotFoundError: [Errno 2] No such file or directory: \'./list/users/answers/tiny657\'\n','',11,'2019-09-28 00:00:00.000000'),(204,'def solve(num):\r\n    i = 1;\r\n    for n in range(1, num+1):\r\n        i *= n\r\n    return i','2019-09-28',1,'',80,'','','','',11,'2019-10-04 00:00:00.000000'),(205,'3','2019-09-28',1,'',89,'','','','',11,'2019-10-15 00:00:00.000000'),(206,'def solve(str):\r\n    ans=[]\r\n    for ch in str:\r\n        ans.append(ch)\r\n    return ans\r\n        ','2019-09-28',1,'',102,'','','','',1,'2019-09-28 00:00:00.000000'),(207,'def solve(str):','2019-10-04',-1,'None',65,'True','\"racecar\"','Traceback (most recent call last):\n  File \"/tmp/check_tiny657.py\", line 4, in <module>\n    from solution_tiny657 import solve\n  File \"/private/tmp/solution_tiny657.py\", line 1\n    def solve(str):\n                  ^\nSyntaxError: unexpected EOF while parsing\n','',11,'2019-10-04 00:00:00.000000'),(208,'2','2019-09-28',-2,'2',78,'','','','',11,'2019-09-28 00:00:00.000000'),(209,'24','2019-09-28',1,'',86,'','','','',11,'2019-09-28 00:00:00.000000'),(210,'2','2019-09-26',1,'',77,'','','','',11,'2019-09-28 00:00:00.000000'),(211,'123','2019-09-30',1,'',3,'','','','',11,'2019-09-30 00:00:00.000000'),(212,'def solve(dictionary, key):\r\n    return dictionary[key]','2019-10-02',1,'',106,'','','','',11,'2019-10-02 00:00:00.000000'),(213,'def solve(dictionary, value):\r\n    dictionary[\"language\"] = value\r\n    return dictionary','2019-10-02',1,'',107,'','','','',11,'2019-10-12 00:00:00.000000'),(214,'print(\"hello world\")','2019-10-02',1,'',36,'','','','',11,'2019-10-02 00:00:00.000000'),(215,'4','2019-10-02',1,'',26,'','','','',11,'2019-10-02 00:00:00.000000'),(216,'def solve(map, key, value):\r\n    map[key] = value\r\n','2019-10-02',-2,'None',108,'{\'brand\': \'PyPyKids\', \'who\': \'Dayeon\'}','{\"brand\": \"PyPyKids\"}\r\n\"who\"\r\n\"Dayeon\"','','',11,'2019-10-02 00:00:00.000000'),(217,'def solve(dict, key):\r\n    dict.pop(key)\r\n    return dict','2019-10-02',1,'',109,'','','','',11,'2019-10-02 00:00:00.000000'),(218,'def solve(dict):\r\n    list = []\r\n    for key in dict:\r\n        list.append(key+dict[key])\r\n    return list','2019-10-02',1,'',110,'','','','',11,'2019-10-02 00:00:00.000000'),(239,'2','2019-10-04',1,'',104,'','','','',11,'2019-10-25 05:44:38.478225'),(240,'1','2019-10-04',-1,'1',16,'','','','',11,'2019-10-04 00:00:00.000000'),(241,'def solve(nums):\r\n    return nums[0]','2019-10-12',-1,'-1',37,'-3','[-1, -6, -3, -5, -7]','','',11,'2019-10-12 00:00:00.000000'),(242,'4','2019-10-05',1,'',26,'','','','',8,'2019-10-05 00:00:00.000000'),(243,'4','2019-10-05',1,'',32,'','','','',8,'2019-10-05 00:00:00.000000'),(244,'2','2019-10-05',-2,'2',70,'','','','',8,'2019-10-10 00:00:00.000000'),(245,'def solve(num):d','2019-10-06',-1,'None',46,'1260','5','Traceback (most recent call last):\n  File \"/tmp/check_tiny657.py\", line 48, in <module>\n    answer = main(sys.argv[1:])\n  File \"/tmp/check_tiny657.py\", line 13, in main\n    return output(solve(input(argv[0])))\n  File \"/tmp/solution_tiny657.py\", line 1, in solve\n    def solve(num):d\nNameError: name \'d\' is not defined\n','',11,'2019-10-06 00:00:00.000000'),(248,'def solve(num):\r\n    print(\"123\")\r\n    return num\r\n    ','2019-10-06',-1,'5',46,'1260','5','123\n','',8,'2019-10-06 00:00:00.000000'),(249,'def solve(nums):\r\n    ans=0\r\n    for num in nums:\r\n        if num%2==1:\r\n            ans+=num\r\n    return ans\r\n','2019-10-06',1,'',91,'','','','',1,'2019-10-06 00:00:00.000000'),(250,'def solve(nums):\r\n    ans=[]\r\n    for num in nums:\r\n        if num>=0:\r\n            ans.append(num)\r\n    return ans\r\n    ','2019-10-06',1,'',101,'','','','',1,'2019-10-06 00:00:00.000000'),(251,'def solve(nums1, nums2):\r\n    ans=[]\r\n    for num in nums1:\r\n        if num not in nums2:\r\n            ans.append(num)\r\n    return ans','2019-10-06',1,'',100,'','','','',1,'2019-10-06 00:00:00.000000'),(252,'def solve(str):\r\n    return str[3:8]','2019-10-06',1,'',105,'','','','',1,'2019-10-06 00:00:00.000000'),(253,'def solve(nums):\r\n    ans=0\r\n    for num in nums:\r\n        ans+=1\r\n    return ans','2019-10-06',1,'',92,'','','','',1,'2019-10-06 00:00:00.000000'),(254,'def solve(nums):\r\n    return list(set(nums))\r\n    ','2019-10-06',1,'',103,'','','','',1,'2019-10-06 00:00:00.000000'),(255,'def solve(num):\r\n    ans=0\r\n    for i in range(num+1):\r\n        ans+=i\r\n    return ans\r\n        ','2019-10-08',1,'',111,'','','','',1,'2019-10-08 00:00:00.000000'),(256,'def solve(num1, num2):\r\n    return str(num1) + str(num2)','2019-10-08',1,'',112,'','','','',11,'2019-10-08 00:00:00.000000'),(257,'def solve(num1, num2):\r\n    return str(num1) + str(num2)','2019-10-08',-1,'[1, 2, 4][4, 5, 6]',79,'2','[1, 2, 4]\r\n[4, 5, 6]','','',11,'2019-10-08 00:00:00.000000'),(258,'def solve(str):\r\n    asdf4','2019-10-12',-1,'None',28,'3','\"abccbbd\"','Traceback (most recent call last):\n  line 2, in solve\n    asdf4\nNameError: name \'asdf4\' is not defined\n','',11,'2019-10-12 00:00:00.000000'),(259,'def solve(nums):\r\n    for num in nums:\r\n        if num<0:\r\n            nums.remove(num)\r\n    return nums\r\n    ','2019-10-13',1,'',101,'','','','',11,'2019-10-13 00:00:00.000000'),(260,'def solve(nums):\r\n    asdf','2019-10-09',-1,'None',31,'[1, 3, 5]\n[2, 4, 6]','[1, 2, 3, 4, 5, 6]','Traceback (most recent call last):\n  line 2, in solve\n    asdf\nNameError: name \'asdf\' is not defined\n','',11,'2019-10-09 00:00:00.000000'),(261,'def solve(nums):\r\n    print(1)','2019-10-09',-1,'None',87,'{1, 2, 3, 4, 5, 6}','{1, 2, 3, 5, 6}','1\n','',11,'2019-10-09 00:00:00.000000'),(262,'def solve(num1, num2):\r\n    return str(num1)+str(num2)','2019-10-09',1,'',112,'','','','',1,'2019-10-09 00:00:00.000000'),(263,'10','2019-10-10',1,'',85,'','','','',11,'2019-10-10 00:00:00.000000'),(264,'10','2019-10-10',-1,'10',8,'','','','',11,'2019-10-10 00:00:00.000000'),(265,'class Node:\r\n    def __init__(self, val):\r\n        self.val = val\r\n        self.next = None\r\n\r\ndef solve(list):\r\n    return list','2019-10-30',-1,'1 -> 4 -> 3 -> 2 -> 5',81,'5 -> 2 -> 3 -> 4 -> 1','1 -> 4 -> 3 -> 2 -> 5','','',11,'2019-10-31 04:49:54.624183'),(266,'def solve(nums1, nums2):\r\n    return nums1.union(nums2)','2019-10-10',1,'',93,'','','','',1,'2019-10-10 00:00:00.000000'),(267,'2','2019-10-10',1,'',104,'','','','',8,'2019-10-10 00:00:00.000000'),(268,'12','2019-10-10',-1,'12',8,'','','','',8,'2019-10-10 00:00:00.000000'),(269,'def solve(dict, key):\r\n    return dict[key]','2019-10-11',1,'',106,'','','','',1,'2019-10-11 00:00:00.000000'),(270,'4','2019-10-30',1,'',32,'','','','',11,'2019-10-31 04:50:22.191252'),(271,'def solve(dict, value):\r\n    dict[\"language\"]=value\r\n    return dict','2019-10-12',1,'',107,'','','','',1,'2019-10-12 00:00:00.000000'),(272,'12','2019-10-12',1,'',73,'','','','',11,'2019-10-12 00:00:00.000000'),(273,'def solve(num):\r\n    ans = []\r\n    for i in range(1, num+1):\r\n        for j in range(1, num+1):\r\n            if i > j:\r\n                max = i\r\n            else:\r\n                max = j\r\n            ans.append(max)\r\n    return ans','2019-10-12',1,'',113,'','','','',11,'2019-10-12 00:00:00.000000'),(274,'def solve(dict, key):\r\n    return dict.get(key, 0)','2019-10-13',1,'',118,'','','','',11,'2019-10-13 00:00:00.000000'),(275,'4','2019-10-13',1,'',32,'','','','',15,'2019-10-19 00:00:00.000000'),(276,'1','2019-10-13',1,'',70,'','','','',15,'2019-10-13 00:00:00.000000'),(277,'2','2019-10-13',1,'',104,'','','','',15,'2019-10-13 00:00:00.000000'),(278,'3','2019-10-13',1,'',52,'','','','',15,'2019-10-13 00:00:00.000000'),(279,'2','2019-10-13',1,'',71,'','','','',15,'2019-10-13 00:00:00.000000'),(280,'print (\"hello world\")','2019-10-13',1,'',36,'','','','',15,'2019-10-13 00:00:00.000000'),(281,'3','2019-10-13',1,'',63,'','','','',15,'2019-10-13 00:00:00.000000'),(282,'4','2019-10-13',1,'',72,'','','','',15,'2019-10-13 00:00:00.000000'),(283,'12','2019-10-13',1,'',73,'','','','',15,'2019-10-13 00:00:00.000000'),(284,'4','2019-10-13',1,'',95,'','','','',15,'2019-10-13 00:00:00.000000'),(285,'3','2019-10-13',1,'',74,'','','','',15,'2019-10-13 00:00:00.000000'),(286,'4','2019-10-13',1,'',96,'','','','',15,'2019-10-13 00:00:00.000000'),(287,'3','2019-10-13',1,'',15,'','','','',15,'2019-10-27 17:49:01.514822'),(288,'3','2019-10-13',1,'',16,'','','','',15,'2019-10-13 00:00:00.000000'),(289,'2','2019-10-13',1,'',17,'','','','',15,'2019-10-13 00:00:00.000000'),(290,'def solve(nums):\r\n    nums.sort()\r\n    ans=nums[-1]\r\n    for i in range(1, len(nums)):\r\n        if nums[i]-nums[i-1]<ans:\r\n            ans=nums[i]-nums[i-1]\r\n    return ans','2019-10-13',1,'',116,'','','','',1,'2019-10-13 00:00:00.000000'),(292,'def solve(dict, key, value):\r\n    dict[key]=value\r\n    return dict','2019-10-13',1,'',108,'','','','',1,'2019-10-13 00:00:00.000000'),(293,'def solve(dict, key):\r\n    dict.pop(key)\r\n    return dict','2019-10-13',1,'',109,'','','','',1,'2019-10-13 00:00:00.000000'),(294,'def solve(dict):\r\n    return len(dict)','2019-10-13',1,'',2,'','','','',1,'2019-10-13 00:00:00.000000'),(295,'def solve(dict):\r\n    print(dict)','2019-10-13',-1,'None',2,'3','{\'brand\': \'PyPyKids\', \'language\': \'Python\', \'target\': \'Kids\'}','Traceback (most recent call last):\n  File \"/opt/python3.7/lib/python3.7/ast.py\", line 46, in literal_eval\n    node_or_string = parse(node_or_string, mode=\'eval\')\n  File \"/opt/python3.7/lib/python3.7/ast.py\", line 35, in parse\n    return compile(source, filename, mode, PyCF_ONLY_AST)\n  File \"<unknown>\", line 1\n    {\'brand\': \'PyPyKids\', \'language\': \'Python\', \'target\': \'Kids\'}\n                         ^\nSyntaxError: invalid character in identifier\n','',11,'2019-10-13 00:00:00.000000'),(296,'def solve(dict, key):\r\n    return dict.get(key,0)','2019-10-13',1,'',118,'','','','',1,'2019-10-13 00:00:00.000000'),(297,'def solve(dict):\r\n    ans=[]\r\n    for key in dict:\r\n        ans.append(key+dict[key])\r\n    return ans','2019-10-13',1,'',110,'','','','',1,'2019-10-13 00:00:00.000000'),(299,'def solve(num):\r\n    ans=[]\r\n    for i in range(1, num+1):\r\n        for j in range(1, num+1):\r\n            ans.append(max(i,j))\r\n    return ans','2019-10-13',1,'',113,'','','','',1,'2019-10-13 00:00:00.000000'),(300,'def solve(num):\r\n    ans=[]\r\n    for i in range(1,num+1):\r\n        for j in range(1,num+1):\r\n            ans.append(i+j)\r\n    return ans','2019-10-13',1,'',114,'','','','',1,'2019-10-13 00:00:00.000000'),(301,'def solve(num):\r\n    ans=[]\r\n    for i in range(1,num+1):\r\n        for j in range(1,i+1):\r\n            ans.append(j)\r\n    return ans\r\n            ','2019-10-13',1,'',115,'','','','',1,'2019-10-13 00:00:00.000000'),(302,'ans = 0\r\nfor n in range(100):\r\n    ans += n\r\nprint(ans)','2019-10-13',-2,'4950\n',120,'5050','','','',11,'2019-10-13 00:00:00.000000'),(303,'ans=0\r\nfor num in range(1,100+1):\r\n    ans+=num\r\nprint(ans)','2019-10-14',1,'',120,'','','','',1,'2019-10-14 00:00:00.000000'),(304,'def solve(dict):\r\n    store = set()\r\n    for key in dict:\r\n        if dict[key] in store:\r\n            return True\r\n        store.add(dict[key])\r\n    return False','2019-10-14',1,'',124,'','','','',1,'2019-10-14 00:00:00.000000'),(305,'def solve(str):\r\n    ans=len(str)\r\n    dict={\'p\':0,\'y\':0,\'k\':0,\'i\':0,\'d\':0,\'s\':0}\r\n    for ch in str:\r\n        dict[ch]=dict.get(ch,0)+1\r\n    dict[\'p\']/=2\r\n    dict[\'y\']/=2\r\n    for key in dict:\r\n        if dict[key]<ans:\r\n            ans=dict[key]\r\n    return int(ans)','2019-10-14',1,'',117,'','','','',1,'2019-10-14 00:00:00.000000'),(306,'def solve(nums):\r\n    ans=0\r\n    for num in nums:\r\n        ans+=num\r\n    return ans/len(nums)','2019-10-14',1,'',94,'','','','',1,'2019-10-14 00:00:00.000000'),(307,'def solve(area):\r\n    for a in range(1,area):\r\n        if area%a==0:\r\n            return True\r\n    return False','2019-10-14',1,'',122,'','','','',1,'2019-10-14 00:00:00.000000'),(308,'def solve(starts, finishes):\r\n    ans=finishes[-1]-starts[-1]\r\n    for i in range(len(starts)):\r\n        if finishes[i]-starts[i]<ans:\r\n            ans=finishes[i]-starts[i]\r\n    return ans','2019-10-14',-1,'2',79,'3','[1, 2, 4, 6]\r\n[4, 5, 6, 8]','','',1,'2019-10-14 00:00:00.000000'),(309,'def solve(nums):\r\n    total,sum,ans=0,0,0\r\n    for num in nums:\r\n        total+=num\r\n    for num in nums:\r\n        sum+=num\r\n        if sum==total/2:\r\n            return True\r\n    return False\r\n        ','2019-10-14',1,'',75,'','','','',1,'2019-10-14 00:00:00.000000'),(310,'def solve(str, n):\r\n    return str[-n:]','2019-10-14',1,'',126,'','','','',1,'2019-10-14 00:00:00.000000'),(311,'def solve(nums):\r\n    ans=0\r\n    for num in nums:\r\n        ans+=num\r\n    ans=ans/len(nums)\r\n    if int(ans)==ans:\r\n        return True\r\n    return False','2019-10-14',1,'',127,'','','','',1,'2019-10-14 00:00:00.000000'),(312,'def solve(nums):\r\n    ans=1\r\n    for i in range(len(nums)):\r\n        if nums[i]==nums[i-1]:\r\n            ans+=1\r\n    return ans','2019-10-15',-2,'6',66,'3','[4, 4, 4, 1, 1, 1, 2, 3, 4]','','',11,'2019-10-15 00:00:00.000000'),(313,'def solve(list):\r\n    common=list[0]\r\n    for str in list:\r\n        l=len(str)\r\n        if len(str)>len(common):\r\n            l=len(common)\r\n        for i in range(l):\r\n            if str[i]!=common[i]:\r\n                common=common[:i]\r\n    return common','2019-10-15',1,'',128,'','','','',1,'2019-10-15 00:00:00.000000'),(314,'def solve(nums):\r\n    i,j=0,0    \r\n    while i<len(nums) and j<len(nums)+1:\r\n        if nums[i]==1:\r\n            nums.remove(1)\r\n            nums.append(1)\r\n        else:\r\n            i+=1\r\n        j+=1\r\n    return nums','2019-10-15',1,'',132,'','','','',1,'2019-10-15 00:00:00.000000'),(315,'def solve(prices):\r\n    \'\'\'ans=0\r\n    for i in range(len(prices)):\r\n        for j in range(i+1,len(prices)):\r\n            if prices[j]-prices[i]>ans:\r\n                ans=prices[j]-prices[i]\r\n    return ans\'\'\'\r\n    ans, m = 0, prices[0]\r\n    for p in prices:\r\n        ans = max(p - m , ans)\r\n        m = min(m, p)\r\n    return ans','2019-10-15',1,'',59,'','','','',1,'2019-12-11 04:32:17.307434'),(316,'def solve(nums):\r\n    s,ans=\"\",[]\r\n    for num in nums:\r\n        num=str(num)\r\n        s+=num\r\n    s=str(int(s)+1)\r\n    for ch in s:\r\n        ans.append(int(ch))\r\n    return ans','2019-10-15',1,'',129,'','','','',1,'2019-10-15 00:00:00.000000'),(317,'def solve(nums, n):\r\n    max=0\r\n    while len(nums)>=n:\r\n        m=0\r\n        for num in range(n):\r\n            m+=nums[num]\r\n        if m>max:\r\n            max=m\r\n        nums.remove(nums[0])\r\n    return max','2019-10-15',1,'',76,'','','','',1,'2019-10-15 00:00:00.000000'),(318,'def solve(nums1, nums2):\r\n    s,s1,ans=\"\",\"\",[]\r\n    for num in nums1:\r\n        num=str(num)\r\n        s1+=num\r\n    for num in nums2:\r\n        num=str(num)\r\n        s+=num\r\n    s=str(int(s)+int(s1))\r\n    for ch in s:\r\n        ans.append(int(ch))\r\n    return ans','2019-10-15',1,'',133,'','','','',1,'2019-10-15 00:00:00.000000'),(319,'def solve(nums):\r\n    ans = set()\r\n    store = set()\r\n    if list(set(nums)) == nums:\r\n        return 0\r\n    for num in nums:\r\n        if num in store:\r\n            ans.add(num)\r\n        store.add(num)\r\n    return len(ans)','2019-10-15',1,'',121,'','','','',1,'2019-10-15 00:00:00.000000'),(320,'def solve(str):\r\n    max, ans, dict = 0, [], {}\r\n    str = str.split()\r\n    for word in str:\r\n        dict[word] = dict.get(word, 0) + 1\r\n        if dict[word] > max:\r\n            max = dict[word]\r\n            ans = [word]\r\n        elif dict[word] == max:\r\n            max = dict[word]\r\n            ans.append(word)\r\n    return ans','2019-10-16',1,'',125,'','','','',1,'2019-10-16 00:00:00.000000'),(321,'def solve(list):\r\n    print(1)','2019-10-20',-1,'None',128,'ab','[\"abc\", \"abd\", \"abg\"]','1\n','',11,'2019-10-20 00:00:00.000000'),(322,'3','2019-10-17',1,'',63,'','','','',11,'2019-10-17 00:00:00.000000'),(323,'def solve(num):\r\n    s = str(num)\r\n    nums = []\r\n    for ch in s:\r\n        nums.append(ch)\r\n    for i in range(int(len(nums)/2)):\r\n        nums[i], nums[-(i+1)] = nums[-(i+1)], nums[i]\r\n    return int(\"\".join(nums))','2019-10-17',1,'',130,'','','','',1,'2019-10-17 00:00:00.000000'),(324,'4','2019-10-17',1,'',32,'','','','',6,'2019-10-17 00:00:00.000000'),(325,'1','2019-10-17',1,'',70,'','','','',6,'2019-10-17 00:00:00.000000'),(326,'def solve(k):\r\n    ans = []\r\n    for num in range(2, k):\r\n        flag = False\r\n        for n in range(2, num):\r\n            if num%n==0:\r\n                flag = True\r\n                break\r\n        if flag == False:\r\n            ans.append(num)\r\n    return ans','2019-10-17',1,'',137,'','','','',1,'2019-10-17 00:00:00.000000'),(327,'102','2019-11-02',-1,'15',5,'','','','',11,'2019-11-03 04:48:24.371149'),(328,'def solve(nums):\r\n    nums.sort()\r\n    num = nums[int((len(nums)+1)/2)-1]\r\n    if len(nums)%2 == 1:\r\n        return num\r\n    else:\r\n        return (num + nums[int(len(nums)/2)])/2','2019-10-17',1,'',123,'','','','',1,'2019-10-17 00:00:00.000000'),(329,'class Rectangle:\r\n    def __init__(self, height, width):\r\n        self.height = height\r\n        self.width = width\r\n\r\n    def getArea(self):\r\n        # Insert the code here.\r\n        return self.height * self.width\r\n\r\nrectangle = Rectangle(10, 20)\r\nprint(rectangle.height * rectangle.width)','2019-10-19',1,'',24,'','','','',11,'2019-10-20 00:00:00.000000'),(330,'class Rectangle:\r\n    def __init__(self, height, width):\r\n        self.height = height\r\n        self.width = width\r\n\r\nrectangle = Rectangle(10, 20)\r\n\r\n# Please insert code below.\r\nprint(30)','2019-10-19',-2,'30\n',140,'200','','','',11,'2019-10-19 00:00:00.000000'),(331,'def solve(nums1, nums2):\r\n    for num in nums2: \r\n        if (num in nums1) == True:\r\n            nums1.remove(num)\r\n    return(nums1)\r\n \r\n','2019-10-20',1,'',100,'','','','',15,'2019-10-20 00:00:00.000000'),(332,'4','2019-10-19',1,'',26,'','','','',15,'2019-10-19 00:00:00.000000'),(333,'def solve(nums):\r\n    return nums','2019-10-19',-1,'[1, 2, 3, 4, 5]',12,'[1, 4, 3, 2, 5]','[1,2,3,4,5]','','',11,'2019-10-19 00:00:00.000000'),(334,'1','2019-10-19',1,'',139,'','','','',1,'2019-10-19 00:00:00.000000'),(335,'class Rectangle:\r\n    def __init__(self, height, width):\r\n        self.height = height\r\n        self.width = width\r\n\r\nrectangle = Rectangle(10, 20)\r\n\r\nprint(200)','2019-10-19',1,'',140,'','','','',1,'2019-10-19 00:00:00.000000'),(336,'2','2019-10-20',1,'',71,'','','','',11,'2019-10-25 05:43:32.182633'),(337,'4','2019-10-20',1,'',55,'','','','',15,'2019-10-20 00:00:00.000000'),(338,'def solve(num1, num2):\r\n    ans = 0\r\n    for num in range(len(str(num1))):\r\n        ans += abs(num1 % 10 - num2 % 10)\r\n        num1, num2 = int(num1/10), int(num2/10)\r\n    return ans','2019-10-20',1,'',131,'','','','',1,'2019-10-20 00:00:00.000000'),(339,'def solve(list):\r\n    dict = {}\r\n    for i in range(0, len(list), 2):\r\n        dict[list[i]] = list[i+1]\r\n    return dict','2019-10-20',1,'',141,'','','','',1,'2019-10-20 00:00:00.000000'),(340,'4','2019-10-20',1,'',72,'','','','',11,'2019-10-20 00:00:00.000000'),(341,'def solve(n):\r\n    ans, num = [], 0\r\n    for i in range(n):\r\n        sub = []\r\n        for j in range(n):\r\n            if i % 2 == 0:\r\n                num += 1\r\n                sub.append(num)\r\n            else:\r\n                num += 1\r\n                sub.insert(0, num)\r\n        ans.append(sub)\r\n    return ans','2019-10-21',1,'',142,'','','','',1,'2019-10-21 00:00:00.000000'),(342,'def solve(nums):\r\n    return max(nums)','2019-10-21',1,'',145,'','','','',1,'2019-10-21 00:00:00.000000'),(343,'def solve(n):\r\n    ans = []\r\n    for i in range(n):\r\n        sub = []\r\n        for j in range(n):\r\n            sub.append(i + n * j + 1)\r\n        ans.append(sub)\r\n    return ans','2019-10-22',1,'',146,'','','','',1,'2019-10-22 00:00:00.000000'),(344,'def solve(n):\r\n    ans = []\r\n    for i in range(1, n + 1):\r\n        sub = []\r\n        for j in range(1, n + 1):\r\n            sub.append(max(i, j))\r\n        ans.append(sub)\r\n    return ans','2019-10-22',1,'',149,'','','','',1,'2019-10-22 00:00:00.000000'),(345,'def solve(n):\r\n    ans = []\r\n    for i in range(n):\r\n        sub = []\r\n        for j in range(n):\r\n            if i + j == n - 1 or i == j:\r\n                sub.append(1)\r\n            else:\r\n                sub.append(0)\r\n        ans.append(sub)\r\n    return ans','2019-10-22',1,'',150,'','','','',1,'2019-10-22 00:00:00.000000'),(346,'def solve(radius):\r\n    return int(radius * radius * 3.14), int(2 * radius * 3.14)','2019-10-22',1,'',147,'','','','',1,'2019-10-22 00:00:00.000000'),(347,'def solve(str):\r\n    ans = \"\"\r\n    for ch in str:\r\n        ans = ch + ans\r\n    return ans','2019-10-23',1,'',151,'','','','',1,'2019-10-23 00:00:00.000000'),(349,'# Definition for linked list.\r\nclass Node:\r\n    def __init__(self, val):\r\n        self.val = val\r\n        self.next = None\r\n\r\ndef solve(list):\r\n    # Please insert code here\r\n    head = Node(list[0])\r\n    next = head\r\n    for num in list[1:]:\r\n        next.next = Node(num)\r\n        next = next.next\r\n    return head','2019-10-24',1,'',155,'','','','',11,'2019-10-31 04:49:44.096918'),(350,'def solve(list):\r\n    return len(list) + len(list[0])','2019-10-26',1,'',152,'','','','',1,'2019-10-27 02:13:20.797248'),(351,'# Definition for linked list.\r\nclass Node:\r\n    def __init__(self, val):\r\n        self.val = val\r\n        self.next = None\r\n\r\ndef solve(head):\r\n    # Please insert code here\r\n    return head.val','2019-11-03',-1,'1',69,'4','1 -> 4 -> 3 -> 2','','',11,'2019-11-04 05:52:49.942537'),(352,'def solve(nums):\r\n    nums.reverse()\r\n    return nums','2019-10-26',1,'',13,'','','','',15,'2019-10-27 14:57:16.157857'),(353,'3','2019-10-27',1,'',82,'','','','',15,'2019-10-27 18:01:57.391758'),(354,'False','2019-10-27',1,'',88,'','','','',15,'2019-10-27 18:07:56.105847'),(355,'3','2019-10-27',1,'',89,'','','','',15,'2019-10-27 18:09:23.685830'),(356,'2','2019-10-27',1,'',77,'','','','',15,'2019-10-27 18:11:54.875187'),(357,'4','2019-10-27',1,'',90,'','','','',15,'2019-10-27 18:14:18.846965'),(358,'10','2019-11-02',1,'',1,'','','','',15,'2019-11-03 01:21:54.192032'),(359,'class Node:\r\n    def __init__(self, val):\r\n        self.val = val\r\n        self.next = None\r\n\r\ndef solve(head):\r\n    ans = 0\r\n    while head != None:\r\n        if head.val > ans:\r\n            ans = head.val\r\n        head = head.next\r\n    return ans','2019-10-27',1,'',69,'','','','',1,'2019-10-28 03:07:01.181710'),(360,'# Definition for linked list.\r\nclass Node:\r\n    def __init__(self, val):\r\n        self.val = val\r\n        self.next = None\r\n\r\ndef solve(head):\r\n   ans = 0\r\n   while head != None:\r\n        if head.val > ans:\r\n            ans = head.val\r\n        head = head.next\r\n\r\n   return ans\r\n        \r\n        ','2019-10-27',1,'',69,'','','','',15,'2019-11-03 01:00:51.313395'),(361,'class Node:\r\n    def __init__(self, val):\r\n        self.val = val\r\n        self.next = None\r\n\r\ndef solve(list):\r\n    head = Node(list[0])\r\n    tail = head\r\n    for num in list[1:]:\r\n        tail.next = Node(num)\r\n        tail = tail.next\r\n    return head','2019-10-27',1,'',155,'','','','',1,'2019-10-28 04:58:07.778933'),(362,'def solve(nums, target):\r\n    sum, sub = 0, 0\r\n    for num in nums:\r\n        sum += num\r\n        if sum > target:\r\n            while sum > target:\r\n                sum = sum - nums[sub]\r\n                sub += 1\r\n        if sum == target:\r\n            return True\r\n    return False','2019-10-27',1,'',148,'','','','',1,'2019-10-28 03:13:14.296943'),(363,'def solve(num):\r\n    rem, quo = \"\", num\r\n    while quo != 0:\r\n        rem = str(quo % 2) + rem\r\n        quo = int(quo / 2)\r\n    return int(rem)','2019-10-27',1,'',138,'','','','',1,'2019-10-28 04:53:28.626448'),(364,'class Node:\r\n    def __init__(self, val):\r\n        self.val = val\r\n        self.next = None\r\n\r\ndef solve(head):\r\n    stack = []\r\n    while head != None:\r\n        stack.append(head.val)\r\n        head = head.next\r\n        print(stack)\r\n    head = Node(stack.pop())\r\n    ans = head\r\n    for i in range(len(stack)):\r\n        head.next = Node(stack.pop())\r\n        head = head.next\r\n    return ans','2019-10-28',1,'',81,'','','','',1,'2019-10-29 04:14:09.396630'),(365,'def solve(str):\r\n    stack, ans = [], 0\r\n    for ch in str:\r\n        if ch == \')\' and len(stack) != 0:\r\n            stack.pop()\r\n            ans += 1\r\n        else:\r\n            stack.append(ch)\r\n    return ans','2019-10-28',1,'',156,'','','','',1,'2019-10-29 04:49:39.007137'),(366,'def solve(nums):\r\n    ans = []\r\n    for num in nums:\r\n        ans.append([])\r\n    for i in range(len(nums)):\r\n        for j in range(len(nums[i])):\r\n            ans[j].insert(0, nums[i][j])\r\n    return ans','2019-11-03',1,'',157,'','','','',1,'2019-11-04 04:41:20.102533'),(367,'def solve(nums):\r\n    ans = []\r\n    for i in range(len(nums) - 1):\r\n        for j in range(i, len(nums) - 1):\r\n            if nums[i] < nums[j + 1]:\r\n                ans.append(nums[j + 1])\r\n                break\r\n        if len(ans) <= i:\r\n            ans.append(-1)\r\n    ans.append(-1)\r\n    return ans','2019-10-29',1,'',136,'','','','',1,'2019-10-30 01:48:40.526660'),(368,'def solve(row, col):\r\n    c = [0] * (col - 1)\r\n    c.append(1)\r\n    return [c for i in range(row)]','2019-10-29',1,'',158,'','','','',11,'2019-11-02 02:43:58.917652'),(369,'class Tree:\r\n    def __init__(self, val):\r\n        self.val = val\r\n        self.left = None\r\n        self.right = None\r\n\r\ndef solve(tree, num):\r\n    tree.right.right.right = Tree(10)\r\n    return tree','2019-10-30',-2,'Tree[4, 2, 6, 1, None, None, 8, None, None, None, None, None, None, None, 10]',159,'True','Tree[4, 2, 6, 1, None, None, 8]\r\n6','','',11,'2019-10-31 08:06:25.719734'),(370,'def solve(nums, n):\r\n    return nums[n:] + nums[0:n]','2019-10-30',1,'',29,'','','','',11,'2019-10-31 04:51:05.532316'),(371,'class Node:\r\n    def __init__(self, val):\r\n        self.val = val\r\n        self.next = None\r\n\r\ndef solve(head):\r\n    head2 = head\r\n    while head2 != None and head2.next != None and head2.next.next != None:\r\n        head2 = head2.next.next\r\n        head = head.next\r\n    return head.val\r\n    ','2019-10-30',1,'',134,'','','','',1,'2019-10-31 05:01:28.417629'),(372,'class Tree:\r\n    def __init__(self, val):\r\n        self.val = val\r\n        self.left = None\r\n        self.right = None\r\n\r\ndef solve():\r\n    node1 = Tree(1)\r\n    node2 = Tree(2)\r\n    node3 = Tree(3)\r\n    node1.left = node2\r\n    return node1','2019-10-31',-2,'Tree[1, 2]',160,'Tree[1, 2, 3]','','','',11,'2019-10-31 08:07:32.075505'),(373,'class Tree:\r\n    def __init__(self, val):\r\n        self.val = val\r\n        self.left = None\r\n        self.right = None\r\n\r\ndef solve(root, num1, num2):\r\n    if root.val > num1 and root.val > num2:\r\n        return solve(root.left, num1, num2)\r\n\r\n    if root.val < num1 and root.val < num2:\r\n        return solve(root.right, num1, num2)\r\n        \r\n    return root.val','2019-10-31',1,'',162,'','','','',11,'2019-11-01 05:19:41.838354'),(374,'def solve(row, col):\r\n    ans = [[0] * (col - 1) for i in range(row)]\r\n    for num in ans:\r\n        num.append(1)\r\n    return ans','2019-11-01',1,'',158,'','','','',1,'2019-11-02 05:34:42.548080'),(375,'60','2019-11-02',1,'',164,'','','','',1,'2019-11-02 18:36:31.920935'),(376,'def solve(nums):\r\n    max, smax = 0, 0\r\n    for i in range(len(nums)):\r\n        sum = 0\r\n        for j in nums[i]:\r\n            sum += j\r\n        if sum > smax:\r\n            max, smax = i, sum\r\n    return max','2019-11-02',1,'',165,'','','','',1,'2019-11-02 19:02:50.622871'),(377,'def num in (nums):\r\n   s = 0\r\n   for num in range (0,101):\r\n        s += (num)\r\n        print (num)\r\n    return (nums)\r\n        ','2019-11-16',-1,'  File \"/tmp/solution_JustMeAgain.py\", line 1\n    def num in (nums):\n             ^\nSyntaxError: invalid syntax\n',120,'5050','','','',15,'2019-11-17 02:46:44.206912'),(378,'4','2019-11-02',1,'',83,'','','','',15,'2019-11-03 01:28:20.643321'),(379,'1','2019-11-02',1,'',78,'','','','',15,'2019-11-03 01:28:49.917055'),(380,'1,2,4,5','2019-11-02',-1,'1,2,4,5',20,'','','','',15,'2019-11-03 01:29:19.296972'),(381,'1\r\n2\r\n3\r\n4','2019-11-02',-1,'1\r\n2\r\n3\r\n4',19,'','','','',15,'2019-11-03 01:30:09.393569'),(382,'1','2019-11-02',-1,'1',5,'','','','',15,'2019-11-03 01:32:33.632442'),(383,'print_world()','2019-11-02',1,'',84,'','','','',15,'2019-11-03 01:33:18.901699'),(384,'10','2019-11-02',1,'',85,'','','','',15,'2019-11-03 01:35:00.029065'),(385,'24','2019-11-02',1,'',86,'','','','',15,'2019-11-03 01:36:29.138230'),(386,'14','2019-11-02',1,'',8,'','','','',15,'2019-11-03 01:38:24.838065'),(387,'def solve(num):\r\n    for num in num:\r\n        while num < num:\r\n            print (num)\r\n    return (nums)','2019-11-02',-1,'None',111,'55','10','Traceback (most recent call last):\n  File \"/tmp/solution_JustMeAgain.py\", line 2, in solve\n    for num in num:\nTypeError: \'int\' object is not iterable\n','',15,'2019-11-03 01:43:39.558253'),(388,'class Node:\r\n    def __init__(self, val):\r\n        self.val = val\r\n        self.next = None\r\n\r\ndef solve(head):\r\n   ans = 0\r\n   while head != None:\r\n        if head.val > ans:\r\n            ans = head.val\r\n        head = head.next\r\n\r\n   return ans','2019-11-03',-1,'None',66,'3','[4, 4, 4, 1, 1, 1, 2, 3, 4]','Traceback (most recent call last):\n  File \"/tmp/solution_JustMeAgain.py\", line 9, in solve\n    if head.val > ans:\nAttributeError: \'list\' object has no attribute \'val\'\n','',15,'2019-11-03 18:20:39.267043'),(389,'# Definition for linked list.\r\nclass Node:\r\n    def __init__(self, val):\r\n        self.val = val\r\n        self.next = None\r\n\r\ndef solve(list):\r\n    self.head = node1\r\n    node1.next = node2\r\n    node2.next = node3\r\n    node3.next = node4\r\n    node4.next = None\r\n    while head != None:\r\n        print(head.val)    \r\n        head = head.next','2019-11-09',-1,'None',155,'1 -> 2 -> 3 -> 4','[1, 2, 3, 4]','Traceback (most recent call last):\n  File \"/tmp/solution_JustMeAgain.py\", line 8, in solve\n    self.head = node1\nNameError: name \'node1\' is not defined\n','',15,'2019-11-10 01:50:26.338596'),(390,'class Tree:\r\n    def __init__(self, val):\r\n        self.val = val\r\n        self.left = None\r\ndef solve(root, val):\r\n    while root != None:\r\n        if root.val == val:\r\n            return True\r\n        root = root.left\r\n    return False\r\n    ','2019-11-03',1,'',161,'','','','',1,'2019-11-03 23:56:33.502701'),(391,'class Tree:\r\n    def __init__(self, val):\r\n        self.val = val\r\n        self.left = None\r\n        self.right = None\r\n\r\ndef solve():\r\n    tree1, tree2, tree3 = Tree(1), Tree(2), Tree(3)\r\n    tree1.left = tree2\r\n    tree1.right = tree3\r\n    return tree1','2019-11-03',1,'',160,'','','','',1,'2019-11-04 03:49:10.775110'),(392,'class Node:\r\n    def __init__(self, val):\r\n        self.val = val\r\n        self.next = None\r\n        \r\ndef solve(head, n):\r\n    head2, count = head, 1\r\n    while head != None:\r\n        if count > n:\r\n            head2 = head2.next\r\n        head = head.next\r\n        count += 1\r\n    return head2.val','2019-11-03',1,'',135,'','','','',1,'2019-11-04 04:29:39.022886'),(393,'class Node:\r\n    def __init__(self, val):\r\n        self.val = val\r\n        self.next = None\r\n        \r\ndef solve(head, n):\r\n    head2, count = head, 1\r\n    while head != None:\r\n        if count > n:\r\n            head2 = head2.next\r\n        head = head.next\r\n        count += 1\r\n    return head','2019-11-03',-2,'None',135,'6','1 -> 2 -> 4 -> 5 -> 6 -> 7\n2','','',11,'2019-11-04 05:52:00.037204'),(394,'class Tree:\r\n    def __init__(self, val):\r\n        self.val = val\r\n        self.left = None\r\n        self.right = None\r\n\r\ndef solve(root, num):\r\n    if root == None:\r\n        return False\r\n    if num > root.val:\r\n        return solve(root.right, num)\r\n    elif num < root.val:\r\n        return solve(root.left, num)\r\n    else:\r\n        return True','2019-11-03',1,'',159,'','','','',1,'2019-11-04 05:07:27.465396'),(395,'class Tree:\r\n    def __init__(self, val):\r\n        self.val = val\r\n        self.left = None\r\n        self.right = None\r\n        \r\ndef solve(root):\r\n    if root == None:\r\n        return 0\r\n    \r\n    return max(solve(root.left), solve(root.right), root.val)','2019-11-04',1,'',166,'','','','',11,'2019-11-05 04:22:18.345943'),(396,'class Tree:\r\n    def __init__(self, val):\r\n        self.val = val\r\n        self.left = None\r\n        self.right = None\r\n        \r\ndef solve(root):\r\n    return helper(root, 0)\r\n\r\n\r\ndef helper(root, ans):\r\n    if root == None:\r\n        return ans\r\n    \r\n    if root.val > ans:\r\n        ans = root.val\r\n        \r\n    return max(helper(root.left, ans), helper(root.right, ans))\r\n    \r\n    ','2019-11-04',-1,'None',23,'3','[1, 2, -3, 2, -1]','Traceback (most recent call last):\n  line 8, in solve\n    return helper(root, 0)\n  line 15, in helper\n    if root.val > ans:\nAttributeError: \'list\' object has no attribute \'val\'\n','',11,'2019-11-05 03:23:08.938548'),(397,'class Tree:\r\n    def __init__(self, val):\r\n        self.val = val\r\n        self.left = None\r\n        self.right = None\r\n\r\ndef solve(root):\r\n    if root == None:\r\n        return 0\r\n    left = solve(root.left)\r\n    right = solve(root.right)\r\n    return max(left, right, root.val)','2019-11-04',1,'',166,'','','','',1,'2019-11-05 05:28:06.214962'),(398,'class Tree:\r\n    def __init__(self, val):\r\n        self.val = val\r\n        self.left = None\r\n        self.right = None\r\n\r\ndef solve(root):\r\n    if not root:\r\n        return True\r\n\r\n    if root.left and root.val < root.left.val:\r\n        return False\r\n    if root.right and root.val < root.right.val:\r\n        return False\r\n    return solve(root.left) and solve(root.right)','2019-11-06',1,'',169,'','','','',11,'2019-11-07 06:15:19.111527'),(399,'def solve(str):\r\n    if len(str) == 0:\r\n        return 1\r\n    if str[0] == \'0\':\r\n        return 0\r\n    way1 = solve(str[1:])\r\n    way2 = 0\r\n    if len(str) > 1:\r\n        way2 = solve(str[2:])\r\n    return way1 + way2','2019-11-07',1,'',170,'','','','',11,'2019-11-07 17:51:11.989346'),(400,'15','2019-11-07',1,'',172,'','','','',1,'2019-11-08 06:00:00.036111'),(401,'4','2019-11-07',1,'',173,'','','','',1,'2019-11-08 06:06:19.895412'),(402,'def solve(str):\r\n    stack, i, dict = [], 0, {\')\':\'(\', \']\':\'[\', \'}\':\'{\'}\r\n    while i == len(str)-1:\r\n        if dict.get(str[i]):\r\n            stack.remove(dict(str[i]))\r\n        else:\r\n            stack.append(str[i])\r\n        i += 1\r\n    if stack:\r\n        return str(stack.pop(0))\r\n    return -1','2019-11-08',-1,'-1',167,')','\"(((){})\"','','',1,'2019-11-09 01:56:31.466293'),(403,'class Tree:\r\n    def __init__(self, val):\r\n        self.val = val\r\n        self.left = None\r\n        self.right = None\r\n\r\ndef solve(root, val):','2019-11-09',-1,'None',161,'True','Tree[1, 2, 3, 4]\r\n4','Traceback (most recent call last):\n  File \"/tmp/solution_JustMeAgain.py\", line 7\n    def solve(root, val):\n                        ^\nSyntaxError: unexpected EOF while parsing\n','',15,'2019-11-10 01:15:25.447681'),(404,'class Tree:\r\n    def __init__(self, val):\r\n        self.val = val\r\n        self.left = None\r\n        self.right = None\r\n\r\ndef solve():\r\n    tree1 = Tree(1)\r\n    tree2 = Tree(2)\r\n    tree3 = Tree(3)\r\n    self.left = tree2\r\n    self.right = tree3','2019-11-09',-1,'None',160,'Tree[1, 2, 3]','','Traceback (most recent call last):\n  File \"/tmp/solution_JustMeAgain.py\", line 11, in solve\n    self.left = tree2\nNameError: name \'self\' is not defined\n','',15,'2019-11-10 01:33:22.417793'),(405,'def solve(nums):\r\n    for i in range(1,len(nums)+2):\r\n        if not i in nums:\r\n            return i \r\n        \r\n            \r\n        ','2019-11-09',1,'',27,'','','','',15,'2019-11-10 04:57:59.733130'),(406,'def solve(list1, list2):\r\n    ans = []\r\n    for i in range(len(list1)):\r\n        ans.append([list1[i], list2[i]])\r\n    return ans','2019-11-15',1,'',178,'','','','',1,'2019-11-16 06:40:07.729532'),(407,'def solve(str):\r\n    str = str.split()\r\n    for i in range(1, len(str)):\r\n        if int(str[i]) != int(str[i - 1]) + 1:\r\n            return False\r\n    return True','2019-11-15',1,'',175,'','','','',1,'2019-11-16 06:52:57.356990'),(408,'def solve(str):\r\n    ans = \'\'\r\n    nums = str.split()\r\n    for str in nums:\r\n        ans += str[0]\r\n    return ans','2019-11-18',1,'',177,'','','','',1,'2019-11-19 05:38:31.924756'),(409,'def solve(stair):\r\n    nums = [1, 2]\r\n    for i in range(2, stair):\r\n        nums.append(nums[i - 1] + nums[i - 2])\r\n    return nums[stair - 1]','2019-11-19',1,'',163,'','','','',1,'2019-11-20 01:27:06.638120'),(410,'def solve(s):\r\n    keep = 1\r\n    ans = str(s[0])\r\n    for i in range(1, len(s)):\r\n        if s[i] == s[i - 1]:\r\n            keep += 1\r\n        else:\r\n            ans += str(keep)\r\n            keep = 1\r\n            ans += str(s[i])\r\n    ans += str(keep)\r\n    return ans','2020-02-02',1,'',176,'','','','',1,'2020-02-02 18:49:46.034105'),(411,'1','2019-12-11',-1,'4',32,'','','','',16,'2019-12-11 22:08:26.943812'),(412,'class Tree:\r\n    def __init__(self, val):\r\n        self.val = val\r\n        self.left = None\r\n        self.right = None\r\n\r\ndef solve(root):\r\n    if not root or (not root.right and not root.left):\r\n        return True\r\n    if not root.right:\r\n        if root.left.val > root.val:\r\n            return False\r\n    if not root.left:\r\n        if root.right.val > root.val:\r\n            return False\r\n    if root.val < root.left.val or root.val < root.right.val:\r\n        return False\r\n    return solve(root.left) and solve(root.right)','2020-02-02',1,'',169,'','','','',1,'2020-02-03 01:23:40.535218'),(413,'class Tree:\r\n    def __init__(self, val):\r\n        self.val = val\r\n        self.left = None\r\n        self.right = None\r\n        \r\ndef solve(root):\r\n    m = 0\r\n    def recur(root, d):\r\n        nonlocal m\r\n        if not root:\r\n            return\r\n        m = max(m, d)\r\n        recur(root.left, d + 1)\r\n        recur(root.right, d + 1)\r\n    recur(root, 1)\r\n    return(m)','2020-02-02',1,'',168,'','','','',1,'2020-02-03 04:03:09.193312'),(414,'def solve(n):\r\n    def solve2(n, memo):\r\n        if n <= 2:\r\n            return 1\r\n        if n in memo:\r\n            return memo[n]\r\n        memo[n] = solve2(n - 1, memo) + solve2(n - 2, memo)\r\n        return memo[n]\r\n    return solve2(n, {})','2020-02-03',1,'',50,'','','','',1,'2020-02-04 04:37:21.023645'),(415,'class Tree:\r\n    def __init__(self, val):\r\n        self.val = val\r\n        self.left = None\r\n        self.right = None\r\ndef solve(root):\r\n    v = float(\'-inf\')\r\n    flag = [True]\r\n    def bst(root):\r\n        nonlocal v, flag\r\n        if not root:\r\n            return\r\n        bst(root.left)\r\n        print(v, root.val, flag)\r\n        if root.val < v:\r\n            flag[0] = False\r\n            return         \r\n        v = root.val\r\n        bst(root.right)\r\n    bst(root)\r\n    return flag[0]','2020-02-03',1,'',171,'','','','',1,'2020-02-04 05:45:04.514148');
/*!40000 ALTER TABLE `list_answer` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `list_badge`
--

DROP TABLE IF EXISTS `list_badge`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `list_badge` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `name` varchar(20) NOT NULL,
  `value` int(11) NOT NULL,
  `html` longtext NOT NULL,
  `type_id` int(11) DEFAULT NULL,
  `desc` longtext NOT NULL,
  `order` int(10) unsigned NOT NULL,
  `gray_html` longtext NOT NULL,
  PRIMARY KEY (`id`),
  KEY `list_badge_type_id_c89e3f30_fk_list_badgetype_id` (`type_id`),
  KEY `list_badge_order_f652bdb7` (`order`),
  CONSTRAINT `list_badge_type_id_c89e3f30_fk_list_badgetype_id` FOREIGN KEY (`type_id`) REFERENCES `list_badgetype` (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=69 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `list_badge`
--

LOCK TABLES `list_badge` WRITE;
/*!40000 ALTER TABLE `list_badge` DISABLE KEYS */;
INSERT INTO `list_badge` VALUES (1,'2 Day Streak',2,'<img src=\"/static/list/badge/DayStreak2.png\" />',1,'Solve quizzes for 2 consecutive days.',48,'<img style=\"filter:grayscale(100%) opacity(30%);\" src=\"/static/list/badge/DayStreak2.png\" />'),(2,'4 Day Streak',4,'<img src=\"/static/list/badge/DayStreak4.png\" />',1,'Solve quizzes for 4 consecutive days.',50,'<img style=\"filter:grayscale(100%) opacity(30%);\" src=\"/static/list/badge/DayStreak4.png\" />'),(3,'7 Day Streak',7,'<img src=\"/static/list/badge/DayStreak7.png\" />',1,'Solve quizzes for 7 consecutive days.',53,'<img style=\"filter:grayscale(100%) opacity(30%);\" src=\"/static/list/badge/DayStreak7.png\" />'),(9,'10 Day Streak',10,'<img src=\"/static/list/badge/DayStreak10.png\" />',1,'Solve quizzes for 10 consecutive days.',56,'<img style=\"filter:grayscale(100%) opacity(30%);\" src=\"/static/list/badge/DayStreak10.png\" />'),(10,'2 Quiz Per Day',2,'<img src=\"/static/list/badge/QuizPerDay2.png?1\" />',3,'Solve 2 Quizzes in a day.',34,'<img style=\"filter:grayscale(100%) opacity(30%);\" src=\"/static/list/badge/QuizPerDay2.png?1\" />'),(11,'3 Quiz Per Day',3,'<img src=\"/static/list/badge/QuizPerDay3.png\" />',3,'Solve 3 Quizzes in a day.',35,'<img style=\"filter:grayscale(100%) opacity(30%);\" src=\"/static/list/badge/QuizPerDay3.png\" />'),(12,'4 Quiz Per Day',4,'<img src=\"/static/list/badge/QuizPerDay4.png\" />',3,'Solve 4 Quizzes in a day.',36,'<img style=\"filter:grayscale(100%) opacity(30%);\" src=\"/static/list/badge/QuizPerDay4.png\" />'),(13,'5 Quiz Per Day',5,'<img src=\"/static/list/badge/QuizPerDay5.png\" />',3,'Solve quizzes for 5 consecutive days.',37,'<img style=\"filter:grayscale(100%) opacity(30%);\" src=\"/static/list/badge/QuizPerDay5.png\" />'),(14,'10 Total Quiz',10,'<img src=\"/static/list/badge/Quiz10.png\" />',2,'Solve 10 Quizzes.',3,'<img style=\"filter:grayscale(100%) opacity(30%);\" src=\"/static/list/badge/Quiz10.png\" />'),(15,'30 Total Quiz',30,'<img src=\"/static/list/badge/Quiz30.png\" />',2,'Solve 30 Quizzes.',6,'<img style=\"filter:grayscale(100%) opacity(30%);\" src=\"/static/list/badge/Quiz30.png\" />'),(16,'200 Total Quiz',200,'<img src=\"/static/list/badge/Quiz200.png\" />',2,'Solve 200 Quizzes.',23,'<img style=\"filter:grayscale(100%) opacity(30%);\" src=\"/static/list/badge/Quiz200.png\" />'),(17,'6 Quiz Per Day',6,'<img src=\"/static/list/badge/QuizPerDay6.png\" />',3,'Solve 6 Quizzes in a day.',38,'<img style=\"filter:grayscale(100%) opacity(30%);\" src=\"/static/list/badge/QuizPerDay6.png\" />'),(18,'7 Quiz Per Day',7,'<img src=\"/static/list/badge/QuizPerDay7.png\" />',3,'Solve 7 Quizzes in a day.',39,'<img style=\"filter:grayscale(100%) opacity(30%);\" src=\"/static/list/badge/QuizPerDay7.png\" />'),(19,'8 Quiz Per Day',8,'<img src=\"/static/list/badge/QuizPerDay8.png\" />',3,'Solve 8 Quizzes in a day.',40,'<img style=\"filter:grayscale(100%) opacity(30%);\" src=\"/static/list/badge/QuizPerDay8.png\" />'),(20,'9 Quiz Per Day',9,'<img src=\"/static/list/badge/QuizPerDay9.png?1\" />',3,'Solve 9 Quizzes in a day.',41,'<img style=\"filter:grayscale(100%) opacity(30%);\" src=\"/static/list/badge/QuizPerDay9.png\" />'),(21,'5 Day Streak',5,'<img src=\"/static/list/badge/DayStreak5.png\" />',1,'You got a new badge to solve a quiz for 5 consecutive days.',51,'<img style=\"filter:grayscale(100%) opacity(30%);\" src=\"/static/list/badge/DayStreak5.png\" />'),(22,'3 Day Streak',3,'<img src=\"/static/list/badge/DayStreak3.png\" />',1,'Solve quizzes for 3 consecutive days.',49,'<img style=\"filter:grayscale(100%) opacity(30%);\" src=\"/static/list/badge/DayStreak3.png\" />'),(23,'1 Total Quiz',1,'<img src=\"/static/list/badge/Quiz1.png\" />',2,'Solve the 1st quiz.',1,'<img style=\"filter:grayscale(100%) opacity(30%);\" src=\"/static/list/badge/Quiz1.png\" />'),(24,'5 Total Quiz',5,'<img src=\"/static/list/badge/Quiz5.png\" />',2,'Solve 5 Quizzes.',2,'<img style=\"filter:grayscale(100%) opacity(30%);\" src=\"/static/list/badge/Quiz5.png\" />'),(25,'20 Total Quiz',20,'<img src=\"/static/list/badge/Quiz20.png\" />',2,'Solve 20 Quizzes.',5,'<img style=\"filter:grayscale(100%) opacity(30%);\" src=\"/static/list/badge/Quiz20.png\" />'),(26,'50 Total Quiz',50,'<img src=\"/static/list/badge/Quiz50.png\" />',2,'Solve 50 Quizzes.',8,'<img style=\"filter:grayscale(100%) opacity(30%);\" src=\"/static/list/badge/Quiz50.png\" />'),(27,'70 Total Quiz',70,'<img src=\"/static/list/badge/Quiz70.png\" />',2,'Solve 70 Quizzes.',10,'<img style=\"filter:grayscale(100%) opacity(30%);\" src=\"/static/list/badge/Quiz70.png\" />'),(28,'100 Total Quiz',100,'<img src=\"/static/list/badge/Quiz100.png\" />',2,'Solve 100 Quizzes.',13,'<img style=\"filter:grayscale(100%) opacity(30%);\" src=\"/static/list/badge/Quiz100.png\" />'),(29,'150 Total Quiz',150,'<img src=\"/static/list/badge/Quiz150.png\" />',2,'Solve 150 Quizzes.',18,'<img style=\"filter:grayscale(100%) opacity(30%);\" src=\"/static/list/badge/Quiz150.png\" />'),(30,'6 Day Streak',6,'<img src=\"/static/list/badge/DayStreak6.png\" />',1,'Solve a quiz for 6 consecutive days.',52,'<img style=\"filter:grayscale(100%) opacity(30%);\" src=\"/static/list/badge/DayStreak6.png\" />'),(31,'8 Day Streak',8,'<img src=\"/static/list/badge/DayStreak8.png\" />',1,'Solve quizzes for 8 consecutive days.',54,'<img style=\"filter:grayscale(100%) opacity(30%);\" src=\"/static/list/badge/DayStreak8.png\" />'),(32,'9 Day Streak',9,'<img src=\"/static/list/badge/DayStreak9.png\" />',1,'Solve quizzes for 9 consecutive days.',55,'<img style=\"filter:grayscale(100%) opacity(30%);\" src=\"/static/list/badge/DayStreak9.png\" />'),(33,'Welcome',0,'<img src=\"/static/list/badge/Welcome.png\" />',4,'Welcome to PyPyKids.',0,'<img style=\"filter:grayscale(100%) opacity(30%);\" src=\"/static/list/badge/Welcome.png\" />'),(35,'15 Total Quiz',15,'<img src=\"/static/list/badge/Quiz15.png\" />',2,'Solve 15 quizzes.',4,'<img style=\"filter:grayscale(100%) opacity(30%);\" src=\"/static/list/badge/Quiz15.png\" />'),(36,'40 Total Quiz',40,'<img src=\"/static/list/badge/Quiz40.png\" />',2,'Solve 40 Quizzes.',7,'<img style=\"filter:grayscale(100%) opacity(30%);\" src=\"/static/list/badge/Quiz40.png\" />'),(37,'60 Total Quiz',60,'<img src=\"/static/list/badge/Quiz60.png\" />',2,'Solve 60 Quizzes.',9,'<img style=\"filter:grayscale(100%) opacity(30%);\" src=\"/static/list/badge/Quiz60.png\" />'),(38,'80 Total Quiz',80,'<img src=\"/static/list/badge/Quiz80.png\" />',2,'Solve 80 Quizzes.',11,'<img style=\"filter:grayscale(100%) opacity(30%);\" src=\"/static/list/badge/Quiz80.png\" />'),(39,'90 Total Quiz',90,'<img src=\"/static/list/badge/Quiz90.png\" />',2,'Solve 90 Quizzes.',12,'<img style=\"filter:grayscale(100%) opacity(30%);\" src=\"/static/list/badge/Quiz90.png\" />'),(40,'110 Total Quiz',110,'<img src=\"/static/list/badge/Quiz110.png\" />',2,'Solve 110 Quizzes.',14,'<img style=\"filter:grayscale(100%) opacity(30%);\" src=\"/static/list/badge/Quiz110.png\" />'),(41,'120 Total Quiz',120,'<img src=\"/static/list/badge/Quiz120.png\" />',2,'Solve 120 Quizzes.',15,'<img style=\"filter:grayscale(100%) opacity(30%);\" src=\"/static/list/badge/Quiz120.png\" />'),(42,'130 Total Quiz',130,'<img src=\"/static/list/badge/Quiz130.png\" />',2,'Solve 130 Quizzes.',16,'<img style=\"filter:grayscale(100%) opacity(30%);\" src=\"/static/list/badge/Quiz130.png\" />'),(43,'140 Total Quiz',140,'<img src=\"/static/list/badge/Quiz140.png\" />',2,'Solve 140 Quizzes.',17,'<img style=\"filter:grayscale(100%) opacity(30%);\" src=\"/static/list/badge/Quiz140.png\" />'),(44,'160 Total Quiz',160,'<img src=\"/static/list/badge/Quiz160.png\" />',2,'Solve 160 Quizzes.',19,'<img style=\"filter:grayscale(100%) opacity(30%);\" src=\"/static/list/badge/Quiz160.png\" />'),(45,'170 Total Quiz',170,'<img src=\"/static/list/badge/Quiz170.png\" />',2,'Solve 170 Quizzes.',20,'<img style=\"filter:grayscale(100%) opacity(30%);\" src=\"/static/list/badge/Quiz170.png\" />'),(46,'180 Total Quiz',180,'<img src=\"/static/list/badge/Quiz180.png\" />',2,'Solve 180 Quizzes.',21,'<img style=\"filter:grayscale(100%) opacity(30%);\" src=\"/static/list/badge/Quiz180.png\" />'),(47,'190 Total Quiz',190,'<img src=\"/static/list/badge/Quiz190.png\" />',2,'Solve 190 Quizzes.',22,'<img style=\"filter:grayscale(100%) opacity(30%);\" src=\"/static/list/badge/Quiz190.png\" />'),(48,'210 Total Quiz',210,'<img src=\"/static/list/badge/Quiz210.png\" />',2,'Solve 210 Quizzes.',24,'<img style=\"filter:grayscale(100%) opacity(30%);\" src=\"/static/list/badge/Quiz210.png\" />'),(49,'220 Total Quiz',220,'<img src=\"/static/list/badge/Quiz220.png\" />',2,'Solve 220 Quizzes.',25,'<img style=\"filter:grayscale(100%) opacity(30%);\" src=\"/static/list/badge/Quiz220.png\" />'),(50,'230 Total Quiz',230,'<img src=\"/static/list/badge/Quiz230.png\" />',2,'Solve 230 Quizzes.',26,'<img style=\"filter:grayscale(100%) opacity(30%);\" src=\"/static/list/badge/Quiz230.png\" />'),(51,'240 Total Quiz',240,'<img src=\"/static/list/badge/Quiz240.png\" />',2,'Solve 240 Quizzes.',27,'<img style=\"filter:grayscale(100%) opacity(30%);\" src=\"/static/list/badge/Quiz240.png\" />'),(52,'250 Total Quiz',250,'<img src=\"/static/list/badge/Quiz250.png\" />',2,'Solve 250 Quizzes.',28,'<img style=\"filter:grayscale(100%) opacity(30%);\" src=\"/static/list/badge/Quiz250.png\" />'),(53,'260 Total Quiz',260,'<img src=\"/static/list/badge/Quiz260.png\" />',2,'Solve 260 Quizzes.',29,'<img style=\"filter:grayscale(100%) opacity(30%);\" src=\"/static/list/badge/Quiz260.png\" />'),(54,'270 Total Quiz',270,'<img src=\"/static/list/badge/Quiz270.png\" />',2,'Solve 270 Quizzes.',30,'<img style=\"filter:grayscale(100%) opacity(30%);\" src=\"/static/list/badge/Quiz270.png\" />'),(55,'280 Total Quiz',280,'<img src=\"/static/list/badge/Quiz280.png\" />',2,'Solve 280 Quizzes.',31,'<img style=\"filter:grayscale(100%) opacity(30%);\" src=\"/static/list/badge/Quiz280.png\" />'),(56,'290 Total Quiz',290,'<img src=\"/static/list/badge/Quiz290.png\" />',2,'Solve 290 Quizzes.',32,'<img style=\"filter:grayscale(100%) opacity(30%);\" src=\"/static/list/badge/Quiz290.png\" />'),(57,'300 Total Quiz',300,'<img src=\"/static/list/badge/Quiz300.png\" />',2,'Solve 300 Quizzes.',33,'<img style=\"filter:grayscale(100%) opacity(30%);\" src=\"/static/list/badge/Quiz300.png\" />'),(58,'11 Day Streak',11,'<img src=\"/static/list/badge/DayStreak11.png?1\" />',1,'Solve quizzes for 11 consecutive days.',57,'<img style=\"filter:grayscale(100%) opacity(30%);\" src=\"/static/list/badge/DayStreak11.png?1\" />'),(59,'12 Day Streak',12,'<img src=\"/static/list/badge/DayStreak12.png?1\" />',1,'Solve quizzes for 12 consecutive days.',58,'<img style=\"filter:grayscale(100%) opacity(30%);\" src=\"/static/list/badge/DayStreak12.png?1\" />'),(60,'13 Day Streak',13,'<img src=\"/static/list/badge/DayStreak13.png?1\" />',1,'Solve quizzes for 13 consecutive days.',59,'<img style=\"filter:grayscale(100%) opacity(30%);\" src=\"/static/list/badge/DayStreak13.png?1\" />'),(61,'14 Day Streak',14,'<img src=\"/static/list/badge/DayStreak14.png?1\" />',1,'Solve quizzes for 14 consecutive days.',60,'<img style=\"filter:grayscale(100%) opacity(30%);\" src=\"/static/list/badge/DayStreak14.png?1\" />'),(62,'15 Day Streak',15,'<img src=\"/static/list/badge/DayStreak15.png\" />',1,'Solve quizzes for 15 consecutive days.',61,'<img style=\"filter:grayscale(100%) opacity(30%);\" src=\"/static/list/badge/DayStreak15.png?1\" />'),(63,'10 Quiz Per Day',10,'<img src=\"/static/list/badge/QuizPerDay10.png?1\" />',3,'Solve 10 Quizzes in a day.',42,'<img style=\"filter:grayscale(100%) opacity(30%);\" src=\"/static/list/badge/QuizPerDay10.png?1\" />'),(64,'11 Quiz Per Day',11,'<img src=\"/static/list/badge/QuizPerDay11.png\" />',3,'Solve 11 Quizzes in a day.',43,'<img style=\"filter:grayscale(100%) opacity(30%);\" src=\"/static/list/badge/QuizPerDay11.png\" />'),(65,'12 Quiz Per Day',12,'<img src=\"/static/list/badge/QuizPerDay12.png\" />',3,'Solve 12 Quizzes in a day.',44,'<img style=\"filter:grayscale(100%) opacity(30%);\" src=\"/static/list/badge/QuizPerDay12.png\" />'),(66,'13 Quiz Per Day',13,'<img src=\"/static/list/badge/QuizPerDay13.png\" />',3,'Solve 13 Quizzes in a day.',45,'<img style=\"filter:grayscale(100%) opacity(30%);\" src=\"/static/list/badge/QuizPerDay13.png\" />'),(67,'14 Quiz Per Day',14,'<img src=\"/static/list/badge/QuizPerDay14.png\" />',3,'Solve 14 Quizzes in a day.',46,'<img style=\"filter:grayscale(100%) opacity(30%);\" src=\"/static/list/badge/QuizPerDay14.png\" />'),(68,'15 Quiz Per Day',15,'<img src=\"/static/list/badge/QuizPerDay15.png\" />',3,'Solve 15 Quizzes in a day.',47,'<img style=\"filter:grayscale(100%) opacity(30%);\" src=\"/static/list/badge/QuizPerDay15.png\" />');
/*!40000 ALTER TABLE `list_badge` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `list_badgetype`
--

DROP TABLE IF EXISTS `list_badgetype`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `list_badgetype` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `name` varchar(30) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=5 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `list_badgetype`
--

LOCK TABLES `list_badgetype` WRITE;
/*!40000 ALTER TABLE `list_badgetype` DISABLE KEYS */;
INSERT INTO `list_badgetype` VALUES (1,'DayStreak'),(2,'TotalQuiz'),(3,'QuizPerDay'),(4,'Welcome');
/*!40000 ALTER TABLE `list_badgetype` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `list_category`
--

DROP TABLE IF EXISTS `list_category`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `list_category` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `name` varchar(20) NOT NULL,
  `order` int(10) unsigned NOT NULL,
  `difficulty_id` int(11) DEFAULT NULL,
  `desc` longtext NOT NULL,
  `image` varchar(200) NOT NULL,
  `visible` tinyint(1) NOT NULL,
  PRIMARY KEY (`id`),
  KEY `list_category_difficulty_id_e0389f47_fk_list_difficulty_id` (`difficulty_id`),
  KEY `list_category_order_15d46345` (`order`),
  CONSTRAINT `list_category_difficulty_id_e0389f47_fk_list_difficulty_id` FOREIGN KEY (`difficulty_id`) REFERENCES `list_difficulty` (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=38 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `list_category`
--

LOCK TABLES `list_category` WRITE;
/*!40000 ALTER TABLE `list_category` DISABLE KEYS */;
INSERT INTO `list_category` VALUES (1,'For',16,1,'Iterating over a sequence','',1),(2,'Advanced Dictionary',36,3,'A collection which is unordered, changeable and indexed.','',1),(3,'String',22,2,'A string is surrounded by either single quotation marks or double quotation marks.','',1),(4,'List',21,2,'A collection which is ordered and changeable','',1),(5,'While',17,1,'Running the loop as long as a condition is true.','',1),(6,'Advanced Set',35,3,'A collection which is unordered and unindexed','',1),(7,'Function',18,2,'A block of code which only runs when it is called.','',1),(8,'Math',37,3,'Mathematics','',1),(9,'Stack',39,4,'Last In First Out','',1),(10,'Range',14,1,'Make a sequence of numbers.','',1),(11,'Class',28,2,'A means of bundling data and functionality together.','',1),(12,'Data Type',10,1,'Boolean, Integer, String, List, Tuple, Set, and Dictionary','',1),(13,'Operator',13,1,'Arithmetic, Relational, Assignment, Logical Operators','',1),(14,'Variable',11,1,'A container for storing data values.','',1),(15,'Print',12,1,'Print the specified message to the screen.','',1),(16,'If',15,1,'Supports the usual logical conditions from mathematics.','',1),(17,'Scope',19,2,'Variables can only reach the area in which they are defined.','',0),(18,'Integer',20,2,'Integer Method','',0),(19,'Advanced List',33,3,'A collection which is ordered and changeable','',1),(20,'Advanced Integer',31,3,'Number data types store numeric values.','',0),(21,'Advanced String',32,3,'A string is surrounded by either single quotation marks or double quotation marks.','',1),(22,'Tuple',23,2,'A collection which is ordered and unchangeable.','',0),(23,'Set',24,2,'A collection which has unique values.','',1),(24,'Dictionary',25,2,'A collection which has key/value pair.','',1),(25,'Module',27,2,'Consider a module to be the same as a code library.','',0),(26,'Casting',26,2,'Specify a type on to a variable.','',0),(27,'OOP',29,2,'Object-oriented programming','',0),(28,'Advanced Tuple',34,3,'A collection which is ordered and unchangeable.','',0),(29,'Advanced For',30,3,'Used for iterating over a sequence.','',1),(30,'Queue',40,4,'The order is First In First Out (FIFO).','',0),(31,'Linked List',41,4,'A sequence of data structures, which are connected together via links.','',1),(32,'Advanced Math',43,5,'Math! Math! Math!','',0),(33,'Tree',42,4,'A tree that has at most 2 children.','',1),(34,'Greedy',44,5,'A simple, intuitive algorithm','',1),(35,'Dynamic Programming',45,5,'The solution of sub-problems can be reused to solve an entire problem.','',1),(36,'Keep',46,5,'','',0),(37,'Recursion',38,4,'A function calls itself.','',1);
/*!40000 ALTER TABLE `list_category` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `list_customuser`
--

DROP TABLE IF EXISTS `list_customuser`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `list_customuser` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `name` varchar(30) NOT NULL,
  `point` int(11) NOT NULL,
  PRIMARY KEY (`id`),
  KEY `list_customuser_name_ea567b7b` (`name`)
) ENGINE=InnoDB AUTO_INCREMENT=18 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `list_customuser`
--

LOCK TABLES `list_customuser` WRITE;
/*!40000 ALTER TABLE `list_customuser` DISABLE KEYS */;
INSERT INTO `list_customuser` VALUES (1,'dayeon',86),(2,'youngwan',20),(6,'guests',11),(7,'PyPyKids',10),(8,'admin',17),(9,'guest',11),(10,'administrator',10),(11,'tiny657',44),(12,'OhNoItsIsaac',10),(13,'luke',10),(14,'TheRealMuffinMan',11),(15,'JustMeAgain',17),(16,'Koalabee',19),(17,'AlPo',12);
/*!40000 ALTER TABLE `list_customuser` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `list_customuser_badges`
--

DROP TABLE IF EXISTS `list_customuser_badges`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `list_customuser_badges` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `customuser_id` int(11) NOT NULL,
  `badge_id` int(11) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `list_user_badges_user_id_badge_id_cb3c9e49_uniq` (`customuser_id`,`badge_id`),
  KEY `list_user_badges_badge_id_f5f125a3_fk_list_badge_id` (`badge_id`),
  CONSTRAINT `list_customuser_badg_customuser_id_f7242cc3_fk_list_cust` FOREIGN KEY (`customuser_id`) REFERENCES `list_customuser` (`id`),
  CONSTRAINT `list_user_badges_badge_id_f5f125a3_fk_list_badge_id` FOREIGN KEY (`badge_id`) REFERENCES `list_badge` (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=116 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `list_customuser_badges`
--

LOCK TABLES `list_customuser_badges` WRITE;
/*!40000 ALTER TABLE `list_customuser_badges` DISABLE KEYS */;
INSERT INTO `list_customuser_badges` VALUES (1,1,1),(2,1,2),(3,1,3),(104,1,9),(4,1,10),(5,1,11),(6,1,12),(7,1,13),(8,1,14),(9,1,15),(17,1,17),(18,1,18),(68,1,19),(71,1,20),(10,1,21),(11,1,22),(12,1,23),(13,1,24),(14,1,25),(15,1,26),(26,1,27),(98,1,28),(112,1,29),(97,1,30),(100,1,31),(103,1,32),(20,1,33),(27,1,35),(28,1,36),(29,1,37),(67,1,38),(80,1,39),(99,1,40),(101,1,41),(107,1,42),(109,1,43),(115,1,44),(45,2,10),(46,2,11),(47,2,12),(48,2,13),(50,2,17),(44,2,23),(49,2,24),(19,2,33),(53,6,10),(52,6,23),(30,6,33),(60,7,10),(61,7,11),(62,7,12),(65,7,13),(59,7,23),(66,7,24),(31,7,33),(42,8,1),(34,8,10),(35,8,11),(36,8,12),(37,8,13),(43,8,14),(39,8,17),(40,8,18),(41,8,19),(51,8,22),(33,8,23),(38,8,24),(32,8,33),(54,8,35),(55,9,33),(57,10,23),(56,10,33),(82,11,1),(70,11,10),(72,11,11),(76,11,12),(77,11,13),(78,11,14),(113,11,15),(79,11,17),(110,11,22),(69,11,23),(74,11,24),(105,11,25),(58,11,33),(81,11,35),(73,12,33),(75,13,33),(83,14,33),(106,15,1),(86,15,10),(87,15,11),(88,15,12),(89,15,13),(95,15,14),(111,15,15),(91,15,17),(92,15,18),(93,15,19),(94,15,20),(85,15,23),(90,15,24),(108,15,25),(84,15,33),(96,15,35),(102,16,33),(114,17,33);
/*!40000 ALTER TABLE `list_customuser_badges` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `list_difficulty`
--

DROP TABLE IF EXISTS `list_difficulty`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `list_difficulty` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `name` varchar(20) NOT NULL,
  `desc` longtext NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=6 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `list_difficulty`
--

LOCK TABLES `list_difficulty` WRITE;
/*!40000 ALTER TABLE `list_difficulty` DISABLE KEYS */;
INSERT INTO `list_difficulty` VALUES (1,'Super Junior','Let\'s jump into the python.'),(2,'Junior','Let\'s finish the basic concepts.'),(3,'Junior High','Let\'s learn more.'),(4,'High','Let\'s learn about Data Structure.'),(5,'Expert','Let\'s learn about Algorithms.');
/*!40000 ALTER TABLE `list_difficulty` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `list_pointtype`
--

DROP TABLE IF EXISTS `list_pointtype`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `list_pointtype` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `name` varchar(20) NOT NULL,
  `point` int(11) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `list_pointtype`
--

LOCK TABLES `list_pointtype` WRITE;
/*!40000 ALTER TABLE `list_pointtype` DISABLE KEYS */;
INSERT INTO `list_pointtype` VALUES (1,'DailyCheckIn',1);
/*!40000 ALTER TABLE `list_pointtype` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `list_quiz`
--

DROP TABLE IF EXISTS `list_quiz`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `list_quiz` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `explanation` longtext NOT NULL,
  `question` longtext NOT NULL,
  `example` longtext NOT NULL,
  `date` datetime(6) NOT NULL,
  `hint` longtext NOT NULL,
  `visible` tinyint(1) NOT NULL,
  `category_id` int(11) NOT NULL,
  `quiz_type_id` int(11) NOT NULL,
  `answer_header` longtext NOT NULL,
  `option1` longtext NOT NULL,
  `option2` longtext NOT NULL,
  `option3` longtext NOT NULL,
  `option4` longtext NOT NULL,
  `video` varchar(100) NOT NULL,
  `order` int(10) unsigned NOT NULL,
  `title` varchar(100) NOT NULL,
  `score` int(11) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `list_quiz_title_75eb243e_uniq` (`title`),
  KEY `list_quiz_category_id_2098a11a_fk_list_category_id` (`category_id`),
  KEY `list_quiz_quiz_type_id_5a2ad422_fk_list_quiztype_id` (`quiz_type_id`),
  KEY `list_quiz_order_3e55cbcb` (`order`),
  CONSTRAINT `list_quiz_category_id_2098a11a_fk_list_category_id` FOREIGN KEY (`category_id`) REFERENCES `list_category` (`id`),
  CONSTRAINT `list_quiz_quiz_type_id_5a2ad422_fk_list_quiztype_id` FOREIGN KEY (`quiz_type_id`) REFERENCES `list_quiztype` (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=179 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `list_quiz`
--

LOCK TABLES `list_quiz` WRITE;
/*!40000 ALTER TABLE `list_quiz` DISABLE KEYS */;
INSERT INTO `list_quiz` VALUES (1,'<p>You can make a sum function by using <strong>for</strong>.</p>','<p>Which value will be printed?</p>','<p>#code</p>\r\n\r\n<p>nums = [1, 2, 3, 4]</p>\r\n\r\n<p>s = 0</p>\r\n\r\n<p>for num in nums:</p>\r\n\r\n<p>&nbsp; &nbsp; s += num</p>\r\n\r\n<p>print(s)</p>\r\n\r\n<p>#end</p>','2019-07-17 09:33:42.000000','',1,1,2,'','','','','','',25,'Sum by using For',1),(2,'<p>The <strong>len() </strong>function will return the length of the dictionary.</p>\r\n\r\n<p>#code</p>\r\n\r\n<p>dict = {</p>\r\n\r\n<p>&nbsp; &nbsp; &quot;brand&quot;: &quot;PyPyKids&quot;,</p>\r\n\r\n<p>&nbsp; &nbsp; &quot;language&quot;: &quot;Python&quot;,</p>\r\n\r\n<p>&nbsp; &nbsp; &quot;target&quot;: &quot;Kids&quot;</p>\r\n\r\n<p>}</p>\r\n\r\n<p>print(len(dict))</p>\r\n\r\n<p>#end</p>\r\n\r\n<p>#run-1</p>\r\n\r\n<p>3</p>\r\n\r\n<p>#end</p>','<p>Write a function to return the length of the dictionary.</p>','<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p>Input:&nbsp;{&quot;brand&quot;: &quot;PyPyKids&quot;,&nbsp;&quot;language&quot;: &quot;Python&quot;,&nbsp;&quot;target&quot;: &quot;Kids&quot;}</p>\r\n\r\n			<p>Output: 3</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>','2019-07-17 09:48:43.000000','',1,24,1,'def solve(dict):','','','','','',81,'Dictionary length',0),(3,'<p>You can use &quot;+&quot; operator to merge&nbsp;strings.</p>\r\n\r\n<p>#code</p>\r\n\r\n<p>str1 = &quot;Hello&quot;</p>\r\n\r\n<p>str2 = &quot;World&quot;</p>\r\n\r\n<p>print(str1 + str2)</p>\r\n\r\n<p>#end</p>\r\n\r\n<p>#run-1</p>\r\n\r\n<p>&#39;HelloWorld&#39;</p>\r\n\r\n<p>#end</p>','<p>What will be printed?</p>','<p>#code</p>\r\n\r\n<p>strs = [&quot;1&quot;, &quot;2&quot;, &quot;3&quot;]</p>\r\n\r\n<p>s = &quot;&quot;</p>\r\n\r\n<p>for str in strs:</p>\r\n\r\n<p>&nbsp; &nbsp; s += str</p>\r\n\r\n<p>print(s)</p>\r\n\r\n<p>#end</p>','2019-07-18 09:45:08.000000','',1,3,2,'','','','','','',39,'Merge strings',2),(4,'<p>You can compare the index and the value.</p>','<p>What will be printed?</p>','<p>#code</p>\r\n\r\n<p>def find(strs):</p>\r\n\r\n<p>&nbsp; &nbsp; for i in range(len(strs)):</p>\r\n\r\n<p>&nbsp; &nbsp; &nbsp; &nbsp; if strs[i] == i:</p>\r\n\r\n<p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return i</p>\r\n\r\n<p>&nbsp; &nbsp; return -1</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>ans = find([10, 20, 30, 40, 50, 5])</p>\r\n\r\n<p>print(ans)</p>\r\n\r\n<p>#end</p>','2019-07-18 09:46:58.000000','',1,4,2,'','','','','','',57,'Find the same value as the index',0),(5,'<p>You can write an add function by using <strong>While</strong>.</p>','<p>Which value will be printed?</p>','<p>#code</p>\r\n\r\n<p>sum, i = 0, 0</p>\r\n\r\n<p>num = 5</p>\r\n\r\n<p>while i &lt; num:</p>\r\n\r\n<p>&nbsp; &nbsp; i += 1</p>\r\n\r\n<p>&nbsp; &nbsp; sum += i</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>print(sum)</p>\r\n\r\n<p>#end</p>','2019-07-18 09:47:46.000000','',1,5,2,'','','','','','',31,'Add function',0),(6,'<p>Insert the value at any place.</p>\r\n\r\n<p>The syntax&nbsp;of insert() is:</p>\r\n\r\n<p>#code</p>\r\n\r\n<p>list = [...]</p>\r\n\r\n<p>list.insert(<span style=\"color:#e74c3c\"><strong>index</strong></span>, <span style=\"color:#e74c3c\"><strong>value</strong></span>)</p>\r\n\r\n<p>#end</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>insert() has two parameters:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><span style=\"color:#e74c3c\"><strong>index</strong></span> - the position where an value will be inserted.</p>\r\n\r\n			<p><span style=\"color:#e74c3c\"><strong>value</strong></span> - the value will be inserted in the list.</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>#code</p>\r\n\r\n<p>nums = [1, 2, 3]</p>\r\n\r\n<p>nums.insert(1, 4)</p>\r\n\r\n<p>print(nums)</p>\r\n\r\n<p>#end</p>\r\n\r\n<p>#run-1</p>\r\n\r\n<p>[1, 4, 2, 3]</p>\r\n\r\n<p><span style=\"color:#27ae60\"><strong>Explanation</strong></span>:</p>\r\n\r\n<p>4 is added at the first index.</p>\r\n\r\n<p>#end</p>','<p>What will be printed?</p>','<p>Example 1:</p>\r\n\r\n<p>#code</p>\r\n\r\n<p>def get_fruit():</p>\r\n\r\n<p>&nbsp; &nbsp; fruits = [&quot;apple&quot;, &quot;banana&quot;, &quot;cherry&quot;]</p>\r\n\r\n<p>&nbsp; &nbsp; fruits.insert(1, &quot;orange&quot;)</p>\r\n\r\n<p>&nbsp; &nbsp; return fruits[2]</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>print(get_fruit())</p>\r\n\r\n<p>#end</p>','2019-07-18 09:48:28.000000','',1,4,2,'','','','','','',50,'Insert into List',0),(7,'<h3>Exist</h3>\r\n\r\n<p>Check whether it exists or not.</p>\r\n\r\n<p>#code</p>\r\n\r\n<p>nums = {1, 2, 3}</p>\r\n\r\n<p>print(2 in nums)</p>\r\n\r\n<p>print(4 in nums)</p>\r\n\r\n<p>#end</p>\r\n\r\n<p>#run-1</p>\r\n\r\n<p>True</p>\r\n\r\n<p>False</p>\r\n\r\n<p>#end</p>','<p>What will be printed?</p>','<p>#code</p>\r\n\r\n<p>def has_banana(fruits):</p>\r\n\r\n<p>&nbsp; &nbsp; return &quot;banana&quot; in fruits</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>fruits = {&quot;apple&quot;, &quot;banana&quot;, &quot;cherry&quot;}</p>\r\n\r\n<p>print(has_banana(fruits))</p>\r\n\r\n<p>#end</p>','2019-07-18 09:49:13.000000','',1,23,2,'','','','','','',71,'Set exist',0),(8,'','<p>What will be printed?</p>','<p>#code</p>\r\n\r\n<p>def calculate(a, b, c):</p>\r\n\r\n<p>&nbsp; &nbsp; return a + multiply(b, c)</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>def multiply(a, b):</p>\r\n\r\n<p>&nbsp; &nbsp; return a * b</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>ans = calculate(2, 3, 4)</p>\r\n\r\n<p>print(ans)</p>\r\n\r\n<p>#end</p>','2019-07-18 09:49:58.000000','',1,7,2,'','','','','','',35,'Use other function',1),(9,'<h3><strong>Operator precedence</strong></h3>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>Precedence</td>\r\n			<td>Operator</td>\r\n		</tr>\r\n		<tr>\r\n			<td>1</td>\r\n			<td>Multiplication, division, modulus (<strong>*</strong>,&nbsp;<strong>/, </strong>%)</td>\r\n		</tr>\r\n		<tr>\r\n			<td>2</td>\r\n			<td>Addition and subtraction (<strong>+</strong>,&nbsp;<strong>-</strong>)</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>#code</p>\r\n\r\n<p>print(1 + 2 * 3)</p>\r\n\r\n<p>#end</p>\r\n\r\n<p>#run-1</p>\r\n\r\n<p>7</p>\r\n\r\n<p><span style=\"color:#27ae60\"><strong>Explanation:</strong></span></p>\r\n\r\n<p>7 = 1 + (2 * 3)</p>\r\n\r\n<p>Multiplicatoin(*) is high priority than Addition(+)</p>\r\n\r\n<p>#end</p>','<p>What will be printed?</p>','<p>#code</p>\r\n\r\n<p>def calculate(a, b, c):</p>\r\n\r\n<p>&nbsp; &nbsp; return a + b * c;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>print(calculate(2,3,4))</p>\r\n\r\n<p>#end</p>','2019-07-18 09:51:12.000000','',1,8,2,'','','','','','',126,'Operator precedence',0),(10,'','<p>Write a code to multiply two numbers.</p>','<p>Example 1:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>: 2, 3</p>\r\n\r\n			<p><strong>Output</strong>: 6</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>&nbsp;</p>','2019-07-18 09:52:25.000000','',1,8,1,'def solve(num1, num2):','','','','','',127,'Multiply two numbers',1),(11,'<h3>Variable</h3>\r\n\r\n<p>#code</p>\r\n\r\n<p>num = 0</p>\r\n\r\n<p>#end</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<h3>Multiple Assignment</h3>\r\n\r\n<p>#code</p>\r\n\r\n<p>num1, num2 = 1, 2</p>\r\n\r\n<p>#end</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<h3>Swap variables</h3>\r\n\r\n<p>#code</p>\r\n\r\n<p>num1, num2 = num2, num1</p>\r\n\r\n<p>#end</p>','<p>Swap the first element and the last element.</p>','<p>Example 1:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>: [1, 2, 3, 4, 5]</p>\r\n\r\n			<p><strong>Output</strong>: [5, 2, 3, 4, 1]</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>&nbsp;</p>','2019-07-18 09:53:07.000000','',1,4,1,'def solve(nums):','','','','','',55,'Swap 1st element',1),(12,'','<p>Swap the second element and the last to the second element.</p>','<p>Example 1:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>:&nbsp;[1, 2, 3, 4, 5]</p>\r\n\r\n			<p><strong>Output</strong>: [1, 4, 3, 2, 5]</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>','2019-07-19 02:03:35.000000','',1,4,1,'def solve(nums):','','','','','',56,'Swap 2nd element',0),(13,'<h1>Swap</h1>\r\n\r\n<p>Swap two elements in a list</p>\r\n\r\n<p>#code</p>\r\n\r\n<p>nums = [1, 2, 3, 4, 5, 6]</p>\r\n\r\n<p>nums[0], nums[-1] = nums[-1], nums[0]</p>\r\n\r\n<p>print(nums)</p>\r\n\r\n<p>nums[1], nums[-2] = nums[-2], nums[1]</p>\r\n\r\n<p>print(nums)</p>\r\n\r\n<p>#end</p>\r\n\r\n<p>#run-1</p>\r\n\r\n<p>[6, 2, 3, 4, 5, 1]</p>\r\n\r\n<p>[6, 5, 3, 4, 2, 1]</p>\r\n\r\n<p>#end</p>','<p>Reverse a list by swapping elements.</p>','<p>Example 1:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>: [1, 2, 3, 4, 5]</p>\r\n\r\n			<p><strong>Output</strong>: [5, 4, 3, 2, 1]</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>&nbsp;</p>','2019-07-19 02:20:21.000000','',1,19,1,'def solve(nums):','','','','','',105,'Reverse a list',2),(14,'<h1>Stack</h1>\r\n\r\n<p><strong>Stack </strong>is a collection that can be inserted and deleted only from one side.&nbsp;</p>\r\n\r\n<p>So a stack follows&nbsp;<strong>LIFO</strong> (Last In First Out) principle.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>You can make a <strong>Stack</strong>&nbsp;by a <strong>List</strong>.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<h3>1. Initialize</h3>\r\n\r\n<p>Initialize a list.</p>\r\n\r\n<p>#code</p>\r\n\r\n<p>stack = []</p>\r\n\r\n<p>#end</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<h3>2.&nbsp;Push</h3>\r\n\r\n<p>Add&nbsp;an element to the collection</p>\r\n\r\n<p><img alt=\"\" src=\"/static/quiz/14_reverse_a_list_using_stack_1.png\" style=\"height:391px; width:669px\" /></p>\r\n\r\n<p>#code</p>\r\n\r\n<p>stack.append(value)</p>\r\n\r\n<p>#end</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<h3>3.&nbsp;Pop</h3>\r\n\r\n<p>Remove the most recently added element that was not yet removed</p>\r\n\r\n<p><img alt=\"\" src=\"/static/quiz/14_reverse_a_list_using_stack_2.png\" style=\"height:393px; width:679px\" /></p>\r\n\r\n<p>#code</p>\r\n\r\n<p>stack.pop(value)</p>\r\n\r\n<p>#end</p>','<p>Reverse the list by Stack.</p>','<p>Example 1:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>: nums = [1, 2, 3, 4, 5]</p>\r\n\r\n			<p><strong>Output</strong>: [5, 4, 3, 2, 1]</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>&nbsp;</p>','2019-07-19 18:55:01.000000','',1,9,1,'def solve(nums):','','','','','',149,'Reverse a list using stack',0),(15,'<h3>Range(stop)&nbsp;</h3>\r\n\r\n<p>The <strong>range(stop)</strong> function returns a sequence of numbers, starting from <span style=\"color:#e74c3c\"><strong>0</strong></span> to <span style=\"color:#e74c3c\"><strong>stop - 1</strong></span>, and increments by <span style=\"color:#e74c3c\"><strong>1</strong></span></p>\r\n\r\n<p>#code</p>\r\n\r\n<p>range(10)</p>\r\n\r\n<p>#end</p>\r\n\r\n<p>#run-1</p>\r\n\r\n<p>[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]</p>\r\n\r\n<p>#end</p>\r\n\r\n<p>&nbsp;</p>','<p>What is the meaning of this?</p>','<p>#code</p>\r\n\r\n<p>range(5)</p>\r\n\r\n<p>#end</p>','2019-07-20 18:03:46.000000','',1,10,4,'','[1, 2, 3, 4, 5]','[0, 1, 2, 3, 4, 5]','[0, 1, 2, 3, 4]','[1, 2, 3, 4]','eF9a5Fv3U2s',16,'Range',2),(16,'<h3>Range(start, stop)</h3>\r\n\r\n<p>- The <strong>range(start, stop)</strong> function returns a sequence of numbers, starting from <span style=\"color:#e74c3c\"><strong>start</strong></span>&nbsp;to <span style=\"color:#e74c3c\"><strong>stop - 1</strong></span>, and increments by <span style=\"color:#e74c3c\"><strong>1</strong></span>.</p>\r\n\r\n<p>- The <strong>start</strong>&nbsp;number is <span style=\"color:#3498db\">inclusive</span> but the <strong>stop</strong> number is <span style=\"color:#3498db\">exclusive</span>.</p>\r\n\r\n<p>#code</p>\r\n\r\n<p>range(3, 10)</p>\r\n\r\n<p>#end</p>\r\n\r\n<p>#run-1</p>\r\n\r\n<p>similar to [3, 4, 5, 6, 7, 8, 9]</p>\r\n\r\n<p>#end</p>\r\n\r\n<p>&nbsp;</p>','<p>What is the meaning of this?</p>','<p>#code</p>\r\n\r\n<p>range(3, 5)</p>\r\n\r\n<p>#end</p>','2019-07-20 21:24:32.000000','',1,10,4,'','[1, 2, 3]','[3, 4, 5]','[3, 4]','[1, 2, 3, 4, 5]','',17,'Range with start',1),(17,'<h3>Range(start, stop, step)</h3>\r\n\r\n<p>- The <strong>range(start, stop, step)</strong> function returns a sequence of numbers, starting from <span style=\"color:#e74c3c\"><strong>start</strong></span>&nbsp;to <span style=\"color:#e74c3c\"><strong>stop - 1</strong></span>, and increments by <span style=\"color:#e74c3c\"><strong>step</strong></span>.</p>\r\n\r\n<p>#code</p>\r\n\r\n<p>range(3, 10, 2)</p>\r\n\r\n<p>#end</p>\r\n\r\n<p>#run-1</p>\r\n\r\n<p>similar to [3, 5, 7, 9]</p>\r\n\r\n<p>#end</p>\r\n\r\n<p>&nbsp;</p>','<p>What is the meaning of this?</p>','<p>#code</p>\r\n\r\n<p>range(3, 10, 3)</p>\r\n\r\n<p>#end</p>','2019-07-20 21:27:36.000000','',1,10,4,'','[3, 5, 7, 9]','[3, 6, 9]','[3, 6, 9, 10]','[0, 3, 6, 9]','',18,'Range with step',1),(19,'<h1>While</h1>\r\n\r\n<p><span style=\"color:#e74c3c\"><strong>While</strong></span>&nbsp;is the one of the loops&nbsp;which is running until a condition is True.</p>\r\n\r\n<p>#code</p>\r\n\r\n<p>i = 0</p>\r\n\r\n<p>while i &lt; 3:</p>\r\n\r\n<p>&nbsp; &nbsp; print(i)</p>\r\n\r\n<p>&nbsp; &nbsp; i += 1</p>\r\n\r\n<p>#end</p>\r\n\r\n<p>#run-1</p>\r\n\r\n<p>0</p>\r\n\r\n<p>1</p>\r\n\r\n<p>2</p>\r\n\r\n<p>#end</p>','<p>What value will be printed?</p>','<p>#code</p>\r\n\r\n<p>i = 0</p>\r\n\r\n<p>sum = 0</p>\r\n\r\n<p>while i &lt; 5:</p>\r\n\r\n<p>&nbsp; &nbsp; sum += i</p>\r\n\r\n<p>&nbsp; &nbsp; i += 1</p>\r\n\r\n<p>print(sum)</p>\r\n\r\n<p>#end</p>','2019-07-21 07:00:58.000000','',1,5,2,'','','','','','',30,'Sum by using While',0),(20,'<p><strong>Continue</strong> can skip the rest of the code inside a loop.</p>\r\n\r\n<p>#code</p>\r\n\r\n<p>i = 0</p>\r\n\r\n<p>while i &lt; 5:</p>\r\n\r\n<p>&nbsp; &nbsp; i += 1</p>\r\n\r\n<p>&nbsp; &nbsp; if i == 3:</p>\r\n\r\n<p>&nbsp; &nbsp; &nbsp; &nbsp; continue</p>\r\n\r\n<p>&nbsp; &nbsp; print(i)</p>\r\n\r\n<p>#end</p>\r\n\r\n<p>#run-1</p>\r\n\r\n<p>0</p>\r\n\r\n<p>1</p>\r\n\r\n<p>2</p>\r\n\r\n<p>4</p>\r\n\r\n<p>5</p>\r\n\r\n<p>#end</p>','<p>What will be printed?</p>','<p>#code</p>\r\n\r\n<p>sum, i = 0, 0</p>\r\n\r\n<p>while i &lt; 5:</p>\r\n\r\n<p>&nbsp; &nbsp; i += 1</p>\r\n\r\n<p>&nbsp; &nbsp; if i &lt; 3:</p>\r\n\r\n<p>&nbsp; &nbsp; &nbsp; &nbsp; continue</p>\r\n\r\n<p>&nbsp; &nbsp; sum += i</p>\r\n\r\n<p>print(sum)</p>\r\n\r\n<p>#end</p>\r\n\r\n<p>&nbsp;</p>','2019-07-21 07:09:09.000000','',1,5,2,'','','','','','',29,'Continue',0),(21,'','<p>Given the sorted list, insert the value in the right position.</p>\r\n\r\n<p>It must be sorted in ascending order after insertion.</p>','<p>Example 1:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>:</p>\r\n\r\n			<p>nums = [3, 6, 9, 10]</p>\r\n\r\n			<p>num = 7</p>\r\n\r\n			<p>&nbsp;</p>\r\n\r\n			<p><strong>Output</strong>:</p>\r\n\r\n			<p>[3, 6, 7, 9, 10]</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>','2019-07-21 16:53:52.000000','',1,19,1,'def solve(nums, num):','','','','','',106,'Sorted list',0),(22,'<h1>Math</h1>\r\n\r\n<p>A square root of number y is a number x such that y = x * x</p>','<p>Find a square root x.&nbsp; You can assume a&nbsp;square root value(return value) is always an integer.</p>','<p>Example 1:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>: 16</p>\r\n\r\n			<p><strong>Output</strong>: 4</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>Example 2:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>: 9</p>\r\n\r\n			<p><strong>Output</strong>: 3</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>','2019-07-21 17:42:05.000000','',1,8,1,'def solve(num):','','','','','',128,'Square root',0),(23,'<p>The subarray is an array composed from a contiguous block of the original array.</p>\r\n\r\n<p>For example, the all subarrays of [1, 2, 3] are as follows:</p>\r\n\r\n<p>&nbsp; &nbsp; &bull; [1]</p>\r\n\r\n<p>&nbsp; &nbsp; &bull; [1, 2]</p>\r\n\r\n<p>&nbsp; &nbsp; &bull; [1, 2, 3]</p>\r\n\r\n<p>&nbsp; &nbsp; &bull; [2]</p>\r\n\r\n<p>&nbsp; &nbsp; &bull; [2, 3]</p>\r\n\r\n<p>&nbsp; &nbsp; &bull; [3]</p>','<p>Find the maximum subarray which has the largest sum.</p>\r\n\r\n<p>Subarray should have the first element. Return the sum of the maximum subarray.</p>','<p>Example 1:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>: [1, 2, -3, 2, -1]</p>\r\n\r\n			<p><strong>Output</strong>: 3</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p><span style=\"color:#27ae60\"><strong>Explanation</strong></span>:</p>\r\n\r\n<p>1 + 2 = 3</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>Example 2:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>: [1, 0, 3, -2, 3]</p>\r\n\r\n			<p><strong>Output</strong>: 5</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p><span style=\"color:#27ae60\"><strong>Explanation</strong></span>:</p>\r\n\r\n<p>1 + 0 + 3 + (-2) + 3 = 5</p>','2019-07-23 03:14:28.000000','',1,35,1,'def solve(nums):','','','','','',176,'Maximum Subarray',0),(24,'<h3>Method</h3>\r\n\r\n<p>You can create a method to access the instance variable.</p>\r\n\r\n<p>After calling change_color(), the color instance variable will be changed.</p>\r\n\r\n<p>#code</p>\r\n\r\n<p>class Phone:</p>\r\n\r\n<p>&nbsp; &nbsp; def __init__(self, brand, color):</p>\r\n\r\n<p>&nbsp; &nbsp; &nbsp; &nbsp; self.brand = brand</p>\r\n\r\n<p>&nbsp; &nbsp; &nbsp; &nbsp; self.color = color</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp; &nbsp; def change_color(self, color):</p>\r\n\r\n<p>&nbsp; &nbsp; &nbsp; &nbsp; self.color = color</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>phone1 = Phone(&quot;Apple&quot;, &quot;pink&quot;)</p>\r\n\r\n<p>print(phone1.brand, phone1.color)</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>phone2 = Phone(&quot;Google&quot;, &quot;black&quot;)</p>\r\n\r\n<p>print(phone2.brand, phone2.color)</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>phone1.change_color(&quot;silver&quot;)</p>\r\n\r\n<p>print(phone1.brand, phone1.color)</p>\r\n\r\n<p>#end</p>\r\n\r\n<p>#run-3</p>\r\n\r\n<p>Apple pink</p>\r\n\r\n<p>Google black</p>\r\n\r\n<p>Apple silver</p>\r\n\r\n<p>#end</p>','<p>Complete the method getArea() to calcaulte the area of the rectangle.</p>','','2019-07-23 03:23:36.000000','',1,11,1,'class Rectangle:\r\n    def __init__(self, height, width):\r\n        self.height = height\r\n        self.width = width\r\n\r\n    def getArea(self):\r\n        # Insert the code here.\r\n\r\n\r\nrectangle = Rectangle(10, 20)\r\nprint(rectangle.getArea())','','','','','',87,'Method',1),(25,'','<p>Find the error in the code below.</p>','<p>#code</p>\r\n\r\n<p>class Rectangle:</p>\r\n\r\n<p>&nbsp; &nbsp; def __init__(self, height, width):</p>\r\n\r\n<p>&nbsp; &nbsp; &nbsp; &nbsp; self.height = height</p>\r\n\r\n<p>&nbsp; &nbsp; &nbsp; &nbsp; self.width = width</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>def getArea(self, constant):</p>\r\n\r\n<p>&nbsp; &nbsp; &nbsp; &nbsp; return self.height * self.width * constant</p>\r\n\r\n<p>&nbsp; &nbsp; &nbsp; &nbsp;</p>\r\n\r\n<p>rectangle = Rectangle(10, 20)</p>\r\n\r\n<p>print(rectangle.getArea())</p>\r\n\r\n<p>#end</p>','2019-07-23 03:28:12.000000','',1,11,4,'','def __init__(self, height, width):','return self.height * self.width * constant','rectangle = Rectangle(10, 20)','print(rectangle.getArea())','',88,'Find the error about class',1),(26,'<h1>Data type</h1>\r\n\r\n<h3>&nbsp;</h3>\r\n\r\n<h3>Boolean</h3>\r\n\r\n<p>&bull; Only two constant objects</p>\r\n\r\n<p>#code</p>\r\n\r\n<p>True</p>\r\n\r\n<p>False</p>\r\n\r\n<p>#end</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<h3>Number</h3>\r\n\r\n<h5>&bull; Integer</h5>\r\n\r\n<p>= Whole number + Negative number</p>\r\n\r\n<p>= Positive number + 0 + Negative number</p>\r\n\r\n<p>#code</p>\r\n\r\n<p>-10</p>\r\n\r\n<p>-1</p>\r\n\r\n<p>0</p>\r\n\r\n<p>1</p>\r\n\r\n<p>5</p>\r\n\r\n<p>#end</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<h5>&bull; Decimal</h5>\r\n\r\n<p>#code</p>\r\n\r\n<p>0.1</p>\r\n\r\n<p>1.5</p>\r\n\r\n<p>10.5</p>\r\n\r\n<p>#end</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<h3>String</h3>\r\n\r\n<p>&bull;&nbsp;Surrounded by a single or double quotation mark.</p>\r\n\r\n<p>#code</p>\r\n\r\n<p>&quot;Hello World&quot;</p>\r\n\r\n<p>&#39;Python 34 Kids&#39;</p>\r\n\r\n<p>#end</p>','<p>What is the incorrect data types in Python?</p>','','2019-07-23 06:03:36.000000','',1,12,4,'','3.5','False','\"Hello Python\"','\'Python\' \'34\' \'Kids\'','k2DqsJcNfNM',3,'Basic data type',1),(27,'','<p>Given an integer array of 1 to N except for one number, find the missing integer.</p>','<p>Example 1:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>: [6, 4, 3, 7, 1, 2]</p>\r\n\r\n			<p><strong>Output</strong>: 5</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>','2019-07-26 04:31:21.000000','',1,19,1,'def solve(nums):','','','','','',107,'Missing number',2),(28,'','<p>Write a function to calculate the frequency of the most frequent character.</p>','<p>Example 1:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>: &quot;abccbbd&quot;</p>\r\n\r\n			<p><strong>Output</strong>: 3</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p><strong><span style=\"color:#27ae60\">Explanation</span>:</strong></p>\r\n\r\n<p>&quot;b&quot; is the most common alphabet.&nbsp; It appears 3 times.</p>','2019-07-26 07:36:11.000000','',1,2,1,'def solve(str):','','','','','',124,'Most common character',0),(29,'','<p>Given a list, rotate the list to the right by n steps. (you take the 0th element and put it at the end of the list)</p>','<p>Example 1:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>:</p>\r\n\r\n			<p>nums = [2, 3, 4, 5, 6]</p>\r\n\r\n			<p>n = 2</p>\r\n\r\n			<p>&nbsp;</p>\r\n\r\n			<p><strong>Output</strong>:</p>\r\n\r\n			<p>[4, 5, 6, 2, 3]</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p><strong><span style=\"color:#27ae60\">Explanation</span>:</strong></p>\r\n\r\n<p>[2, 3, 4, 5, 6]</p>\r\n\r\n<p>rotate&nbsp;by 1 step: [3, 4, 5, 6, 2]</p>\r\n\r\n<p>rotate by 2&nbsp;step: [4, 5, 6, 2, 3]</p>','2019-07-27 17:16:10.000000','',1,19,1,'def solve(nums, n):','','','','','',104,'Rotate a list',0),(30,'','<p>Find the smallest number in a list.</p>','<p>Example 1:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>: [3, 4, 7, 5, 2, 7]</p>\r\n\r\n			<p><strong>Output</strong>: 2</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>','2019-07-28 03:05:15.000000','',1,19,1,'def solve(nums):','','','','','',108,'Smallest number',1),(31,'','<p>Split the list into two lists.</p>\r\n\r\n<p>The first list contains odd numbers and the second list contains even numbers.</p>','<p>Example 1:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>:[1, 4, 6, 9]</p>\r\n\r\n			<p><strong>Output</strong>: [1, 9], [4, 6]</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>','2019-07-28 05:42:42.000000','',1,4,1,'def solve(nums):','','','','','',65,'Split a list by even and odd values',0),(32,'<h3>List</h3>\r\n\r\n<p>&bull; A collection which is ordered and <span style=\"color:#e74c3c\"><strong>changeable</strong></span>.</p>\r\n\r\n<p>#code</p>\r\n\r\n<p>[1, 2, 3]</p>\r\n\r\n<p>[&quot;hello&quot;, &quot;hi&quot;]</p>\r\n\r\n<p>[10, &#39;python&#39;]</p>\r\n\r\n<p>[10, [1, 2, 3]]</p>\r\n\r\n<p>#end</p>\r\n\r\n<h3><br />\r\nTuple</h3>\r\n\r\n<p>&bull;&nbsp;A&nbsp;collection which is ordered and <span style=\"color:#e74c3c\"><strong>unchangeable</strong></span>.</p>\r\n\r\n<p>#code</p>\r\n\r\n<p>(1, 2, 3)</p>\r\n\r\n<p>(&quot;hello&quot;, &quot;world&quot;}</p>\r\n\r\n<p>#end</p>','<p>What is the incorrect data type in Python?</p>','','2019-07-29 06:11:15.000000','',1,12,4,'','[1, 2, 3]','(1, 2, 3)','[\"hello\", 123]','(1), (2)','',4,'List and Tuple',3),(33,'','<p>Remove the third word of the sentence.</p>','<p>Example 1:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>: &quot;How are you today&quot;</p>\r\n\r\n			<p><strong>Output</strong>: &quot;How are today&quot;</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>','2019-07-30 09:25:37.000000','',1,21,1,'def solve(str):','','','','','',118,'Remove a word',0),(34,'','<p>Given a decimal less than 1, return the number of leading zeros at the right of the point.</p>','<p>Example 1:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>: 0.0004</p>\r\n\r\n			<p><strong>Output</strong>: 3</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>','2019-07-31 01:09:00.000000','',1,8,1,'def solve(num):','','','','','',130,'Leading zeros',0),(35,'','<p>Given the two integers, find the greatest common factor(GCF).</p>','<p>Example 1:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>: 15, 9</p>\r\n\r\n			<p><strong>Output</strong>: 3</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>Example 2:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>: 24, 9</p>\r\n\r\n			<p><strong>Output</strong>: 3</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>','2019-08-01 04:12:07.000000','',1,8,1,'def solve(num1, num2):','','','','','',131,'Greatest common factor',0),(36,'<p>Print the specified message to the screen.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<h3>Number</h3>\r\n\r\n<p>#code</p>\r\n\r\n<p>print(1)</p>\r\n\r\n<p>print(123)</p>\r\n\r\n<p>#end</p>\r\n\r\n<p>#run-1</p>\r\n\r\n<p>1</p>\r\n\r\n<p>123</p>\r\n\r\n<p>#end</p>\r\n\r\n<h3>&nbsp;</h3>\r\n\r\n<h3><br />\r\nString</h3>\r\n\r\n<p>#code</p>\r\n\r\n<p>print(&quot;hello world&quot;)</p>\r\n\r\n<p>print(&#39;hello world&#39;)</p>\r\n\r\n<p>#end</p>\r\n\r\n<p>#run-2</p>\r\n\r\n<p>&#39;hello world&#39;</p>\r\n\r\n<p>&#39;hello world&#39;</p>\r\n\r\n<p>#end</p>\r\n\r\n<h3>&nbsp;</h3>\r\n\r\n<h3><br />\r\nList</h3>\r\n\r\n<p>#code</p>\r\n\r\n<p>print([1, 2, 3])</p>\r\n\r\n<p>#end</p>\r\n\r\n<p>#run-3</p>\r\n\r\n<p>[1, 2, 3]</p>\r\n\r\n<p>#end</p>\r\n\r\n<h3>&nbsp;</h3>\r\n\r\n<h3><br />\r\nSet</h3>\r\n\r\n<p>#code</p>\r\n\r\n<p>print({1, 2, 3})</p>\r\n\r\n<p>#end</p>\r\n\r\n<p>#run-4</p>\r\n\r\n<p>{1, 2, 3}</p>\r\n\r\n<p>#end</p>\r\n\r\n<h3>&nbsp;</h3>\r\n\r\n<h3><br />\r\nDictionary</h3>\r\n\r\n<p>#code</p>\r\n\r\n<p>print({&quot;key1&quot;: &quot;value1&quot;, &quot;key2&quot;: &quot;value2&quot;})</p>\r\n\r\n<p>#end</p>\r\n\r\n<p>#run-5</p>\r\n\r\n<p>{&#39;key1&#39;: &#39;value1&#39;, &#39;key2&#39;: &#39;value2&#39;}</p>\r\n\r\n<p>#end</p>\r\n\r\n<h3>&nbsp;</h3>\r\n\r\n<h3><br />\r\nVariable</h3>\r\n\r\n<p>#code</p>\r\n\r\n<p>num&nbsp;= 123</p>\r\n\r\n<p>print(num)</p>\r\n\r\n<p>#end</p>\r\n\r\n<p>#run-6</p>\r\n\r\n<p>123</p>\r\n\r\n<p>#end</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>#code</p>\r\n\r\n<p>str = &quot;hello&quot;</p>\r\n\r\n<p>print(str)</p>\r\n\r\n<p>#end</p>\r\n\r\n<p>#run-7</p>\r\n\r\n<p>&#39;hello&#39;</p>\r\n\r\n<p>#end</p>','<p>Write a code to print &quot;hello world&quot;</p>','<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td><strong>Output:</strong> &quot;hello world&quot;</td>\r\n		</tr>\r\n	</tbody>\r\n</table>','2019-08-01 07:45:14.000000','',1,15,1,'','','','','','',9,'Print',2),(37,'','<p>Find the second largest number of the list.</p>','<p>Example 1:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>: [5, 3, 6, 7, 8]</p>\r\n\r\n			<p><strong>Output</strong>: 7</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>','2019-08-01 08:21:38.000000','',1,29,1,'def solve(nums):','','','','','',90,'Second largest number',0),(38,'','<p>Check if the list has the duplicated number or not.</p>','<p>Example 1:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>: [1, 5, 3, 1]</p>\r\n\r\n			<p><strong>Output</strong>: True</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>Example 2:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>: [1, 5, 7]</p>\r\n\r\n			<p><strong>Output</strong>: False</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>','2019-08-02 04:12:29.000000','https://leetcode.com/problems/contains-duplicate/',1,6,1,'def solve(nums):','','','','','',122,'Duplicated number',0),(39,'','<p>Given an integer, check whether it is a power of 2 or not.</p>','<p>Example 1:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>: 16</p>\r\n\r\n			<p><strong>Output</strong>: True</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>Example 2:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>: 8</p>\r\n\r\n			<p><strong>Output</strong>: True</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>Example 3:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>: 6</p>\r\n\r\n			<p><strong>Output</strong>: False</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>','2019-08-02 09:56:48.000000','',1,8,1,'def solve(num):','','','','','',132,'Power of two',0),(40,'','<p>Find the trailing zero of the integer.</p>','<p>Example 1:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>:&nbsp;120000</p>\r\n\r\n			<p><strong>Output</strong>:&nbsp;4</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>Example 2:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>:&nbsp;534</p>\r\n\r\n			<p><strong>Output</strong>:&nbsp;0</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>','2019-08-03 04:57:32.000000','',1,8,1,'def solve(num):','','','','','',133,'Find a trailing zeros',0),(43,'<p>By stack, you can valid parentheses.</p>','<p>Check whether the parentheses are&nbsp;valid or not.</p>','<p>Example 1:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>: (())</p>\r\n\r\n			<p><strong>Output</strong>: True</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>Example 2:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>: ()()</p>\r\n\r\n			<p><strong>Output</strong>: True</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>Example 3:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>: (()())</p>\r\n\r\n			<p><strong>Output</strong>: True</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>Example 4:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>: (()</p>\r\n\r\n			<p><strong>Output</strong>: False</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>','2019-08-04 16:07:02.000000','<p>1. Scanning the string from the beginning.</p>\r\n\r\n<p>2. If the character at the current index is open parenthesis, push it to the stack.</p>\r\n\r\n<p>3. If the character at the current index is close parenthesis, pop from the top of stack.</p>\r\n\r\n<p>&nbsp; - If the popped value is not open parenthesis, the input string is not valid.</p>\r\n\r\n<p>4. If reach to the end,&nbsp;check the remaining element in the stack.</p>\r\n\r\n<p>&nbsp; - If empty, the input string is valid.</p>\r\n\r\n<p>&nbsp; - If not, the input string is not valid.</p>',1,9,1,'def solve(str):','','','','','',151,'Valid parentheses',1),(44,'','<p>Given a string, remove adjacent duplicated character in the string until there are no adjacent duplicate characters.</p>','<p>Example 1:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>: &quot;abbc&quot;</p>\r\n\r\n			<p><strong>Output</strong>: &quot;ac&quot;</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>Example 2:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>: &quot;cabba&quot;</p>\r\n\r\n			<p><strong>Output</strong>: &quot;c&quot;</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>','2019-08-05 00:05:24.000000','',1,29,1,'def solve(str):','','','','','',98,'Remove adjacent duplicated characters',0),(45,'','<p>Find the sum of the internal angle of the n-sided polygon.</p>','<p>Example 1:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>: 3</p>\r\n\r\n			<p><strong>Output</strong>: 180</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>Example 2:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>: 4</p>\r\n\r\n			<p><strong>Output</strong>: 360</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>','2019-08-06 01:25:41.000000','',1,8,1,'def solve(n):','','','','','',135,'Sum of internal angle',0),(46,'','<p>Find the sum of the external angle of the n-sided polygon.</p>','<p>Example 1:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>: 3</p>\r\n\r\n			<p><strong>Output</strong>: 900</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>Example 2:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>: 4</p>\r\n\r\n			<p><strong>Output</strong>: 1080</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>','2019-08-06 01:27:16.000000','',1,8,1,'def solve(num):','','','','','',136,'Sum of external angle',1),(47,'','<p>Given k and list, count the number less than k in the list.</p>','<p>Example 1:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>:</p>\r\n\r\n			<p>k = 5</p>\r\n\r\n			<p>nums = [3, 6, 7, 8]</p>\r\n\r\n			<p>&nbsp;</p>\r\n\r\n			<p><strong>Output</strong>:</p>\r\n\r\n			<p>2</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>','2019-08-06 01:28:39.000000','',1,4,1,'def solve(k, nums):','','','','','',61,'How many numbers less than k',1),(48,'','<p>Given two&nbsp;lists, find the common values belong to both.</p>','<p>Example 1:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>:</p>\r\n\r\n			<p>nums1 = [3, 5, 7, 9]</p>\r\n\r\n			<p>nums2 = [1, 3, 8, 9]</p>\r\n\r\n			<p>&nbsp;</p>\r\n\r\n			<p><strong>Output</strong>:</p>\r\n\r\n			<p>[3, 9]</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>','2019-08-06 01:30:07.000000','',1,19,1,'def solve(nums1, nums2):','','','','','',110,'Common value between two lists',0),(49,'','<p>Return the following list depending on the number.</p>','<p>Example 1:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>: 3</p>\r\n\r\n			<p><strong>Output</strong>: [&quot;*&quot;, &quot;**&quot;, &quot;***&quot;]</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>Example 2:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>: 4</p>\r\n\r\n			<p><strong>Output</strong>: [&quot;*&quot;, &quot;**&quot;, &quot;***&quot;, &quot;****&quot;]</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>&nbsp;</p>','2019-08-06 01:34:03.000000','',1,29,1,'def solve(num):','','','','','',91,'Draw a triangle',0),(50,'<p>The value is the sum of the previous two values.</p>\r\n\r\n<p>Here is the Fibonacci numbers.</p>\r\n\r\n<p>1, 1, 2, 3, 5, 8, 13, 21, 34, ...</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>&nbsp;</td>\r\n			<td>1st</td>\r\n			<td>2nd</td>\r\n			<td>3rd</td>\r\n			<td>4th</td>\r\n			<td>5th</td>\r\n			<td>6th</td>\r\n			<td>7th</td>\r\n			<td>8th</td>\r\n			<td>9th</td>\r\n		</tr>\r\n		<tr>\r\n			<td><strong>Fibonacci</strong></td>\r\n			<td><strong>1</strong></td>\r\n			<td><strong>1</strong></td>\r\n			<td><strong>2</strong></td>\r\n			<td><strong>3</strong></td>\r\n			<td><strong>5</strong></td>\r\n			<td><strong>8</strong></td>\r\n			<td><strong>13</strong></td>\r\n			<td><strong>21</strong></td>\r\n			<td><strong>34</strong></td>\r\n		</tr>\r\n		<tr>\r\n			<td><span style=\"color:#27ae60\"><strong>Explanation</strong></span></td>\r\n			<td>&nbsp;</td>\r\n			<td>&nbsp;</td>\r\n			<td>1+1</td>\r\n			<td>1+2</td>\r\n			<td>2+3</td>\r\n			<td>3+5</td>\r\n			<td>5+8</td>\r\n			<td>8+13</td>\r\n			<td>13+21</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>f(n) means Nth number.</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>f(n) = f(n-1) + f(n-2)</td>\r\n		</tr>\r\n	</tbody>\r\n</table>','<p>Write a function to return the n-th Fibonacci numbers.</p>','<p>Example 1:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>: 6</p>\r\n\r\n			<p><strong>Output</strong>: 8</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p><strong><span style=\"color:#27ae60\">Explanation:</span></strong></p>\r\n\r\n<p>1 1 2 3 5 <span style=\"color:#e74c3c\"><strong>8</strong></span></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>Example 2:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>: 9</p>\r\n\r\n			<p><strong>Output</strong>: 34</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p><strong><span style=\"color:#27ae60\">Explanation:</span></strong></p>\r\n\r\n<p>1 1 2 3 5 8 13 21 <span style=\"color:#e74c3c\"><strong>34</strong></span></p>','2019-08-07 00:51:56.000000','',1,35,1,'def solve(n):','','','','','',171,'Fibonacci',1),(51,'','<p>Given the two sorted lists, merge two lists to one sorted list.</p>','<p>Example 1:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>:</p>\r\n\r\n			<p>list1 = [1, 3, 4]</p>\r\n\r\n			<p>list2 = [2, 4, 5]</p>\r\n\r\n			<p>&nbsp;</p>\r\n\r\n			<p><strong>Output</strong>:</p>\r\n\r\n			<p>[1, 2, 3, 4, 4, 5]</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>&nbsp;</p>','2019-08-07 00:59:21.000000','',1,19,1,'def solve(list1, list2):','','','','','',111,'Merge lists',0),(52,'<h3>Naming rule</h3>\r\n\r\n<p>1. The variables name consists of alphabets, numbers, or underscore.</p>\r\n\r\n<ul>\r\n	<li>_num</li>\r\n	<li>num</li>\r\n	<li>NUM</li>\r\n</ul>\r\n\r\n<p>#code</p>\r\n\r\n<p>num = 1</p>\r\n\r\n<p>num = 1.2</p>\r\n\r\n<p>str = &quot;hello world&quot;</p>\r\n\r\n<p>str2 = &#39;hi, python&#39;</p>\r\n\r\n<p>nums = [1, 2, 3, 4]</p>\r\n\r\n<p>nums = {1, 2, 3}</p>\r\n\r\n<p>nums = {&quot;hi&quot;: &quot;python&quot;, &quot;hello&quot;: &quot;world&quot;]</p>\r\n\r\n<p>#end</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><br />\r\n2. The variable name must not start with a number.</p>\r\n\r\n<p>#code</p>\r\n\r\n<p><s>2num</s> = 1</p>\r\n\r\n<p><s>3str</s> = &quot;hello world&quot;</p>\r\n\r\n<p>#end</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><br />\r\n3. The variable name must not be reserved words.</p>\r\n\r\n<p>#code</p>\r\n\r\n<p><s>True</s></p>\r\n\r\n<p><s>if</s></p>\r\n\r\n<p><s>for</s></p>\r\n\r\n<p><s>return</s></p>\r\n\r\n<p><s>while</s></p>\r\n\r\n<p>#end</p>','<p>What is an invalid variable name?</p>','','2019-08-08 05:25:54.000000','',1,14,4,'','number','num2','2num','_number','',7,'Variable naming rule',2),(53,'','<p>Return the following list depending on the number.</p>','<p>Example 1:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>: 3</p>\r\n\r\n			<p><strong>Output</strong>: [&quot;--*&quot;, &quot;-**&quot;, &quot;***&quot;]</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>Example 2:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>: 4</p>\r\n\r\n			<p><strong>Output</strong>: [&quot;---*&quot;, &quot;--**&quot;, &quot;-***&quot;, &quot;****&quot;]</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>','2019-08-09 05:20:50.000000','',1,29,1,'def solve(num):','','','','','',92,'Draw a square',0),(54,'','<p>Swap all the values between the i-th element and the j-th element.</p>','<p>Example 1:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>:</p>\r\n\r\n			<p>nums = [3, 4, 5, 6, 7, 8, 9]</p>\r\n\r\n			<p>i = 2</p>\r\n\r\n			<p>j = 6</p>\r\n\r\n			<p>&nbsp;</p>\r\n\r\n			<p><strong>Output</strong>:</p>\r\n\r\n			<p>[3, 4, 9, 8, 7, 6, 5]</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>Example 2:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>:</p>\r\n\r\n			<p>nums = [1, 2, 3, 4, 5]</p>\r\n\r\n			<p>i = 1</p>\r\n\r\n			<p>j = 4</p>\r\n\r\n			<p>&nbsp;</p>\r\n\r\n			<p><strong>Output</strong>:</p>\r\n\r\n			<p>[1, 5, 4, 3, 2]</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>','2019-08-09 05:22:58.000000','',1,19,1,'def solve(nums, i, j):','','','','','',112,'Swap the values',1),(55,'<p>Split a string into a list by a default separator.&nbsp; The <strong>default</strong> separator is a <strong>space</strong>.</p>\r\n\r\n<p>#code</p>\r\n\r\n<p>str = &quot;This is The Python Kids&quot;</p>\r\n\r\n<p>list = str.split()</p>\r\n\r\n<p>print(list)</p>\r\n\r\n<p>#end</p>\r\n\r\n<p>#run-1</p>\r\n\r\n<p>[&#39;This&#39;, &#39;is&#39;, &#39;The&#39;, &#39;Python&#39;, &#39;Kids&#39;]</p>\r\n\r\n<p>#end</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>Split a string into a list by a space as a &quot;,&quot; separator.&nbsp;</p>\r\n\r\n<p>#code</p>\r\n\r\n<p>str = &quot;This,is,The Python Kids&quot;</p>\r\n\r\n<p>list = str.split(&quot;,&quot;)</p>\r\n\r\n<p>print(list)</p>\r\n\r\n<p>#end</p>\r\n\r\n<p>#run-2</p>\r\n\r\n<p>[&#39;This&#39;, &#39;is&#39;, &#39;The Python Kids&#39;]</p>\r\n\r\n<p>#end</p>','<p>Choose the output&nbsp;of this code.</p>','<p>#code</p>\r\n\r\n<p>str = &quot;Hello!How are you?&quot;</p>\r\n\r\n<p>list = str.split(&quot;!&quot;)</p>\r\n\r\n<p>print(list)</p>\r\n\r\n<p>#end</p>','2019-08-09 22:03:23.000000','',1,3,4,'','[\'Hello!\', \'How\', \'are\', \'you?\']','[\'Hello!How are you?\']','[\'Hello!\", \"How are you?\']','[\'Hello\', \'How are you?\']','',41,'Split a string',1),(56,'<h1>Merge strings with separator</h1>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>You can merge strings joined by a separator.</p>\r\n\r\n<p>#code</p>\r\n\r\n<p>list = [&#39;This&#39;, &#39;is&#39;, &#39;The&#39;, &#39;Python&#39;, &#39;Kids&#39;]</p>\r\n\r\n<p>str = &quot;_&quot;.join(list)</p>\r\n\r\n<p>print(str)</p>\r\n\r\n<p>#end</p>\r\n\r\n<p>#run-1</p>\r\n\r\n<p>&#39;This_is_The_Python_Kids&#39;</p>\r\n\r\n<p>#end</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>Here is a space&nbsp;separator.</p>\r\n\r\n<p>#code</p>\r\n\r\n<p>list = [&#39;This&#39;, &#39;is&#39;, &#39;The&#39;, &#39;Python&#39;, &#39;Kids&#39;]</p>\r\n\r\n<p>str = &quot; &quot;.join(list)</p>\r\n\r\n<p>print(str)</p>\r\n\r\n<p>#end</p>\r\n\r\n<p>#run-2</p>\r\n\r\n<p>&#39;This is The Python Kids&#39;</p>\r\n\r\n<p>#end</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>Here is an empty&nbsp;separator.</p>\r\n\r\n<p>#code</p>\r\n\r\n<p>list = [&#39;This&#39;, &#39;is&#39;, &#39;The&#39;, &#39;Python&#39;, &#39;Kids&#39;]</p>\r\n\r\n<p>str = &quot;&quot;.join(list)</p>\r\n\r\n<p>print(str)</p>\r\n\r\n<p>#end</p>\r\n\r\n<p>#run-3</p>\r\n\r\n<p>&#39;ThisisThePythonKids&#39;</p>\r\n\r\n<p>#end</p>','<p>Choose the result of this code.</p>','<p>#code</p>\r\n\r\n<p>list = [&#39;Hi&#39;, &#39;Python&#39;]</p>\r\n\r\n<p>str = &quot;!&quot;.join(list)</p>\r\n\r\n<p>print(str)</p>\r\n\r\n<p>#end</p>','2019-08-09 23:25:18.000000','',1,3,4,'','\"Hi Python\"','\"HiPython\"','\"HI!PYTHON\"','\"Hi!Python\"','',40,'Merge strings using Join',0),(57,'','<p>Given a number, find the sum of digits.</p>','<p>Example 1:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>: 1234</p>\r\n\r\n			<p><strong>Output</strong>: 10</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p><br />\r\nExample 2:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>: 111111</p>\r\n\r\n			<p><strong>Output</strong>: 6</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>&nbsp;</p>','2019-08-16 02:14:12.000000','',1,8,1,'def solve(num):','','','','','',139,'Sum of digits',0),(58,'<p>A common year has 365 days and a&nbsp;leap-year has 366 days in a year.</p>\r\n\r\n<p>&nbsp; &nbsp; &bull; A leap year occurs every four years.</p>\r\n\r\n<p>&nbsp; &nbsp; &bull; A&nbsp;century year cannot be a leap year unless it is divisible by 400.</p>','<p>Given a year, return the days in the year.</p>','<p>Example 1:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input:</strong> 2020</p>\r\n\r\n			<p><strong>Output:</strong> 366</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p><strong><span style=\"color:#27ae60\">Explanation</span>: </strong></p>\r\n\r\n<p>2020 is divisible by&nbsp;4<strong>&nbsp;</strong></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>Example 2:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input:</strong> 2000</p>\r\n\r\n			<p><strong>Output:</strong> 366</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p><strong><span style=\"color:#27ae60\">Explanation</span>:</strong></p>\r\n\r\n<p>2000 is divisible by 400</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>Example 3:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>: 1900</p>\r\n\r\n			<p><strong>Output:</strong>&nbsp;365</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p><strong><span style=\"color:#27ae60\">Explanation</span>:</strong></p>\r\n\r\n<p>1900 is divisible by 100 and not divisible by 400</p>','2019-08-16 02:17:30.000000','',1,8,1,'def solve(year):','','','','','',140,'Leap year',0),(59,'','<p>The price of the product changes every day.</p>\r\n\r\n<p>There is a daily price in a list.</p>\r\n\r\n<p>Find the maximum profit in one transaction.</p>\r\n\r\n<p>You have to buy the product first and sell later.</p>','<p>Example 1:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input: </strong>[4, 3, 5, 8, 6]</p>\r\n\r\n			<p><strong>Output: </strong>5</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p><strong><span style=\"color:#27ae60\">Explanation</span>:&nbsp;</strong></p>\r\n\r\n<p>For maximum profit, buy for $3 on the 2nd day and sell for $8 on the 4th day.</p>\r\n\r\n<p>So max profit is $5</p>','2019-08-16 04:05:09.000000','',1,35,1,'def solve(prices):','','','','','',174,'Maximum profit',1),(60,'','<p>Find the sum of the numbers using provided the sum method.</p>','<p>Example 1:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input: </strong>[1, 2, 3, 4, 5]</p>\r\n\r\n			<p><strong>Output: </strong>15</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>','2019-08-16 04:15:39.000000','',1,19,1,'def sum(num1, num2):\r\n    return num1 + num2\r\n\r\ndef solve(nums):','','','','','',113,'Sum of the numbers',0),(61,'<h1>List</h1>\r\n\r\n<p>List is one of the collections which is&nbsp;ordered and changeable.</p>\r\n\r\n<h3>&nbsp;</h3>\r\n\r\n<h3>Index</h3>\r\n\r\n<p>Get the value with the <strong>index</strong> position.&nbsp; Index must be started from 0.</p>\r\n\r\n<p>#code</p>\r\n\r\n<p>nums = [1, 2, 3]</p>\r\n\r\n<p>print(nums[0])</p>\r\n\r\n<p>print(nums[1])</p>\r\n\r\n<p>print(nums[2])</p>\r\n\r\n<p>#end</p>\r\n\r\n<p>#run-1</p>\r\n\r\n<p>1</p>\r\n\r\n<p>2</p>\r\n\r\n<p>3</p>\r\n\r\n<p>#end</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>Get the value with the <strong>negative</strong>&nbsp;<strong>index</strong> position.&nbsp; Index -1 indicates the last value.</p>\r\n\r\n<p>#code</p>\r\n\r\n<p>nums = [1, 2, 3]</p>\r\n\r\n<p>print(nums[-1])</p>\r\n\r\n<p>print(nums[-2])</p>\r\n\r\n<p>print(nums[-3])</p>\r\n\r\n<p>#end</p>\r\n\r\n<p>#run-2</p>\r\n\r\n<p>3</p>\r\n\r\n<p>2</p>\r\n\r\n<p>1</p>\r\n\r\n<p>#end</p>','<p>Choose&nbsp;the correct list after removing.</p>','<p>#code</p>\r\n\r\n<p>nums = [1, 2, 3, 4, 5]</p>\r\n\r\n<p>print(nums[0] + nums[-1])</p>\r\n\r\n<p>#end</p>','2019-08-17 08:35:08.000000','',1,4,4,'','1','4','5','6','oxx3NY1ky0w',48,'Index a value from list',0),(62,'<p>Append the&nbsp;value at the end.</p>\r\n\r\n<p>#code</p>\r\n\r\n<p>nums = [1, 2, 3]</p>\r\n\r\n<p>nums.append(4)</p>\r\n\r\n<p>print(nums)</p>\r\n\r\n<p>#end</p>\r\n\r\n<p>#run-1</p>\r\n\r\n<p>[1, 2, 3, 4]</p>\r\n\r\n<p>#end</p>','<p>Choose the correct list after appending.</p>','<p>#code</p>\r\n\r\n<p>nums = [1, 2, 3]</p>\r\n\r\n<p>nums.append(4)</p>\r\n\r\n<p>nums.append(4)</p>\r\n\r\n<p>#end</p>','2019-08-17 19:43:15.000000','',1,4,4,'','[1, 2, 3]','[1, 2, 3, 4]','[1, 2, 3, 4, 4]','Error','',49,'Append to List',0),(63,'<h1>Arithmetic Operator</h1>\r\n\r\n<h3>Addition</h3>\r\n\r\n<p>#code</p>\r\n\r\n<p>1 + 2</p>\r\n\r\n<p>#end</p>\r\n\r\n<p>#run-1</p>\r\n\r\n<p>3</p>\r\n\r\n<p>#end</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<h3>Subtraction</h3>\r\n\r\n<p>#code</p>\r\n\r\n<p>2 - 1</p>\r\n\r\n<p>#end</p>\r\n\r\n<p>#run-2</p>\r\n\r\n<p>1</p>\r\n\r\n<p>#end</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>#code</p>\r\n\r\n<p>1 - 2</p>\r\n\r\n<p>#end</p>\r\n\r\n<p>#run-3</p>\r\n\r\n<p>-1</p>\r\n\r\n<p>#end</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<h3>Multiplication</h3>\r\n\r\n<p>#code</p>\r\n\r\n<p>2 * 3</p>\r\n\r\n<p>#end</p>\r\n\r\n<p>#run-4</p>\r\n\r\n<p>6</p>\r\n\r\n<p>#end</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<h3>Division</h3>\r\n\r\n<p>#code</p>\r\n\r\n<p>4 / 2</p>\r\n\r\n<p>#end</p>\r\n\r\n<p>#run-5</p>\r\n\r\n<p>2</p>\r\n\r\n<p>#end</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>#code</p>\r\n\r\n<p>3 / 2</p>\r\n\r\n<p>#end</p>\r\n\r\n<p>#run-6</p>\r\n\r\n<p>1.5</p>\r\n\r\n<p>#end</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<h3>Exponentiation</h3>\r\n\r\n<p>The first number to the power of the second number.</p>\r\n\r\n<p>#code</p>\r\n\r\n<p>3 ** 4</p>\r\n\r\n<p>#end</p>\r\n\r\n<p>#run-7</p>\r\n\r\n<p>81</p>\r\n\r\n<p><span style=\"color:#27ae60\"><strong>Explanation:&nbsp;</strong></span></p>\r\n\r\n<p>3 * 3 * 3 * 3 = 81</p>\r\n\r\n<p>#end</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>#code</p>\r\n\r\n<p>3 ** 0</p>\r\n\r\n<p>#end</p>\r\n\r\n<p>#run-8</p>\r\n\r\n<p>1</p>\r\n\r\n<p><span style=\"color:#27ae60\"><strong>Explanation:&nbsp;</strong></span></p>\r\n\r\n<p>All Number ** 0 = 1</p>\r\n\r\n<p>#end</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<h3>Floor Division</h3>\r\n\r\n<p>Divides and returns the integer value of the quotient.</p>\r\n\r\n<p>#code</p>\r\n\r\n<p>7 // 4</p>\r\n\r\n<p>#end</p>\r\n\r\n<p>#run-9</p>\r\n\r\n<p>1</p>\r\n\r\n<p>#end</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<h3><br />\r\nModulus</h3>\r\n\r\n<p>Divides and returns the value of the remainder.</p>\r\n\r\n<p>#code</p>\r\n\r\n<p>7 % 4</p>\r\n\r\n<p>#end</p>\r\n\r\n<p>#run-10</p>\r\n\r\n<p>3</p>\r\n\r\n<p>#end</p>\r\n\r\n<h3>&nbsp;</h3>\r\n\r\n<h3><br />\r\nOperator Priority</h3>\r\n\r\n<p>%, *, / is a higher priority than +, -</p>\r\n\r\n<p>#code</p>\r\n\r\n<p>1 + 3 * 2</p>\r\n\r\n<p>#end</p>\r\n\r\n<p>#run-11</p>\r\n\r\n<p>7</p>\r\n\r\n<p><span style=\"color:#27ae60\"><strong>Explanation:</strong></span></p>\r\n\r\n<p>1 + 3 * 2</p>\r\n\r\n<p>= 1 + (3 * 2)</p>\r\n\r\n<p>= 7</p>\r\n\r\n<p>#end</p>','<p>Choose the different&nbsp;value of the followings.</p>','','2019-08-19 02:32:58.000000','',1,13,4,'','17 // 2','17 % 9','17 / 2','2 ** 3','',10,'Arithmetic Operator',1),(64,'','<p>Find it whether the one string can be transformed into the other string.</p>','<p>Example 1:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>:</p>\r\n\r\n			<p>str1 = &quot;abcc&quot;</p>\r\n\r\n			<p>str2 = &quot;cbca&quot;</p>\r\n\r\n			<p>&nbsp;</p>\r\n\r\n			<p><strong>Output</strong>:</p>\r\n\r\n			<p>True</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>Example 2:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>:</p>\r\n\r\n			<p>str1 = &quot;aabb&quot;</p>\r\n\r\n			<p>str2 = &quot;abab&quot;</p>\r\n\r\n			<p>&nbsp;</p>\r\n\r\n			<p><strong>Output</strong>:</p>\r\n\r\n			<p>True</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>Example 3:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>:</p>\r\n\r\n			<p>str1 = &quot;abb&quot;</p>\r\n\r\n			<p>str2 = &quot;aabb&quot;</p>\r\n\r\n			<p>&nbsp;</p>\r\n\r\n			<p><strong>Output</strong>:</p>\r\n\r\n			<p>False</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>','2019-08-19 02:47:30.000000','',1,21,1,'def solve(str1, str2):','','','','','',119,'String transformation',0),(65,'<h3>Palindrome</h3>\r\n\r\n<p>A word which reads the same backward as forward such as mom, madam.</p>','<p>Check a word whether it is a palindrome or not.</p>','<p>Example 1:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>: &quot;mom&quot;</p>\r\n\r\n			<p><strong>Output</strong>: True</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>Example 2:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>: &quot;racecar<em>&quot;</em></p>\r\n\r\n			<p><strong>Output</strong>: True</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>Example 2:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>: &quot;father&quot;</p>\r\n\r\n			<p><strong>Output</strong>: False</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>','2019-08-19 03:02:33.000000','',1,21,1,'def solve(str):','','','','','',120,'Palindrome',1),(66,'','<p>Write a function to find the maximum consecutive same numbers.</p>','<p>Example 1:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>: [1, 2, 3, <span style=\"color:#e74c3c\"><strong>4, 4, 4, 4, 4</strong></span>, 5, 5, 5]</p>\r\n\r\n			<p><strong>Output</strong>: 5</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p><strong><span style=\"color:#27ae60\">Explanation</span>: </strong></p>\r\n\r\n<p>There are five 4 in a row.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>Example 2:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>: [1, 2, 3, 4]</p>\r\n\r\n			<p><strong>Output</strong>: 1</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p><strong><span style=\"color:#27ae60\">Explanation</span>: </strong></p>\r\n\r\n<p>Each&nbsp;number is different.</p>','2019-08-19 03:15:56.000000','',1,19,1,'def solve(nums):','','','','','',114,'Adjacent same numbers',1),(67,'<p>max() will return the maximum of a list.</p>\r\n\r\n<p>#code</p>\r\n\r\n<p>nums = [2, 4, 1, 3, 5]</p>\r\n\r\n<p>print(max(nums))</p>\r\n\r\n<p>#end</p>\r\n\r\n<p>#run-1</p>\r\n\r\n<p>5</p>\r\n\r\n<p>#end</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>max() can have&nbsp;the multiple numbers as paramters.</p>\r\n\r\n<p>#code</p>\r\n\r\n<p>print(max(2, 4, 1, 3, 5))</p>\r\n\r\n<p>#end</p>\r\n\r\n<p>#run-2</p>\r\n\r\n<p>5</p>\r\n\r\n<p>#end</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>min() will return the minimum of a list.</p>\r\n\r\n<p>#code</p>\r\n\r\n<p>nums = [2, 4, 1, 3, 5]</p>\r\n\r\n<p>print(min(nums))</p>\r\n\r\n<p>#end</p>\r\n\r\n<p>#run-3</p>\r\n\r\n<p>1</p>\r\n\r\n<p>#end</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>min() can have multiple numbers as paramters.</p>\r\n\r\n<p>#code</p>\r\n\r\n<p>print(max(2, 4, 1, 3, 5))</p>\r\n\r\n<p>#end</p>\r\n\r\n<p>#run-4</p>\r\n\r\n<p>1</p>\r\n\r\n<p>#end</p>','<p>Find the maximum value of the list.</p>','<p>Example 1:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>: [4, 3, 2, 5, 2]</p>\r\n\r\n			<p><strong>Output</strong>: 5</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>Example 2:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>: [6, 5, 3, 9, 3]</p>\r\n\r\n			<p><strong>Output</strong>: 9</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>','2019-08-19 03:20:45.000000','',1,4,1,'def solve(nums):','','','','','',59,'Maximum value',1),(68,'','<p>Remove the outermost parenthesis.</p>\r\n\r\n<p>Assume that parentheses are&nbsp;valid.</p>','<p>Example 1:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>: &quot;(()())&quot;</p>\r\n\r\n			<p><strong>Output</strong>: &quot;()()&quot;</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>Example 2:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>: &quot;()(())&quot;</p>\r\n\r\n			<p><strong>Output</strong>: &quot;()&quot;</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>','2019-08-19 17:01:59.000000','',1,9,1,'def solve(str):','','','','','',152,'Remove outermost parenthesis',0),(69,'<h1>Linked list</h1>\r\n\r\n<p>Each node is pointing at the next node. The last node is pointing at <strong>None</strong> because of no more node<strong>.</strong></p>\r\n\r\n<p>A linked list can be extended or reduced easily compared to a list.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<h3>Make a linked list.</h3>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><img alt=\"linked list\" src=\"/static/quiz/69_linked_list_1.png\" style=\"height:80px; width:664px\" /></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>1. Prepare <strong>Node</strong> class to make a linked list.</p>\r\n\r\n<p>#code</p>\r\n\r\n<p>class Node:</p>\r\n\r\n<p>&nbsp; &nbsp; def __init__(self, val):</p>\r\n\r\n<p>&nbsp; &nbsp; &nbsp; &nbsp; self.val = val</p>\r\n\r\n<p>&nbsp; &nbsp; &nbsp; &nbsp; self.next = None</p>\r\n\r\n<p>#end</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>2. Create each node without linking with a next node.</p>\r\n\r\n<p><img alt=\"linked list\" src=\"/static/quiz/69_linked_list_2.png\" style=\"height:125px; width:600px\" /></p>\r\n\r\n<p>#code</p>\r\n\r\n<p>node1 = Node(1)</p>\r\n\r\n<p>node2&nbsp;= Node(2)</p>\r\n\r\n<p>node3 = Node(3)</p>\r\n\r\n<p>node4 = Node(4)</p>\r\n\r\n<p>#end</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>3. Here is the last step to attach a next node.</p>\r\n\r\n<p><img alt=\"linked list\" src=\"/static/quiz/69_linked_list_3.png\" style=\"height:109px; width:600px\" /></p>\r\n\r\n<p>#code</p>\r\n\r\n<p>head = node1</p>\r\n\r\n<p>node1.next = node2</p>\r\n\r\n<p>node2.next = node3</p>\r\n\r\n<p>node3.next = node4</p>\r\n\r\n<p>#end</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<h3>Print all values</h3>\r\n\r\n<p>#code</p>\r\n\r\n<p>while head != None:</p>\r\n\r\n<p>&nbsp; &nbsp; print(head.val)&nbsp; &nbsp;&nbsp;</p>\r\n\r\n<p>&nbsp; &nbsp; head = head.next</p>\r\n\r\n<p>#end</p>','<p>Find the maximum value of the linked list.</p>','<p>Example 1:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>:</p>\r\n\r\n			<p>&nbsp;<img alt=\"\" src=\"/static/quiz/69_linked_list_1.png\" style=\"height:80px; width:664px\" /></p>\r\n\r\n			<p><strong>Output</strong>:</p>\r\n\r\n			<p>4</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p><br />\r\n&nbsp;</p>','2019-08-20 05:15:02.000000','',1,31,1,'# Definition for linked list.\r\nclass Node:\r\n    def __init__(self, val):\r\n        self.val = val\r\n        self.next = None\r\n\r\ndef solve(head):\r\n    # Please insert code here','','','','','',155,'Find the maximum of a linked list',1),(70,'<h1>Data Type</h1>\r\n\r\n<h3>&nbsp;</h3>\r\n\r\n<h3>Set</h3>\r\n\r\n<p>&bull; A collection for <span style=\"color:#e74c3c\"><strong>unique</strong></span> values.</p>\r\n\r\n<p>#code</p>\r\n\r\n<p>{1, 2, 3}</p>\r\n\r\n<p>#end</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<h3>Dictionary</h3>\r\n\r\n<p>&bull; A collection for the <strong>key</strong> and <strong>value</strong> pair.</p>\r\n\r\n<p>&bull;&nbsp;The format looks like this.</p>\r\n\r\n<p>#code</p>\r\n\r\n<p>{key: value, ...}</p>\r\n\r\n<p>#end</p>\r\n\r\n<p><br />\r\n&bull;&nbsp;A <strong>key</strong> should be unique and a&nbsp;<strong>value</strong> does not need to be unique.</p>\r\n\r\n<p>&bull;&nbsp;The examples below are valid format.</p>\r\n\r\n<p>#code</p>\r\n\r\n<p>{&quot;key1&quot;: &quot;value1&quot;, &quot;key2&quot;: &quot;value2&quot;}</p>\r\n\r\n<p>{1: 1, 2: 2}</p>\r\n\r\n<p>{&quot;hello&quot;: &quot;hi&quot;}</p>\r\n\r\n<p>{&#39;hi&#39;: &#39;python&#39;, 100: &quot;hello&quot;}</p>\r\n\r\n<p>#end</p>\r\n\r\n<p>&nbsp;</p>','<p>Which one is the invalid format?</p>','','2019-08-26 03:48:16.000000','',1,12,4,'','{\"hello\": \"hi\", \"hello\": \"hi2\"}','{1, 2, 3}','{1}','{\"hi\": \"hello\", \"hi2\": \"hello\"}','',5,'Set and Dictionary',2),(71,'<h1>Naming convention</h1>\r\n\r\n<p>Here are some naming conventions for variables.</p>\r\n\r\n<p>1. Should be all lower case.</p>\r\n\r\n<p>2. Should be separated by an underscore.</p>\r\n\r\n<p>#code</p>\r\n\r\n<p>nums = [1, 2, 3, 4]</p>\r\n\r\n<p>quiz_count = 10</p>\r\n\r\n<p>num = 1</p>\r\n\r\n<p>str = &quot;hello word&quot;</p>\r\n\r\n<p>#end</p>\r\n\r\n<p>&nbsp;</p>','<p>What is the right python naming convention for variable?</p>','','2019-08-29 03:39:17.000000','',1,14,4,'','quizCount','quiz_count','QuizCount','Quiz_Count','',8,'Variable naming convention',2),(72,'<h4>Equal to (<strong><span style=\"color:#e74c3c\">==</span></strong>)</h4>\r\n\r\n<p>#code</p>\r\n\r\n<p>3 == 3</p>\r\n\r\n<p>#end</p>\r\n\r\n<p>#run-1</p>\r\n\r\n<p>True</p>\r\n\r\n<p>#end</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>#code</p>\r\n\r\n<p>4 == 3</p>\r\n\r\n<p>#end</p>\r\n\r\n<p>#run-2</p>\r\n\r\n<p>False</p>\r\n\r\n<p>#end</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<h4>Not equal to (<span style=\"color:#e74c3c\"><strong>!=</strong></span>)</h4>\r\n\r\n<p>#code</p>\r\n\r\n<p>3 != 3</p>\r\n\r\n<p>#end</p>\r\n\r\n<p>#run-3</p>\r\n\r\n<p>False</p>\r\n\r\n<p>#end</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>#code</p>\r\n\r\n<p>4 != 3</p>\r\n\r\n<p>#end</p>\r\n\r\n<p>#run-4</p>\r\n\r\n<p>True</p>\r\n\r\n<p>#end</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<h4><br />\r\nLess than (<span style=\"color:#e74c3c\"><strong>&lt;</strong></span>)</h4>\r\n\r\n<p>#code</p>\r\n\r\n<p>4 &lt; 3</p>\r\n\r\n<p>#end</p>\r\n\r\n<p>#run-5</p>\r\n\r\n<p>True</p>\r\n\r\n<p>#end</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<h4>Greater than (<span style=\"color:#e74c3c\"><strong>&gt;</strong></span>)</h4>\r\n\r\n<p>#code</p>\r\n\r\n<p>4 &gt; 3</p>\r\n\r\n<p>#end</p>\r\n\r\n<p>#run-6</p>\r\n\r\n<p>True</p>\r\n\r\n<p>#end</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>#code</p>\r\n\r\n<p>3 &gt; 4</p>\r\n\r\n<p>#end</p>\r\n\r\n<p>#run-7</p>\r\n\r\n<p>False</p>\r\n\r\n<p>#end</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<h4>Less than or equal to (<span style=\"color:#e74c3c\"><strong>&lt;=</strong></span>)</h4>\r\n\r\n<p>#code</p>\r\n\r\n<p>2 &lt;= 2</p>\r\n\r\n<p>#end</p>\r\n\r\n<p>#run-8</p>\r\n\r\n<p>True</p>\r\n\r\n<p>#end</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>#code</p>\r\n\r\n<p>2 &lt;= 3</p>\r\n\r\n<p>#end</p>\r\n\r\n<p>#run-9</p>\r\n\r\n<p>True</p>\r\n\r\n<p>#end</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<h4>Greater than or equal to (<span style=\"color:#e74c3c\"><strong>&gt;=</strong></span>)</h4>\r\n\r\n<p>#code</p>\r\n\r\n<p>4 &gt;= 2</p>\r\n\r\n<p>#end</p>\r\n\r\n<p>#run-10</p>\r\n\r\n<p>True</p>\r\n\r\n<p>#end</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>#code</p>\r\n\r\n<p>4 &gt;= 4</p>\r\n\r\n<p>#end</p>\r\n\r\n<p>#run-11</p>\r\n\r\n<p>True</p>\r\n\r\n<p>#end</p>','<p>Choose the different result of the follows.</p>','','2019-08-29 06:18:20.000000','',1,13,4,'','4 >= 4','3 == 3','2 < 3','5 != 5','-rRY5FnXvC4',11,'Relational Operator',3),(73,'<h3>Assign (<span style=\"color:#e74c3c\"><strong>=</strong></span>)</h3>\r\n\r\n<p>#code</p>\r\n\r\n<p>n = 1</p>\r\n\r\n<p>print(n)</p>\r\n\r\n<p>#end</p>\r\n\r\n<p>#run-1</p>\r\n\r\n<p>1</p>\r\n\r\n<p>#end</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<h3>Add assign (<span style=\"color:#e74c3c\"><strong>+=</strong></span>)</h3>\r\n\r\n<p>#code</p>\r\n\r\n<p>n = 10</p>\r\n\r\n<p>n += 1</p>\r\n\r\n<p>print(n)</p>\r\n\r\n<p>#end</p>\r\n\r\n<p>#run-2</p>\r\n\r\n<p>11</p>\r\n\r\n<p><span style=\"color:#27ae60\"><strong>Explanation:&nbsp;</strong></span></p>\r\n\r\n<p>n += 1 is same as n = n + 1</p>\r\n\r\n<p>#end</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<h3>Subtract assign (<span style=\"color:#e74c3c\"><strong>-=</strong></span>)</h3>\r\n\r\n<p>#code</p>\r\n\r\n<p>n = 10</p>\r\n\r\n<p>n -= 1</p>\r\n\r\n<p>print(n)</p>\r\n\r\n<p>#end</p>\r\n\r\n<p>#run-3</p>\r\n\r\n<p>9</p>\r\n\r\n<p><span style=\"color:#27ae60\"><strong>Explanation:&nbsp;</strong></span></p>\r\n\r\n<p>n -=&nbsp;1 is same as n = n -&nbsp;1</p>\r\n\r\n<p>#end</p>','<p>What is the output of the code?</p>','<p>#code</p>\r\n\r\n<p>n = 10</p>\r\n\r\n<p>n += 5</p>\r\n\r\n<p>n -= 3</p>\r\n\r\n<p>print(n)</p>\r\n\r\n<p>#end</p>','2019-08-29 07:12:41.000000','',1,13,2,'','','','','','',12,'Assignment Operator',2),(74,'<h3>Or</h3>\r\n\r\n<p>The expression is <strong>False</strong> when the conditions on both the sides of the <strong>or</strong> operator are false.</p>\r\n\r\n<p>#code</p>\r\n\r\n<p>bool = True or True</p>\r\n\r\n<p>print(bool)&nbsp;</p>\r\n\r\n<p>#end</p>\r\n\r\n<p>#run-1</p>\r\n\r\n<p>True</p>\r\n\r\n<p>#end</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>#code</p>\r\n\r\n<p>bool = 2==2 or 1==1</p>\r\n\r\n<p>print(bool)&nbsp;</p>\r\n\r\n<p>#end</p>\r\n\r\n<p>#run-2</p>\r\n\r\n<p>True</p>\r\n\r\n<p>#end</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>#code</p>\r\n\r\n<p>bool = False or True</p>\r\n\r\n<p>print(bool)&nbsp;</p>\r\n\r\n<p>#end</p>\r\n\r\n<p>#run-3</p>\r\n\r\n<p>True</p>\r\n\r\n<p>#end</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>#code</p>\r\n\r\n<p>bool = 2&gt;3&nbsp;or 1==1</p>\r\n\r\n<p>print(bool)&nbsp;</p>\r\n\r\n<p>#end</p>\r\n\r\n<p>#run-4</p>\r\n\r\n<p>True</p>\r\n\r\n<p>#end</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>#code</p>\r\n\r\n<p>bool = False or False</p>\r\n\r\n<p>print(bool)&nbsp;</p>\r\n\r\n<p>#end</p>\r\n\r\n<p>#run-5</p>\r\n\r\n<p>False</p>\r\n\r\n<p>#end</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>#code</p>\r\n\r\n<p>bool = 2&gt;3&nbsp;or 1&gt;1</p>\r\n\r\n<p>print(bool)&nbsp;</p>\r\n\r\n<p>#end</p>\r\n\r\n<p>#run-6</p>\r\n\r\n<p>False</p>\r\n\r\n<p>#end</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<h5>Summary</h5>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<thead>\r\n		<tr>\r\n			<th scope=\"col\">&nbsp;</th>\r\n			<th scope=\"col\"><span style=\"color:#3498db\"><span style=\"background-color:#ffffff\">True</span></span></th>\r\n			<th scope=\"col\"><span style=\"color:#3498db\"><span style=\"background-color:#ffffff\">False</span></span></th>\r\n		</tr>\r\n	</thead>\r\n	<tbody>\r\n		<tr>\r\n			<td><span style=\"color:#3498db\"><strong><span style=\"background-color:#ffffff\">True</span></strong></span></td>\r\n			<td>True</td>\r\n			<td>True</td>\r\n		</tr>\r\n		<tr>\r\n			<td><span style=\"color:#3498db\"><strong><span style=\"background-color:#ffffff\">False</span></strong></span></td>\r\n			<td>True</td>\r\n			<td>False</td>\r\n		</tr>\r\n	</tbody>\r\n</table>','<p>Choose the different result of the following.</p>','','2019-08-29 08:11:42.000000','',1,13,4,'','1 == 1 and 2 == 2','1 < 2 or 1 > 2','not 2 < 3','1 < 2 and 2 > 1','',14,'Logical Operator (Or)',0),(75,'','<p>Given an integer array, return true if we can split the array into two with equal sums.</p>','<p>Example 1:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>: [1, 3, 2, 2]</p>\r\n\r\n			<p><strong>Output</strong>: True</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p><span style=\"color:#27ae60\"><strong>Explanation</strong></span>: [1, 3], [2, 2]</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>Example 2:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>: [1, 2, 3, 4, 5, 5]</p>\r\n\r\n			<p><strong>Output</strong>: True</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p><span style=\"color:#27ae60\"><strong>Explanation</strong></span>: [1, 2, 3, 4], [5, 5]</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>Example 3:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>: [1, 2, 3, 4]</p>\r\n\r\n			<p><strong>Output</strong>: False</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>','2019-08-30 04:53:49.000000','',1,19,1,'def solve(nums):','','','','','',115,'Split an array into two with equal sum',1),(76,'','<p>Given an array <strong>nums</strong> and another&nbsp;integer <strong>n</strong>, find the maximum of the sum&nbsp;for&nbsp;the subarray with length&nbsp;<strong>n.</strong></p>\r\n\r\n<p>&nbsp;</p>','<p>Example 1:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>:</p>\r\n\r\n			<p>nums = [5, 3, 2, 6, 4, 3, 3]</p>\r\n\r\n			<p>n = 3</p>\r\n\r\n			<p>&nbsp;</p>\r\n\r\n			<p><strong>Output</strong>:</p>\r\n\r\n			<p>13</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p><span style=\"color:#27ae60\"><strong>Explanation</strong></span>:</p>\r\n\r\n<p>[5, 3, 2], sum = 10</p>\r\n\r\n<p>[3, 2, 6], sum = 11</p>\r\n\r\n<p>[2, 6, 4], sum = 12</p>\r\n\r\n<p>[6, 4, 3], sum&nbsp;= 13 ---&gt; maximum</p>\r\n\r\n<p>[4, 3, 3], sum = 10</p>','2019-08-30 05:15:05.000000','',1,35,1,'def solve(nums, n):','','','','','',173,'Sliding Window Maximum',0),(77,'<h3>For</h3>\r\n\r\n<p><span style=\"color:#e74c3c\"><strong>For</strong></span> loop is used for iterating.&nbsp;</p>\r\n\r\n<p>A <strong>num</strong> is a variable name.</p>\r\n\r\n<p>#code</p>\r\n\r\n<p>for num in [1, 2, 3]:</p>\r\n\r\n<p>&nbsp; &nbsp; print(num)</p>\r\n\r\n<p>#end</p>\r\n\r\n<p>#run-1</p>\r\n\r\n<p>1</p>\r\n\r\n<p>2</p>\r\n\r\n<p>3</p>\r\n\r\n<p><span style=\"color:#27ae60\"><strong>Explanation:</strong></span></p>\r\n\r\n<p>In the first loop, a&nbsp;<strong>num</strong> will be 1.</p>\r\n\r\n<p>In the second loop, a <strong>num</strong> will be 2.</p>\r\n\r\n<p>In the third loop, a <strong>num</strong> will be 3.</p>\r\n\r\n<p>#end</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong>str </strong>is a variable name.</p>\r\n\r\n<p>#code</p>\r\n\r\n<p>for str in [&quot;hello&quot;, &quot;python&quot;]:</p>\r\n\r\n<p>&nbsp; &nbsp; print(str)</p>\r\n\r\n<p>#end</p>\r\n\r\n<p>#run-2</p>\r\n\r\n<p>&#39;hello&#39;</p>\r\n\r\n<p>&#39;python&#39;</p>\r\n\r\n<p><span style=\"color:#27ae60\"><strong>Explanation:</strong></span></p>\r\n\r\n<p>In the first loop, <strong>str</strong> will be &quot;hello&quot;</p>\r\n\r\n<p>In the second loop, <strong>str</strong> will be &quot;python&quot;</p>\r\n\r\n<p>#end</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>#code</p>\r\n\r\n<p>for n&nbsp;in range(3):</p>\r\n\r\n<p>&nbsp; &nbsp; print(n)</p>\r\n\r\n<p>#end</p>\r\n\r\n<p>#run-3</p>\r\n\r\n<p>0</p>\r\n\r\n<p>1</p>\r\n\r\n<p>2</p>\r\n\r\n<p><strong><span style=\"color:#27ae60\">Explanation</span>:</strong></p>\r\n\r\n<p>range(0, 3) is similar to&nbsp;[0, 1, 2]</p>\r\n\r\n<p>#end</p>','<p>Choose the result of the code.</p>','<p>#code</p>\r\n\r\n<p>for n in range(2, 4):</p>\r\n\r\n<p>&nbsp; &nbsp; print(n)</p>\r\n\r\n<p>#end</p>','2019-08-31 04:12:26.000000','',1,1,4,'','2\r\n3\r\n4','2\r\n3','2','4','2PnLrvxqVNI',23,'For',2),(78,'<p><span style=\"color:#e74c3c\"><strong>While</strong></span> loop will be running until a condition is True.&nbsp;</p>\r\n\r\n<p>But&nbsp;<span style=\"color:#e74c3c\"><strong>break</strong></span>&nbsp;can terminate&nbsp;the loop even though the condition is True.</p>\r\n\r\n<p>#code</p>\r\n\r\n<p>n = 0</p>\r\n\r\n<p>while n &lt;&nbsp;5:</p>\r\n\r\n<p>&nbsp; &nbsp; print(n)</p>\r\n\r\n<p>&nbsp; &nbsp; n = n +&nbsp;1</p>\r\n\r\n<p>&nbsp; &nbsp; if n == 2:</p>\r\n\r\n<p>&nbsp; &nbsp; &nbsp; &nbsp; break</p>\r\n\r\n<p>#end</p>\r\n\r\n<p>#run-1</p>\r\n\r\n<p>0</p>\r\n\r\n<p>1</p>\r\n\r\n<p>#end</p>','<p>Choose the result of the code.</p>','<p>#code</p>\r\n\r\n<p>n = 5</p>\r\n\r\n<p>while n &gt; 0:</p>\r\n\r\n<p>&nbsp; &nbsp; print(n)</p>\r\n\r\n<p>&nbsp; &nbsp; n = n - 1</p>\r\n\r\n<p>&nbsp; &nbsp; if n == 2:</p>\r\n\r\n<p>&nbsp; &nbsp; &nbsp; &nbsp; break</p>\r\n\r\n<p>#end</p>','2019-08-31 04:42:56.000000','',1,5,4,'','5\r\n4\r\n3','5\r\n4','3\r\n4\r\n5','5','',28,'Break',1),(79,'','<p>Given a set of activities with a start time and finish time, find the maximum activities without conflict.</p>','<p>Example 1:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>:</p>\r\n\r\n			<p>starts = [1, 2, 4]</p>\r\n\r\n			<p>finishes = [4, 5, 6]</p>\r\n\r\n			<p>&nbsp;</p>\r\n\r\n			<p><strong>Output</strong>:</p>\r\n\r\n			<p>2</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p><strong><span style=\"color:#27ae60\">Explanation</span>:</strong></p>\r\n\r\n<p>The first activity is started at 1 and finished at 4.</p>\r\n\r\n<p>The second activity is started at 2&nbsp;and finished at 5.</p>\r\n\r\n<p>The third activity is started at 4&nbsp;and finished at 6.</p>\r\n\r\n<p>When choosing the first and third activities, there are maximum activities without conflict.</p>','2019-08-31 07:29:26.000000','',1,34,1,'def solve(starts, finishes):','','','','','',170,'Activity selection problem',1),(80,'','<p>Find the product from 1 to <strong>num</strong>.</p>\r\n\r\n<p>&nbsp;</p>','<p>Example 1:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>: 4</p>\r\n\r\n			<p><strong>Output</strong>: 24</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p><span style=\"color:#27ae60\"><strong>Explanation</strong></span>:&nbsp;</p>\r\n\r\n<p>1 * 2 * 3 * 4 = 24</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>Example 2:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>: 5</p>\r\n\r\n			<p><strong>Output</strong>: 120&nbsp;</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p><span style=\"color:#27ae60\"><strong>Explanation</strong></span>:</p>\r\n\r\n<p>1 * 2 * 3 * 4 * 5 = 120</p>\r\n\r\n<p>&nbsp;</p>','2019-09-02 03:44:43.000000','',1,29,1,'def solve(num):','','','','','',89,'Multiply',0),(81,'','<p>Reverse Linked List.</p>','<p>Example 1:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>: 1 -&gt; 4&nbsp;-&gt; 3 -&gt; 2&nbsp;-&gt; 5</p>\r\n\r\n			<p><strong>Output</strong>: 5 -&gt; 2 -&gt; 3 -&gt; 4 -&gt; 1</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p><br />\r\n&nbsp;</p>','2019-09-03 00:52:44.000000','',1,31,1,'# Definition for linked list.\r\nclass Node:\r\n    def __init__(self, val):\r\n        self.val = val\r\n        self.next = None\r\n\r\ndef solve(head):\r\n    # Please insert code here','','','','','',157,'Reverse linked list',1),(82,'<h3>If</h3>\r\n\r\n<p>When the condition is True, the&nbsp;block&nbsp;will be executed.</p>\r\n\r\n<p>#code</p>\r\n\r\n<p>if 2 &gt; 1:</p>\r\n\r\n<p>&nbsp; &nbsp; print(&quot;True&quot;)</p>\r\n\r\n<p>#end</p>\r\n\r\n<p>#run-1</p>\r\n\r\n<p>True</p>\r\n\r\n<p>#end</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>#code</p>\r\n\r\n<p>if 1&nbsp;&gt; 2:</p>\r\n\r\n<p>&nbsp; &nbsp; print(&quot;True&quot;)</p>\r\n\r\n<p>#end</p>\r\n\r\n<p>#run-2</p>\r\n\r\n<p>Nothing will be printed becase 1 &gt; 2 is not True</p>\r\n\r\n<p>#end</p>','<p>What is the output of the code?</p>','<p>#code</p>\r\n\r\n<p>num = 2</p>\r\n\r\n<p>if num &gt; 2:</p>\r\n\r\n<p>&nbsp; &nbsp; print(&quot;Hello&quot;)</p>\r\n\r\n<p>#end</p>\r\n\r\n<p>&nbsp;</p>','2019-09-04 07:19:41.000000','',1,16,4,'','Nothing','Error','\"Hello\"','2','jmvN3JIEIVI',20,'If',2),(83,'<h3>While</h3>\r\n\r\n<p><strong><span style=\"color:#e74c3c\">While</span></strong> block runs&nbsp;repeatedly&nbsp;as long as a condition is True.</p>\r\n\r\n<p>Here is the while format.</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>while</strong> &lt;condition&gt;<span style=\"color:#e74c3c\"><strong>:</strong></span></p>\r\n\r\n			<p>&nbsp; &nbsp; &lt;block&gt;</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>Here is the real <strong>while</strong> example.</p>\r\n\r\n<p>#code</p>\r\n\r\n<p>i = 0</p>\r\n\r\n<p>while i &lt; 4:</p>\r\n\r\n<p>&nbsp; &nbsp;print(i)</p>\r\n\r\n<p>&nbsp; &nbsp; i += 1</p>\r\n\r\n<p>#end</p>\r\n\r\n<p>#run-1</p>\r\n\r\n<p>0</p>\r\n\r\n<p>1</p>\r\n\r\n<p>2</p>\r\n\r\n<p>3</p>\r\n\r\n<p>#end</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>The following code&nbsp;will loop until the list is empty.</p>\r\n\r\n<p>The empty list means that the condition is False.</p>\r\n\r\n<p>#code</p>\r\n\r\n<p>fruits = [&quot;apple&quot;, &quot;orange&quot;, &quot;melon&quot;]</p>\r\n\r\n<p>while fruits:</p>\r\n\r\n<p>&nbsp; &nbsp;print(fruits.pop())</p>\r\n\r\n<p>#end</p>\r\n\r\n<p>#run-2</p>\r\n\r\n<p>&#39;melon&#39;</p>\r\n\r\n<p>&#39;orange&#39;</p>\r\n\r\n<p>&#39;apple&#39;</p>\r\n\r\n<p>#end</p>','<p>What is the output of the code?</p>','<p>#code</p>\r\n\r\n<p>nums = [1, 2, 3]</p>\r\n\r\n<p>while len(nums) &gt; 0:</p>\r\n\r\n<p>&nbsp; &nbsp;print(nums.pop())</p>\r\n\r\n<p>#end</p>','2019-09-08 21:11:34.000000','',1,5,4,'','1','3','1\r\n2\r\n3','3\r\n2\r\n1','mYQ7AuOYPEQ',27,'While',2),(84,'<h3>Function definition</h3>\r\n\r\n<p>A function is a block of code not to repeat&nbsp;code.</p>\r\n\r\n<p>Just define once and call many times.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>Here is the format of the function definition.</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><span style=\"color:#e74c3c\">def</span> &lt;function name&gt;<span style=\"color:#e74c3c\">():</span></p>\r\n\r\n			<p>&nbsp; &nbsp; &lt;block&gt;</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p><br />\r\nHere is the real function to print a string.</p>\r\n\r\n<p>#code</p>\r\n\r\n<p>def hello():</p>\r\n\r\n<p>&nbsp; &nbsp; print(&quot;hello&quot;)</p>\r\n\r\n<p>#end</p>\r\n\r\n<p><br />\r\nBut without calling a function, the function is not executed.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<h3>Call a function</h3>\r\n\r\n<p>To call a function, use the function name followed by parenthesis:</p>\r\n\r\n<p>#code</p>\r\n\r\n<p>def hello():</p>\r\n\r\n<p>&nbsp; &nbsp; print(&quot;hello&quot;)</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>hello()</p>\r\n\r\n<p>#end</p>','<p>How to call the following function definition?</p>','<p>#code</p>\r\n\r\n<p>def print_world():</p>\r\n\r\n<p><strong>&nbsp; &nbsp; </strong>&nbsp;print(&quot;world&quot;)</p>\r\n\r\n<p>#end</p>','2019-09-09 07:11:44.000000','',1,7,2,'','','','','','EMTuLRgrkXw',32,'Function',1),(85,'<h3>Single Parameter</h3>\r\n\r\n<p>The data can be passed when calling a function.</p>\r\n\r\n<p>Here is the format of the function definition with a parameter.</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><span style=\"color:#e74c3c\">def</span> &lt;function_name&gt;<span style=\"color:#e74c3c\">(</span>&lt;parameter&gt;<span style=\"color:#e74c3c\">):</span></p>\r\n\r\n			<p>&nbsp; &nbsp; &lt;code block&gt;</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>Here is the real function example with a parameter.</p>\r\n\r\n<p>#code</p>\r\n\r\n<p>def sum(num):</p>\r\n\r\n<p>&nbsp; &nbsp; print(num)</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>sum(10)</p>\r\n\r\n<p>#end</p>\r\n\r\n<p>#run-1</p>\r\n\r\n<p>10</p>\r\n\r\n<p>#end</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>A parameter can be a list, set, or dictionary.</p>\r\n\r\n<p>#code</p>\r\n\r\n<p>def sum(nums):</p>\r\n\r\n<p>&nbsp; &nbsp; print(nums)</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>list = [1, 2, 3]</p>\r\n\r\n<p>sum(list)</p>\r\n\r\n<p>#end</p>\r\n\r\n<p>#run-2</p>\r\n\r\n<p>[1, 2, 3]</p>\r\n\r\n<p>#end</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<h3><br />\r\nMultiple parameters</h3>\r\n\r\n<p>Here is the function with multiple parameters.</p>\r\n\r\n<p>#code</p>\r\n\r\n<p>def sum(num1, num2):</p>\r\n\r\n<p>&nbsp; &nbsp; for num in range(num1, num2):</p>\r\n\r\n<p>&nbsp; &nbsp; &nbsp; &nbsp; print(num)</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>sum(10, 14)</p>\r\n\r\n<p>#end</p>\r\n\r\n<p>#run-3</p>\r\n\r\n<p>10</p>\r\n\r\n<p>11</p>\r\n\r\n<p>12</p>\r\n\r\n<p>13</p>\r\n\r\n<p>#end</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<h3><br />\r\nDefault parameter</h3>\r\n\r\n<p>The function will use a default parameter when you call the function without a parameter.</p>\r\n\r\n<p>#code</p>\r\n\r\n<p>def hello(num = 10):</p>\r\n\r\n<p>&nbsp; &nbsp; print(num)</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>hello(1)</p>\r\n\r\n<p>hello(2)</p>\r\n\r\n<p>hello()</p>\r\n\r\n<p>hello(3)</p>\r\n\r\n<p>#end</p>\r\n\r\n<p>#run-4</p>\r\n\r\n<p>1</p>\r\n\r\n<p>2</p>\r\n\r\n<p>10</p>\r\n\r\n<p>3</p>\r\n\r\n<p>#end</p>','<p>What is the output of the code?</p>','<p>#code</p>\r\n\r\n<p>def sum(num):</p>\r\n\r\n<p>&nbsp; &nbsp; sum = 0</p>\r\n\r\n<p>&nbsp; &nbsp; for n in range(num):</p>\r\n\r\n<p>&nbsp; &nbsp; &nbsp; &nbsp; sum += n</p>\r\n\r\n<p>&nbsp; &nbsp; return sum</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>print(sum(5))</p>\r\n\r\n<p>#end</p>','2019-09-09 07:28:02.000000','',1,7,2,'','','','','','',33,'Parameter',2),(86,'<p>To return a value, you can use the <span style=\"color:#e74c3c\">return</span> keyword.</p>\r\n\r\n<p>#code</p>\r\n\r\n<p>def echo(str):</p>\r\n\r\n<p>&nbsp; &nbsp; return str + &quot; world&quot;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>ans = echo(&quot;hello&quot;)</p>\r\n\r\n<p>print(ans)</p>\r\n\r\n<p>#end</p>\r\n\r\n<p>#run-1</p>\r\n\r\n<p>&#39;hello world&#39;</p>\r\n\r\n<p>#end</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>The following function is to return the sum up to num.</p>\r\n\r\n<p>#code</p>\r\n\r\n<p>def add(num):</p>\r\n\r\n<p>&nbsp; &nbsp; sum = 0</p>\r\n\r\n<p>&nbsp; &nbsp; for n in range(num):</p>\r\n\r\n<p>&nbsp; &nbsp; &nbsp; &nbsp; sum += n</p>\r\n\r\n<p>&nbsp; &nbsp; return sum</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>print(add(10))</p>\r\n\r\n<p>#end</p>\r\n\r\n<p>#run-2</p>\r\n\r\n<p>45</p>\r\n\r\n<p><strong><span style=\"color:#27ae60\">Explanation</span></strong>:</p>\r\n\r\n<p>0 + 1 + 2 + 3 + 4 + 5 + 6 + 7 + 8 + 9 = 45</p>\r\n\r\n<p>#end</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<h3>Multiple Return</h3>\r\n\r\n<p>We can return multiple values from a function.</p>\r\n\r\n<p>#code</p>\r\n\r\n<p>def hello():</p>\r\n\r\n<p>&nbsp; &nbsp; return &quot;hello&quot;, &quot;world&quot;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>str1, str2 = hello()</p>\r\n\r\n<p>print(str1)</p>\r\n\r\n<p>print(str2)</p>\r\n\r\n<p>#end</p>\r\n\r\n<p>#run-3</p>\r\n\r\n<p>&#39;hello&#39;</p>\r\n\r\n<p>&#39;world&#39;</p>\r\n\r\n<p>#end</p>','<p>What is the result of the code?</p>','<p>#code</p>\r\n\r\n<p>def multiply(num):</p>\r\n\r\n<p>&nbsp; &nbsp; ans = 1</p>\r\n\r\n<p>&nbsp; &nbsp; for n in range(1, num):</p>\r\n\r\n<p>&nbsp; &nbsp; &nbsp; &nbsp; ans *= n</p>\r\n\r\n<p>&nbsp; &nbsp; return ans</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>print(multiply(5))</p>\r\n\r\n<p>#end</p>','2019-09-09 07:49:22.000000','',1,7,2,'','','','','','',34,'Return',2),(87,'<h1>Set</h1>\r\n\r\n<p>Set is one of the collections for unique values.</p>\r\n\r\n<h3>&nbsp;</h3>\r\n\r\n<h3>1. Create</h3>\r\n\r\n<p>Create&nbsp;<strong>set</strong> with&nbsp;curly brackets.</p>\r\n\r\n<p>#code</p>\r\n\r\n<p>nums = {1, 2, 3}</p>\r\n\r\n<p>print(nums)</p>\r\n\r\n<p>#end</p>\r\n\r\n<p>#run-1</p>\r\n\r\n<p>{1, 2, 3}</p>\r\n\r\n<p>#end</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<h3><br />\r\n2. Add</h3>\r\n\r\n<p>Add a&nbsp;value to the <strong>set</strong>.&nbsp;</p>\r\n\r\n<p>It will be ignored if you try to add the duplicated value.</p>\r\n\r\n<p>#code</p>\r\n\r\n<p>nums = {1, 2, 3}</p>\r\n\r\n<p>nums.add(4)</p>\r\n\r\n<p>print(nums)</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>nums.add(4)</p>\r\n\r\n<p>print(nums)</p>\r\n\r\n<p>#end</p>\r\n\r\n<p>#run-2</p>\r\n\r\n<p>{1, 2, 3, 4}</p>\r\n\r\n<p>{1, 2, 3, 4}</p>\r\n\r\n<p><span style=\"color:#27ae60\"><strong>Explanation</strong></span>:</p>\r\n\r\n<p>Adding a value was ignored when a&nbsp;set already has the same value.&nbsp;</p>\r\n\r\n<p>#end</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<h3>3. Pop</h3>\r\n\r\n<p>Pop a random value from the set because <strong>set</strong> are unordered.</p>\r\n\r\n<p>#code</p>\r\n\r\n<p>nums = {1, 2, 3}</p>\r\n\r\n<p>popped_value = nums.pop()&nbsp; &nbsp; # removed value</p>\r\n\r\n<p>print(nums)&nbsp; &nbsp; # the value after removal</p>\r\n\r\n<p>#end</p>\r\n\r\n<p>#run-3</p>\r\n\r\n<p>It is not always the same value.</p>\r\n\r\n<p><span style=\"color:#27ae60\"><strong>Explanation</strong></span>:</p>\r\n\r\n<p>A set does not have an order.&nbsp; So the result is not always the same.</p>\r\n\r\n<p>#end</p>','<p>Write a code to return after adding number 4.</p>','<p>Example 1:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>: {1}</p>\r\n\r\n			<p><strong>Output</strong>: {1, 4}&nbsp;</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>Example 2:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>: {1, 2}</p>\r\n\r\n			<p><strong>Output</strong>: {1, 2, 4}&nbsp;</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>&nbsp;</p>','2019-09-21 18:02:28.000000','',1,23,1,'def solve(nums):','','','','','8Gk14pLb8ao',70,'Set',2),(88,'<p>1. When the condition is True, the first block(if block)&nbsp;will be executed.&nbsp;</p>\r\n\r\n<p>2. If not, the second&nbsp;block(else block)&nbsp;will be executed.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>Here are some examples.</p>\r\n\r\n<p>#code</p>\r\n\r\n<p>num = 2</p>\r\n\r\n<p>if num&nbsp;&gt; 1:</p>\r\n\r\n<p>&nbsp; &nbsp; print(&quot;True&quot;)</p>\r\n\r\n<p>else:</p>\r\n\r\n<p>&nbsp; &nbsp; print(&quot;False&quot;)</p>\r\n\r\n<p>#end</p>\r\n\r\n<p>#run-1</p>\r\n\r\n<p>True</p>\r\n\r\n<p>#end</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>#code</p>\r\n\r\n<p>num = 1</p>\r\n\r\n<p>if num&nbsp;&gt; 2:</p>\r\n\r\n<p>&nbsp; &nbsp; print(&quot;True&quot;)</p>\r\n\r\n<p>else:</p>\r\n\r\n<p>&nbsp; &nbsp; print(&quot;False&quot;)</p>\r\n\r\n<p>#end</p>\r\n\r\n<p>#run-1</p>\r\n\r\n<p>False</p>\r\n\r\n<p>#end</p>','<p>What is the output of the code?</p>','<p>#code</p>\r\n\r\n<p>str = &quot;hello&quot;</p>\r\n\r\n<p>if str == &quot;HELLO&quot;:</p>\r\n\r\n<p>&nbsp; &nbsp; print(True)</p>\r\n\r\n<p>else:</p>\r\n\r\n<p>&nbsp; &nbsp; print(False)</p>\r\n\r\n<p>#end</p>','2019-09-23 03:59:22.000000','',1,16,2,'','','','','','',21,'If Else',2),(89,'<p>1. When&nbsp;the <strong>if</strong> condition is True, <strong>only the first block</strong>&nbsp;will be executed.&nbsp;</p>\r\n\r\n<p>2. When the <strong>if</strong> condition is False and the <strong>elif</strong> condition is True, <strong>the second block</strong>&nbsp;will be executed.</p>\r\n\r\n<p>3. When the <strong>if</strong> condition is False and the <strong>elif</strong> condition is False, <strong>the last block</strong>&nbsp;will be executed.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>Here are some examples of&nbsp;<strong>if</strong>.</p>\r\n\r\n<p>#code</p>\r\n\r\n<p>if 2 &gt; 1:</p>\r\n\r\n<p>&nbsp; &nbsp; print(&quot;First block&quot;)</p>\r\n\r\n<p>elif 3 &gt; 2:</p>\r\n\r\n<p>&nbsp; &nbsp; print(&quot;Second block&quot;)</p>\r\n\r\n<p>else:</p>\r\n\r\n<p>&nbsp; &nbsp; print(&quot;Third block&quot;)</p>\r\n\r\n<p>#end</p>\r\n\r\n<p>#run-1</p>\r\n\r\n<p>&#39;First block&#39;</p>\r\n\r\n<p>#end</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>#code</p>\r\n\r\n<p>if 1&nbsp;&gt; 2:</p>\r\n\r\n<p>&nbsp; &nbsp; print(&quot;First block&quot;)</p>\r\n\r\n<p>elif 3 &gt; 2:</p>\r\n\r\n<p>&nbsp; &nbsp; print(&quot;Second block&quot;)</p>\r\n\r\n<p>else:</p>\r\n\r\n<p>&nbsp; &nbsp; print(&quot;Third block&quot;)</p>\r\n\r\n<p>#end</p>\r\n\r\n<p>#run-2</p>\r\n\r\n<p>&#39;Second block&#39;</p>\r\n\r\n<p>#end</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>#code</p>\r\n\r\n<p>if 1&nbsp;&gt; 2:</p>\r\n\r\n<p>&nbsp; &nbsp; print(&quot;First block&quot;)</p>\r\n\r\n<p>elif 3 &lt;&nbsp;2:</p>\r\n\r\n<p>&nbsp; &nbsp; print(&quot;Second block&quot;)</p>\r\n\r\n<p>else:</p>\r\n\r\n<p>&nbsp; &nbsp; print(&quot;Third block&quot;)</p>\r\n\r\n<p>#end</p>\r\n\r\n<p>#run-3</p>\r\n\r\n<p>&#39;Third block&#39;</p>\r\n\r\n<p>#end</p>','<p>What will be printed?</p>','<p>#code</p>\r\n\r\n<p>num = 2</p>\r\n\r\n<p>if num &gt; 2:</p>\r\n\r\n<p>&nbsp; &nbsp; print(&quot;num is greater than 2&quot;)</p>\r\n\r\n<p>elif num &lt; 2:</p>\r\n\r\n<p>&nbsp; &nbsp; print(&quot;num is less than 2&quot;)</p>\r\n\r\n<p>else:</p>\r\n\r\n<p>&nbsp; &nbsp; print(&quot;num is&nbsp;2&quot;)</p>\r\n\r\n<p>#end</p>','2019-09-23 04:03:26.000000','',1,16,4,'','num is greater than 2','num is less than 2','num is 2','num','',22,'If Elif Else',3),(90,'<p>String is also an iterable value&nbsp;because it contains a sequence of characters.</p>\r\n\r\n<p>#code</p>\r\n\r\n<p>for ch in &quot;hello&quot;:</p>\r\n\r\n<p>&nbsp; &nbsp; print(ch)</p>\r\n\r\n<p>#end</p>\r\n\r\n<p>#run-1</p>\r\n\r\n<p>&quot;h&quot;</p>\r\n\r\n<p>&quot;e&quot;</p>\r\n\r\n<p>&quot;l&quot;</p>\r\n\r\n<p>&quot;l&quot;</p>\r\n\r\n<p>&quot;o&quot;</p>\r\n\r\n<p>#end</p>','<p>What is the output of the code?</p>','<p>#code</p>\r\n\r\n<p>s = 0</p>\r\n\r\n<p>for ch in &quot;hello&quot;:</p>\r\n\r\n<p>&nbsp; &nbsp; s += 1</p>\r\n\r\n<p>#end</p>\r\n\r\n<p>&nbsp;</p>','2019-09-23 04:09:40.000000','',1,1,4,'','\"h\"\r\n\"e\"\r\n\"l\"\r\n\"l\"\r\n\"o\"','\"hello\"','0','5','',24,'For in string',2),(91,'<p>You can use modulus(%) to know whether the number is odd or even.&nbsp;</p>\r\n\r\n<p>Modulus will return the remainder.</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p>1 % 2 = 1</p>\r\n\r\n			<p>2 % 2 = 0</p>\r\n\r\n			<p>3 % 2 = 1</p>\r\n\r\n			<p>4 % 2 = 0</p>\r\n\r\n			<p>5 % 2 = 1</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>','<p>Write a function to find the sum of odd numbers in the list.</p>','<p>Example 1:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>: [1, 2, 3, 4, 5]</p>\r\n\r\n			<p><strong>Output</strong>: 9</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p><strong><span style=\"color:#27ae60\">Explanation</span>:&nbsp;</strong></p>\r\n\r\n<p>1 + 3 + 5 = 9</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>Example 2:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>: [2, 4, 5, 6, 7]</p>\r\n\r\n			<p><strong>Output</strong>: 12</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p><strong><span style=\"color:#27ae60\">Explanation</span>:&nbsp;</strong></p>\r\n\r\n<p>5 + 7 = 12</p>\r\n\r\n<p>&nbsp;</p>','2019-09-23 04:45:38.000000','',1,4,1,'def solve(nums):','','','','','',62,'Sum of odd numbers',1),(92,'<h4>Get a length</h4>\r\n\r\n<p>len() function will return the length of the&nbsp;set.</p>\r\n\r\n<p>#code</p>\r\n\r\n<p>nums = {0, 1, 2, 3}</p>\r\n\r\n<p>print(len(nums))</p>\r\n\r\n<p>#end</p>\r\n\r\n<p>#run-1</p>\r\n\r\n<p>4</p>\r\n\r\n<p>#end</p>','<p>Write a function to return the length of the set.</p>','<p>Example 1:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>: {2, 3, 4, 5}</p>\r\n\r\n			<p><strong>Output</strong>: 4</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p><br />\r\n&nbsp;</p>','2019-09-23 08:00:26.000000','',1,23,1,'def solve(nums):','','','','','',72,'Set length',1),(93,'<h3>Union</h3>\r\n\r\n<p>You can join two sets.&nbsp; After joining, <strong>set</strong> still has&nbsp;unique values.</p>\r\n\r\n<p>#code</p>\r\n\r\n<p>nums1 = {1, 2, 3}</p>\r\n\r\n<p>nums2 = {2, 4, 5}</p>\r\n\r\n<p>print(nums1.union(nums2))</p>\r\n\r\n<p>#end</p>\r\n\r\n<p>#run-1</p>\r\n\r\n<p>{1, 2, 3, 4, 5}</p>\r\n\r\n<p>#end</p>','<p>Write a function to return the union of the two sets.</p>','<p>Example 1:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>: {1, 2, 3}, {3, 4, 5}</p>\r\n\r\n			<p><strong>Output</strong>: {1, 2, 3, 4, 5}</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>Example 2:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>: {1}, {2, 3, 4}</p>\r\n\r\n			<p><strong>Output</strong>: {1, 2, 3, 4}</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>','2019-09-23 08:05:14.000000','',1,23,1,'def solve(nums1, nums2):','','','','','',73,'Set Union',0),(94,'<p>How to calculate Average:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p>Average = Sum / Count</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>','<p>Write a code to return the average of the values.</p>','<p>Example 1:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>: [1, 2, 3, 4, 5]</p>\r\n\r\n			<p><strong>Output</strong>: 3</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p><span style=\"color:#27ae60\"><strong>Explanation</strong></span>:</p>\r\n\r\n<p>(1 + 2 + 3 + 4 + 5) / 5 = 3</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>Example 2:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>: [1, 3, 5, 7, 9]</p>\r\n\r\n			<p><strong>Output</strong>: 5</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p><span style=\"color:#27ae60\"><strong>Explanation: </strong></span></p>\r\n\r\n<p>(1 + 3 + 5 + 7 + 9) / 5 = 5</p>','2019-09-24 01:14:11.000000','',1,8,1,'def solve(nums):','','','','','',129,'Average',1),(95,'<h3>Not</h3>\r\n\r\n<p>Convert&nbsp;<strong>True</strong> to <strong>False</strong>, or <strong>False</strong> to <strong>True</strong>.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<h4><strong>For Boolean</strong></h4>\r\n\r\n<p>#code</p>\r\n\r\n<p>bool = not True</p>\r\n\r\n<p>print(bool)&nbsp;</p>\r\n\r\n<p>#end</p>\r\n\r\n<p>#run-1</p>\r\n\r\n<p>False</p>\r\n\r\n<p>#end</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<h4><br />\r\n<strong>For String</strong></h4>\r\n\r\n<p>Empty string means <strong>False</strong>.&nbsp; The other strings&nbsp;are <strong>True</strong>.</p>\r\n\r\n<p>#code</p>\r\n\r\n<p>print(not &quot;&quot;)</p>\r\n\r\n<p>print(not &quot;pypykids&quot;)</p>\r\n\r\n<p>#end</p>\r\n\r\n<p>#run-2</p>\r\n\r\n<p>True</p>\r\n\r\n<p>False</p>\r\n\r\n<p>#end</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<h4><strong>For Number</strong></h4>\r\n\r\n<p>Zero(0) means <strong>False</strong>.&nbsp; The other values are <strong>True</strong>.</p>\r\n\r\n<p>#code</p>\r\n\r\n<p>print(not 0)</p>\r\n\r\n<p>print(not 100)&nbsp;</p>\r\n\r\n<p>#end</p>\r\n\r\n<p>#run-3</p>\r\n\r\n<p>True</p>\r\n\r\n<p>False</p>\r\n\r\n<p>#end</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<h4><strong>For Collection</strong></h4>\r\n\r\n<p>Empty collection&nbsp;means <strong>False</strong>.&nbsp;</p>\r\n\r\n<p>If a collection has values, it is <strong>True</strong>.</p>\r\n\r\n<p>#code</p>\r\n\r\n<p>print(not [])</p>\r\n\r\n<p>print(not [1, 2, 3])&nbsp;</p>\r\n\r\n<p>#end</p>\r\n\r\n<p>#run-4</p>\r\n\r\n<p>True</p>\r\n\r\n<p>False</p>\r\n\r\n<p>#end</p>','<p>Find the different output.</p>','','2019-09-24 01:36:32.000000','',1,13,4,'','not []','not {}','not \"\"','not 1','H5Bsc_jSJWM',13,'Logical Operator (Not)',1),(96,'<h3>And</h3>\r\n\r\n<p>The expression is <strong>True</strong> when the conditions on both the sides of the&nbsp;<strong>and</strong> operator are true.</p>\r\n\r\n<p>#code</p>\r\n\r\n<p>bool = True and True</p>\r\n\r\n<p>print(bool)&nbsp;</p>\r\n\r\n<p>#end</p>\r\n\r\n<p>#run-1</p>\r\n\r\n<p>True</p>\r\n\r\n<p>#end</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>#code</p>\r\n\r\n<p>bool = 2==2 and 1==1</p>\r\n\r\n<p>print(bool)&nbsp;</p>\r\n\r\n<p>#end</p>\r\n\r\n<p>#run-2</p>\r\n\r\n<p>True</p>\r\n\r\n<p>#end</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>#code</p>\r\n\r\n<p>bool = False and True</p>\r\n\r\n<p>print(bool)&nbsp;</p>\r\n\r\n<p>#end</p>\r\n\r\n<p>#run-3</p>\r\n\r\n<p>False</p>\r\n\r\n<p>#end</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>#code</p>\r\n\r\n<p>bool = 2&gt;3&nbsp;and 1==1</p>\r\n\r\n<p>print(bool)&nbsp;</p>\r\n\r\n<p>#end</p>\r\n\r\n<p>#run-4</p>\r\n\r\n<p>False</p>\r\n\r\n<p>#end</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>#code</p>\r\n\r\n<p>bool = False and False</p>\r\n\r\n<p>print(bool)&nbsp;</p>\r\n\r\n<p>#end</p>\r\n\r\n<p>#run-5</p>\r\n\r\n<p>False</p>\r\n\r\n<p>#end</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>#code</p>\r\n\r\n<p>bool = 2&gt;3&nbsp;and 1&gt;1</p>\r\n\r\n<p>print(bool)&nbsp;</p>\r\n\r\n<p>#end</p>\r\n\r\n<p>#run-6</p>\r\n\r\n<p>False</p>\r\n\r\n<p>#end</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<h5>Summary</h5>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<thead>\r\n		<tr>\r\n			<th scope=\"col\">&nbsp;</th>\r\n			<th scope=\"col\"><span style=\"color:#3498db\">True</span></th>\r\n			<th scope=\"col\"><span style=\"color:#3498db\">False</span></th>\r\n		</tr>\r\n	</thead>\r\n	<tbody>\r\n		<tr>\r\n			<td><span style=\"color:#3498db\"><strong>True</strong></span></td>\r\n			<td>True</td>\r\n			<td>False</td>\r\n		</tr>\r\n		<tr>\r\n			<td><span style=\"color:#3498db\"><strong>False</strong></span></td>\r\n			<td>False</td>\r\n			<td>False</td>\r\n		</tr>\r\n	</tbody>\r\n</table>','<p>Find the different output.</p>','','2019-09-24 01:55:16.000000','',1,13,4,'','True and 1 == 2','False and 2 > 1','False and True','4 == 4 and True','',15,'Logical Operator (And)',0),(97,'<p>Every character can be accessed by an index.&nbsp; Index 0, -1 indicate the first and last character, respectively.</p>\r\n\r\n<p>#code</p>\r\n\r\n<p>str = &quot;PyPyKids&quot;</p>\r\n\r\n<p>print(str[0])</p>\r\n\r\n<p>print(str[1])</p>\r\n\r\n<p>print(str[2])</p>\r\n\r\n<p>#end</p>\r\n\r\n<p>#run-1</p>\r\n\r\n<p>&#39;P&#39;</p>\r\n\r\n<p>&#39;y&#39;</p>\r\n\r\n<p>&#39;P&#39;</p>\r\n\r\n<p>#end</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>#code</p>\r\n\r\n<p>str = &quot;PyPyKids&quot;</p>\r\n\r\n<p>print(str[-1])</p>\r\n\r\n<p>print(str[-2])</p>\r\n\r\n<p>print(str[-3])</p>\r\n\r\n<p>print(str[-4])</p>\r\n\r\n<p>#end</p>\r\n\r\n<p>#run-2</p>\r\n\r\n<p>&#39;s&#39;</p>\r\n\r\n<p>&#39;d&#39;</p>\r\n\r\n<p>&#39;i&#39;</p>\r\n\r\n<p>&#39;k&#39;</p>\r\n\r\n<p>#end</p>\r\n\r\n<p>&nbsp;\r\n<p>&nbsp;</p>\r\n</p>\r\n\r\n<h3>Summary</h3>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>&nbsp;</td>\r\n			<td>P</td>\r\n			<td>y</td>\r\n			<td>P</td>\r\n			<td>y</td>\r\n			<td>K</td>\r\n			<td>i</td>\r\n			<td>d</td>\r\n			<td>s</td>\r\n		</tr>\r\n		<tr>\r\n			<td>Index from the front</td>\r\n			<td>0</td>\r\n			<td>1</td>\r\n			<td>2</td>\r\n			<td>3</td>\r\n			<td>4</td>\r\n			<td>5</td>\r\n			<td>6</td>\r\n			<td>7</td>\r\n		</tr>\r\n		<tr>\r\n			<td>index from behind</td>\r\n			<td>-8</td>\r\n			<td>-7</td>\r\n			<td>-6</td>\r\n			<td>-5</td>\r\n			<td>-4</td>\r\n			<td>-3</td>\r\n			<td>-2</td>\r\n			<td>-1</td>\r\n		</tr>\r\n	</tbody>\r\n</table>','<p>What will be printed?</p>','<p>#code</p>\r\n\r\n<p>print(&quot;Hello world&quot;[5])</p>\r\n\r\n<p>#end</p>','2019-09-24 08:02:59.000000','',1,3,4,'','\"H\"','\"Hello\"','\" \"','\"o\"','LJW1MQBz2DE',37,'Index a character',0),(98,'<h3>Pop</h3>\r\n\r\n<p>Take out the value from the end.&nbsp;&nbsp;</p>\r\n\r\n<p>#code</p>\r\n\r\n<p>nums = [1, 2, 3]</p>\r\n\r\n<p>popped_value&nbsp;= nums.pop()</p>\r\n\r\n<p>print(popped_value)</p>\r\n\r\n<p>print(nums)</p>\r\n\r\n<p>#end</p>\r\n\r\n<p>#run-1</p>\r\n\r\n<p>3</p>\r\n\r\n<p>[1, 2]</p>\r\n\r\n<p><span style=\"color:#27ae60\"><strong>Explanation</strong></span>:</p>\r\n\r\n<p><strong>popped_value</strong> is the last value of the list.</p>\r\n\r\n<p><strong>nums</strong> is the remaining list.</p>\r\n\r\n<p>#end</p>','<p>What will be print?</p>','<p>#code</p>\r\n\r\n<p>nums = [4, 3, 2, 1]</p>\r\n\r\n<p>pop = nums.pop()</p>\r\n\r\n<p>print(pop)</p>\r\n\r\n<p>print(nums)</p>\r\n\r\n<p>#end</p>','2019-09-24 08:17:57.000000','',1,4,4,'','4\r\n[3, 2, 1]','1\r\n[4, 3, 2, 1]','1\r\n[4]','1\r\n[4, 3, 2]','',51,'Pop a value from a list',1),(99,'<h3>When a list have a single value:</h3>\r\n\r\n<p>Remove the&nbsp;value from a list.</p>\r\n\r\n<p>#code</p>\r\n\r\n<p>nums = [1, 2, 3]</p>\r\n\r\n<p>nums.remove(2)</p>\r\n\r\n<p>print(nums)</p>\r\n\r\n<p>#end</p>\r\n\r\n<p>#run-1</p>\r\n\r\n<p>[1, 3]</p>\r\n\r\n<p>#end</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<h3>When a list have duplicated values:</h3>\r\n\r\n<p>Remove() will remove&nbsp;the&nbsp;first value.</p>\r\n\r\n<p>#code</p>\r\n\r\n<p>nums = [1, 2, 3, 2]</p>\r\n\r\n<p>nums.remove(2)</p>\r\n\r\n<p>print(nums)</p>\r\n\r\n<p>#end</p>\r\n\r\n<p>#run-2</p>\r\n\r\n<p>[1, 3, 2]</p>\r\n\r\n<p>#end</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><br />\r\nWhen there is no value at the index:</p>\r\n\r\n<p>Remove() will throw&nbsp;an error.</p>\r\n\r\n<p>#code</p>\r\n\r\n<p>nums = [1, 2, 3, 2]</p>\r\n\r\n<p>nums.remove(4)</p>\r\n\r\n<p>print(nums)</p>\r\n\r\n<p>#end</p>\r\n\r\n<p>#run-3</p>\r\n\r\n<p>ValueError: list.remove(x): x not in list</p>\r\n\r\n<p>#end</p>','<p>What will be printed?</p>','<p>#code</p>\r\n\r\n<p>nums = [&quot;hello&quot;, &quot;world&quot;, &nbsp;0, 1, 2]</p>\r\n\r\n<p>nums.remove(1)</p>\r\n\r\n<p>print(nums)</p>\r\n\r\n<p>#end</p>','2019-09-24 08:23:18.000000','',1,4,4,'','[\"world\",  0, 1, 2]','[\"hello\", 0, 1, 2]','[\"hello\", \"world\",  0, 2]','Error','',52,'Remove a value from a list',1),(100,'<p>You can use&nbsp;<strong>in </strong>to check whether the string is in the list or not.</p>\r\n\r\n<p>#code</p>\r\n\r\n<p>list = [2, 4, 6, 8]</p>\r\n\r\n<p>print(4 in list)</p>\r\n\r\n<p>#end</p>\r\n\r\n<p>#run-1</p>\r\n\r\n<p>True</p>\r\n\r\n<p>#end</p>','<p>Write a function&nbsp;to remove the second list from the first list.</p>','<p>Example 1:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>: [1, 2, 3, 4, 5], [3, 4, 5, 6]</p>\r\n\r\n			<p><strong>Output</strong>: [1, 2]</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>Explanation:</p>\r\n\r\n<p>[3, 4, 5] is common values.&nbsp;</p>\r\n\r\n<p>[1, 2, 3, 4, 5] - [3, 4, 5] = [1, 2]</p>','2019-09-24 08:44:46.000000','',1,4,1,'def solve(nums1, nums2):','','','','','',64,'Remove the duplicated values',2),(101,'<p>You can check every value by using <strong>For</strong>.</p>','<p>Write a function to remove negative values from a list.</p>','<p>Example 1:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>: [0, 1, -4, 3, -5]</p>\r\n\r\n			<p><strong>Output</strong>: [0, 1, 3]</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>Example 2:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>: [-5, -4, 3]</p>\r\n\r\n			<p><strong>Output</strong>: [3]</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>','2019-09-24 09:13:16.000000','',1,4,1,'def solve(nums):','','','','','',60,'Remove negative values from a list',1),(102,'<h4>Print every character from a string:</h4>\r\n\r\n<p>#code</p>\r\n\r\n<p>str = &quot;hello&quot;</p>\r\n\r\n<p>for ch in str:</p>\r\n\r\n<p>&nbsp; &nbsp; print(ch)</p>\r\n\r\n<p>#end</p>\r\n\r\n<p>#run-1</p>\r\n\r\n<p>&#39;h&#39;</p>\r\n\r\n<p>&#39;e&#39;</p>\r\n\r\n<p>&#39;l&#39;</p>\r\n\r\n<p>&#39;l&#39;</p>\r\n\r\n<p>&#39;o&#39;</p>\r\n\r\n<p>#end</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<h4>Append a value into a list:</h4>\r\n\r\n<p>#code</p>\r\n\r\n<p>list = []</p>\r\n\r\n<p>list.append(&quot;hello&quot;)</p>\r\n\r\n<p>list.append(&quot;world&quot;)</p>\r\n\r\n<p>#end</p>\r\n\r\n<p>#run-2</p>\r\n\r\n<p>[&#39;hello&#39;, &#39;world&#39;]</p>\r\n\r\n<p>#end</p>\r\n\r\n<p>&nbsp;</p>','<p>Write a function to convert a string to a list.</p>','<p>Example 1:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>: &quot;hello&quot;</p>\r\n\r\n			<p><strong>Output</strong>: [&quot;h&quot;, &quot;e&quot;, &quot;l&quot;, &quot;l&quot;, &quot;o&quot;]</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>','2019-09-24 09:17:08.000000','',1,4,1,'def solve(str):','','','','','',58,'Convert a string to a list',0),(103,'<p>Set can not allow to have duplicated values.</p>\r\n\r\n<h4>Convert from List&nbsp;to Set:</h4>\r\n\r\n<p>#code</p>\r\n\r\n<p>set_nums = {1, 2, 3}</p>\r\n\r\n<p>list_nums&nbsp;= list(set_nums)</p>\r\n\r\n<p>#end</p>\r\n\r\n<h4><br />\r\nConvert from Set to List:</h4>\r\n\r\n<p>#code</p>\r\n\r\n<p>list_nums = {1, 2, 3}</p>\r\n\r\n<p>set_nums&nbsp;= list(list_nums)</p>\r\n\r\n<p>#end</p>','<p>Write a code to remove duplicated values from a list</p>','<p>Example 1:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>: [1, 2, 1, 2, 3]</p>\r\n\r\n			<p><strong>Output</strong>: [1, 2, 3]</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>Example 2:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>: [1, 2, 3, 4, 1]</p>\r\n\r\n			<p><strong>Output</strong>: [1, 2, 3, 4]</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>','2019-09-24 09:22:13.000000','',1,23,1,'def solve(nums):','','','','','',75,'Remove duplicated values from a list',1),(104,'<h3>Create a variable</h3>\r\n\r\n<p>Variables are containers for storing data values.</p>\r\n\r\n<p>#code</p>\r\n\r\n<p>num = 1</p>\r\n\r\n<p>nums = [1, 2, 3]</p>\r\n\r\n<p>#end</p>\r\n\r\n<h3><br />\r\nCreate multiple variables</h3>\r\n\r\n<p>The following code is same as the previous two lines.</p>\r\n\r\n<p>#code</p>\r\n\r\n<p>num, nums = 1, [1, 2, 3]</p>\r\n\r\n<p>#end</p>','<p>What is the value of fruit2 variable ?</p>','<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p>fruit1 = &quot;grape&quot;</p>\r\n\r\n			<p>fruit2, fruit3, fruit4 = &quot;apple&quot;, &quot;orange&quot;, &quot;watermelon&quot;</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p><br />\r\n&nbsp;</p>','2019-09-25 03:02:29.000000','',1,14,4,'','\"grape\"','\"apple\"','\"orange\"','\"watermelon\"','OO0NC_68LUc',6,'Create variables',2),(105,'<p>You can slice a string to get a substring.</p>\r\n\r\n<p>#code</p>\r\n\r\n<p>str = &quot;PyPyKids&quot;</p>\r\n\r\n<p>print(str[2:6])</p>\r\n\r\n<p>#end</p>\r\n\r\n<p>#run-1</p>\r\n\r\n<p>&#39;PyKi&#39;</p>\r\n\r\n<p><span style=\"color:#27ae60\"><strong>Explanation</strong></span>:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>&nbsp;</td>\r\n			<td>P</td>\r\n			<td>y</td>\r\n			<td><span style=\"color:#e74c3c\"><strong>P</strong></span></td>\r\n			<td><span style=\"color:#e74c3c\"><strong>y</strong></span></td>\r\n			<td><span style=\"color:#e74c3c\"><strong>K</strong></span></td>\r\n			<td><span style=\"color:#e74c3c\"><strong>i</strong></span></td>\r\n			<td>d</td>\r\n			<td>s</td>\r\n		</tr>\r\n		<tr>\r\n			<td>index</td>\r\n			<td>0</td>\r\n			<td>1</td>\r\n			<td><span style=\"color:#e74c3c\"><strong>2</strong></span></td>\r\n			<td><span style=\"color:#e74c3c\"><strong>3</strong></span></td>\r\n			<td><span style=\"color:#e74c3c\"><strong>4</strong></span></td>\r\n			<td><span style=\"color:#e74c3c\"><strong>5</strong></span></td>\r\n			<td>6</td>\r\n			<td>7</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>str[2:6] are characters starting at index 2(inclusive) and extending up to 5(exclusive).</p>\r\n\r\n<p>#end</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>#code</p>\r\n\r\n<p>str = &quot;PyPyKids&quot;</p>\r\n\r\n<p>print(str[4:])</p>\r\n\r\n<p>#end</p>\r\n\r\n<p>#run-2</p>\r\n\r\n<p>&#39;Kids&#39;</p>\r\n\r\n<p><span style=\"color:#27ae60\"><strong>Explanation</strong></span>:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>&nbsp;</td>\r\n			<td>P</td>\r\n			<td>y</td>\r\n			<td><span style=\"color:#000000\">P</span></td>\r\n			<td><span style=\"color:#000000\">y</span></td>\r\n			<td><span style=\"color:#e74c3c\"><strong>K</strong></span></td>\r\n			<td><span style=\"color:#e74c3c\"><strong>i</strong></span></td>\r\n			<td><span style=\"color:#e74c3c\"><strong>d</strong></span></td>\r\n			<td><span style=\"color:#e74c3c\"><strong>s</strong></span></td>\r\n		</tr>\r\n		<tr>\r\n			<td>index</td>\r\n			<td>0</td>\r\n			<td>1</td>\r\n			<td><span style=\"color:#000000\">2</span></td>\r\n			<td><span style=\"color:#000000\">3</span></td>\r\n			<td><span style=\"color:#e74c3c\"><strong>4</strong></span></td>\r\n			<td><span style=\"color:#e74c3c\"><strong>5</strong></span></td>\r\n			<td><span style=\"color:#e74c3c\"><strong>6</strong></span></td>\r\n			<td><span style=\"color:#e74c3c\"><strong>7</strong></span></td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>str[4:] are characters starting at index 2(inclusive) and extending up to the end.</p>\r\n\r\n<p>#end</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>#code</p>\r\n\r\n<p>str = &quot;PyPyKids&quot;</p>\r\n\r\n<p>print(str[:4])</p>\r\n\r\n<p>#end</p>\r\n\r\n<p>#run-3</p>\r\n\r\n<p>&#39;PyPy&#39;</p>\r\n\r\n<p><span style=\"color:#27ae60\"><strong>Explanation</strong></span>:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>&nbsp;</td>\r\n			<td><span style=\"color:#e74c3c\"><strong>P</strong></span></td>\r\n			<td><span style=\"color:#e74c3c\"><strong>y</strong></span></td>\r\n			<td><span style=\"color:#e74c3c\"><strong>P</strong></span></td>\r\n			<td><span style=\"color:#e74c3c\"><strong>y</strong></span></td>\r\n			<td><span style=\"color:#000000\">K</span></td>\r\n			<td><span style=\"color:#000000\">i</span></td>\r\n			<td><span style=\"color:#000000\">d</span></td>\r\n			<td><span style=\"color:#000000\">s</span></td>\r\n		</tr>\r\n		<tr>\r\n			<td>index</td>\r\n			<td><span style=\"color:#e74c3c\"><strong>0</strong></span></td>\r\n			<td><span style=\"color:#e74c3c\"><strong>1</strong></span></td>\r\n			<td><span style=\"color:#e74c3c\"><strong>2</strong></span></td>\r\n			<td><span style=\"color:#e74c3c\"><strong>3</strong></span></td>\r\n			<td><span style=\"color:#000000\">4</span></td>\r\n			<td><span style=\"color:#000000\">5</span></td>\r\n			<td><span style=\"color:#000000\">6</span></td>\r\n			<td><span style=\"color:#000000\">7</span></td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>str[:4] are characters starting from the beginning and extending up to 4(exclusive).</p>\r\n\r\n<p>#end</p>\r\n\r\n<p>&nbsp;</p>','<p>Write a function to return&nbsp;the 4th through 8th characters</p>','<p>Example 1:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>: &quot;Hello World&quot;</p>\r\n\r\n			<p><strong>Output</strong>: &quot;lo Wo&quot;</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>Example 2:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>: &quot;ABCDEFGHIJ&quot;</p>\r\n\r\n			<p><strong>Output</strong>: &quot;DEFGH&quot;</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>','2019-09-25 03:49:18.000000','',1,3,1,'def solve(str):','','','','','',38,'Slice a string',1),(106,'<h3>Dictionary</h3>\r\n\r\n<p>&bull; Dictionary is a collection for <strong>key</strong>-<strong>value</strong> pair.</p>\r\n\r\n<p>&bull; A <strong>key</strong> should be unique. However a <strong>value</strong> does not have to be unique.</p>\r\n\r\n<p><img alt=\"Key Value Pair\" src=\"/static/quiz/106_dictionary_key_value_pair.jpg\" style=\"height:344px; width:448px\" /></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<h3>Create a dictionary</h3>\r\n\r\n<p>#code</p>\r\n\r\n<p>dict = {</p>\r\n\r\n<p>&nbsp; &nbsp; &quot;brand&quot;: &quot;PyPyKids&quot;,</p>\r\n\r\n<p>&nbsp; &nbsp; &quot;language&quot;: &quot;Python&quot;,</p>\r\n\r\n<p>&nbsp; &nbsp; &quot;target&quot;: &quot;Kids&quot;</p>\r\n\r\n<p>}</p>\r\n\r\n<p>print(dict)</p>\r\n\r\n<p>#end</p>\r\n\r\n<p>#run-1</p>\r\n\r\n<p>{&#39;brand&#39;: &#39;PyPyKids&#39;, &#39;language&#39;: &#39;Python&#39;, &#39;target&#39;: &#39;Kids&#39;}</p>\r\n\r\n<p>#end</p>\r\n\r\n<h3>&nbsp;</h3>\r\n\r\n<h3><br />\r\nAccess a value</h3>\r\n\r\n<p>#code</p>\r\n\r\n<p>dict = {</p>\r\n\r\n<p>&nbsp; &nbsp; &quot;brand&quot;: &quot;PyPyKids&quot;,</p>\r\n\r\n<p>&nbsp; &nbsp; &quot;language&quot;: &quot;Python&quot;,</p>\r\n\r\n<p>&nbsp; &nbsp; &quot;target&quot;: &quot;Kids&quot;</p>\r\n\r\n<p>}</p>\r\n\r\n<p>print(dict[&quot;brand&quot;])</p>\r\n\r\n<p>#end</p>\r\n\r\n<p>#run-2</p>\r\n\r\n<p>&#39;PyPyKids&#39;</p>\r\n\r\n<p>#end</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>#code</p>\r\n\r\n<p>dict = {</p>\r\n\r\n<p>&nbsp; &nbsp; &quot;brand&quot;: &quot;PyPyKids&quot;,</p>\r\n\r\n<p>&nbsp; &nbsp; &quot;language&quot;: &quot;Python&quot;,</p>\r\n\r\n<p>&nbsp; &nbsp; &quot;target&quot;: &quot;Kids&quot;</p>\r\n\r\n<p>}</p>\r\n\r\n<p>key = &quot;language&quot;</p>\r\n\r\n<p>print(dict[key])</p>\r\n\r\n<p>#end</p>\r\n\r\n<p>#run-3</p>\r\n\r\n<p>&#39;Python&#39;</p>\r\n\r\n<p>#end</p>','<p>Write a function to return the value from the key.</p>\r\n\r\n<p>The dictionary and key will be passed as a parameter.</p>','<p><strong>Example 1:</strong></p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>:</p>\r\n\r\n			<p>dict = {&quot;brand&quot;: &quot;PyPyKids&quot;, &quot;language&quot;: &quot;Python&quot;, &quot;target&quot;: &quot;Kids&quot;}</p>\r\n\r\n			<p>value = &quot;target&quot;</p>\r\n\r\n			<p>&nbsp;</p>\r\n\r\n			<p><strong>Output</strong>:</p>\r\n\r\n			<p>&quot;Kids&quot;</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong>Example 2:</strong></p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>:</p>\r\n\r\n			<p>dict = {&quot;brand&quot;: &quot;PyPyKids&quot;, &quot;language&quot;: &quot;Python&quot;, &quot;target&quot;: &quot;Kids&quot;}</p>\r\n\r\n			<p>value = &quot;language&quot;</p>\r\n\r\n			<p>&nbsp;</p>\r\n\r\n			<p><strong>Output</strong>:</p>\r\n\r\n			<p>&quot;Python&quot;</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>','2019-10-02 06:53:06.000000','',1,24,1,'def solve(dict, key):','','','','','mT4dA8m2hSg',76,'Access a value of a dictionary',1),(107,'<p>You can change the value&nbsp;by a&nbsp;<strong>key</strong>.</p>\r\n\r\n<p>#code</p>\r\n\r\n<p>dict = {</p>\r\n\r\n<p>&nbsp; &nbsp; &quot;brand&quot;: &quot;PyPyKids&quot;,</p>\r\n\r\n<p>&nbsp; &nbsp; &quot;language&quot;: &quot;Python&quot;,</p>\r\n\r\n<p>&nbsp; &nbsp; &quot;target&quot;: &quot;Kids&quot;</p>\r\n\r\n<p>}</p>\r\n\r\n<p>dict[&quot;target&quot;] = &quot;adult&quot;</p>\r\n\r\n<p>print(dict)</p>\r\n\r\n<p>#end</p>\r\n\r\n<p>#run-1</p>\r\n\r\n<p>{&#39;brand&#39;: &#39;PyPyKids&#39;, &#39;language&#39;: &#39;Python&#39;, &#39;target&#39;: &#39;adult&#39;}</p>\r\n\r\n<p><strong><span style=\"color:#27ae60\">Explanation</span>:</strong></p>\r\n\r\n<p>&#39;Kids&#39; value was changed by &#39;adult&#39; because &#39;target&#39; as a key is referring to the value.</p>\r\n\r\n<p>#end</p>','<p>Write a function to change a value for &#39;language&#39; as a key and return the new dictionary&nbsp;with the changed value.</p>','<p><strong>Example 1:</strong></p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>:&nbsp;</p>\r\n\r\n			<p>dict = {&quot;brand&quot;: &quot;PyPyKids&quot;, &quot;language&quot;: &quot;Python&quot;, &quot;target&quot;: &quot;Kids&quot;}</p>\r\n\r\n			<p>value = &quot;Java&quot;</p>\r\n\r\n			<p>&nbsp;</p>\r\n\r\n			<p><strong>Output</strong>:&nbsp;</p>\r\n\r\n			<p>{&quot;brand&quot;: &quot;PyPyKids&quot;, &quot;language&quot;: &quot;Java&quot;, &quot;target&quot;: &quot;Kids&quot;}</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p><br />\r\n&nbsp;</p>','2019-10-02 07:36:32.000000','',1,24,1,'def solve(dict, value):','','','','','',78,'Change a value of a dictionary',2),(108,'<p>You can add an item using a new key/value pair.</p>\r\n\r\n<p>#code</p>\r\n\r\n<p>dict =<strong> </strong>{</p>\r\n\r\n<p>&nbsp; &nbsp; &quot;brand&quot;: &quot;PyPyKids&quot;,</p>\r\n\r\n<p>&nbsp; &nbsp; &quot;language&quot;: &quot;Python&quot;,</p>\r\n\r\n<p>&nbsp; &nbsp; &quot;target&quot;: &quot;Kids&quot;</p>\r\n\r\n<p>}</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>dict[&quot;year&quot;] =&nbsp;2019</p>\r\n\r\n<p>print(dict)</p>\r\n\r\n<p>#end</p>\r\n\r\n<p>#run-1</p>\r\n\r\n<p>{&#39;brand&#39;: &#39;PyPyKids&#39;, &#39;language&#39;: &#39;Python&#39;, &#39;target&#39;: &#39;Kids&#39;, &#39;year&#39;: 2019}</p>\r\n\r\n<p>#end</p>\r\n\r\n<p>&nbsp;</p>','<p>Write a function to add a key/value pair to a dictionary and return the dictionary with a new item.</p>','<p><strong>Example 1:</strong></p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>:</p>\r\n\r\n			<p>dict = {&quot;brand&quot;: &quot;PyPyKids&quot;}</p>\r\n\r\n			<p>key = &quot;who&quot;</p>\r\n\r\n			<p>value = &quot;Dayeon&quot;</p>\r\n\r\n			<p>&nbsp;</p>\r\n\r\n			<p><strong>Output</strong>:</p>\r\n\r\n			<p>{&#39;brand&#39;: &#39;PyPyKids&#39;, &#39;who&#39;: &#39;Dayeon&#39;}</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p><br />\r\n&nbsp;</p>','2019-10-03 02:33:39.000000','',1,24,1,'def solve(dict, key, value):','','','','','',79,'Add an item into a Dictionary',1),(109,'<p>The <strong>pop()</strong> method removes the item with the key.</p>\r\n\r\n<p>#code</p>\r\n\r\n<p>dict = {</p>\r\n\r\n<p>&nbsp; &nbsp; &quot;brand&quot;: &quot;PyPyKids&quot;,</p>\r\n\r\n<p>&nbsp; &nbsp; &quot;language&quot;: &quot;Python&quot;,</p>\r\n\r\n<p>&nbsp; &nbsp; &quot;target&quot;: &quot;Kids&quot;</p>\r\n\r\n<p>}</p>\r\n\r\n<p>value = dict.pop(&quot;language&quot;)</p>\r\n\r\n<p>print(value)</p>\r\n\r\n<p>print(dict)</p>\r\n\r\n<p>#end</p>\r\n\r\n<p>#run-1</p>\r\n\r\n<p>&#39;Python&#39;</p>\r\n\r\n<p>{&#39;brand&#39;: &#39;PyPyKids&#39;, &#39;target&#39;: &#39;Kids&#39;}</p>\r\n\r\n<p>#end</p>\r\n\r\n<p>&nbsp;</p>','<p>Write a function to remove a value from the dictionary and return the dictionary.</p>','<p>Example 1:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>:&nbsp;</p>\r\n\r\n			<p>dict =&nbsp;{&quot;brand&quot;: &quot;PyPyKids&quot;,&nbsp;&quot;language&quot;: &quot;Python&quot;,&nbsp;&quot;target&quot;: &quot;Kids&quot;}</p>\r\n\r\n			<p>key = &quot;language&quot;</p>\r\n\r\n			<p>&nbsp;</p>\r\n\r\n			<p><strong>Output</strong>:&nbsp;</p>\r\n\r\n			<p>{&quot;brand&quot;: &quot;PyPyKids&quot;,&nbsp;&quot;target&quot;: &quot;Kids&quot;}</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p><br />\r\n&nbsp;</p>','2019-10-03 03:31:51.000000','',1,24,1,'def solve(dict, key):','','','','','',80,'Remove a value from a dictionary',2),(110,'<p>You can loop through a dictionary by usng <strong>For</strong>.</p>\r\n\r\n<p>Unlike a list, an&nbsp;order is not always the same.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>You can print all keys&nbsp;as follows.</p>\r\n\r\n<p>#code</p>\r\n\r\n<p>dict =&nbsp;{</p>\r\n\r\n<p>&nbsp; &nbsp; &quot;brand&quot;: &quot;PyPyKids&quot;,</p>\r\n\r\n<p>&nbsp; &nbsp; &quot;language&quot;: &quot;Python&quot;,</p>\r\n\r\n<p>&nbsp; &nbsp; &quot;target&quot;: &quot;Kids&quot;</p>\r\n\r\n<p>}</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>for key in dict:</p>\r\n\r\n<p>&nbsp; &nbsp; print(key)</p>\r\n\r\n<p>#end</p>\r\n\r\n<p>#run-1</p>\r\n\r\n<p>&#39;brand&#39;</p>\r\n\r\n<p>&#39;language&#39;</p>\r\n\r\n<p>&#39;target&#39;</p>\r\n\r\n<p>#end</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>You can print all values as follows.</p>\r\n\r\n<p>#code</p>\r\n\r\n<p>for key in dict:</p>\r\n\r\n<p>&nbsp; &nbsp; print(dict[key])</p>\r\n\r\n<p>#end</p>\r\n\r\n<p>#run-2</p>\r\n\r\n<p>&#39;PyPyKids&#39;</p>\r\n\r\n<p>&#39;Python&#39;</p>\r\n\r\n<p>&#39;Kids&#39;</p>\r\n\r\n<p>#end</p>','<p>Write a function to return a list with&nbsp;key + value.</p>','<p>Example 1:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>:&nbsp;</p>\r\n\r\n			<p>dict =&nbsp;{&quot;brand&quot;: &quot;PyPyKids&quot;,&nbsp;&quot;language&quot;: &quot;Python&quot;,&nbsp;&quot;target&quot;: &quot;Kids&quot;}</p>\r\n\r\n			<p>&nbsp;</p>\r\n\r\n			<p><strong>Output</strong>:</p>\r\n\r\n			<p>[&#39;brandPyPyKids&#39;, &#39;languagePython&#39;, &#39;targetKids&#39;]</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p><br />\r\n&nbsp;</p>','2019-10-03 04:16:05.000000','',1,24,1,'def solve(dict):','','','','','',82,'Loop through a dictionary',1),(111,'<p>Here is the example of <strong>for.</strong></p>\r\n\r\n<p>#code</p>\r\n\r\n<p>for num in range(1, 5):</p>\r\n\r\n<p>&nbsp; &nbsp; print(num)</p>\r\n\r\n<p>#end</p>\r\n\r\n<p>#run-1</p>\r\n\r\n<p>1</p>\r\n\r\n<p>2</p>\r\n\r\n<p>3</p>\r\n\r\n<p>4</p>\r\n\r\n<p>#end</p>','<p>Write a function to return the sum of 1 to the <strong>num</strong>.</p>','<p>Example 1:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>: 5</p>\r\n\r\n			<p><strong>Output</strong>: 15</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p><span style=\"color:#27ae60\"><strong>Explanation</strong></span>:</p>\r\n\r\n<p>1 + 2 + 3 + 4 + 5 = 15</p>','2019-10-08 04:10:22.000000','',1,7,1,'def solve(num):','','','','','',36,'Find the sum of 1 to the number',1),(112,'<p>You can change the data type.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>From <strong>String</strong> to <strong>Integer</strong></p>\r\n\r\n<p>#code</p>\r\n\r\n<p>str1 = &quot;20&quot;</p>\r\n\r\n<p>str2 = &quot;10&quot;</p>\r\n\r\n<p>num = <span style=\"color:#e74c3c\"><strong>int</strong></span>(str1) + <span style=\"color:#e74c3c\"><strong>int</strong></span>(str2)</p>\r\n\r\n<p>print(num)</p>\r\n\r\n<p>#end</p>\r\n\r\n<p>#run-1</p>\r\n\r\n<p>30</p>\r\n\r\n<p>#end</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>From <strong>Integer</strong> to <strong>String</strong></p>\r\n\r\n<p>#code</p>\r\n\r\n<p>num1 = 10</p>\r\n\r\n<p>num2 = 20</p>\r\n\r\n<p>str = <span style=\"color:#e74c3c\"><strong>str</strong></span>(num1) + <span style=\"color:#e74c3c\"><strong>str</strong></span>(num2)</p>\r\n\r\n<p>print(str)</p>\r\n\r\n<p>#end</p>\r\n\r\n<p>#run-2</p>\r\n\r\n<p>&#39;1020&#39;</p>\r\n\r\n<p>#end</p>','<p>Write a function to return the string after merging two integers.</p>','<p>Example 1:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>: 30, 40</p>\r\n\r\n			<p><strong>Output</strong>: &quot;3040&quot;</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>Example 2:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>: 10, 20</p>\r\n\r\n			<p><strong>Output</strong>: &quot;1020&quot;</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>','2019-10-09 04:48:52.000000','',1,3,1,'def solve(num1, num2):','','','','','',43,'Type Casting',1),(113,'<p>You can use&nbsp;one <span style=\"color:#e74c3c\"><strong>for</strong></span>&nbsp;inside another <span style=\"color:#e74c3c\"><strong>for.</strong></span></p>\r\n\r\n<p>#code</p>\r\n\r\n<p>ans = []</p>\r\n\r\n<p>list1 = [1, 2, 3]</p>\r\n\r\n<p>list2 = [1, 2, 3]</p>\r\n\r\n<p>for i in list1:</p>\r\n\r\n<p>&nbsp; &nbsp; for j in list2:</p>\r\n\r\n<p>&nbsp; &nbsp; &nbsp; &nbsp; ans.append([i, j])</p>\r\n\r\n<p>print(ans)</p>\r\n\r\n<p>#end</p>\r\n\r\n<p>#run-1</p>\r\n\r\n<p>[<span style=\"color:#3498db\">[1, 1], [1, 2], [1, 3]</span>,</p>\r\n\r\n<p>[2, 1], [2, 2], [2, 3],</p>\r\n\r\n<p><span style=\"color:#3498db\">[3, 1], [3, 2], [3, 3]</span>]</p>\r\n\r\n<p>#end</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>When i is 1, j will be changed from 1 to 3.</p>\r\n\r\n<p>And when i is 2, j will be changed from 1 to 3.</p>\r\n\r\n<p>And when i is 3, j will be changed from 1 to 3.</p>','<p>Write a function to return the list as shown below.</p>','<p>Example 1:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>: 3</p>\r\n\r\n			<p><strong>Output</strong>:</p>\r\n\r\n			<p>[1, 2, 3,&nbsp;<span style=\"color:#3498db\">2, 2, 3</span>,&nbsp;3, 3, 3]&nbsp;</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>Example 2:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>: 4</p>\r\n\r\n			<p><strong>Output</strong>:&nbsp;</p>\r\n\r\n			<p>[1, 2, 3, 4,&nbsp;<span style=\"color:#3498db\">2, 2, 3, 4,&nbsp;</span>3, 3, 3, 4, <span style=\"color:#3498db\">4, 4, 4, 4</span>]</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>&nbsp;</p>','2019-10-12 20:04:52.000000','<p>Choose the maximum of index i and j at each position.&nbsp;</p>',1,29,1,'def solve(num):','','','','','',93,'Nested For',2),(114,'<p>#code</p>\r\n\r\n<p>for i in range(1, 4):</p>\r\n\r\n<p>&nbsp; &nbsp; for j in range(1, 4):</p>\r\n\r\n<p>&nbsp; &nbsp; &nbsp; &nbsp; print([i, j, i + j])</p>\r\n\r\n<p>#end</p>\r\n\r\n<p>#run-1</p>\r\n\r\n<p>[1, 1, 2]</p>\r\n\r\n<p>[1, 2, 3]</p>\r\n\r\n<p>[1, 3, 4]</p>\r\n\r\n<p>[2, 1, 3]</p>\r\n\r\n<p>[2, 2, 4]</p>\r\n\r\n<p>[2, 3, 5]</p>\r\n\r\n<p>[3, 1, 4]</p>\r\n\r\n<p>[3, 2, 5]</p>\r\n\r\n<p>[3, 3, 6]</p>\r\n\r\n<p>#end</p>\r\n\r\n<p>&nbsp;</p>','<p>Write a function to return the list as shown below.</p>','<p>Example 1:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>: 3</p>\r\n\r\n			<p><strong>Output</strong>:</p>\r\n\r\n			<p>[2, 3, 4, <span style=\"color:#3498db\">3, 4, 5</span>, 4, 5, 6]&nbsp;</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>Example 2:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>: 4</p>\r\n\r\n			<p><strong>Output</strong>:&nbsp;</p>\r\n\r\n			<p>[2, 3, 4, 5, <span style=\"color:#3498db\">3, 4</span><span style=\"color:#2980b9\">, </span><span style=\"color:#3498db\">5, 6</span>,&nbsp;4, 5, 6, 7,<span style=\"color:#3498db\"> 5, 6, 7, 8</span>]</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>','2019-10-12 21:51:09.000000','<p>Sum index i and index j at each position.&nbsp;</p>',1,29,1,'def solve(num):','','','','','',95,'Sum of the indexes',1),(115,'<p>You can make a triangle as shown below.</p>\r\n\r\n<p>In an inner loop, the inner index(<span style=\"color:#e74c3c\"><strong>j</strong></span>) will start from the outer index(<span style=\"color:#e74c3c\"><strong>i</strong></span>).</p>\r\n\r\n<p>#code</p>\r\n\r\n<p>num = 4</p>\r\n\r\n<p>for i in range(1, num):</p>\r\n\r\n<p>&nbsp; &nbsp; for j in range(<span style=\"color:#e74c3c\"><strong>i</strong></span>, num):</p>\r\n\r\n<p>&nbsp; &nbsp; &nbsp; &nbsp; print([i, j])</p>\r\n\r\n<p>#end</p>\r\n\r\n<p>#run-1</p>\r\n\r\n<p>[1, 1]</p>\r\n\r\n<p>[1, 2]</p>\r\n\r\n<p>[1, 3]</p>\r\n\r\n<p><span style=\"color:#3498db\">[2, 2]</span></p>\r\n\r\n<p><span style=\"color:#3498db\">[2, 3]</span></p>\r\n\r\n<p>[3, 3]</p>\r\n\r\n<p>#end</p>','<p>Write a function to return a list as shown below.</p>','<p>Example 1:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>: 3</p>\r\n\r\n			<p><strong>Output</strong>:&nbsp;[1, <span style=\"color:#3498db\">1, 2</span>, 1, 2, 3]</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>Example 2:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>: 4</p>\r\n\r\n			<p><strong>Output</strong>: 4</p>\r\n\r\n			<p>[1, <span style=\"color:#3498db\">1, 2</span>, 1, 2, 3, <span style=\"color:#3498db\">1, 2, 3, 4</span>]&nbsp;</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>','2019-10-12 21:55:14.000000','<p>In an inner loop, iterate a&nbsp;value from 1 to the outer index value.</p>',1,29,1,'def solve(num):','','','','','',94,'Nested For for triangle',1),(116,'<p>Sort values in ascending order.</p>\r\n\r\n<p>#code</p>\r\n\r\n<p>nums = [2, 4, 1, 3]</p>\r\n\r\n<p>nums.sort()</p>\r\n\r\n<p>print(nums)</p>\r\n\r\n<p>#end</p>\r\n\r\n<p>#run-1</p>\r\n\r\n<p>[1, 2, 3, 4]</p>\r\n\r\n<p>#end</p>','<p>Write a function to return the minimum difference between two values.</p>','<p>Example 1:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>: [4, 9, 6, 14]</p>\r\n\r\n			<p><strong>Output</strong>: 2</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p><span style=\"color:#27ae60\"><strong>Explanation:</strong></span></p>\r\n\r\n<p>6 - 4&nbsp;is the minimum difference</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>Example 2:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>: [1, 5, 6, 2]</p>\r\n\r\n			<p><strong>Output</strong>: 1</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p><span style=\"color:#27ae60\"><strong>Explanation:</strong></span></p>\r\n\r\n<p>2 - 1 is the minimum difference.</p>','2019-10-13 06:06:15.000000','<p>1. Sort the values.</p>\r\n\r\n<p>2.&nbsp;Compare the difference between two adjacent numbers.</p>',1,4,1,'def solve(nums):','','','','','',67,'Minimum difference',1),(117,'','<p>Write a function how many &quot;pypykids&quot; you can form by using given characters.</p>','<p>Example 1:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>: <span style=\"color:#e74c3c\">p</span>hi<span style=\"color:#e74c3c\">ypy</span>hello<span style=\"color:#e74c3c\">kids</span>&nbsp;</p>\r\n\r\n			<p><strong>Output</strong>: 1</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>Example 2:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>: <span style=\"color:#e74c3c\">pypy</span>py<span style=\"color:#e74c3c\">kids</span></p>\r\n\r\n			<p><strong>Output</strong>: 1</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>Example 3:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>: <span style=\"color:#3498db\">kids</span><span style=\"color:#e74c3c\">pypy</span><span style=\"color:#3498db\">py</span><span style=\"color:#e74c3c\">kids</span><span style=\"color:#3498db\">py</span></p>\r\n\r\n			<p><strong>Output</strong>: 2</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>','2019-10-13 06:25:53.000000','',1,21,1,'def solve(str):','','','','','',121,'Count strings',1),(118,'<p>You can use <strong>get() </strong>to avoid errors when the key does not exist.</p>\r\n\r\n<p>#code</p>\r\n\r\n<p>dict = {&quot;key&quot;: &quot;value&quot;}</p>\r\n\r\n<p>print(dict[&quot;new_key&quot;])</p>\r\n\r\n<p>#end</p>\r\n\r\n<p>#run-1</p>\r\n\r\n<p>KeyError: &#39;new_key&#39;</p>\r\n\r\n<p>#end</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>The <strong>get()</strong> will return&nbsp;<strong>None</strong> when the key does not exist.</p>\r\n\r\n<p>#code</p>\r\n\r\n<p>dict = {&quot;key&quot;: &quot;value&quot;}</p>\r\n\r\n<p>print(dict.get(&quot;new_key&quot;))</p>\r\n\r\n<p>#end</p>\r\n\r\n<p>#run-2</p>\r\n\r\n<p>None</p>\r\n\r\n<p>#end</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>The get() can&nbsp;return the <strong>default value</strong> when the key does not exist.</p>\r\n\r\n<p>#code</p>\r\n\r\n<p>dict = {&quot;key&quot;: &quot;value&quot;}</p>\r\n\r\n<p>print(dict.get(&quot;new_key&quot;, &quot;hello&quot;))</p>\r\n\r\n<p>#end</p>\r\n\r\n<p>#run-3</p>\r\n\r\n<p>&quot;hello&quot;</p>\r\n\r\n<p>#end</p>','<p>Write a function to get a value of the key.</p>\r\n\r\n<p>If the key does not exist, return 0.</p>','<p>Example 1:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>:</p>\r\n\r\n			<p>dict = {&quot;key1&quot;: 1, &quot;key2&quot;: 2}</p>\r\n\r\n			<p>key = &quot;key1&quot;</p>\r\n\r\n			<p>&nbsp;</p>\r\n\r\n			<p><strong>Output</strong>:&nbsp;</p>\r\n\r\n			<p>1</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>Example 2:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>:&nbsp;</p>\r\n\r\n			<p>dict = {&quot;key1&quot;: 1, &quot;key2&quot;: 2}</p>\r\n\r\n			<p>key = &quot;key3&quot;</p>\r\n\r\n			<p>&nbsp;</p>\r\n\r\n			<p><strong>Output</strong>:&nbsp;</p>\r\n\r\n			<p>0</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>','2019-10-13 06:57:08.000000','',1,24,1,'def solve(dict, key):','','','','','',77,'Get a value of a dictionary',1),(120,'','<p>Print the sum up to 100.</p>','<p>1 + 2 + 3 + 4 + 5 + ... + 98 + 99 + 100&nbsp;= ?</p>','2019-10-14 06:09:16.000000','',1,1,1,'','','','','','',26,'Sum up to 100',1),(121,'','<p>Write a function to return the number of duplicate&nbsp;values.</p>','<p>Example 1:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>: [1, 2, 2, 2, 3, 1]</p>\r\n\r\n			<p><strong>Output</strong>: 2</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p><span style=\"color:#27ae60\"><strong>Explanation:</strong></span></p>\r\n\r\n<p>1 and 2&nbsp;are duplicated</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>Example 2:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>: [1, 2, 3, 4]</p>\r\n\r\n			<p><strong>Output</strong>: 0</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>','2019-10-14 06:50:53.000000','',1,6,1,'def solve(nums):','','','','','',123,'Count the number of duplicate values',1),(122,'<p>The area of the rectangle is calculated as follows.</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			Area = Height * Width\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>','<p>Write a function to check whether the rectangle has an integer height and&nbsp;width that&nbsp;are 2 or greater.</p>','<p>Example 1:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>: 10</p>\r\n\r\n			<p><strong>Output</strong>: True</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p><strong><span style=\"color:#27ae60\">Explanation</span>:&nbsp;</strong></p>\r\n\r\n<p>A height and a width can be 2 and 5 respectively.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>Example 2:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>: 17</p>\r\n\r\n			<p><strong>Output</strong>: False</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p><span style=\"color:#27ae60\"><strong>Explanation:</strong></span></p>\r\n\r\n<p>17 can not be an integer height and an integer width.</p>','2019-10-14 06:57:59.000000','',1,8,1,'def solve(area):','','','','','',141,'Rectangle with integer height and width',1),(123,'<p>A median is the middle value in the ascending list.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>If the number of the list is <span style=\"color:#e74c3c\"><strong>odd</strong></span>, the middle value of the list is the median.</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p>nums = [1, <span style=\"color:#e74c3c\"><strong>3</strong></span>, 2, 4, 5]</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>3 is the median in the list.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>If the number of the list is <span style=\"color:#e74c3c\"><strong>even</strong></span>, the average&nbsp;of the two values in the middle is the median.</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p>nums = [<span style=\"color:#e74c3c\"><strong>2</strong></span>, <span style=\"color:#e74c3c\"><strong>3</strong></span>, 2, 4]</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>2.5 is the median in the list because&nbsp;(2 + 3) / 2 = 2.5</p>','<p>Write a function to return the median value of the list.</p>','<p>Example 1:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>: [7, 6, 5, 3, <span style=\"color:#e74c3c\"><strong>4</strong></span><strong>,&nbsp;</strong>2, 1]</p>\r\n\r\n			<p><strong>Output</strong>: 4</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>Example 2:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>: [<span style=\"color:#e74c3c\"><strong>3, 4</strong></span>, 2, 5]</p>\r\n\r\n			<p><strong>Output</strong>: 3.5</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p><span style=\"color:#27ae60\"><strong>Explanation:</strong></span></p>\r\n\r\n<p>(3 + 4) / 2 = 3.5</p>','2019-10-14 07:16:09.000000','',1,8,1,'def solve(nums):','','','','','',142,'Find a median',1),(124,'','<p>Write a function to return whether the dictionary has duplicate values or not.</p>','<p>Example 1:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>: {&quot;hello&quot;: 1, &quot;hi&quot;: 1}</p>\r\n\r\n			<p><strong>Output</strong>: True</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>Example 2:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>: {&quot;hello&quot;: 1, &quot;hi&quot;: 2}</p>\r\n\r\n			<p><strong>Output</strong>: False</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>','2019-10-14 08:11:50.000000','',1,24,1,'def solve(dict):','','','','','',83,'Duplicate values in dictionary',1),(125,'<p>You can split the word by split().&nbsp; It will split the string by the <strong>default separator</strong> which is <span style=\"color:#e74c3c\"><strong>space</strong></span>.</p>\r\n\r\n<p>#code</p>\r\n\r\n<p>strs = &quot;hello hi hello&quot;.split()</p>\r\n\r\n<p>#end</p>\r\n\r\n<p>#run-1</p>\r\n\r\n<p>[&#39;hello&#39;, &#39;hi&#39;, &#39;hello&#39;]</p>\r\n\r\n<p>#end</p>','<p>Write a function to return&nbsp;the most common words.</p>','<p>Example 1:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>: &quot;pypy kids pypy hello kids&quot;</p>\r\n\r\n			<p><strong>Output</strong>: [&quot;pypy&quot;, &quot;kids&quot;]</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>Example 2:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>: &quot;hello world hello&quot;</p>\r\n\r\n			<p><strong>Output</strong>: [&quot;hello&quot;]</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>','2019-10-14 08:26:03.000000','',1,2,1,'def solve(str):','','','','','',125,'Most common word',1),(126,'','<p>Write a function to return the last N characters of the string.</p>','<p>Example 1:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>:</p>\r\n\r\n			<p>str = &#39;hello&#39;</p>\r\n\r\n			<p>n = 3</p>\r\n\r\n			<p>&nbsp;</p>\r\n\r\n			<p><strong>Output</strong>:</p>\r\n\r\n			<p>&#39;llo&#39;</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>Example 2:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>:</p>\r\n\r\n			<p>str = &#39;pypykids&#39;</p>\r\n\r\n			<p>n = 4</p>\r\n\r\n			<p><strong>Output</strong>: &#39;kids&#39;</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>','2019-10-15 01:35:53.000000','',1,3,1,'def solve(str, n):','','','','','',42,'Last N characters',1),(127,'<p>You can change the value from decimal to integer.</p>\r\n\r\n<p>#code</p>\r\n\r\n<p>num = 2.5</p>\r\n\r\n<p>print(<span style=\"color:#e74c3c\"><strong>int</strong></span>(num))</p>\r\n\r\n<p>#end</p>\r\n\r\n<p>#run-1</p>\r\n\r\n<p>2</p>\r\n\r\n<p>#end</p>','<p>Write a function to return if the average of the list is an integer or not.</p>','<p>Example 1:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>: [2.3, 3.7]</p>\r\n\r\n			<p><strong>Output</strong>: True</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p><span style=\"color:#27ae60\"><strong>Explanation:</strong></span></p>\r\n\r\n<p>(2.3 + 3.7) / 2 = 3</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>Example 2:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>: [4, 3]&nbsp;</p>\r\n\r\n			<p><strong>Output</strong>: False</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p><span style=\"color:#27ae60\"><strong>Explanation:</strong></span></p>\r\n\r\n<p>(4 + 3) / 2 = 3.5</p>','2019-10-15 01:51:24.000000','',1,8,1,'def solve(nums):','','','','','',137,'Integer or decimal',1),(128,'','<p>Write a function to return the longest common prefix.</p>','<p>Example 1:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>: [&quot;abc&quot;, &quot;abd&quot;, &quot;abg&quot;]</p>\r\n\r\n			<p><strong>Output</strong>: &quot;ab&quot;</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>Example 2:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>: [&quot;abcde&quot;, &quot;fge&quot;]</p>\r\n\r\n			<p><strong>Output</strong>: &quot;&quot;</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>','2019-10-15 07:56:03.000000','',1,3,1,'def solve(list):','','','','','',47,'Longest common prefix',1),(129,'','<p>You can write a number by a list.</p>\r\n\r\n<p>100 =&gt; [1, 0, 0]</p>\r\n\r\n<p>93&nbsp;=&gt; [9, 3]</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>Write a function to return a list after adding 1.</p>\r\n\r\n<p>&nbsp;</p>','<p>Example 1:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>: [1, 0, 0]</p>\r\n\r\n			<p><strong>Output</strong>: [1, 0, 1]</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>Example 2:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>: [2, 9]</p>\r\n\r\n			<p><strong>Output</strong>: [3, 0]</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>Example 3:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>: [9, 9]</p>\r\n\r\n			<p><strong>Output</strong>: [1, 0, 0]</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>','2019-10-15 08:00:29.000000','',1,19,1,'def solve(nums):','','','','','',116,'Add one to the list',1),(130,'<p>You can pick the last digit.</p>\r\n\r\n<p>#code</p>\r\n\r\n<p>num = 123</p>\r\n\r\n<p>print(num % 10)</p>\r\n\r\n<p>#end</p>\r\n\r\n<p>#run-1</p>\r\n\r\n<p>3</p>\r\n\r\n<p>#end</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>You can move the whole number to the left.</p>\r\n\r\n<p>#code</p>\r\n\r\n<p>num = 123</p>\r\n\r\n<p>print(num * 10)</p>\r\n\r\n<p>#end</p>\r\n\r\n<p>#run-2</p>\r\n\r\n<p>1230</p>\r\n\r\n<p>#end</p>','<p>Write a function to return the reversed number.&nbsp;</p>\r\n\r\n<p>You can assum the last digit is not zero.</p>','<p>Example 1:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>: 1234</p>\r\n\r\n			<p><strong>Output</strong>: 4321</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>Example 2:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>: 102</p>\r\n\r\n			<p><strong>Output</strong>: 201</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>','2019-10-15 08:10:14.000000','',1,8,1,'def solve(num):','','','','','',143,'Reverse a number',1),(131,'<p>You can increase or decrease only one number at a time.</p>\r\n\r\n<p>If there are 2 and 4, 2 can be changed to 4 in two steps.</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>4 -&gt; 3 -&gt; 2</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>If there are 12 and 35, 12 can be change to 35 in five steps.</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>12 -&gt; 13 -&gt; 23 -&gt; 24 -&gt; 25 -&gt; 35</td>\r\n		</tr>\r\n	</tbody>\r\n</table>','<p>Write a function to return the minimum steps.</p>\r\n\r\n<p>You can assume that two numbers have the&nbsp;same number of digits.</p>','<p>Example 1:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>: 10, 33</p>\r\n\r\n			<p><strong>Output</strong>: 5</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p><span style=\"color:#27ae60\"><strong>Explanation:&nbsp;</strong></span></p>\r\n\r\n<p>10 -&gt; 11 -&gt; 21 -&gt; 22 -&gt; 32 -&gt; 33</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>Example 2:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>: 123, 321</p>\r\n\r\n			<p><strong>Output</strong>: 4</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p><span style=\"color:#27ae60\"><strong>Explanation:</strong></span></p>\r\n\r\n<p>123 -&gt; 223 -&gt; 323 -&gt; 322 -&gt; 321</p>','2019-10-15 08:18:22.000000','',1,8,1,'def solve(num1, num2):','','','','','',138,'Number distance game',1),(132,'','<p>Write a function to move all 1s to the last of the list.</p>\r\n\r\n<p>Except 1, the order of the numbers should be same.</p>','<p>Example 1:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>: [1, 2, 3, 4, 3, 1, 2]</p>\r\n\r\n			<p><strong>Output</strong>: [2, 3, 4, 3, 2, 1, 1]</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>Example 2:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>: [1, 1, 1, 1, 2, 3, 1]</p>\r\n\r\n			<p><strong>Output</strong>: [2, 3, 1, 1, 1, 1, 1]</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>','2019-10-15 08:29:33.000000','',1,4,1,'def solve(nums):','','','','','',69,'Move ones to the last',1),(133,'','<p>Write a function to add two lists.</p>\r\n\r\n<p>The last number of the list means ones place.</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>123 =&gt; [1, 2, 3]</td>\r\n		</tr>\r\n	</tbody>\r\n</table>','<p>Example 1:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>:</p>\r\n\r\n			<p>nums1 = [1, 2, 3]</p>\r\n\r\n			<p>nums2 = [1, 0, 0]</p>\r\n\r\n			<p>&nbsp;</p>\r\n\r\n			<p><strong>Output</strong>:</p>\r\n\r\n			<p>[2, 2, 3]</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p><span style=\"color:#27ae60\"><strong>Explanation:</strong></span></p>\r\n\r\n<p>123 + 100 = 223 = [2, 2, 3]</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>Example 2:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>:</p>\r\n\r\n			<p>nums1 = [9, 9]</p>\r\n\r\n			<p>nums2 = [1]</p>\r\n\r\n			<p>&nbsp;</p>\r\n\r\n			<p><strong>Output</strong>:&nbsp;</p>\r\n\r\n			<p>[1, 0, 0]</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p><span style=\"color:#27ae60\"><strong>Explanation:</strong></span></p>\r\n\r\n<p>99 + 1 = 100 = [1, 0, 0]</p>','2019-10-15 08:34:45.000000','',1,19,1,'def solve(nums1, nums2):','','','','','',117,'Sum of two lists',1),(134,'<p>You can use <strong>two pointers </strong>to find a middle element of the linked list.</p>\r\n\r\n<p>1. <span style=\"color:#3498db\"><strong>Slow pointer</strong></span>: travel the linked list one node at a time.</p>\r\n\r\n<p>2.&nbsp;<span style=\"color:#e74c3c\"><strong>Fast pointer</strong></span>: travel the linked list two nodes at a time.</p>\r\n\r\n<p>If the <strong>fast pointer</strong> reaches the end, the <strong>slow pointer</strong> will be in the middle.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>Here is the example when you have 5 elements in the linked list.</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>&nbsp;</td>\r\n			<td>1</td>\r\n			<td>2</td>\r\n			<td>3</td>\r\n			<td>4</td>\r\n			<td>5</td>\r\n		</tr>\r\n		<tr>\r\n			<td>1st step</td>\r\n			<td>\r\n			<p><span style=\"color:#3498db\"><strong>slow</strong></span></p>\r\n\r\n			<p><span style=\"color:#e74c3c\"><strong>fast</strong></span></p>\r\n			</td>\r\n			<td>&nbsp;</td>\r\n			<td>&nbsp;</td>\r\n			<td>&nbsp;</td>\r\n			<td>&nbsp;</td>\r\n		</tr>\r\n		<tr>\r\n			<td>2nd step</td>\r\n			<td>&nbsp;</td>\r\n			<td><span style=\"color:#3498db\"><strong>slow</strong></span></td>\r\n			<td><span style=\"color:#e74c3c\"><strong>fast</strong></span></td>\r\n			<td>&nbsp;</td>\r\n			<td>&nbsp;</td>\r\n		</tr>\r\n		<tr>\r\n			<td>3rd step</td>\r\n			<td>&nbsp;</td>\r\n			<td>&nbsp;</td>\r\n			<td><span style=\"color:#3498db\"><strong>slow</strong></span></td>\r\n			<td>&nbsp;</td>\r\n			<td><span style=\"color:#e74c3c\"><strong>fast</strong></span></td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p><br />\r\n&nbsp;</p>','<p>Write a function to return the middle element of the linked list.</p>','<p>Example 1:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>: 2 -&gt; 3 -&gt; <span style=\"color:#e74c3c\"><strong>4</strong></span> -&gt; 5 -&gt; 6</p>\r\n\r\n			<p><strong>Output</strong>: <span style=\"color:#e74c3c\"><strong>4</strong></span></p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>Example 2:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>: 1 -&gt; 2 -&gt; <span style=\"color:#e74c3c\"><strong>3</strong></span> -&gt; 4<strong> </strong>-&gt; 5 -&gt; 6</p>\r\n\r\n			<p><strong>Output</strong>:<strong>&nbsp;<span style=\"color:#e74c3c\">3</span></strong></p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>','2019-10-16 08:18:46.000000','',1,31,1,'# Definition for linked list.\r\nclass Node:\r\n    def __init__(self, val):\r\n        self.val = val\r\n        self.next = None\r\n\r\ndef solve(head):\r\n    # Please insert code here','','','','','',158,'Find the middle of a linked list.',1),(135,'<p>You can use two pointers to find<strong> N-</strong>th node from the end.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>Here is the example when N is 3.</p>\r\n\r\n<p>The <span style=\"color:#e74c3c\"><strong>first</strong></span> pointer is two steps ahead of the&nbsp;<span style=\"color:#3498db\"><strong>second</strong></span> pointer when N is 3.</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>&nbsp;</td>\r\n			<td>1</td>\r\n			<td>2</td>\r\n			<td>3</td>\r\n			<td>4</td>\r\n			<td>5</td>\r\n			<td>6</td>\r\n		</tr>\r\n		<tr>\r\n			<td><strong>1st</strong></td>\r\n			<td><span style=\"color:#3498db\"><strong>second</strong></span></td>\r\n			<td>&nbsp;</td>\r\n			<td><span style=\"color:#e74c3c\"><strong>first</strong></span></td>\r\n			<td>&nbsp;</td>\r\n			<td>&nbsp;</td>\r\n			<td>&nbsp;</td>\r\n		</tr>\r\n		<tr>\r\n			<td><strong>2nd</strong></td>\r\n			<td>&nbsp;</td>\r\n			<td><span style=\"color:#3498db\"><strong>second</strong></span></td>\r\n			<td>&nbsp;</td>\r\n			<td><span style=\"color:#e74c3c\"><strong>first</strong></span></td>\r\n			<td>&nbsp;</td>\r\n			<td>&nbsp;</td>\r\n		</tr>\r\n		<tr>\r\n			<td><strong>3rd</strong></td>\r\n			<td>&nbsp;</td>\r\n			<td>&nbsp;</td>\r\n			<td><span style=\"color:#3498db\"><strong>second</strong></span></td>\r\n			<td>&nbsp;</td>\r\n			<td><span style=\"color:#e74c3c\"><strong>first</strong></span></td>\r\n			<td>&nbsp;</td>\r\n		</tr>\r\n		<tr>\r\n			<td><strong>4th</strong></td>\r\n			<td>&nbsp;</td>\r\n			<td>&nbsp;</td>\r\n			<td>&nbsp;</td>\r\n			<td><span style=\"color:#3498db\"><strong>second</strong></span></td>\r\n			<td>&nbsp;</td>\r\n			<td><span style=\"color:#e74c3c\"><strong>first</strong></span></td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>When the <strong><span style=\"color:#e74c3c\">first </span></strong>pointer<strong> </strong>reaches the end, the<span style=\"color:#3498db\"> <strong>second </strong></span>pointer<span style=\"color:#3498db\"><strong> </strong></span>will be the <strong>N-</strong>th node from the end.</p>','<p>Write a function to return the value from the end of the linked list.</p>','<p>Example 1:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>:</p>\r\n\r\n			<p>head = 1 -&gt; 2 -&gt; 3 -&gt; 4 -&gt; 5 -&gt; <span style=\"color:#e74c3c\"><strong>6</strong></span> -&gt; 7</p>\r\n\r\n			<p>n = 2</p>\r\n\r\n			<p><strong>Output</strong>: <span style=\"color:#e74c3c\"><strong>6</strong></span></p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>Example 2:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>:</p>\r\n\r\n			<p>head = 1 -&gt; 2 -&gt; 3 -&gt; 4 -&gt; <span style=\"color:#e74c3c\"><strong>5</strong></span> -&gt; 6 -&gt; 7</p>\r\n\r\n			<p>n = 3</p>\r\n\r\n			<p><strong>Output</strong>: <span style=\"color:#e74c3c\"><strong>5</strong></span></p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>','2019-10-16 08:48:36.000000','',1,31,1,'class Node:\r\n    def __init__(self, val):\r\n        self.val = val\r\n        self.next = None\r\n\r\ndef solve(head, n):','','','','','',159,'Find Nth node from the end of a linked list',2),(136,'','<p>Write a function to return the list to have a next greater value on the right side.</p>\r\n\r\n<p>If no greater value on the right side, take&nbsp;-1.</p>','<p>Example 1:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>: [1, 4, 5, 3]</p>\r\n\r\n			<p><strong>Output</strong>: [4, 5, -1, -1]</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p><span style=\"color:#27ae60\"><strong>Explanation:</strong></span></p>\r\n\r\n<p>4 of the output is the first greater value on the right side of 1 from the input.</p>\r\n\r\n<p>5 of the output is the first greater value on the right side of 4 from the input.</p>\r\n\r\n<p>There is no&nbsp;greater value on the right side of 5 from the input.</p>\r\n\r\n<p>There is no&nbsp;greater value on the right side of 3&nbsp;from the input.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>Example 2:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>: [2, 5, 3, 6, 7, 8]</p>\r\n\r\n			<p><strong>Output</strong>: [5, 6, 6, 7, 8, -1]</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p><span style=\"color:#27ae60\"><strong>Explanation:</strong></span></p>\r\n\r\n<p>5 of the output is the first greater value on the right side of 2 from the input.</p>\r\n\r\n<p>6 of the output is the first greater value on the right side of 5 from the input.</p>\r\n\r\n<p>6 of the output is the first greater value on the right side of 3 from the input.</p>\r\n\r\n<p>7 of the output is the first greater value on the right side of 6&nbsp;from the input.</p>\r\n\r\n<p>8 of the output is the first greater value on the right side of 8&nbsp;from the input.</p>\r\n\r\n<p>There is no&nbsp;greater value on the right side of 8 from the input.</p>','2019-10-16 09:45:08.000000','',1,9,1,'def solve(nums):','','','','','',154,'Next greater value',1),(137,'<p>A prime number is an integer greater than 1 which has only 2 factors.&nbsp;</p>\r\n\r\n<p>The prime number can not be divided by any other numbers except 1 and itself.</p>\r\n\r\n<p>Here is the prime numbers.</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>2, 3, 5, 7, 11, 13, 15, 19, 23, ...</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>2 = 1 * 2</p>\r\n\r\n<p>3 = 1 * 3</p>\r\n\r\n<p>5 = 1 * 5</p>\r\n\r\n<p>7 = 1 * 7</p>\r\n\r\n<p>11 = 1 * 11</p>\r\n\r\n<p>...</p>','<p>Write a function to return all prime numbers less than <strong>k.</strong></p>','<p>Example 1:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>:</p>\r\n\r\n			<p>k = 10</p>\r\n\r\n			<p>&nbsp;</p>\r\n\r\n			<p><strong>Output</strong>:</p>\r\n\r\n			<p>[2, 3, 5, 7]</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>Example 2:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>:</p>\r\n\r\n			<p>k = 20</p>\r\n\r\n			<p>&nbsp;</p>\r\n\r\n			<p><strong>Output</strong>:</p>\r\n\r\n			<p>[2, 3, 5, 7, 11, 13, 17, 19]</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>','2019-10-17 02:16:08.000000','',1,8,1,'def solve(k):','','','','','',144,'Find all prime numbers less than k',1),(138,'<p>We usually use the base-10 number system such as 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, ...</p>\r\n\r\n<p>Binary number is the base-2 number system such as 0, 1, 10, 11, 100, 101, 110, 111, 1000, ...</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>Here is the mapping table between base-10 and base-2.</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>Base-10</td>\r\n			<td>Base-2</td>\r\n		</tr>\r\n		<tr>\r\n			<td>0</td>\r\n			<td>0</td>\r\n		</tr>\r\n		<tr>\r\n			<td>1</td>\r\n			<td>1</td>\r\n		</tr>\r\n		<tr>\r\n			<td>2</td>\r\n			<td>10</td>\r\n		</tr>\r\n		<tr>\r\n			<td>3</td>\r\n			<td>11</td>\r\n		</tr>\r\n		<tr>\r\n			<td>4</td>\r\n			<td>100</td>\r\n		</tr>\r\n		<tr>\r\n			<td>5</td>\r\n			<td>101</td>\r\n		</tr>\r\n		<tr>\r\n			<td>6</td>\r\n			<td>110</td>\r\n		</tr>\r\n		<tr>\r\n			<td>7</td>\r\n			<td>111</td>\r\n		</tr>\r\n		<tr>\r\n			<td>8</td>\r\n			<td>1000</td>\r\n		</tr>\r\n		<tr>\r\n			<td>9</td>\r\n			<td>1001</td>\r\n		</tr>\r\n		<tr>\r\n			<td>10</td>\r\n			<td>1010</td>\r\n		</tr>\r\n		<tr>\r\n			<td>11</td>\r\n			<td>1011</td>\r\n		</tr>\r\n		<tr>\r\n			<td>12</td>\r\n			<td>1100</td>\r\n		</tr>\r\n		<tr>\r\n			<td>13</td>\r\n			<td>1101</td>\r\n		</tr>\r\n		<tr>\r\n			<td>14</td>\r\n			<td>1110</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>To represent <span style=\"color:#e74c3c\"><strong>35</strong></span>&nbsp;in base-2, you should use the following table.</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>2**5</td>\r\n			<td>2**4</td>\r\n			<td>2**3</td>\r\n			<td>2**2</td>\r\n			<td>2**1</td>\r\n			<td>2**0</td>\r\n		</tr>\r\n		<tr>\r\n			<td><span style=\"color:#e74c3c\"><strong>1</strong></span></td>\r\n			<td>0</td>\r\n			<td>0</td>\r\n			<td>0</td>\r\n			<td><strong><span style=\"color:#e74c3c\">1</span></strong></td>\r\n			<td><strong><span style=\"color:#e74c3c\">1</span></strong></td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>2**5 + 2**1 + 2**0 = 32 + 2 + 1= <strong>35</strong></p>\r\n\r\n<p>So 35 in base 10 is same as <strong>100011</strong>&nbsp;in binary.</p>\r\n\r\n<p><strong>Tip. </strong>All Number ** 0 = 1</p>\r\n\r\n<p>If you don&#39;t know<strong>&nbsp;</strong>the meaning of <strong>**</strong>, please check&nbsp;<a href=\"https://pypykids.com/quiz/Arithmetic-Operator/\">Arithmetic Operator</a></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>Here is the math to convert the number in base 10 to binary.</p>\r\n\r\n<p>35&nbsp;/ 2 = 17 R <span style=\"color:#e74c3c\"><strong>1</strong></span></p>\r\n\r\n<p>17 / 2 = 8 R<span style=\"color:#e74c3c\"><strong> 1</strong></span></p>\r\n\r\n<p>8 / 2 = 4&nbsp;R<span style=\"color:#e74c3c\"><strong> 0</strong></span></p>\r\n\r\n<p>4 / 2 = 2&nbsp;R<span style=\"color:#e74c3c\"><strong> 0</strong></span></p>\r\n\r\n<p>2 / 2 =<strong> <span style=\"color:#e74c3c\">1</span> </strong>R<span style=\"color:#e74c3c\"><strong>&nbsp;0</strong></span></p>\r\n\r\n<p><span style=\"color:#e74c3c\"><strong>35 </strong></span>in base-10 is same as <span style=\"color:#e74c3c\"><strong>100011&nbsp;</strong></span>in base-2</p>','<p>Write a function to convert a number to a number in base-2</p>','<p>Example 1:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>: 10</p>\r\n\r\n			<p><strong>Output</strong>: 1010</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p><span style=\"color:#27ae60\"><strong>Explanation:</strong></span></p>\r\n\r\n<p>1 * 2**3&nbsp;+ 1 * 2**1 = 1010</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>Example 2:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>: 16</p>\r\n\r\n			<p><strong>Output</strong>: 10000</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p><span style=\"color:#27ae60\"><strong>Explanation:</strong></span></p>\r\n\r\n<p>1 * 2**4&nbsp;= 10000</p>','2019-10-17 05:12:48.000000','',1,8,1,'def solve(num):','','','','','',145,'Binary number',1),(139,'<h3>Class</h3>\r\n\r\n<p>Class is a blueprint for creating an object.</p>\r\n\r\n<p>Class have <strong>two things</strong>.</p>\r\n\r\n<p><strong>&nbsp; 1. <span style=\"color:#e74c3c\">Instance variable</span></strong>: data</p>\r\n\r\n<p><strong>&nbsp; 2. <span style=\"color:#e74c3c\">Method</span></strong>: function</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>To define Phone which is a class name, you can use a&nbsp;class keyword.</p>\r\n\r\n<p>Here is the basic class definition.</p>\r\n\r\n<p>#code</p>\r\n\r\n<p><span style=\"color:#3498db\"><strong>class</strong></span>&nbsp;Phone:</p>\r\n\r\n<p>&nbsp; &nbsp; pass</p>\r\n\r\n<p>#end</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<h3>Object</h3>\r\n\r\n<p>You should&nbsp;create an object by using a class definition.</p>\r\n\r\n<p><strong>You cannot use a class directly without creating an object.</strong></p>\r\n\r\n<p>#code</p>\r\n\r\n<p>class Phone:</p>\r\n\r\n<p>&nbsp; &nbsp; pass</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>phone = <span style=\"color:#3498db\"><strong>Phone()</strong></span></p>\r\n\r\n<p>#end</p>\r\n\r\n<p><strong>phone</strong> is an object name and the object is created by using <strong>Phone</strong> class definition.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<h3>Init function</h3>\r\n\r\n<p>All classes have a function called _ _init_ _.&nbsp;It will be run whenever an object is created.</p>\r\n\r\n<p>If you do not define it, the default _ _init_ _&nbsp;will be used.</p>\r\n\r\n<p>You can set&nbsp;<strong>instance variables </strong>with _ _init_ _.</p>\r\n\r\n<p>Both are <span style=\"color:#e74c3c\"><strong>double underscores</strong></span> and the first parameter of _ _init_ _&nbsp;is always&nbsp;<span style=\"color:#e74c3c\"><strong>self </strong></span>keyword.</p>\r\n\r\n<p><span style=\"color:#e74c3c\"><strong>self</strong></span>.brand and&nbsp;<span style=\"color:#e74c3c\"><strong>self</strong></span>.color mean instance variables.</p>\r\n\r\n<p>#code</p>\r\n\r\n<p>class Phone:</p>\r\n\r\n<p>&nbsp; &nbsp; def __init__(self, brand, color):</p>\r\n\r\n<p>&nbsp; &nbsp; &nbsp; &nbsp; self.brand&nbsp;= brand</p>\r\n\r\n<p>&nbsp; &nbsp; &nbsp; &nbsp; self.color = color</p>\r\n\r\n<p>&nbsp; &nbsp; &nbsp; &nbsp; self.call = True</p>\r\n\r\n<p>#end</p>','<p>How many <strong>objects</strong> and <strong>instance&nbsp;variables</strong>?</p>','<p>#code</p>\r\n\r\n<p>class Rectangle:</p>\r\n\r\n<p>&nbsp; &nbsp; def __init__(self, height, width):</p>\r\n\r\n<p>&nbsp; &nbsp; &nbsp; &nbsp; self.height = height</p>\r\n\r\n<p>&nbsp; &nbsp; &nbsp; &nbsp; self.width = width</p>\r\n\r\n<p>&nbsp; &nbsp;</p>\r\n\r\n<p>rectangle1 = Rectangle(10, 20)</p>\r\n\r\n<p>rectangle2 = Rectangle(20, 20)</p>\r\n\r\n<p>rectangle3&nbsp;= Rectangle(30, 20)</p>\r\n\r\n<p>#end</p>','2019-10-19 19:05:43.000000','',1,11,4,'','objects = 3\r\ninstance variables = 2','objects = 2\r\ninstance variables = 3','objects = 3\r\ninstance variables = 3','objects = 2\r\ninstance variables = 2','tR4gLbENU3E',85,'Class and Object',1),(140,'<p>After creating an object, you can access instance variables.</p>\r\n\r\n<p>You can access the instance variable with a <strong>dot</strong> between an object and a instance variable.</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>object_name.instance_variable</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>#code</p>\r\n\r\n<p>class Phone:</p>\r\n\r\n<p>&nbsp; &nbsp; def __init__(self, brand, color):</p>\r\n\r\n<p>&nbsp; &nbsp; &nbsp; &nbsp; self.brand&nbsp;= brand</p>\r\n\r\n<p>&nbsp; &nbsp; &nbsp; &nbsp; self.color = color</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>phone1 = Phone(&quot;Apple&quot;, &quot;pink&quot;)</p>\r\n\r\n<p>print(phone1.brand, phone.color)</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>phone2&nbsp;= Phone(&quot;Google&quot;, &quot;black&quot;)</p>\r\n\r\n<p>print(phone2.brand, phone2.color)</p>\r\n\r\n<p>#end</p>\r\n\r\n<p>#run-2</p>\r\n\r\n<p>Apple pink</p>\r\n\r\n<p>Google black</p>\r\n\r\n<p>#end</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong>phone1,</strong>&nbsp;<strong>phone2</strong> are object names and&nbsp;<strong>brand</strong>,&nbsp;<strong>color</strong> are instance&nbsp;variables.</p>','<p>Write a code to print the area of the rectangle.</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>Area = height * width</td>\r\n		</tr>\r\n	</tbody>\r\n</table>','','2019-10-19 20:17:21.000000','',1,11,1,'class Rectangle:\r\n    def __init__(self, height, width):\r\n        self.height = height\r\n        self.width = width\r\n\r\nrectangle = Rectangle(10, 20)\r\n\r\n# Please insert code below.','','','','','',86,'Instance variables',1),(141,'','<p>Write a function to convert a list to a dictionary.</p>','<p>Example 1:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>: [1, 2, 3, 4, 5, 6]</p>\r\n\r\n			<p><strong>Output</strong>: {1: 2, 3: 4, 5: 6}</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>Example 2:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>: [&quot;hello&quot;, 1, &quot;hi&quot;, 2]</p>\r\n\r\n			<p><strong>Output</strong>: {&quot;hello&quot;: 1, &quot;hi&quot;: 2}</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>','2019-10-21 00:39:12.000000','',1,24,1,'def solve(list):','','','','','',84,'Convert a list to a dictionary',1),(142,'','<p>Write a function to return a zig-zag list as shown below.</p>','<p>Example 1:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>: 3&nbsp;</p>\r\n\r\n			<p><strong>Output</strong>:&nbsp;</p>\r\n\r\n			<p>[[1, 2, 3],</p>\r\n\r\n			<p>[<span style=\"color:#e74c3c\"><strong>6, 5, 4</strong></span>],</p>\r\n\r\n			<p>[7, 8, 9]]</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>Example 2:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>: 4</p>\r\n\r\n			<p><strong>Output</strong>:&nbsp;</p>\r\n\r\n			<p>[[1, 2, 3, 4],</p>\r\n\r\n			<p>[<span style=\"color:#e74c3c\"><strong>8, 7, 6, 5</strong></span>],</p>\r\n\r\n			<p>[9, 10, 11, 12],</p>\r\n\r\n			<p>[<span style=\"color:#e74c3c\"><strong>16, 15, 14, 13</strong></span>]]</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>','2019-10-22 01:33:41.000000','',1,29,1,'def solve(n):','','','','','',101,'Zigzag list',1),(143,'','<p>Write a function to return a zig-zag list as shown below.</p>','<p>Example 1:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>: 3</p>\r\n\r\n			<p><strong>Output</strong>:</p>\r\n\r\n			<p>[[1, <span style=\"color:#e74c3c\"><strong>2</strong></span>, 9],</p>\r\n\r\n			<p>[<span style=\"color:#e74c3c\"><strong>4</strong></span>, <span style=\"color:#e74c3c\"><strong>3</strong></span>, 8],</p>\r\n\r\n			<p>[5, 6, 7]]&nbsp;</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>Example 2:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>: 4</p>\r\n\r\n			<p><strong>Output</strong>:&nbsp;</p>\r\n\r\n			<p>[[1,&nbsp; &nbsp;<span style=\"color:#e74c3c\"><strong>2</strong></span>,&nbsp; &nbsp;9,&nbsp; <span style=\"color:#e74c3c\"><strong>10</strong></span>],</p>\r\n\r\n			<p>[ <span style=\"color:#e74c3c\"><strong>4</strong></span>,&nbsp; &nbsp;<span style=\"color:#e74c3c\"><strong>3</strong></span>,&nbsp; &nbsp;8,&nbsp;&nbsp;<span style=\"color:#e74c3c\"><strong>11</strong></span>],</p>\r\n\r\n			<p>[ 5,&nbsp; &nbsp;6,&nbsp; &nbsp;7,&nbsp;&nbsp;<span style=\"color:#e74c3c\"><strong>12</strong></span>],</p>\r\n\r\n			<p>[<span style=\"color:#e74c3c\"><strong>16</strong></span>, <span style=\"color:#e74c3c\"><strong>15</strong></span>,&nbsp;<span style=\"color:#e74c3c\"><strong>14</strong></span>, <span style=\"color:#e74c3c\"><strong>13</strong></span>]]&nbsp;</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>&nbsp;</p>','2019-10-22 01:48:22.000000','',0,29,1,'def solve(n):','','','','','',102,'Zigzag list 2',0),(144,'','<p>Write a function to return a zig-zag list as shown below.</p>','<p>Example 1:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>: 3</p>\r\n\r\n			<p><strong>Output</strong>:&nbsp;</p>\r\n\r\n			<p>[[1, <span style=\"color:#e74c3c\"><strong>2</strong></span>, 6],</p>\r\n\r\n			<p>[<span style=\"color:#e74c3c\"><strong>3</strong></span>, 5, <span style=\"color:#e74c3c\"><strong>7</strong></span>],</p>\r\n\r\n			<p>[4, <span style=\"color:#e74c3c\"><strong>8</strong></span>, 9]]</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>Example 2:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>: 4</p>\r\n\r\n			<p><strong>Output</strong>:</p>\r\n\r\n			<p>[[1,&nbsp; &nbsp;<span style=\"color:#e74c3c\"><strong>2</strong></span>,&nbsp; &nbsp;6,&nbsp; &nbsp;<span style=\"color:#e74c3c\"><strong>7</strong></span>],</p>\r\n\r\n			<p>[&nbsp;<span style=\"color:#e74c3c\"><strong>3</strong></span>,&nbsp; &nbsp;5,&nbsp; &nbsp;<span style=\"color:#e74c3c\"><strong>8</strong></span>,&nbsp;13],</p>\r\n\r\n			<p>[ 4,&nbsp; &nbsp;<span style=\"color:#e74c3c\"><strong>9</strong></span>, 12,&nbsp;<span style=\"color:#e74c3c\"><strong>14</strong></span>],</p>\r\n\r\n			<p>[<span style=\"color:#e74c3c\"><strong>10</strong></span>, 11, <span style=\"color:#e74c3c\"><strong>15</strong></span>, 16]]&nbsp;</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>','2019-10-22 02:07:44.000000','',0,29,1,'def solve(n):','','','','','',103,'Zigzag list 3',0),(145,'','<p>Write a function to return the maximum value of the set.</p>','<p>Example 1:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>: {3, 4, 2}</p>\r\n\r\n			<p><strong>Output</strong>: 4</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>Example 2:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>: {5, 9, 13}</p>\r\n\r\n			<p><strong>Output</strong>: 13</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>','2019-10-22 02:42:35.000000','',1,23,1,'def solve(nums):','','','','','',74,'Maximum of set',1),(146,'<p>You can write a code to make&nbsp;2D lists.</p>\r\n\r\n<p>#code</p>\r\n\r\n<p>ans, n = [], 1</p>\r\n\r\n<p>for i in range(3):</p>\r\n\r\n<p>&nbsp; &nbsp; sub = []</p>\r\n\r\n<p>&nbsp; &nbsp; for j in range(3):</p>\r\n\r\n<p>&nbsp; &nbsp; &nbsp; &nbsp; sub.append(n)</p>\r\n\r\n<p>&nbsp; &nbsp; &nbsp; &nbsp; n += 1</p>\r\n\r\n<p>&nbsp; &nbsp; ans.append(sub)</p>\r\n\r\n<p>print(ans)</p>\r\n\r\n<p>#end</p>\r\n\r\n<p>#run-1</p>\r\n\r\n<p>[[1, 2, 3],</p>\r\n\r\n<p>[4, 5, 6],</p>\r\n\r\n<p>[7, 8, 9]]</p>\r\n\r\n<p>#end</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>You can get the index each position.</p>\r\n\r\n<p>#code</p>\r\n\r\n<p>for i in range(3):</p>\r\n\r\n<p>&nbsp; &nbsp; for j in range(3):</p>\r\n\r\n<p>&nbsp; &nbsp; &nbsp; &nbsp; print([i, j])</p>\r\n\r\n<p>&nbsp; &nbsp; print()</p>\r\n\r\n<p>print(ans)</p>\r\n\r\n<p>#end</p>\r\n\r\n<p>#run-2</p>\r\n\r\n<p>[0, 0]<br />\r\n[0, 1]<br />\r\n[0, 2]<br />\r\n<br />\r\n[1, 0]<br />\r\n[1, 1]<br />\r\n[1, 2]<br />\r\n<br />\r\n[2, 0]<br />\r\n[2, 1]<br />\r\n[2, 2]</p>\r\n\r\n<p>#end</p>','<p>Write a function to return a vertical list.</p>','<p>Example 1:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>: 3</p>\r\n\r\n			<p><strong>Output</strong>:&nbsp;</p>\r\n\r\n			<p>[[1, <span style=\"color:#e74c3c\"><strong>4</strong></span>, 7],</p>\r\n\r\n			<p>[2, <span style=\"color:#e74c3c\"><strong>5</strong></span>, 8],</p>\r\n\r\n			<p>[3, <span style=\"color:#e74c3c\"><strong>6</strong></span>, 9]]</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>Example 2:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>: 4</p>\r\n\r\n			<p><strong>Output</strong>:</p>\r\n\r\n			<p>[[1, <span style=\"color:#e74c3c\"><strong>5</strong></span>, 9, <span style=\"color:#e74c3c\"><strong>13</strong></span>],</p>\r\n\r\n			<p>[2, <span style=\"color:#e74c3c\"><strong>6</strong></span>, 10, <span style=\"color:#e74c3c\"><strong>14</strong></span>],</p>\r\n\r\n			<p>[3, <span style=\"color:#e74c3c\"><strong>7</strong></span>, 11, <span style=\"color:#e74c3c\"><strong>15</strong></span>],</p>\r\n\r\n			<p>[4, <span style=\"color:#e74c3c\"><strong>8</strong></span>, 12, <span style=\"color:#e74c3c\"><strong>16</strong></span>]]&nbsp;</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>','2019-10-22 03:01:39.000000','',1,29,1,'def solve(n):','','','','','',99,'Vertical list',1),(147,'<h4><img alt=\"circumference\" src=\"/static/quiz/147_circumference.png\" style=\"height:265px; width:200px\" /></h4>\r\n\r\n<h4>Area of a circle</h4>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td><strong>Area of a circle </strong>= pi * radius * radius</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<h4>Circumference</h4>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td><strong>Circumference </strong>= 2 * pi * radius</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p><strong>pi</strong> is&nbsp;<strong>3.14</strong></p>','<p>Write a function to return<strong> the area of the circle</strong> and <strong>circumference</strong> when getting radius as a parameter.</p>\r\n\r\n<p>Round down the answer to the nearest ones.</p>\r\n\r\n<p>Let&#39;s assume pi is 3.14</p>','<p>Example 1:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>: 4</p>\r\n\r\n			<p><strong>Output</strong>:&nbsp;</p>\r\n\r\n			<p>50</p>\r\n\r\n			<p>25</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p><strong><span style=\"color:#27ae60\">Explanation</span><span style=\"color:#27ae60\">:</span></strong></p>\r\n\r\n<p>50.24 = 3.14 * 4 * 4</p>\r\n\r\n<p>25.12 = 2 * 3.14 * 4</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>Example 2:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>: 5</p>\r\n\r\n			<p><strong>Output</strong>:&nbsp;</p>\r\n\r\n			<p>78</p>\r\n\r\n			<p>31</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p><strong><span style=\"color:#27ae60\">Explanation</span><span style=\"color:#27ae60\">:</span></strong></p>\r\n\r\n<p>78.5 = 3.14 * 5 * 5</p>\r\n\r\n<p>31.4 = 2 * 3.14 * 5</p>','2019-10-22 03:20:26.000000','',1,8,1,'def solve(radius):','','','','','',134,'Circumference and area of a circle',1),(148,'<p>Let&#39;s find the target sum(<strong><span style=\"color:#e74c3c\">11</span></strong>)<strong> </strong>of the subarray.</p>\r\n\r\n<p>Here is the step to find the target sum.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>1. You can increase the right side of the subarray&nbsp;until&nbsp;finding the target sum.</p>\r\n\r\n<p><img alt=\"\" src=\"/static/quiz/148_target_sum_of_subarray_1.png\" style=\"height:548px; width:376px\" /></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>2. If the sum of the subarray&nbsp;is greater than the target sum, decrease the left side of the subarray.</p>\r\n\r\n<p><img alt=\"\" src=\"/static/quiz/148_target_sum_of_subarray_2.png\" style=\"height:311px; width:370px\" /></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>3. If the sum of the subarray is less than the target sum, increase the right side of the subarray again.</p>\r\n\r\n<p><img alt=\"\" src=\"/static/quiz/148_target_sum_of_subarray_3.png\" style=\"height:89px; width:367px\" /></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>4. If the sum of the subarray is great than the target sum, decrease the left side of the subarray again.</p>\r\n\r\n<p><img alt=\"\" src=\"/static/quiz/148_target_sum_of_subarray_4.png\" style=\"height:88px; width:367px\" /></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>5. Repeat this flow until found the target sum.</p>','<p>Write a function to return whether you can make the target value by the sum of the subarray.</p>','<p>Example 1:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>:&nbsp;</p>\r\n\r\n			<p>nums = [2, <span style=\"color:#e74c3c\"><strong>4, 5</strong></span>, 6, 7]</p>\r\n\r\n			<p>target = 9</p>\r\n\r\n			<p>&nbsp;</p>\r\n\r\n			<p><strong>Output</strong>:&nbsp;</p>\r\n\r\n			<p>True</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p><span style=\"color:#27ae60\"><strong>Explanation:</strong></span></p>\r\n\r\n<p>9 = 4 + 5</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>Example 2:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>:</p>\r\n\r\n			<p>nums = [1, 2,<strong> <span style=\"color:#e74c3c\">3, 4, 5</span></strong>, 6]</p>\r\n\r\n			<p>target = 12</p>\r\n\r\n			<p>&nbsp;</p>\r\n\r\n			<p><strong>Output</strong>:&nbsp;</p>\r\n\r\n			<p>True</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p><span style=\"color:#27ae60\"><strong>Explanation:</strong></span></p>\r\n\r\n<p>12 = 3 + 4 + 5</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>Example 3:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>:</p>\r\n\r\n			<p>nums = [1, 2,<strong> </strong>3, 4, 5, 6]</p>\r\n\r\n			<p>target = 8</p>\r\n\r\n			<p>&nbsp;</p>\r\n\r\n			<p><strong>Output</strong>:&nbsp;</p>\r\n\r\n			<p>False</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p><span style=\"color:#27ae60\"><strong>Explanation:</strong></span></p>\r\n\r\n<p>You can not make 8 with the sum of the subarray.</p>\r\n\r\n<p>1 + 3 + 4 = 8.&nbsp; But it is not subarray because it is not contiguous.</p>','2019-10-22 08:27:06.000000','',1,34,1,'def solve(nums, target):','','','','','',168,'Target sum of subarray',1),(149,'<p>#code</p>\r\n\r\n<p>print(max(1, 2), max(5, 2))</p>\r\n\r\n<p>#end</p>\r\n\r\n<p>#run-1</p>\r\n\r\n<p>2 5</p>\r\n\r\n<p>#end</p>','<p>Write a function to return the list as shown below.</p>','<p>Example 1:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>: 4</p>\r\n\r\n			<p><strong>Output</strong>:</p>\r\n\r\n			<p>[[1, 2, 3, 4],</p>\r\n\r\n			<p>[2, 2, 3, 4],</p>\r\n\r\n			<p>[3, 3, 3, 4],</p>\r\n\r\n			<p>[4, 4, 4, 4]]&nbsp;</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>','2019-10-23 02:11:46.000000','<p>Pick the maximum of index i and index j at each position.</p>',1,29,1,'def solve(n):','','','','','',96,'Maximum index at each position',1),(150,'<p>You can place 1s diagonally.</p>\r\n\r\n<p>#code</p>\r\n\r\n<p>list = []</p>\r\n\r\n<p>for i in range(3):</p>\r\n\r\n<p>&nbsp; &nbsp; sub = []</p>\r\n\r\n<p>&nbsp; &nbsp; for j in range(3):</p>\r\n\r\n<p>&nbsp; &nbsp; &nbsp; &nbsp; if i == j:</p>\r\n\r\n<p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; sub.append(1)</p>\r\n\r\n<p>&nbsp; &nbsp; &nbsp; &nbsp; else:</p>\r\n\r\n<p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; sub.append(0)</p>\r\n\r\n<p>&nbsp; &nbsp; list.append(sub)</p>\r\n\r\n<p>print(ans)</p>\r\n\r\n<p>#end</p>\r\n\r\n<p>#run-1</p>\r\n\r\n<p>[[1, 0, 0],</p>\r\n\r\n<p>&nbsp;[0, 1, 0],</p>\r\n\r\n<p>&nbsp;[0, 0, 1]]</p>\r\n\r\n<p>#end</p>\r\n\r\n<p>&nbsp; &nbsp;</p>\r\n\r\n<p>You can place 1s on the opposite diagonal.</p>\r\n\r\n<p>#code</p>\r\n\r\n<p>list = []</p>\r\n\r\n<p>for i in range(3):</p>\r\n\r\n<p>&nbsp; &nbsp; sub = []</p>\r\n\r\n<p>&nbsp; &nbsp; for j in range(3):</p>\r\n\r\n<p>&nbsp; &nbsp; &nbsp; &nbsp; if i + j == 2:</p>\r\n\r\n<p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; sub.append(1)</p>\r\n\r\n<p>&nbsp; &nbsp; &nbsp; &nbsp; else:</p>\r\n\r\n<p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; sub.append(0)</p>\r\n\r\n<p>&nbsp; &nbsp; list.append(sub)</p>\r\n\r\n<p>print(ans)</p>\r\n\r\n<p>#end</p>\r\n\r\n<p>#run-2</p>\r\n\r\n<p>[[0, 0, 1],</p>\r\n\r\n<p>&nbsp;[0, 1, 0],</p>\r\n\r\n<p>&nbsp;[1, 0, 0]]</p>\r\n\r\n<p>#end</p>\r\n\r\n<p>&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;</p>','<p>Write a function to return the list with&nbsp;1s diagonally.</p>','<p>Example 1:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>: 4</p>\r\n\r\n			<p><strong>Output</strong>:&nbsp;</p>\r\n\r\n			<p>[[1, 0, 0, 1],</p>\r\n\r\n			<p>&nbsp;[0, 1, 1, 0],</p>\r\n\r\n			<p>&nbsp;[0, 1, 1, 0],</p>\r\n\r\n			<p>&nbsp;[1, 0, 0, 1]]</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>Example 2:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>: 5</p>\r\n\r\n			<p><strong>Output</strong>:&nbsp;</p>\r\n\r\n			<p>[[1, 0, 0, 0, 1],</p>\r\n\r\n			<p>&nbsp;[0, 1, 0, 1, 0],</p>\r\n\r\n			<p>&nbsp;[0, 0, 1, 0, 0],</p>\r\n\r\n			<p>&nbsp;[0, 1, 0, 1, 0],</p>\r\n\r\n			<p>&nbsp;[1, 0, 0, 0, 1]]</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>','2019-10-23 02:32:04.000000','',1,29,1,'def solve(n):','','','','','',97,'Draw 1s diagonally',1),(151,'<p>You can iterate a character from a string.</p>\r\n\r\n<p>#code</p>\r\n\r\n<p>str = &quot;hello&quot;</p>\r\n\r\n<p>for ch in str:</p>\r\n\r\n<p>&nbsp; &nbsp; print(ch)</p>\r\n\r\n<p>#end</p>\r\n\r\n<p>#run-1</p>\r\n\r\n<p>h</p>\r\n\r\n<p>e</p>\r\n\r\n<p>l</p>\r\n\r\n<p>l</p>\r\n\r\n<p>o</p>\r\n\r\n<p>#end</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>You can pick the character at i-th position.</p>\r\n\r\n<p>#code</p>\r\n\r\n<p>str = &quot;python&quot;</p>\r\n\r\n<p>print(str[0])</p>\r\n\r\n<p>print(str[1])</p>\r\n\r\n<p>print(str[-1])</p>\r\n\r\n<p>print(str[-2])</p>\r\n\r\n<p>#end</p>\r\n\r\n<p>#run-2</p>\r\n\r\n<p>p</p>\r\n\r\n<p>y</p>\r\n\r\n<p>n</p>\r\n\r\n<p>o</p>\r\n\r\n<p>#end</p>\r\n\r\n<p>str[0] means the first character.</p>\r\n\r\n<p>str[-1] means the last character.</p>\r\n\r\n<p>str[-2] means the second character from the last.</p>\r\n\r\n<p><a href=\"https://pypykids.com/quiz/Index-a-character/\">How to index a character</a></p>','<p>Write a function to reverse a string.</p>','<p>Example 1:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>: &quot;hello&quot;</p>\r\n\r\n			<p><strong>Output</strong>: &quot;olleh&quot;</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>Example 2:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>: &quot;python&quot;</p>\r\n\r\n			<p><strong>Output</strong>: &quot;nohtyp&quot;</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>','2019-10-24 02:34:59.000000','',1,3,1,'def solve(str):','','','','','',46,'Reverse a string',1),(152,'<p><img alt=\"\" src=\"/static/quiz/152_height_and_widht_of_2D_list.png\" style=\"height:137px; width:400px\" /></p>\r\n\r\n<p>You can get the height of 2D list.</p>\r\n\r\n<p>#code</p>\r\n\r\n<p>list = [[1, 2, 3], [4, 5, 6]]</p>\r\n\r\n<p>print(len(list))</p>\r\n\r\n<p>#end</p>\r\n\r\n<p>#run-1</p>\r\n\r\n<p>2</p>\r\n\r\n<p><span style=\"color:#27ae60\"><strong>Explanation:</strong></span></p>\r\n\r\n<p>1st element = [1, 2, 3]</p>\r\n\r\n<p>2nd element = [4, 5, 6]</p>\r\n\r\n<p>#end</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>You can get the width of 2D list.</p>\r\n\r\n<p>#code</p>\r\n\r\n<p>list = [[1, 2, 3], [4, 5, 6]]</p>\r\n\r\n<p>print(len(list[0]))</p>\r\n\r\n<p>#end</p>\r\n\r\n<p>#run-2</p>\r\n\r\n<p>3</p>\r\n\r\n<p><span style=\"color:#27ae60\"><strong>Explanation:</strong></span></p>\r\n\r\n<p>list[0] = [1, 2, 3]</p>\r\n\r\n<p>#end</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>You can get the length of the 1st inner list.</p>','<p>Write a function to return the sum of the height and width.</p>','<p>Example 1:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>:&nbsp;</p>\r\n\r\n			<p>[[1, 2, 3, 4],</p>\r\n\r\n			<p>&nbsp;[5, 6, 7, 8]]</p>\r\n\r\n			<p>&nbsp;</p>\r\n\r\n			<p><strong>Output</strong>:&nbsp;</p>\r\n\r\n			<p>6</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p><span style=\"color:#27ae60\"><strong>Explanation</strong></span>:</p>\r\n\r\n<p>6 = 2(height) + 4(width)</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>Example 2:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>:&nbsp;</p>\r\n\r\n			<p>[[1, 2, 3],</p>\r\n\r\n			<p>[4, 5, 6]]</p>\r\n\r\n			<p>&nbsp;</p>\r\n\r\n			<p><strong>Output</strong>:</p>\r\n\r\n			<p>5&nbsp;</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p><span style=\"color:#27ae60\"><strong>Explanation</strong></span>:</p>\r\n\r\n<p>5 = 2(height)&nbsp;+ 3(width)</p>','2019-10-24 03:16:37.000000','',1,4,1,'def solve(list):','','','','','',63,'Width and Height of 2D List',0),(153,'<p>You can make the temporary table to save the maximum square up to the current position.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>Let&#39;s think about how to calculate the area of the maximum square with all 1s.</p>\r\n\r\n<p>The answer will be 9.&nbsp; Let&#39;s see step by step.</p>\r\n\r\n<p><img alt=\"\" src=\"/static/quiz/153_maximum_square_0.png\" /></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>Here is the temporary table to save the maximum side of the square.</p>\r\n\r\n<p>Each position in the temporary table means the maximum side of the square up to the position.</p>\r\n\r\n<p>With the values in the green line of &lt;temporary&gt;, you can make the square with length 2.&nbsp; So the maximum area will be 4.</p>\r\n\r\n<p>To calculate&nbsp;the value at the highlighted position, you should consider three&nbsp;adjacent positions.&nbsp;</p>\r\n\r\n<p>If all three adjacent values are 1s, you can make the square with length 2 up to&nbsp;the current position.</p>\r\n\r\n<p><img alt=\"\" src=\"/static/quiz/153_maximum_square_1.png\" /></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>Let&#39;s calculate the next position.</p>\r\n\r\n<p>There are three adjacent values as well.&nbsp; Two values are 1 and one value is 2 in the temporary table.</p>\r\n\r\n<p>With the values in the green line of &lt;temporary&gt;, you can make the square with length 2.</p>\r\n\r\n<p>It is the same as before.</p>\r\n\r\n<p><img alt=\"\" src=\"/static/quiz/153_maximum_square_2.png\" /></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>Let&#39;s calculate the last position.</p>\r\n\r\n<p>All thee adjacent values are 2.&nbsp; So you can make the square with length 3.</p>\r\n\r\n<p>Let&#39;s see &lt;input&gt;.&nbsp; Probably you will know why you can make the square with length 3 including the current highlighted position.</p>\r\n\r\n<p><img alt=\"\" src=\"/static/quiz/153_maximum_square_3.png\" /></p>\r\n\r\n<p>In summary,</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>current value =&nbsp;1 + minimum of three adjacent values</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>If there is no left or upper value, you should consider it is 0.</p>','<p>Write a function to return the area of the maximum <strong>square</strong> with all 1s.</p>','<p>Example 1:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>:&nbsp;</p>\r\n\r\n			<p>[[0, <span style=\"color:#27ae60\"><strong>1, 1, 1</strong></span>],</p>\r\n\r\n			<p>&nbsp;[1, <span style=\"color:#27ae60\"><strong>1, 1, 1</strong></span>],</p>\r\n\r\n			<p>&nbsp;[0, <span style=\"color:#27ae60\"><strong>1, 1, 1</strong></span>]]</p>\r\n\r\n			<p>&nbsp;</p>\r\n\r\n			<p><strong>Output</strong>:&nbsp;</p>\r\n\r\n			<p>9</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>Example 2:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>:&nbsp;</p>\r\n\r\n			<p>[[0, <span style=\"color:#27ae60\"><strong>1</strong></span>, <span style=\"color:#27ae60\"><strong>1</strong></span>],</p>\r\n\r\n			<p>&nbsp;[1, <strong><span style=\"color:#27ae60\">1</span></strong>, <span style=\"color:#27ae60\"><strong>1</strong></span>],</p>\r\n\r\n			<p>&nbsp;[0, 0, 1]]</p>\r\n\r\n			<p>&nbsp;</p>\r\n\r\n			<p><strong>Output</strong>:</p>\r\n\r\n			<p>4&nbsp;</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>','2019-10-24 04:16:28.000000','<p>Here is the temporary table to save the maximum side of the square up to the position.</p>\r\n\r\n<p>With the value in the green line, you can make the square with length 2.&nbsp; So the area will be 4.</p>\r\n\r\n<p><img alt=\"\" src=\"/static/quiz/153_maximum_square_2.png\" style=\"height:322px; width:560px\" /></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>To calculate the highlighted position&nbsp;in the table above, you should consider the 3 adjacent positions.&nbsp;</p>\r\n\r\n<p>If all 3 adjacent values are 1, you can make the square with length 2 up to&nbsp;the current position.</p>\r\n\r\n<p><img alt=\"\" src=\"/static/quiz/153_maximum_square_1.png\" style=\"height:322px; width:560px\" /></p>',1,35,1,'def solve(list):','','','','','',175,'Maximum square',0),(154,'','<p>Write a function to return&nbsp;the minimum number of change to make a list which contains&nbsp;<strong>K</strong> distinct elements.</p>','<p>Example 1:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>:&nbsp;</p>\r\n\r\n			<p>nums = [1, 3, 2, 4, 2, 4, 5]</p>\r\n\r\n			<p>k = 2</p>\r\n\r\n			<p>&nbsp;</p>\r\n\r\n			<p><strong>Output</strong>:&nbsp;</p>\r\n\r\n			<p>3</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p><span style=\"color:#27ae60\"><strong>Explanation:</strong></span></p>\r\n\r\n<p>You will get {2, 4} after changing&nbsp;1, 3, 5 to 2</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>Example 2:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>:&nbsp;</p>\r\n\r\n			<p>nums = [1, 3, 1, 3, 2, 4, 4, 3]</p>\r\n\r\n			<p>k = 3</p>\r\n\r\n			<p>&nbsp;</p>\r\n\r\n			<p><strong>Output</strong>:&nbsp;</p>\r\n\r\n			<p>1</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p><span style=\"color:#27ae60\"><strong>Explanation:</strong></span></p>\r\n\r\n<p>You will get {1, 3, 4} after changing&nbsp;2&nbsp;to 1.</p>','2019-10-25 03:28:44.000000','',1,34,1,'def solve(nums, k):','','','','','',169,'Minimum changes to contain k distinct elements',0),(155,'','<p>Write a function to make a linked list from a list.</p>','<p>Example 1:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>: [1, 2, 3, 4]</p>\r\n\r\n			<p><strong>Output</strong>: 1 -&gt; 2 -&gt; 3 -&gt; 4</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>Example 2:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>: [3, 2, 1]</p>\r\n\r\n			<p><strong>Output</strong>: 3 -&gt; 2 -&gt; 1</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>','2019-10-25 05:03:46.000000','',1,31,1,'# Definition for linked list.\r\nclass Node:\r\n    def __init__(self, val):\r\n        self.val = val\r\n        self.next = None\r\n\r\ndef solve(list):\r\n    # Please insert code here','','','','','',156,'Create a linked list from a list',1),(156,'','<p>Write a function to return the number of <strong>pairs</strong> of parenthesis are there in the string.</p>','<p>Example 1:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>: &#39;()()(())&#39;</p>\r\n\r\n			<p><strong>Output</strong>: 4</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>Example 2:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>: &#39;(()()))&#39;</p>\r\n\r\n			<p><strong>Output</strong>: 3</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>','2019-10-29 04:25:33.000000','',1,9,1,'def solve(str):','','','','','',150,'How many pairs of parenthesis',1),(157,'<p>You can rotate the list per layer.</p>\r\n\r\n<p>Let&#39;s think about a 2D list of length 5 on one side.</p>\r\n\r\n<p><strong>Layer 1:</strong></p>\r\n\r\n<p><img alt=\"\" src=\"/static/quiz/157_rotate_2d_list_by_90_degrees_1.png\" style=\"height:274px; width:293px\" /></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong>Layer 2:</strong></p>\r\n\r\n<p><img alt=\"\" src=\"/static/quiz/157_rotate_2d_list_by_90_degrees_2.png\" /></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong>Layer 3:</strong></p>\r\n\r\n<p><strong><img alt=\"\" src=\"/static/quiz/157_rotate_2d_list_by_90_degrees_3.png\" /></strong></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>Rotate the red values each step.</p>\r\n\r\n<p><strong>Step 1:</strong></p>\r\n\r\n<p><img alt=\"\" src=\"/static/quiz/157_rotate_2d_list_by_90_degrees_4.png\" style=\"height:274px; width:293px\" /></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong>Step 2:</strong></p>\r\n\r\n<p><img alt=\"\" src=\"/static/quiz/157_rotate_2d_list_by_90_degrees_5.png\" /></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong>Step 3:</strong></p>\r\n\r\n<p><img alt=\"\" src=\"/static/quiz/157_rotate_2d_list_by_90_degrees_6.png\" /></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong>Step 4:</strong></p>\r\n\r\n<p><img alt=\"\" src=\"/static/quiz/157_rotate_2d_list_by_90_degrees_7.png\" style=\"height:274px; width:293px\" /></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>Finally, all the values in layer 1 have been rotated.</p>\r\n\r\n<p><img alt=\"\" src=\"/static/quiz/157_rotate_2d_list_by_90_degrees_8.png\" /></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong>Repeat these operations in the other layers.</strong></p>','<p>Write a function to rotate the 2D list by 90 degrees.</p>','<p>Example 1:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>:&nbsp;</p>\r\n\r\n			<p>[[1, 2, 3],</p>\r\n\r\n			<p>&nbsp;[4, 5, 6],</p>\r\n\r\n			<p>&nbsp;[7, 8, 9]]</p>\r\n\r\n			<p>&nbsp;</p>\r\n\r\n			<p><strong>Output</strong>:</p>\r\n\r\n			<p>[[7, 4, 1],</p>\r\n\r\n			<p>&nbsp;[8, 5, 2],</p>\r\n\r\n			<p>&nbsp;[9, 6, 3]]&nbsp;</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>Example 2:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>:&nbsp;</p>\r\n\r\n			<p>[[1, 2, 3, 4],</p>\r\n\r\n			<p>&nbsp;[5, 6, 7, 8],</p>\r\n\r\n			<p>[9, 10, 11, 12],</p>\r\n\r\n			<p>[13, 14, 15, 16]]</p>\r\n\r\n			<p>&nbsp;</p>\r\n\r\n			<p><strong>Output</strong>:</p>\r\n\r\n			<p>[[13, 9, 5, 1],</p>\r\n\r\n			<p>&nbsp;[14, 10, 6, 2],</p>\r\n\r\n			<p>&nbsp;[15, 11, 7, 3],</p>\r\n\r\n			<p>&nbsp;[16, 12, 8, 4]]</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>','2019-10-30 00:09:08.000000','',1,29,1,'def solve(nums):','','','','','',100,'Rotate 2D list by 90 degrees',1),(158,'<p>Initialize 1D list.</p>\r\n\r\n<p>#code</p>\r\n\r\n<p>col = 4</p>\r\n\r\n<p>list = [0] * col</p>\r\n\r\n<p>#end</p>\r\n\r\n<p>#run-1</p>\r\n\r\n<p>[0, 0, 0, 0]</p>\r\n\r\n<p>#end</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>Initialize 2D list.</p>\r\n\r\n<p>#code</p>\r\n\r\n<p>row, col = 2, 4</p>\r\n\r\n<p>[[0] * col for i in range(row)]</p>\r\n\r\n<p>#end</p>\r\n\r\n<p>#run-2</p>\r\n\r\n<p>[[0, 0, 0, 0],</p>\r\n\r\n<p>&nbsp;[0, 0, 0, 0]]</p>\r\n\r\n<p>#end</p>\r\n\r\n<p>&nbsp;</p>','<p>Write a function to initialize 2D list like this.</p>','<p>Example 1:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>:&nbsp;</p>\r\n\r\n			<p>row = 3</p>\r\n\r\n			<p>col = 4</p>\r\n\r\n			<p><strong>Output</strong>:</p>\r\n\r\n			<p>[[0, 0, 0, 1],</p>\r\n\r\n			<p>&nbsp;[0, 0, 0, 1],</p>\r\n\r\n			<p>&nbsp;[0, 0, 0, 1]]&nbsp;</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p><br />\r\n&nbsp;</p>','2019-10-30 03:43:15.000000','',1,4,1,'def solve(row, col):','','','','','',53,'Initialize a list',1),(159,'<h3>Binary Search Tree</h3>\r\n\r\n<p><img alt=\"\" src=\"/static/list/159_check_if_a_value_is_in_binary_search_tree_1.png\" /><img alt=\"\" src=\"/static/quiz/159_check_if_a_value_is_in_binary_search_tree_1.png\" /></p>\r\n\r\n<p>Here are the properties&nbsp;of a Binary Search Tree.</p>\r\n\r\n<p>1. Each node has at most two children.</p>\r\n\r\n<p>2. The left subtree of a node contains only nodes with the value lesser than the node&#39;s value.</p>\r\n\r\n<p>3. The right subtree of a node contains only nodes with the value greater than the node&#39;s value.</p>','<p>Write a function to return whether the Binary Search Tree has the value or not.</p>','<p>Example 1:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>:</p>\r\n\r\n			<p><img alt=\"\" src=\"/static/quiz/159_check_if_a_value_is_in_binary_search_tree_3.png\" /></p>\r\n\r\n			<p>tree = Tree[4, 2, 8, 1, 3, 6]</p>\r\n\r\n			<p>num = 3</p>\r\n\r\n			<p>&nbsp;</p>\r\n\r\n			<p><strong>Output</strong>:&nbsp;</p>\r\n\r\n			<p>True</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p><span style=\"color:#27ae60\"><strong>Explanation:</strong></span></p>\r\n\r\n<p>3 is in the binary search tree.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>Example 2:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>:&nbsp;</p>\r\n\r\n			<p><img alt=\"\" src=\"/static/quiz/159_check_if_a_value_is_in_binary_search_tree_4.png\" style=\"height:273px; width:256px\" /></p>\r\n\r\n			<p>tree = Tree[4, 2, 8, None, 3, 6]</p>\r\n\r\n			<p>num = 6</p>\r\n\r\n			<p>&nbsp;</p>\r\n\r\n			<p><strong>Output</strong>:&nbsp;</p>\r\n\r\n			<p>True</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p><span style=\"color:#27ae60\"><strong>Explanation:</strong></span></p>\r\n\r\n<p>6 is in the binary search tree.</p>','2019-10-30 07:03:19.000000','',1,33,1,'class Tree:\r\n    def __init__(self, val):\r\n        self.val = val\r\n        self.left = None\r\n        self.right = None\r\n\r\ndef solve(root, num):','','','','','',165,'Check if Binary Search Tree has a specific value',1),(160,'<p>A Tree is&nbsp;a hierarchical data structure.&nbsp;&nbsp;Each tree node has at most 2 children.</p>\r\n\r\n<p><img alt=\"\" src=\"/static/list/160_make_a_binary_tree_1.png\" /><img alt=\"\" src=\"/static/list/160_make_a_binary_tree_1.png\" /><img alt=\"\" src=\"/static/quiz/160_make_a_binary_tree_1.png\" style=\"height:274px; width:396px\" /></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<h3>Tree Definition</h3>\r\n\r\n<p>There are one value and two nodes to link children nodes.</p>\r\n\r\n<p>#code</p>\r\n\r\n<p>class Tree:</p>\r\n\r\n<p>&nbsp; &nbsp; def __init__(self, val):</p>\r\n\r\n<p>&nbsp; &nbsp; &nbsp; &nbsp; self.val = val</p>\r\n\r\n<p>&nbsp; &nbsp; &nbsp; &nbsp; self.left = None</p>\r\n\r\n<p>&nbsp; &nbsp; &nbsp; &nbsp; self.right = None</p>\r\n\r\n<p>#end</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<h3>Create two tree nodes:</h3>\r\n\r\n<p><img alt=\"\" src=\"/static/quiz/160_make_a_binary_tree_3.png\" style=\"height:64px; width:173px\" /></p>\r\n\r\n<p>#code</p>\r\n\r\n<p>tree1 = Tree(1)</p>\r\n\r\n<p>tree2 = Tree(2)</p>\r\n\r\n<p>#end</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<h3>Link the nodes:</h3>\r\n\r\n<p><img alt=\"\" src=\"/static/quiz/160_make_a_binary_tree_4.png\" style=\"height:154px; width:160px\" /></p>\r\n\r\n<p>#code</p>\r\n\r\n<p>tree1.left = tree2</p>\r\n\r\n<p>#end</p>','<p>Write a function to make a binary tree like this.</p>','<p>Example 1:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Output</strong>:</p>\r\n\r\n			<p>&nbsp;<img alt=\"\" src=\"/static/quiz/160_make_a_binary_tree_2.png\" style=\"height:154px; width:256px\" /></p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p><br />\r\n&nbsp;</p>','2019-10-31 07:03:31.000000','',1,33,1,'class Tree:\r\n    def __init__(self, val):\r\n        self.val = val\r\n        self.left = None\r\n        self.right = None\r\n\r\ndef solve():','','','','','',160,'Make a Binary Tree',0),(161,'','<p>Write a function if&nbsp;the value exists in the left node of&nbsp;the binary tree.</p>','<p>Example 1:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>:&nbsp;</p>\r\n\r\n			<p><img alt=\"\" src=\"/static/quiz/161_traverse_left_nodes_of_binary_tree_1.png\" style=\"height:274px; width:387px\" /></p>\r\n\r\n			<p>tree = Tree[1, 2, 3, 4]</p>\r\n\r\n			<p>val = 4</p>\r\n\r\n			<p>&nbsp;</p>\r\n\r\n			<p><strong>Output</strong>:&nbsp;</p>\r\n\r\n			<p>True</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>Example 2:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>:&nbsp;</p>\r\n\r\n			<p><img alt=\"\" src=\"/static/quiz/161_traverse_left_nodes_of_binary_tree_1.png\" style=\"height:274px; width:387px\" /></p>\r\n\r\n			<p>tree = Tree[1, 2, 3, 4]</p>\r\n\r\n			<p>val = 3</p>\r\n\r\n			<p>&nbsp;</p>\r\n\r\n			<p><strong>Output</strong>:&nbsp;</p>\r\n\r\n			<p>False</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>','2019-10-31 08:11:52.000000','',1,33,1,'class Tree:\r\n    def __init__(self, val):\r\n        self.val = val\r\n        self.left = None\r\n        self.right = None\r\n\r\ndef solve(root, val):','','','','','',161,'Traverse left nodes of Binary Tree',1),(162,'<p>Let&#39;s find common ancestors of 3 and 6.</p>\r\n\r\n<p>Common ancestors are 4 and 8.&nbsp; And the lowest common ancestor is 4.</p>\r\n\r\n<p><br />\r\n<img alt=\"\" src=\"/static/quiz/162_lowest_common_ancestor_in_binary_search_tree_1.png\" style=\"height:394px; width:387px\" /></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>You can traverse from the root tree node.&nbsp; Because 3 and 6&nbsp;are less than 8, you can go to 4.</p>\r\n\r\n<p><img alt=\"\" src=\"/static/quiz/162_lowest_common_ancestor_in_binary_search_tree_2.png\" style=\"height:394px; width:387px\" /></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>Because 3&nbsp;is less than 4 and 6 is greater than 4, 4 is the lowest common ancestor of 3 and 6.</p>','<p>Write a function to return the lowest common ancestor in a binary search tree.</p>\r\n\r\n<p>You may assume that all node are different.</p>','<p>Example 1:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>:&nbsp;</p>\r\n\r\n			<p><img alt=\"\" src=\"/static/quiz/162_lowest_common_ancestor_in_binary_search_tree_2.png\" style=\"height:394px; width:387px\" /></p>\r\n\r\n			<p>root = Tree[8, 4, 10, 2, 6, 9, None, None, 3]</p>\r\n\r\n			<p>num1 = 3</p>\r\n\r\n			<p>num2 = 6</p>\r\n\r\n			<p>&nbsp;</p>\r\n\r\n			<p><strong>Output</strong>:&nbsp;</p>\r\n\r\n			<p>4</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p><br />\r\n&nbsp;</p>','2019-11-01 04:56:29.000000','',1,33,1,'class Tree:\r\n    def __init__(self, val):\r\n        self.val = val\r\n        self.left = None\r\n        self.right = None\r\n\r\ndef solve(root, num1, num2):','','','','','',166,'Lowest common ancestor in Binary Search Tree',0),(163,'<p>You can go 1 or 2 stairs at a time as shown below.</p>\r\n\r\n<p><img alt=\"\" src=\"/static/quiz/163_count_ways_to_reach_the_stair_0.png\" style=\"height:135px; width:265px\" /></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>Let&#39;s think about 4 stairs step by step.</p>\r\n\r\n<p>To reach the <strong>1st stair</strong>, there is only 1 way.</p>\r\n\r\n<p><img alt=\"\" src=\"/static/quiz/163_count_ways_to_reach_the_stair_1.png\" style=\"height:87px; width:276px\" /></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>To reach the <strong>2nd stair</strong>, there are 2 ways.</p>\r\n\r\n<p>- Come from the beginning.</p>\r\n\r\n<p>- Come from the 1st stair.</p>\r\n\r\n<p><img alt=\"\" src=\"/static/quiz/163_count_ways_to_reach_the_stair_2.png\" style=\"height:135px; width:274px\" /></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>To reach the <strong>3rd stair</strong>, there are 3 ways.</p>\r\n\r\n<p>- Come from the 1st stair.</p>\r\n\r\n<p>- Come from the 2nd stair.</p>\r\n\r\n<p><img alt=\"\" src=\"/static/quiz/163_count_ways_to_reach_the_stair_3.png\" /></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>To reach the<strong> 4th&nbsp;stair</strong>, there are 5&nbsp;ways.</p>\r\n\r\n<p>- Come from the 2nd&nbsp;stair.</p>\r\n\r\n<p>- Come from the 3rd stair.</p>\r\n\r\n<p><img alt=\"\" src=\"/static/quiz/163_count_ways_to_reach_the_stair_4.png\" style=\"height:134px; width:235px\" /></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>In summary,</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p>f(n) is the number of ways to reach n-th stairs.</p>\r\n\r\n			<p>f(n) = f(n-1) + f(n-2)</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>&nbsp;</p>','<p>Write a function to return how many ways to reach the n-th stairs.</p>\r\n\r\n<p>Each time you can go 1 or 2 stairs.</p>','<p>Example 1:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>: 2</p>\r\n\r\n			<p><strong>Output</strong>: 2</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p><span style=\"color:#27ae60\"><strong>Explanation:</strong></span></p>\r\n\r\n<p>case 1. 1 stair&nbsp;+ 1 stair</p>\r\n\r\n<p>case 2. 2 stairs</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>Example 2:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>: 3</p>\r\n\r\n			<p><strong>Output</strong>: 3</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p><span style=\"color:#27ae60\"><strong>Explanation:</strong></span></p>\r\n\r\n<p>case 1. 1 stair + 1 stair + 1 stair</p>\r\n\r\n<p>case 2. 2 stairs + 1 stair</p>\r\n\r\n<p>case 3. 1 stair + 2 stairs</p>','2019-11-02 03:38:29.000000','',1,35,1,'def solve(stair):','','','','','',172,'Count ways to reach the stair',1),(164,'<p>Here is an original list to copy.</p>\r\n\r\n<p>#code</p>\r\n\r\n<p>list1 = [1, 2, 3, 4]</p>\r\n\r\n<p>#end</p>\r\n\r\n<p><img alt=\"\" src=\"165_copy_list_1.png\" /><img alt=\"\" src=\"165_copy_list_1.png\" /><img alt=\"\" src=\"165_copy_list_1.png\" /><img alt=\"\" src=\"/static/quiz/165_copy_list_1.png\" style=\"height:58px; width:348px\" /></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<h3>1. Shallow copy</h3>\r\n\r\n<p>It is not an actual copy.&nbsp; New <strong>list2</strong> is referring to the original <strong>list1</strong>.</p>\r\n\r\n<p>#code</p>\r\n\r\n<p>list2 = list1</p>\r\n\r\n<p>#end</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong>list2</strong> is referring to <strong>list1.</strong></p>\r\n\r\n<p><img alt=\"\" src=\"/static/quiz/165_copy_list_2.png\" style=\"height:120px; width:348px\" /></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>#code</p>\r\n\r\n<p>list1[1] = 12</p>\r\n\r\n<p>print(list1[1])</p>\r\n\r\n<p>print(list2[1])</p>\r\n\r\n<p>#end</p>\r\n\r\n<p>#run-1</p>\r\n\r\n<p>12</p>\r\n\r\n<p>12</p>\r\n\r\n<p>#end</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><img alt=\"\" src=\"/static/quiz/165_copy_list_3.png\" style=\"height:120px; width:348px\" /></p>\r\n\r\n<p><strong>list2</strong> is also changed&nbsp;even though we just changed <strong>list1</strong>,</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<h3>2. Deep copy</h3>\r\n\r\n<p>It is an actual copy.</p>\r\n\r\n<p>#code</p>\r\n\r\n<p>list2 = list1[:]</p>\r\n\r\n<p>#end</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><img alt=\"\" src=\"/static/quiz/165_copy_list_4.png\" style=\"height:140px; width:350px\" /></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>#code</p>\r\n\r\n<p>list1[1] = 12</p>\r\n\r\n<p>print(list1[1])</p>\r\n\r\n<p>print(list2[1])</p>\r\n\r\n<p>#end</p>\r\n\r\n<p>#run-2</p>\r\n\r\n<p>12</p>\r\n\r\n<p>2</p>\r\n\r\n<p>#end</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><img alt=\"\" src=\"/static/quiz/165_copy_list_5.png\" style=\"height:140px; width:350px\" /></p>','<p>What will be printed?</p>','<p>#code</p>\r\n\r\n<p>list1 = [1, 2, 3, 4]</p>\r\n\r\n<p>list2 = list1</p>\r\n\r\n<p>list3 = list1[:]</p>\r\n\r\n<p>list2[3] = 14</p>\r\n\r\n<p>list3[3] = 14</p>\r\n\r\n<p>sum = 0</p>\r\n\r\n<p>for i in range(4):</p>\r\n\r\n<p>&nbsp; &nbsp; sum += list1[i] + list2[i] + list3[i]</p>\r\n\r\n<p>print(sum)</p>\r\n\r\n<p>#end</p>','2019-11-02 04:48:40.000000','',1,4,2,'','','','','','',54,'Copy list',1),(165,'','<p>Write a function to return the index of the greatest row.</p>','<p>Example 1:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input:</strong></p>\r\n\r\n			<p>[[0, 2, 5, 1],</p>\r\n\r\n			<p>&nbsp;[3, 6, 2, 8],</p>\r\n\r\n			<p>&nbsp;[9, 1, 2, 1]]</p>\r\n\r\n			<p>&nbsp;</p>\r\n\r\n			<p><strong>Output: </strong></p>\r\n\r\n			<p>1</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p><span style=\"color:#27ae60\"><strong>Explanation:</strong></span></p>\r\n\r\n<p>The sum of the 1st&nbsp;elements&nbsp;is the greatest.</p>\r\n\r\n<p>nums[0] =&nbsp;0 + 2 + 5 + 1 = 8</p>\r\n\r\n<p><strong>nums[1] =&nbsp;3 + 6 + 2 + 8 = 19</strong></p>\r\n\r\n<p>nums[2] =&nbsp;9 + 1 + 2 + 1 = 13</p>','2019-11-02 18:38:44.000000','',1,19,1,'def solve(nums):','','','','','',109,'Greatest row of 2D list',1),(166,'','<p>Write a function to return the maximum value of a Tree.</p>','<p>Example 1:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>:</p>\r\n\r\n			<p><img alt=\"\" src=\"/static/quiz/166_maximum_value_of_tree_1.png\" style=\"height:274px; width:387px\" /></p>\r\n\r\n			<p>Tree[1, 10, 3, 4, 5, 6, None]&nbsp;</p>\r\n\r\n			<p>&nbsp;</p>\r\n\r\n			<p><strong>Output</strong>:&nbsp;</p>\r\n\r\n			<p>10</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p><br />\r\n&nbsp;</p>','2019-11-05 03:11:38.000000','',1,33,1,'class Tree:\r\n    def __init__(self, val):\r\n        self.val = val\r\n        self.left = None\r\n        self.right = None\r\n\r\ndef solve(root):','','','','','',162,'Maximum value of Tree',1),(167,'','<p>Write a function to return the next valid symbol.</p>\r\n\r\n<p>Input will include (){}[]</p>\r\n\r\n<p>If the input is a perfect, return -1</p>','<p>Example 1:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>: ((())[[]</p>\r\n\r\n			<p><strong>Output</strong>: ]</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>Example 2:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>: (((){})</p>\r\n\r\n			<p><strong>Output</strong>: )</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>Example 3:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>: (((){}))</p>\r\n\r\n			<p><strong>Output</strong>: -1</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>','2019-11-05 04:34:23.000000','',1,9,1,'def solve(str):','','','','','',153,'Next valid symbol',0),(168,'','<p>Write a function to return a maximum level of a Binary Tree.</p>','<p>Example 1:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>:&nbsp;</p>\r\n\r\n			<p>Tree[1, 10, 3, 4, 5, 6, 7, None, None, None, None, 8, None]</p>\r\n\r\n			<p><img alt=\"\" src=\"/static/quiz/168_maximum_level_of_binary_tree_1.png\" style=\"height:442px; width:551px\" /></p>\r\n\r\n			<p>&nbsp;</p>\r\n\r\n			<p><strong>Output</strong>: 4</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p><br />\r\n<br />\r\n&nbsp;</p>','2019-11-07 05:01:25.000000','',1,33,1,'class Tree:\r\n    def __init__(self, val):\r\n        self.val = val\r\n        self.left = None\r\n        self.right = None\r\n        \r\ndef solve(root):','','','','','',164,'Maximum level of Binary Tree',1),(169,'<p>Here is a custom binary tree.</p>\r\n\r\n<p>1. A parent should be greater than Children.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><img alt=\"\" src=\"/static/quiz/169_valid_custom_tree_1.png\" style=\"height:322px; width:372px\" /></p>','<p>Write a function to check whether a&nbsp;parent is greater than children.</p>','<p>Example 1:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>:&nbsp;</p>\r\n\r\n			<p>Tree[8, 4, 3, 1, 3, 2, 1]</p>\r\n\r\n			<p><img alt=\"\" src=\"/static/quiz/169_valid_custom_tree_1.png\" style=\"height:322px; width:372px\" /></p>\r\n\r\n			<p><strong>Output</strong>:&nbsp;</p>\r\n\r\n			<p>True</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>Example 2:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>:&nbsp;</p>\r\n\r\n			<p>Tree[8, 4, 3, 1, 5, 2, 1]</p>\r\n\r\n			<p><img alt=\"\" src=\"/static/quiz/169_valid_custom_tree_2.png\" style=\"height:322px; width:372px\" /></p>\r\n\r\n			<p><strong>Output</strong>:&nbsp;</p>\r\n\r\n			<p>False</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p><span style=\"color:#27ae60\"><strong>Explanation:</strong></span></p>\r\n\r\n<p>5 is not less than 4.</p>','2019-11-07 05:32:02.000000','',1,33,1,'class Tree:\r\n    def __init__(self, val):\r\n        self.val = val\r\n        self.left = None\r\n        self.right = None\r\n\r\ndef solve(root):','','','','','',163,'Valid custom Tree',0),(170,'<p>Here is a rule to convert a string.</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>String</td>\r\n			<td>Passcode</td>\r\n		</tr>\r\n		<tr>\r\n			<td>a</td>\r\n			<td>1</td>\r\n		</tr>\r\n		<tr>\r\n			<td>b</td>\r\n			<td>2</td>\r\n		</tr>\r\n		<tr>\r\n			<td>c</td>\r\n			<td>3</td>\r\n		</tr>\r\n		<tr>\r\n			<td>...</td>\r\n			<td>...</td>\r\n		</tr>\r\n		<tr>\r\n			<td>z</td>\r\n			<td>26</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p><br />\r\nWhen a string is &quot;ac&quot;, a passcode&nbsp;will become 13.</p>\r\n\r\n<p>When a string is &quot;m&quot;, a passcode will become 13 as well.</p>','<p>Write a function of how many an original string can be possible when given a passcode.</p>','<p>Example 1:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>: &quot;13&quot;</p>\r\n\r\n			<p><strong>Output</strong>: 2</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p><span style=\"color:#27ae60\"><strong>Explanation:</strong></span></p>\r\n\r\n<p>&quot;ac&quot;, &quot;k&quot;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>Example 2:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>: &quot;123&quot;</p>\r\n\r\n			<p><strong>Output</strong>: 3</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p><span style=\"color:#27ae60\"><strong>Explanation:</strong></span></p>\r\n\r\n<p>&quot;abc&quot;, &quot;lc&quot;, &quot;aw&quot;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>Example 3:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>: &quot;01&quot;</p>\r\n\r\n			<p><strong>Output</strong>: 0</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>','2019-11-07 16:51:51.000000','<p>Let&#39;s say that&nbsp;<strong>ways(str)</strong> are how many ways you can change.</p>\r\n\r\n<p>If a passcode&nbsp;is &quot;123&quot;, the number of an original string will be <strong>ways(&quot;123&quot;)</strong></p>\r\n\r\n<p>step 1:</p>\r\n\r\n<p><strong>ways(&quot;123&quot;) </strong>is (<strong><span style=\"color:#3498db\">&quot;a&quot; +&nbsp;ways(&quot;23&quot;)</span></strong>)<strong> + </strong>(<span style=\"color:#3498db\"><strong>&quot;l&quot; + ways(&quot;3&quot;)</strong></span>)</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>step 2:</p>\r\n\r\n<p><strong>ways(&quot;23&quot;) </strong>is (<strong><span style=\"color:#3498db\">&quot;b&quot; +&nbsp;ways(&quot;3&quot;)</span></strong>)<strong> + </strong>(<span style=\"color:#3498db\"><strong>&quot;w&quot;</strong></span>)</p>\r\n\r\n<p><strong>ways(&quot;3&quot;) </strong>is (<strong><span style=\"color:#3498db\">&quot;c&quot;</span></strong>)</p>',1,37,1,'def solve(str):','','','','','',148,'Decode passcode',0),(171,'<h3><strong>Binary Search Tree</strong></h3>\r\n\r\n<p><img alt=\"\" src=\"/static/quiz/159_check_if_a_value_is_in_binary_search_tree_1.png\" style=\"height:274px; width:375px\" /></p>\r\n\r\n<p>Here are the properties&nbsp;of a Binary Search Tree.</p>\r\n\r\n<p>1. Each node has at most two children.</p>\r\n\r\n<p>2. The left subtree of a node contains only nodes with the value lesser than the node&#39;s value.</p>\r\n\r\n<p>3. The right subtree of a node contains only nodes with the value greater than the node&#39;s value.</p>','<p>Write a function to check whether a Binary Search Tree is valid or not.</p>','<p>Example 1:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>:&nbsp;</p>\r\n\r\n			<p>Tree[8, 4, 6, 1, 3, 5, 7]</p>\r\n\r\n			<p><img alt=\"\" src=\"/static/quiz/170_valid_binary_search_tree_1.png\" style=\"height:322px; width:372px\" /></p>\r\n\r\n			<p>&nbsp;</p>\r\n\r\n			<p><strong>Output</strong>:&nbsp;</p>\r\n\r\n			<p>True</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>Example 2:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>:&nbsp;</p>\r\n\r\n			<p>Tree[8, 4, 6, 1, 6, 5, 7]</p>\r\n\r\n			<p><img alt=\"\" src=\"/static/quiz/170_valid_binary_search_tree_2.png\" /></p>\r\n\r\n			<p>&nbsp;</p>\r\n\r\n			<p><strong>Output</strong>:&nbsp;</p>\r\n\r\n			<p>False</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p><span style=\"color:#27ae60\"><strong>Explanation:</strong></span></p>\r\n\r\n<p>5 should be greater than 8 because 5 is the right child of 8.</p>','2019-11-08 03:39:55.000000','',1,33,1,'class Tree:\r\n    def __init__(self, val):\r\n        self.val = val\r\n        self.left = None\r\n        self.right = None\r\n\r\ndef solve(root):','','','','','',167,'Valid Binary Search Tree',1),(172,'<p>Recursion is calling a function itself.</p>\r\n\r\n<p>#code</p>\r\n\r\n<p>def solve(num):</p>\r\n\r\n<p>&nbsp; &nbsp; if num &lt;= 1:</p>\r\n\r\n<p>&nbsp; &nbsp; &nbsp; &nbsp; return 1</p>\r\n\r\n<p>&nbsp; &nbsp; return num * solve(num - 1)</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>print(solve(5))</p>\r\n\r\n<p>#end</p>\r\n\r\n<p>#run-1</p>\r\n\r\n<p>120</p>\r\n\r\n<p><span style=\"color:#27ae60\"><strong>Explanation:</strong></span></p>\r\n\r\n<p>solve(5)</p>\r\n\r\n<p>= 5 * solve(4)</p>\r\n\r\n<p>= 5 * 4 * solve(3)</p>\r\n\r\n<p>= 5 * 4 * 3 * solve(2)</p>\r\n\r\n<p>= 5 * 4 * 3 * 2 * solve(1)</p>\r\n\r\n<p>= 5 * 4 * 3 * 2 * 1</p>\r\n\r\n<p>#end</p>','<p>What will be printed?</p>','<p>#code</p>\r\n\r\n<p>def solve(num):</p>\r\n\r\n<p>&nbsp; &nbsp; if num &lt;= 1:</p>\r\n\r\n<p>&nbsp; &nbsp; &nbsp; &nbsp; return 1</p>\r\n\r\n<p>&nbsp; &nbsp; return num + solve(num - 1)</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>print(solve(5))</p>\r\n\r\n<p>#end</p>','2019-11-08 03:56:56.000000','',1,37,2,'','','','','','',146,'Factorial of a Number',1),(173,'','<p>What will be printed?</p>','<p>#code</p>\r\n\r\n<p>def solve(num):</p>\r\n\r\n<p>&nbsp; &nbsp; if num == 1:</p>\r\n\r\n<p>&nbsp; &nbsp; &nbsp; &nbsp; return 0</p>\r\n\r\n<p>&nbsp; &nbsp; return 1 + solve(num // 2)</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>print(solve(16))</p>\r\n\r\n<p>#end</p>','2019-11-08 04:18:40.000000','',1,37,2,'','','','','','',147,'Divide a number',1),(174,'<p>1.</p>\r\n\r\n<p>#code</p>\r\n\r\n<p>print(3 ** 4)</p>\r\n\r\n<p>print(3 ** 0)</p>\r\n\r\n<p>#end</p>\r\n\r\n<p>2.</p>\r\n\r\n<p>#code</p>\r\n\r\n<p>print(11 / 2)</p>\r\n\r\n<p>print(11 // 3)</p>\r\n\r\n<p>print(12 // 3)</p>\r\n\r\n<p>#end</p>\r\n\r\n<p>3.</p>\r\n\r\n<p>#code</p>\r\n\r\n<p>print(10 % 3)</p>\r\n\r\n<p>print(10 % 2)</p>\r\n\r\n<p>#end</p>\r\n\r\n<p>4.</p>\r\n\r\n<p>#code</p>\r\n\r\n<p>num = 10</p>\r\n\r\n<p>if num != 9:</p>\r\n\r\n<p>&nbsp; &nbsp; print(&quot;hi&quot;)</p>\r\n\r\n<p>if num != 10:</p>\r\n\r\n<p>&nbsp; &nbsp; print(&quot;hi2&quot;)</p>\r\n\r\n<p>#end</p>\r\n\r\n<p>5.</p>\r\n\r\n<p>#code</p>\r\n\r\n<p>num = 10</p>\r\n\r\n<p>num += 2</p>\r\n\r\n<p>print(num)</p>\r\n\r\n<p>#end</p>\r\n\r\n<p>6.</p>\r\n\r\n<p>#code</p>\r\n\r\n<p>nums1 = [1]</p>\r\n\r\n<p>nums2 = [1, 2]</p>\r\n\r\n<p>nums3&nbsp;= []</p>\r\n\r\n<p>if nums1:</p>\r\n\r\n<p>&nbsp; &nbsp; print(&quot;hi1&quot;)</p>\r\n\r\n<p>if nums2:</p>\r\n\r\n<p>&nbsp; &nbsp; print(&quot;hi2&quot;)</p>\r\n\r\n<p>if nums3:</p>\r\n\r\n<p>&nbsp; &nbsp; print(&quot;hi3&quot;)</p>\r\n\r\n<p>#end</p>\r\n\r\n<p>7.</p>\r\n\r\n<p>#code</p>\r\n\r\n<p>nums1 = [1]</p>\r\n\r\n<p>nums2 = [1, 2]</p>\r\n\r\n<p>nums3&nbsp;= []</p>\r\n\r\n<p>if not nums1:</p>\r\n\r\n<p>&nbsp; &nbsp; print(&quot;hi1&quot;)</p>\r\n\r\n<p>if not nums2:</p>\r\n\r\n<p>&nbsp; &nbsp; print(&quot;hi2&quot;)</p>\r\n\r\n<p>if not nums3:</p>\r\n\r\n<p>&nbsp; &nbsp; print(&quot;hi3&quot;)</p>\r\n\r\n<p>#end</p>\r\n\r\n<p>8.</p>\r\n\r\n<p>#code</p>\r\n\r\n<p>if 1 == 1&nbsp;and 2 &gt; 1:</p>\r\n\r\n<p>&nbsp; &nbsp; print(&quot;hi1&quot;)</p>\r\n\r\n<p>if True and 3 == 4:</p>\r\n\r\n<p>&nbsp; &nbsp; print(&quot;hi2&quot;)</p>\r\n\r\n<p>#end</p>\r\n\r\n<p>9.</p>\r\n\r\n<p>#code</p>\r\n\r\n<p>if 1 == 1 or&nbsp;2 &gt; 1:</p>\r\n\r\n<p>&nbsp; &nbsp; print(&quot;hi1&quot;)</p>\r\n\r\n<p>if True or 3 == 4:</p>\r\n\r\n<p>&nbsp; &nbsp; print(&quot;hi2&quot;)</p>\r\n\r\n<p>#end</p>\r\n\r\n<p>10.</p>\r\n\r\n<p>#code</p>\r\n\r\n<p>for num in range(4):</p>\r\n\r\n<p>&nbsp; &nbsp; print(num)</p>\r\n\r\n<p>#end</p>\r\n\r\n<p>11.</p>\r\n\r\n<p>#code</p>\r\n\r\n<p>for num in range(1, 4):</p>\r\n\r\n<p>&nbsp; &nbsp; print(num)</p>\r\n\r\n<p>#end</p>\r\n\r\n<p>12.</p>\r\n\r\n<p>#code</p>\r\n\r\n<p>for num in range(1, 4, 2):</p>\r\n\r\n<p>&nbsp; &nbsp; print(num)</p>\r\n\r\n<p>#end</p>\r\n\r\n<p>13.</p>\r\n\r\n<p>#code</p>\r\n\r\n<p>num = 3</p>\r\n\r\n<p>if num &gt; 2:</p>\r\n\r\n<p>&nbsp; &nbsp; print(&quot;hi1&quot;)</p>\r\n\r\n<p>elif num &gt; 1:</p>\r\n\r\n<p>&nbsp; &nbsp; print(&quot;hi2&quot;)</p>\r\n\r\n<p>else:</p>\r\n\r\n<p>&nbsp; &nbsp; print(&quot;hi3&quot;)</p>\r\n\r\n<p>#end</p>\r\n\r\n<p>14.</p>\r\n\r\n<p>#code</p>\r\n\r\n<p>for ch in &quot;hello&quot;:</p>\r\n\r\n<p>&nbsp; &nbsp; print(ch)</p>\r\n\r\n<p>#end</p>\r\n\r\n<p>15.</p>\r\n\r\n<p>#code</p>\r\n\r\n<p>nums = [1, 2, 3, 4]</p>\r\n\r\n<p>s = 0</p>\r\n\r\n<p>for num in nums:</p>\r\n\r\n<p>&nbsp; &nbsp; s += num</p>\r\n\r\n<p>print(s)</p>\r\n\r\n<p>#end</p>\r\n\r\n<p>16.</p>\r\n\r\n<p>#code</p>\r\n\r\n<p>i = 0</p>\r\n\r\n<p>while i &lt; 4:</p>\r\n\r\n<p>&nbsp; &nbsp; print(i)</p>\r\n\r\n<p>&nbsp; &nbsp; i += 1</p>\r\n\r\n<p>#end</p>\r\n\r\n<p>17.</p>\r\n\r\n<p>#code</p>\r\n\r\n<p>str = &quot;hello&quot;</p>\r\n\r\n<p>if str:</p>\r\n\r\n<p>&nbsp; &nbsp; print(&quot;hi&quot;)</p>\r\n\r\n<p>if not str:</p>\r\n\r\n<p>&nbsp; &nbsp; print(&quot;hi2&quot;)</p>\r\n\r\n<p>#end</p>\r\n\r\n<p>18.</p>\r\n\r\n<p>#code</p>\r\n\r\n<p>n = 0</p>\r\n\r\n<p>while n &lt; 5:</p>\r\n\r\n<p>&nbsp; &nbsp; print(n)</p>\r\n\r\n<p>&nbsp; &nbsp; n = n + 1</p>\r\n\r\n<p>&nbsp; &nbsp; if n == 2:</p>\r\n\r\n<p>&nbsp; &nbsp; &nbsp; &nbsp; break</p>\r\n\r\n<p>#end</p>\r\n\r\n<p>19.</p>\r\n\r\n<p>#code</p>\r\n\r\n<p><span style=\"color:#1990b8\">def</span> <span style=\"color:#2f9c0a\">hello</span><span style=\"color:#5f6364\">(num1, num2</span><span style=\"color:#5f6364\">)</span><span style=\"color:#5f6364\">:</span></p>\r\n\r\n<p><span style=\"color:#1990b8\">&nbsp; &nbsp; return</span> <span style=\"color:#2f9c0a\">num1 + num2, num1 - num2</span><span style=\"color:#000000\"> </span></p>\r\n\r\n<p><span style=\"color:#000000\">n1</span><span style=\"color:#5f6364\">,</span><span style=\"color:#000000\"> n2 </span><span style=\"background-color:rgba(255, 255, 255, 0.5)\"><span style=\"color:#a67f59\">=</span></span><span style=\"color:#000000\"> hello</span><span style=\"color:#5f6364\">(5, 7</span><span style=\"color:#5f6364\">)</span></p>\r\n\r\n<p><span style=\"color:#1990b8\">print</span><span style=\"color:#5f6364\">(</span><span style=\"color:#000000\">n1</span><span style=\"color:#5f6364\">)</span></p>\r\n\r\n<p><span style=\"color:#1990b8\">print</span><span style=\"color:#5f6364\">(</span><span style=\"color:#000000\">n2</span><span style=\"color:#5f6364\">)</span></p>\r\n\r\n<p>#end</p>\r\n\r\n<p>20.</p>\r\n\r\n<p>#code</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>str = &quot;PyPyKids&quot;</p>\r\n\r\n<p>print(str[0])</p>\r\n\r\n<p>print(str[1])</p>\r\n\r\n<p>print(str[2])</p>\r\n\r\n<p>print(str[-1])</p>\r\n\r\n<p>print(str[-2])</p>\r\n\r\n<p>#end</p>\r\n\r\n<p>21.</p>\r\n\r\n<p>#code</p>\r\n\r\n<p>str = &quot;PyPyKids&quot;</p>\r\n\r\n<p>print(str[2:6])</p>\r\n\r\n<p>print(str[:6])</p>\r\n\r\n<p>print(str[2:])</p>\r\n\r\n<p>#end</p>\r\n\r\n<p>22.</p>\r\n\r\n<p>#code</p>\r\n\r\n<p>list = [&#39;This&#39;, &#39;is&#39;, &#39;The&#39;, &#39;Python&#39;, &#39;Kids&#39;]</p>\r\n\r\n<p>str = &quot; &quot;.join(list)</p>\r\n\r\n<p>print(str)</p>\r\n\r\n<p>#end</p>\r\n\r\n<p>23.</p>\r\n\r\n<p>#code</p>\r\n\r\n<p>str = &quot;This is The Python Kids&quot;</p>\r\n\r\n<p>list = str.split()</p>\r\n\r\n<p>print(list)</p>\r\n\r\n<p>#end</p>\r\n\r\n<p>24.</p>\r\n\r\n<p>#code</p>\r\n\r\n<p>nums = [1, 2, 3]</p>\r\n\r\n<p>nums.append(4)</p>\r\n\r\n<p>nums.append(4)</p>\r\n\r\n<p>print(nums)</p>\r\n\r\n<p>#end</p>\r\n\r\n<p>25.</p>\r\n\r\n<p>#code</p>\r\n\r\n<p>nums = [1, 2, 3]</p>\r\n\r\n<p>nums.insert(1, 4)</p>\r\n\r\n<p>print(nums)</p>\r\n\r\n<p>#end</p>\r\n\r\n<p>26.</p>\r\n\r\n<p>#code</p>\r\n\r\n<p>nums = [1, 2, 3]</p>\r\n\r\n<p>popped_value = nums.pop()</p>\r\n\r\n<p>print(popped_value)</p>\r\n\r\n<p>print(nums)</p>\r\n\r\n<p>#end</p>\r\n\r\n<p>27.</p>\r\n\r\n<p>#code</p>\r\n\r\n<p>nums = [1, 2, 3, 2]</p>\r\n\r\n<p>nums.remove(2)</p>\r\n\r\n<p>print(nums)</p>\r\n\r\n<p>#end</p>\r\n\r\n<p>28.</p>\r\n\r\n<p>#code</p>\r\n\r\n<p>num1, num2 = 1, 2</p>\r\n\r\n<p>num1, num2 = num2, num1</p>\r\n\r\n<p>print(num1)</p>\r\n\r\n<p>print(num2)</p>\r\n\r\n<p>#end</p>\r\n\r\n<p>29.</p>\r\n\r\n<p>#code</p>\r\n\r\n<p>str = &quot;hello&quot;</p>\r\n\r\n<p>str2 = &quot;&quot;</p>\r\n\r\n<p>if str:</p>\r\n\r\n<p>&nbsp; &nbsp; print(&quot;hi1&quot;)</p>\r\n\r\n<p>if str2:</p>\r\n\r\n<p>&nbsp; &nbsp; print(&quot;hi2&quot;)</p>\r\n\r\n<p>#end</p>\r\n\r\n<p>30.</p>\r\n\r\n<p>#code</p>\r\n\r\n<p>str = &quot;hello&quot;</p>\r\n\r\n<p>str2 = &quot;&quot;</p>\r\n\r\n<p>if not str:</p>\r\n\r\n<p>&nbsp; &nbsp; print(&quot;hi1&quot;)</p>\r\n\r\n<p>if not str2:</p>\r\n\r\n<p>&nbsp; &nbsp; print(&quot;hi2&quot;)</p>\r\n\r\n<p>#end</p>','','<p>Example 1:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>:&nbsp;</p>\r\n\r\n			<p><strong>Output</strong>:&nbsp;</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>Example 2:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>:&nbsp;</p>\r\n\r\n			<p><strong>Output</strong>:&nbsp;</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>','2019-11-10 06:59:01.000000','',0,12,2,'def solve(num):','','','','','',177,'Quiz',0),(175,'','<p>Write a function to check whether an input string has consecutive number or not.</p>','<p>Example 1:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>: &quot;3 4 5 6 7&quot;</p>\r\n\r\n			<p><strong>Output</strong>: True</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>Example 2:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>: &quot;3 5 6 7 8&quot;</p>\r\n\r\n			<p><strong>Output</strong>: False</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>','2019-11-16 06:16:37.000000','',1,3,1,'def solve(str):','','','','','',44,'consecutive number',1),(176,'','<p>Write a function to compress the string.</p>','<p>Example 1:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>: &quot;aabbbccdddd&quot;</p>\r\n\r\n			<p><strong>Output</strong>: &quot;a2b3c2d4&quot;</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>Example 2:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>: &quot;aaaaabb&quot;</p>\r\n\r\n			<p><strong>Output</strong>: &quot;a5b2&quot;</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>','2019-11-16 06:21:29.000000','',1,4,1,'def solve(str):','','','','','',66,'String compression',1),(177,'','<p>Write a function to pick up the first character from the input string.</p>','<p>Example 1:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>: &quot;Welcome to the world&quot;</p>\r\n\r\n			<p><strong>Output</strong>: &quot;Wttw&quot;</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>Example 2:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>: &quot;Hello, I am Dayeon&quot;</p>\r\n\r\n			<p><strong>Output</strong>: &quot;HIaD&quot;</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>','2019-11-16 06:28:47.000000','',1,3,1,'def solve(str):','','','','','',45,'Pick first character',1),(178,'','<p>Write a function to convert the lists.</p>\r\n\r\n<p>You may assume the two input lists have the same length.</p>','<p>Example 1:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>:&nbsp;</p>\r\n\r\n			<p>list1 = [1, 2, 3, 4]</p>\r\n\r\n			<p>list2 = [5, 6, 7, 8]</p>\r\n\r\n			<p>&nbsp;</p>\r\n\r\n			<p><strong>Output</strong>:&nbsp;</p>\r\n\r\n			<p>[[1, 5], [2, 6], [3, 7], [4, 8]]</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>Example 2:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>:&nbsp;</p>\r\n\r\n			<p>list1 = [1, 2, 3, 4]</p>\r\n\r\n			<p>list2 = [&quot;d&quot;, &quot;c&quot;, &quot;b&quot;, &quot;a&quot;]</p>\r\n\r\n			<p>&nbsp;</p>\r\n\r\n			<p><strong>Output</strong>:&nbsp;</p>\r\n\r\n			<p>[[1, &quot;d&quot;], [2, &quot;c&quot;], [3, &quot;b&quot;], [4, &quot;a&quot;]]</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>','2019-11-16 06:31:42.000000','',1,4,1,'def solve(list1, list2):','','','','','',68,'Convert list',1);
/*!40000 ALTER TABLE `list_quiz` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `list_quizscore`
--

DROP TABLE IF EXISTS `list_quizscore`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `list_quizscore` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `score` int(11) NOT NULL,
  `customuser_id` int(11) NOT NULL,
  `quiz_id` int(11) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `list_good_custom_user_id_quiz_id_d173f55e_uniq` (`customuser_id`,`quiz_id`),
  KEY `list_good_quiz_id_c4bcb632_fk_list_quiz_id` (`quiz_id`),
  CONSTRAINT `list_good_quiz_id_c4bcb632_fk_list_quiz_id` FOREIGN KEY (`quiz_id`) REFERENCES `list_quiz` (`id`),
  CONSTRAINT `list_quizscore_customuser_id_3dfa3579_fk_list_customuser_id` FOREIGN KEY (`customuser_id`) REFERENCES `list_customuser` (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=169 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `list_quizscore`
--

LOCK TABLES `list_quizscore` WRITE;
/*!40000 ALTER TABLE `list_quizscore` DISABLE KEYS */;
INSERT INTO `list_quizscore` VALUES (3,1,2,70),(4,0,2,82),(7,1,2,72),(8,0,2,63),(9,1,2,30),(10,1,2,11),(11,1,2,27),(12,1,2,47),(15,0,2,26),(17,1,8,82),(18,1,8,15),(19,1,8,16),(20,1,8,73),(21,0,8,1),(22,1,8,10),(24,1,8,77),(25,1,8,83),(26,0,8,78),(27,0,8,4),(31,1,6,87),(32,1,1,46),(33,1,1,87),(34,1,1,85),(35,1,1,86),(36,1,1,13),(37,1,1,52),(38,1,1,95),(39,1,1,104),(40,1,1,88),(41,1,1,89),(42,1,1,90),(43,1,1,98),(44,1,1,99),(45,1,11,107),(46,1,11,109),(47,1,11,104),(48,1,8,32),(49,0,8,70),(50,1,1,91),(51,1,1,101),(52,1,1,100),(53,1,1,105),(54,1,1,92),(55,1,1,103),(56,1,1,111),(57,1,1,112),(58,1,1,106),(59,1,11,113),(60,1,15,32),(61,1,15,52),(62,1,15,71),(63,1,15,36),(64,1,15,72),(65,1,15,73),(66,1,15,15),(67,1,1,107),(68,1,1,108),(69,1,1,109),(70,1,1,116),(71,1,1,118),(72,1,1,110),(74,1,1,113),(75,1,1,114),(76,1,1,115),(77,1,1,120),(78,1,1,124),(79,1,1,54),(80,1,1,66),(81,1,1,117),(82,1,1,94),(83,1,1,122),(84,1,1,79),(85,1,1,75),(86,1,1,126),(87,1,1,127),(88,1,1,132),(89,1,1,128),(90,1,1,59),(91,1,1,129),(92,1,1,133),(93,1,1,121),(94,1,11,89),(95,1,11,36),(96,1,1,125),(97,1,11,3),(98,1,11,63),(99,1,1,130),(100,1,6,32),(101,1,6,70),(102,1,1,137),(103,1,1,123),(104,1,15,26),(105,1,1,139),(106,1,1,140),(107,1,1,65),(108,1,1,3),(109,1,11,71),(110,1,15,100),(111,1,15,55),(112,1,1,131),(113,1,1,141),(114,1,1,24),(115,1,11,72),(116,1,1,25),(117,1,1,142),(118,1,1,145),(119,1,1,67),(120,1,1,146),(121,1,1,149),(122,1,1,150),(123,1,1,147),(124,1,1,151),(125,1,15,13),(126,0,15,82),(127,1,15,88),(128,1,15,89),(129,1,15,77),(130,1,15,90),(131,1,1,69),(132,0,15,69),(133,1,1,148),(134,1,1,138),(135,1,1,155),(136,1,1,81),(137,1,1,156),(138,1,1,43),(139,1,1,136),(140,1,1,134),(141,1,1,158),(142,1,1,164),(143,1,1,165),(144,1,15,1),(145,1,15,83),(146,1,15,78),(147,1,15,84),(148,1,15,85),(149,1,15,86),(150,1,15,8),(151,1,1,161),(152,1,11,135),(153,1,1,135),(154,1,1,157),(155,1,1,159),(156,1,1,166),(157,1,1,172),(158,1,1,173),(159,1,15,17),(160,1,15,27),(161,1,1,178),(162,1,1,175),(163,1,1,177),(164,1,1,163),(165,1,1,176),(166,1,1,168),(167,1,1,50),(168,1,1,171);
/*!40000 ALTER TABLE `list_quizscore` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `list_quiztype`
--

DROP TABLE IF EXISTS `list_quiztype`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `list_quiztype` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `name` varchar(20) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=5 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `list_quiztype`
--

LOCK TABLES `list_quiztype` WRITE;
/*!40000 ALTER TABLE `list_quiztype` DISABLE KEYS */;
INSERT INTO `list_quiztype` VALUES (1,'Code'),(2,'Answer'),(4,'MultipleChoice');
/*!40000 ALTER TABLE `list_quiztype` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `list_testcase`
--

DROP TABLE IF EXISTS `list_testcase`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `list_testcase` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `input` longtext NOT NULL,
  `expected_output` longtext NOT NULL,
  `quiz_id` int(11) NOT NULL,
  `expected_stdout` longtext NOT NULL,
  PRIMARY KEY (`id`),
  KEY `list_testset_quiz_id_bafc9895_fk_list_quiz_id` (`quiz_id`),
  CONSTRAINT `list_testset_quiz_id_bafc9895_fk_list_quiz_id` FOREIGN KEY (`quiz_id`) REFERENCES `list_quiz` (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=278 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `list_testcase`
--

LOCK TABLES `list_testcase` WRITE;
/*!40000 ALTER TABLE `list_testcase` DISABLE KEYS */;
INSERT INTO `list_testcase` VALUES (1,'','10',1,''),(2,'','2',2,''),(3,'','123',3,''),(4,'','5',4,''),(5,'','15',5,''),(6,'','banana',6,''),(7,'','True',7,''),(8,'','14',8,''),(9,'','14',9,''),(10,'2\r\n3','6',10,''),(11,'4\r\n0','0',10,''),(12,'[1, 2, 3, 4, 5]','[5, 2, 3, 4, 1]',11,''),(13,'[1,2,3,4,5]','[1, 4, 3, 2, 5]',12,''),(14,'[1, 2, 3, 4, 5]','[5, 4, 3, 2, 1]',13,''),(15,'[1, 2, 3, 4, 5]','[5, 4, 3, 2, 1]',14,''),(16,'[1, 2, 3, 4, 5, 6, 7, 8]','[8, 7, 6, 5, 4, 3, 2, 1]',13,''),(17,'','3',15,''),(18,'','3',16,''),(19,'','2',17,''),(21,'','10',19,''),(22,'','12',20,''),(24,'[3, 6, 9, 10]\r\n7','[3, 6, 7, 9, 10]',21,''),(25,'25','5',22,''),(26,'[1, 2, -3, 2, -1]','3',23,''),(27,'[1, 0, 3, -2, 3]','5',23,''),(28,'','',24,'200'),(29,'','4',25,''),(30,'','4',26,''),(31,'[1, 5, 3, 2, 6]','4',27,''),(32,'[-4, 3, -4, 4, -5, 8, -11, 10]','7',23,''),(33,'[2, 3, 4, 5, 6]\r\n2','[4, 5, 6, 2, 3]',29,''),(34,'[3, 4, 7, 5, 2, 7]','2',30,''),(35,'[1, 2, 3, 4, 5, 6]','[1, 3, 5]\r\n[2, 4, 6]',31,''),(36,'','4',32,''),(37,'\"How are you today\"','How are today',33,''),(38,'0.00001','4',34,''),(39,'0.003','2',34,''),(40,'0.203','0',34,''),(41,'15\r\n9','3',35,''),(42,'18\r\n17','1',35,''),(43,'','',36,'hello world'),(44,'[5, 3, 6, 7, 8]','7',37,''),(45,'[-1, -6, -3, -5, -7]','-3',37,''),(46,'32','True',39,''),(47,'31','False',39,''),(48,'120000','4',40,''),(49,'345','0',40,''),(50,'0','False',39,''),(53,'\"(())\"','True',43,''),(54,'\"()()\"','True',43,''),(55,'\")()(\"','False',43,''),(56,'\"(()\"','False',43,''),(58,'\"aabbc\"','c',44,''),(59,'\"abbac\"','c',44,''),(60,'5','540',45,''),(61,'5','1260',46,''),(62,'5\r\n[3, 6, 4, 8]','2',47,''),(63,'[3, 5, 7, 9]\r\n[1, 3, 8, 9]','[3, 9]',48,''),(64,'4','[\'*\', \'**\', \'***\', \'****\']',49,''),(65,'9','34',50,''),(66,'[1, 3, 4]\r\n[2, 4, 5]','[1, 2, 3, 4, 4, 5]',51,''),(67,'','3',52,''),(68,'4','[\'---*\', \'--**\', \'-***\', \'****\']',53,''),(69,'[3, 4, 5, 6, 7, 8, 9]\r\n2\r\n6','[3, 4, 9, 8, 7, 6, 5]',54,''),(70,'[1, 2, 3, 4, 5]\r\n1\r\n4','[1, 5, 4, 3, 2]',54,''),(71,'','4',55,''),(72,'','4',56,''),(73,'1234','10',57,''),(74,'111111','6',57,''),(75,'2019','365',58,''),(76,'2020','366',58,''),(77,'[4, 3, 5, 8, 6, 2]','5',59,''),(78,'[1, 2, 3, 4, 5]','15',60,''),(79,'','3',62,''),(80,'2000','366',58,''),(81,'1900','365',58,''),(82,'','4',61,''),(83,'','3',63,''),(84,'\"abcc\"\r\n\"bcac\"','True',64,''),(85,'\"abb\"\r\n\"baa\"','False',64,''),(86,'\"racecar\"','True',65,''),(87,'\"pypy\"','False',65,''),(88,'[4, 4, 4, 1, 1, 1, 2, 3, 4]','3',66,''),(89,'[1, 2, 3, 4]','1',66,''),(90,'[4, 1, 2, 6, 4, 5]','6',67,''),(91,'\'()(()())\'','()()',68,''),(92,'\'(())\'','()',68,''),(93,'Node[1, 4, 3, 2]','4',69,''),(94,'','1',70,''),(95,'','2',71,''),(96,'','4',72,''),(97,'','12',73,''),(98,'','3',74,''),(99,'[1, 3, 2, 2]','True',75,''),(100,'[1, 3, 5, 9]','True',75,''),(101,'[1, 2, 3, 4]','False',75,''),(102,'[5, 3, 2, 6, 4, 3, 3]\r\n3','13',76,''),(103,'','2',77,''),(104,'','1',78,''),(105,'[1, 2, 4, 6]\r\n[4, 5, 6, 8]','3',79,''),(106,'Node[1, 4, 3, 2, 5]','5 -> 2 -> 3 -> 4 -> 1',81,''),(107,'','3',82,''),(108,'','4',83,''),(109,'','print_world()',84,''),(110,'','10',85,''),(111,'','24',86,''),(112,'5','120',80,''),(113,'abccbbd','b',12,''),(114,'[1, 3, 5, 3]','True',38,''),(115,'[1, 4, 6]','False',38,''),(116,'{1, 2, 3, 5, 6}','{1, 2, 3, 4, 5, 6}',87,''),(117,'','False',88,''),(118,'','3',89,''),(119,'','4',90,''),(120,'[2, 4, 5, 6, 7]','12',91,''),(121,'{1, 2, 3, 4, 5}','5',92,''),(122,'{1, 2, 3}\r\n{3, 4, 5}','{1, 2, 3, 4, 5}',93,''),(123,'[1, 2, 4, 5, 6]','3.6',94,''),(124,'','4',95,''),(125,'','4',96,''),(126,'','3',97,''),(127,'','4',98,''),(128,'','3',99,''),(129,'[1, 2, 3, 4, 5]\r\n[3, 4, 5, 6]','[1, 2]',100,''),(130,'[-2, 0, 1, -3, 4]','[0, 1, 4]',101,''),(131,'\"hello\"','[\'h\', \'e\', \'l\', \'l\', \'o\']',102,''),(132,'[1, 2, 1, 2, 3]','[1, 2, 3]',103,''),(133,'','2',104,''),(134,'\'Hello World\'','lo Wo',105,''),(135,'\"abccbbd\"','3',28,''),(136,'{\"brand\": \"Apple\", \"type\": \"Laptop\", \"year\": 2019}\r\n\"year\"','2019',106,''),(137,'{\"brand\": \"PyPyKids\", \"language\": \"Python\", \"target\": \"Kids\"}\r\n\"Java\"','{\'brand\': \'PyPyKids\', \'language\': \'Java\', \'target\': \'Kids\'}',107,''),(138,'{\"brand\": \"PyPyKids\"}\r\n\"who\"\r\n\"Dayeon\"','{\'brand\': \'PyPyKids\', \'who\': \'Dayeon\'}',108,''),(139,'{\"brand\": \"PyPyKids\", \"language\": \"Python\", \"target\": \"Kids\"}\r\n\"language\"','{\'brand\': \'PyPyKids\', \'target\': \'Kids\'}',109,''),(140,'{\"brand\": \"PyPyKids\", \"language\": \"Python\", \"target\": \"Kids\"}','3',2,''),(141,'{\"brand\": \"PyPyKids\", \"language\": \"Python\", \"target\": \"Kids\"}','[\'brandPyPyKids\', \'languagePython\', \'targetKids\']',110,''),(142,'10','55',111,''),(143,'10\r\n20','1020',112,''),(144,'4','[1, 2, 3, 4, 2, 2, 3, 4, 3, 3, 3, 4, 4, 4, 4, 4]',113,''),(145,'4','[2, 3, 4, 5, 3, 4, 5, 6, 4, 5, 6, 7, 5, 6, 7, 8]',114,''),(146,'4','[1, 1, 2, 1, 2, 3, 1, 2, 3, 4]',115,''),(147,'[1, 5, 10, 7]','2',116,''),(148,'\"hipypykipypydskids\"','2',117,''),(149,'\"hellohello\"','0',117,''),(150,'{\"key1\": 1, \"key2\": 2}\r\n\"key3\"','0',118,''),(153,'3','[2, 3, 4, 3, 4, 5, 4, 5, 6]',114,''),(154,'','',120,'5050'),(155,'[1, 2, 3, 4, 1, 2, 3, 3, 3]','3',121,''),(156,'17','False',122,''),(157,'18','True',122,''),(158,'[7, 6, 5, 3, 4, 2, 1]','4',123,''),(159,'[3, 4, 5, 1, 2]','3',123,''),(160,'{\"hello\": 1, \"hi\": 1}','True',124,''),(161,'{\"hello\": 1, \"hi\": 2}','False',124,''),(162,'\"pypy hello kids pypy kids\"','[\'pypy\', \'kids\']',125,''),(163,'\"hi hello\"','[\'hi\', \'hello\']',125,''),(164,'\"pypypypypypypy\"','0',117,''),(165,'\"pykids\"','0',117,''),(166,'\"pykidspykids\"','1',117,''),(167,'\"pypyhellotricky\"','0',117,''),(168,'\'hello\'\r\n5','hello',126,''),(169,'\'pypykids\'\r\n5','ykids',126,''),(170,'[2.3, 3.7]','True',127,''),(171,'[2.4, 4.3]','False',127,''),(172,'[\"abc\", \"abd\", \"abg\"]','ab',128,''),(173,'[\"abcde\", \"abcd\", \"abc\", \"abcf\"]','abc',128,''),(174,'[9]','[1, 0]',129,''),(175,'[3, 9]','[4, 0]',129,''),(176,'[4, 5]','[4, 6]',129,''),(177,'1234','4321',130,''),(178,'30302','20303',130,''),(179,'1234\r\n4321','8',131,''),(180,'141\r\n443','5',131,''),(181,'[1, 2, 3, 4, 3, 1, 2]','[2, 3, 4, 3, 2, 1, 1]',132,''),(182,'[4, 1, 3, 1, 2, 1, 1]','[4, 3, 2, 1, 1, 1, 1]',132,''),(183,'[9, 9]\r\n[1]','[1, 0, 0]',133,''),(184,'[1, 2, 3]\r\n[7, 7]','[2, 0, 0]',133,''),(185,'[1, 4, 4, 5, 5, 2, 3, 6, 7, 5, 5, 5]','3',66,''),(186,'[1, 2, 3, 4, 1, 2, 3, 4, 5]','4',121,''),(187,'Node[1, 2, 3, 4, 5]','3',134,''),(188,'Node[1, 2, 4, 5, 6, 7]','4',134,''),(189,'Node[1, 2, 4, 5, 6, 7]\r\n2','6',135,''),(190,'Node[1, 2, 4, 5, 6, 7, 8, 9]\r\n3','7',135,''),(191,'20','[2, 3, 5, 7, 11, 13, 17, 19]',137,''),(192,'10','[2, 3, 5, 7]',137,''),(193,'\"hello pypy pypy kids\"','[\'pypy\']',125,''),(194,'10','1010',138,''),(195,'16','10000',138,''),(196,'','',140,'200'),(197,'','1',139,''),(198,'[1, 2, 3, 4, 5, 6]','{1: 2, 3: 4, 5: 6}',141,''),(199,'3','[[1, 2, 3], [6, 5, 4], [7, 8, 9]]',142,''),(200,'4','[[1, 2, 3, 4], [8, 7, 6, 5], [9, 10, 11, 12], [16, 15, 14, 13]]',142,''),(201,'3','[[1, 2, 9], [4, 3, 8], [5, 6, 7]]',143,''),(202,'4','[[1, 2, 9, 10], [4, 3, 8, 11], [5, 6, 7, 12], [16, 15, 14, 13]]',143,''),(203,'{3, 4, 5, 2, 7, 9, 13, 24, 36}','36',145,''),(204,'{3, 4, 2, 7, 5}','7',145,''),(205,'3','[[1, 2, 6], [3, 5, 7], [4, 8, 9]]',144,''),(206,'4','[[1, 2, 6, 7], [3, 5, 8, 13], [4, 9, 12, 14], [10, 11, 15, 16]]',144,''),(207,'3','[[1, 4, 7], [2, 5, 8], [3, 6, 9]]',146,''),(208,'4','[[1, 5, 9, 13], [2, 6, 10, 14], [3, 7, 11, 15], [4, 8, 12, 16]]',146,''),(209,'4','50\r\n25',147,''),(210,'5','78\r\n31',147,''),(211,'[1, 2, 3, 4, 5, 6, 7]\r\n15','True',148,''),(212,'[1, 2, 3, 4, 5]\r\n8','False',148,''),(213,'4','[[1, 2, 3, 4], [2, 2, 3, 4], [3, 3, 3, 4], [4, 4, 4, 4]]',149,''),(214,'3','[[1, 2, 3], [2, 2, 3], [3, 3, 3]]',149,''),(215,'4','[[1, 0, 0, 1], [0, 1, 1, 0], [0, 1, 1, 0], [1, 0, 0, 1]]',150,''),(216,'5','[[1, 0, 0, 0, 1], [0, 1, 0, 1, 0], [0, 0, 1, 0, 0], [0, 1, 0, 1, 0], [1, 0, 0, 0, 1]]',150,''),(217,'\"hello\"','olleh',151,''),(218,'\"python\"','nohtyp',151,''),(219,'[[1, 2, 3], [4, 5, 6]]','5',152,''),(220,'[[1, 2, 3, 4], [5, 6, 7, 8]]','6',152,''),(221,'[[0, 1, 1, 1], [1, 1, 1, 1], [0, 1, 1, 1]]','9',153,''),(222,'[[0, 1, 1], [1, 1, 1], [1, 0, 0]]','4',153,''),(223,'[1, 3, 2, 4, 2, 4, 5]\r\n2','3',154,''),(224,'[1, 3, 1, 3, 2, 4, 4, 3]\r\n3','1',154,''),(225,'[1, 2, 3, 4]','1 -> 2 -> 3 -> 4',155,''),(226,'[3, 2, 1]','3 -> 2 -> 1',155,''),(227,'[4, 4, 4, 4, 1, 1, 1, 1]\r\n14','True',148,''),(228,'[1, 2, 3, 4, 5, 6, 7]\r\n11','True',148,''),(229,'[1, 4, 5, 3]','[4, 5, -1, -1]',136,''),(230,'[2, 5, 3, 6, 7, 8]','[5, 6, 6, 7, 8, -1]',136,''),(231,'\'()()(()))\'','4',156,''),(232,'\'(()())\'','3',156,''),(233,'\'(((((\'','0',156,''),(234,'[[1, 2, 3], [4, 5, 6], [7, 8, 9]]','[[7, 4, 1], [8, 5, 2], [9, 6, 3]]',157,''),(235,'[[1, 2, 3, 4], [5, 6, 7, 8], [9, 10, 11, 12], [13, 14, 15, 16]]','[[13, 9, 5, 1], [14, 10, 6, 2], [15, 11, 7, 3], [16, 12, 8, 4]]',157,''),(236,'[2, 5, 3, 4, 8, 7]','[5, 8, 4, 8, -1, -1]',136,''),(237,'2\r\n4','[[0, 0, 0, 1], [0, 0, 0, 1]]',158,''),(238,'2\r\n3','[[0, 0, 1], [0, 0, 1]]',158,''),(239,'Tree[4, 2, 6, 1, None, None, 8]\r\n6','True',159,''),(240,'Tree[4, 2, 6, 1, None, None, 8]\r\n1','True',159,''),(241,'Tree[4, 2, 6, 1, None, None, 8]\r\n5','False',159,''),(242,'','Tree[1, 2, 3]',160,''),(243,'Tree[1, 2, 3, 4]\r\n4','True',161,''),(244,'Tree[1, 2, 3, 4]\r\n3','False',161,''),(245,'Tree[8, 4, 10, 2, 6, 9, None, None, 3]\r\n3\r\n6','4',162,''),(246,'5','8',163,''),(247,'1','1',163,''),(248,'','60',164,''),(249,'[[0, 2, 5, 1], [3, 6, 2, 8], [9, 1, 2, 1]]','1',165,''),(250,'Tree[8, 4, 10, 2, 6, 9, None, None, 3]\r\n9\r\n10','10',162,''),(251,'Tree[1, 10, 3, 4, 5, 6, None]','10',166,''),(252,'Tree[1, 2, 3, 4, 5, 6, 7]','7',166,''),(253,'\"(((){})\"',')',167,''),(254,'\"((())[[]\"',']',167,''),(255,'\"(((){}))\"','-1',167,''),(256,'Tree[1, 2, 3]','2',168,''),(257,'Tree[1, 10, 3, 4, 5, 6, 7, None, None, None, None, 8, None]','4',168,''),(258,'Tree[8, 4, 3, 1, 3, 2, 1]','True',169,''),(259,'Tree[8, 4, 3, 1, 5, 2, 1]','False',169,''),(260,'\"13\"','2',170,''),(261,'\"123\"','3',170,''),(262,'\"01\"','0',170,''),(263,'Tree[8, 4, 6, 1, 3, 5, 7]','False',171,''),(264,'Tree[8, 4, 6, 1, 6, 5, 7]','False',171,''),(265,'','15',172,''),(266,'','4',173,''),(267,'\"2 3 4 5 6\"','True',175,''),(268,'\"3 5 6 7 8\"','False',175,''),(269,'\"aabbbccdddd\"','a2b3c2d4',176,''),(270,'\"aaaaabb\"','a5b2',176,''),(271,'\"Welcome to the world\"','Wttw',177,''),(272,'\"Hello, I am Dayeon\"','HIaD',177,''),(273,'[1, 2, 3, 4]\r\n[5, 6, 7, 8]','[[1, 5], [2, 6], [3, 7], [4, 8]]',178,''),(274,'[1, 2, 3, 4]\r\n[\"d\", \"c\", \"b\", \"a\"]','[[1, \'d\'], [2, \'c\'], [3, \'b\'], [4, \'a\']]',178,''),(275,'\"8 9 10 11\"','True',175,''),(276,'\"bbbba\"','b4a1',176,''),(277,'Tree[8, 4, 3, 5]','False',169,'');
/*!40000 ALTER TABLE `list_testcase` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `list_userpoint`
--

DROP TABLE IF EXISTS `list_userpoint`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `list_userpoint` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `date` date NOT NULL,
  `customuser_id` int(11) DEFAULT NULL,
  `pointtype_id` int(11) DEFAULT NULL,
  PRIMARY KEY (`id`),
  KEY `list_userpoint_customuser_id_date_pointtype_id_fa3e6d9d_idx` (`customuser_id`,`date`,`pointtype_id`),
  KEY `list_userpoint_pointtype_id_c41bb7f1_fk_list_pointtype_id` (`pointtype_id`),
  CONSTRAINT `list_userpoint_customuser_id_6d806686_fk_list_customuser_id` FOREIGN KEY (`customuser_id`) REFERENCES `list_customuser` (`id`),
  CONSTRAINT `list_userpoint_pointtype_id_c41bb7f1_fk_list_pointtype_id` FOREIGN KEY (`pointtype_id`) REFERENCES `list_pointtype` (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=175 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `list_userpoint`
--

LOCK TABLES `list_userpoint` WRITE;
/*!40000 ALTER TABLE `list_userpoint` DISABLE KEYS */;
INSERT INTO `list_userpoint` VALUES (26,'2019-10-04',1,1),(29,'2019-10-05',1,1),(35,'2019-10-06',1,1),(42,'2019-10-08',1,1),(44,'2019-10-09',1,1),(47,'2019-10-10',1,1),(51,'2019-10-11',1,1),(54,'2019-10-12',1,1),(59,'2019-10-13',1,1),(61,'2019-10-14',1,1),(66,'2019-10-15',1,1),(68,'2019-10-16',1,1),(73,'2019-10-17',1,1),(77,'2019-10-18',1,1),(80,'2019-10-19',1,1),(81,'2019-10-20',1,1),(84,'2019-10-21',1,1),(85,'2019-10-22',1,1),(86,'2019-10-23',1,1),(87,'2019-10-24',1,1),(89,'2019-10-25',1,1),(90,'2019-10-26',1,1),(93,'2019-10-27',1,1),(95,'2019-10-28',1,1),(97,'2019-10-29',1,1),(100,'2019-10-30',1,1),(102,'2019-10-31',1,1),(104,'2019-11-01',1,1),(106,'2019-11-02',1,1),(111,'2019-11-03',1,1),(112,'2019-11-04',1,1),(114,'2019-11-05',1,1),(115,'2019-11-06',1,1),(117,'2019-11-07',1,1),(119,'2019-11-08',1,1),(121,'2019-11-09',1,1),(122,'2019-11-11',1,1),(123,'2019-11-12',1,1),(124,'2019-11-13',1,1),(125,'2019-11-15',1,1),(127,'2019-11-17',1,1),(130,'2019-11-18',1,1),(132,'2019-11-19',1,1),(134,'2019-11-20',1,1),(136,'2019-11-21',1,1),(138,'2019-11-24',1,1),(140,'2019-11-28',1,1),(141,'2019-11-30',1,1),(142,'2019-12-01',1,1),(145,'2019-12-07',1,1),(146,'2019-12-09',1,1),(147,'2019-12-10',1,1),(149,'2019-12-12',1,1),(150,'2019-12-13',1,1),(151,'2019-12-15',1,1),(155,'2020-01-28',1,1),(156,'2020-02-02',1,1),(157,'2020-02-03',1,1),(158,'2020-02-04',1,1),(159,'2020-02-07',1,1),(160,'2020-02-14',1,1),(161,'2020-02-18',1,1),(162,'2020-02-21',1,1),(163,'2020-02-22',1,1),(164,'2020-03-12',1,1),(165,'2020-03-13',1,1),(166,'2020-03-17',1,1),(167,'2020-03-23',1,1),(168,'2020-04-16',1,1),(169,'2020-04-27',1,1),(170,'2020-04-29',1,1),(171,'2020-05-03',1,1),(172,'2020-05-29',1,1),(173,'2020-05-30',1,1),(174,'2020-06-19',1,1),(27,'2019-10-04',2,1),(28,'2019-10-05',2,1),(34,'2019-10-06',2,1),(41,'2019-10-08',2,1),(46,'2019-10-10',2,1),(58,'2019-10-13',2,1),(62,'2019-10-14',2,1),(76,'2019-10-18',2,1),(128,'2019-11-18',2,1),(144,'2019-12-07',2,1),(74,'2019-10-17',6,1),(31,'2019-10-05',8,1),(33,'2019-10-06',8,1),(37,'2019-10-07',8,1),(38,'2019-10-08',8,1),(48,'2019-10-10',8,1),(49,'2019-10-11',8,1),(52,'2019-10-12',8,1),(71,'2019-10-17',9,1),(25,'2019-10-04',11,1),(30,'2019-10-05',11,1),(32,'2019-10-06',11,1),(36,'2019-10-07',11,1),(39,'2019-10-08',11,1),(43,'2019-10-09',11,1),(45,'2019-10-10',11,1),(50,'2019-10-11',11,1),(53,'2019-10-12',11,1),(55,'2019-10-13',11,1),(60,'2019-10-14',11,1),(63,'2019-10-15',11,1),(67,'2019-10-16',11,1),(70,'2019-10-17',11,1),(75,'2019-10-18',11,1),(78,'2019-10-19',11,1),(82,'2019-10-20',11,1),(88,'2019-10-24',11,1),(91,'2019-10-26',11,1),(94,'2019-10-27',11,1),(96,'2019-10-28',11,1),(99,'2019-10-29',11,1),(101,'2019-10-30',11,1),(103,'2019-10-31',11,1),(105,'2019-11-01',11,1),(107,'2019-11-02',11,1),(110,'2019-11-03',11,1),(113,'2019-11-04',11,1),(116,'2019-11-06',11,1),(118,'2019-11-07',11,1),(135,'2019-11-21',11,1),(137,'2019-11-24',11,1),(139,'2019-11-25',11,1),(143,'2019-12-02',11,1),(56,'2019-10-13',14,1),(57,'2019-10-13',15,1),(79,'2019-10-19',15,1),(92,'2019-10-27',15,1),(108,'2019-11-02',15,1),(109,'2019-11-03',15,1),(120,'2019-11-09',15,1),(126,'2019-11-16',15,1),(69,'2019-10-16',16,1),(72,'2019-10-17',16,1),(83,'2019-10-20',16,1),(98,'2019-10-29',16,1),(129,'2019-11-18',16,1),(148,'2019-12-11',16,1),(152,'2019-12-18',16,1),(153,'2019-12-31',16,1),(154,'2020-01-01',16,1),(131,'2019-11-19',17,1),(133,'2019-11-20',17,1);
/*!40000 ALTER TABLE `list_userpoint` ENABLE KEYS */;
UNLOCK TABLES;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;

/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOTES=@OLD_SQL_NOTES */;

-- Dump completed on 2020-08-03  1:29:20
