-- MySQL dump 10.13  Distrib 8.0.12, for osx10.13 (x86_64)
--
-- Host: localhost    Database: pypykids
-- ------------------------------------------------------
-- Server version	8.0.12

/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
 SET NAMES utf8mb4 ;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;

--
-- Table structure for table `auth_group`
--

DROP TABLE IF EXISTS `auth_group`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
 SET character_set_client = utf8mb4 ;
CREATE TABLE `auth_group` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `name` varchar(150) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `name` (`name`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `auth_group`
--

LOCK TABLES `auth_group` WRITE;
/*!40000 ALTER TABLE `auth_group` DISABLE KEYS */;
/*!40000 ALTER TABLE `auth_group` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `auth_group_permissions`
--

DROP TABLE IF EXISTS `auth_group_permissions`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
 SET character_set_client = utf8mb4 ;
CREATE TABLE `auth_group_permissions` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `group_id` int(11) NOT NULL,
  `permission_id` int(11) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `auth_group_permissions_group_id_permission_id_0cd325b0_uniq` (`group_id`,`permission_id`),
  KEY `auth_group_permissio_permission_id_84c5c92e_fk_auth_perm` (`permission_id`),
  CONSTRAINT `auth_group_permissio_permission_id_84c5c92e_fk_auth_perm` FOREIGN KEY (`permission_id`) REFERENCES `auth_permission` (`id`),
  CONSTRAINT `auth_group_permissions_group_id_b120cbf9_fk_auth_group_id` FOREIGN KEY (`group_id`) REFERENCES `auth_group` (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `auth_group_permissions`
--

LOCK TABLES `auth_group_permissions` WRITE;
/*!40000 ALTER TABLE `auth_group_permissions` DISABLE KEYS */;
/*!40000 ALTER TABLE `auth_group_permissions` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `auth_permission`
--

DROP TABLE IF EXISTS `auth_permission`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
 SET character_set_client = utf8mb4 ;
CREATE TABLE `auth_permission` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `name` varchar(255) NOT NULL,
  `content_type_id` int(11) NOT NULL,
  `codename` varchar(100) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `auth_permission_content_type_id_codename_01ab375a_uniq` (`content_type_id`,`codename`),
  CONSTRAINT `auth_permission_content_type_id_2f476e4b_fk_django_co` FOREIGN KEY (`content_type_id`) REFERENCES `django_content_type` (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=85 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `auth_permission`
--

LOCK TABLES `auth_permission` WRITE;
/*!40000 ALTER TABLE `auth_permission` DISABLE KEYS */;
INSERT INTO `auth_permission` VALUES (1,'Can add quiz type',1,'add_quiztype'),(2,'Can change quiz type',1,'change_quiztype'),(3,'Can delete quiz type',1,'delete_quiztype'),(4,'Can view quiz type',1,'view_quiztype'),(5,'Can add category',2,'add_category'),(6,'Can change category',2,'change_category'),(7,'Can delete category',2,'delete_category'),(8,'Can view category',2,'view_category'),(9,'Can add quiz',3,'add_quiz'),(10,'Can change quiz',3,'change_quiz'),(11,'Can delete quiz',3,'delete_quiz'),(12,'Can view quiz',3,'view_quiz'),(13,'Can add test set',4,'add_testset'),(14,'Can change test set',4,'change_testset'),(15,'Can delete test set',4,'delete_testset'),(16,'Can view test set',4,'view_testset'),(17,'Can add user code',5,'add_usercode'),(18,'Can change user code',5,'change_usercode'),(19,'Can delete user code',5,'delete_usercode'),(20,'Can view user code',5,'view_usercode'),(21,'Can add log entry',6,'add_logentry'),(22,'Can change log entry',6,'change_logentry'),(23,'Can delete log entry',6,'delete_logentry'),(24,'Can view log entry',6,'view_logentry'),(25,'Can add permission',7,'add_permission'),(26,'Can change permission',7,'change_permission'),(27,'Can delete permission',7,'delete_permission'),(28,'Can view permission',7,'view_permission'),(29,'Can add group',8,'add_group'),(30,'Can change group',8,'change_group'),(31,'Can delete group',8,'delete_group'),(32,'Can view group',8,'view_group'),(33,'Can add user',9,'add_user'),(34,'Can change user',9,'change_user'),(35,'Can delete user',9,'delete_user'),(36,'Can view user',9,'view_user'),(37,'Can add content type',10,'add_contenttype'),(38,'Can change content type',10,'change_contenttype'),(39,'Can delete content type',10,'delete_contenttype'),(40,'Can view content type',10,'view_contenttype'),(41,'Can add session',11,'add_session'),(42,'Can change session',11,'change_session'),(43,'Can delete session',11,'delete_session'),(44,'Can view session',11,'view_session'),(45,'Can add answer',12,'add_answer'),(46,'Can change answer',12,'change_answer'),(47,'Can delete answer',12,'delete_answer'),(48,'Can view answer',12,'view_answer'),(49,'Can add category level',13,'add_categorylevel'),(50,'Can change category level',13,'change_categorylevel'),(51,'Can delete category level',13,'delete_categorylevel'),(52,'Can view category level',13,'view_categorylevel'),(53,'Can add difficulty',13,'add_difficulty'),(54,'Can change difficulty',13,'change_difficulty'),(55,'Can delete difficulty',13,'delete_difficulty'),(56,'Can view difficulty',13,'view_difficulty'),(57,'Can add testcase',4,'add_testcase'),(58,'Can change testcase',4,'change_testcase'),(59,'Can delete testcase',4,'delete_testcase'),(60,'Can view testcase',4,'view_testcase'),(61,'Can add user',14,'add_user'),(62,'Can change user',14,'change_user'),(63,'Can delete user',14,'delete_user'),(64,'Can view user',14,'view_user'),(65,'Can add badge',15,'add_badge'),(66,'Can change badge',15,'change_badge'),(67,'Can delete badge',15,'delete_badge'),(68,'Can view badge',15,'view_badge'),(69,'Can add badge type',16,'add_badgetype'),(70,'Can change badge type',16,'change_badgetype'),(71,'Can delete badge type',16,'delete_badgetype'),(72,'Can view badge type',16,'view_badgetype'),(73,'Can add custom user',14,'add_customuser'),(74,'Can change custom user',14,'change_customuser'),(75,'Can delete custom user',14,'delete_customuser'),(76,'Can view custom user',14,'view_customuser'),(77,'Can add good',17,'add_good'),(78,'Can change good',17,'change_good'),(79,'Can delete good',17,'delete_good'),(80,'Can view good',17,'view_good'),(81,'Can add quiz score',17,'add_quizscore'),(82,'Can change quiz score',17,'change_quizscore'),(83,'Can delete quiz score',17,'delete_quizscore'),(84,'Can view quiz score',17,'view_quizscore');
/*!40000 ALTER TABLE `auth_permission` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `auth_user`
--

DROP TABLE IF EXISTS `auth_user`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
 SET character_set_client = utf8mb4 ;
CREATE TABLE `auth_user` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `password` varchar(128) NOT NULL,
  `last_login` datetime(6) DEFAULT NULL,
  `is_superuser` tinyint(1) NOT NULL,
  `username` varchar(150) NOT NULL,
  `first_name` varchar(30) NOT NULL,
  `last_name` varchar(150) NOT NULL,
  `email` varchar(254) NOT NULL,
  `is_staff` tinyint(1) NOT NULL,
  `is_active` tinyint(1) NOT NULL,
  `date_joined` datetime(6) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `username` (`username`)
) ENGINE=InnoDB AUTO_INCREMENT=20 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `auth_user`
--

LOCK TABLES `auth_user` WRITE;
/*!40000 ALTER TABLE `auth_user` DISABLE KEYS */;
INSERT INTO `auth_user` VALUES (1,'pbkdf2_sha256$150000$Kmza61K5Xehs$VoK9aHRus3D7IA1QZb/jwgNdIAVtEAdVNPocvA0bWiU=','2019-09-25 04:27:10.643785',1,'youngwan','','','',1,1,'2019-07-17 09:31:45.000000'),(2,'pbkdf2_sha256$150000$KO6SvEqAFAPC$57vvHD79ZyKZeGVAWtpoeHtKQNkP30/+wYFoFW+xSh4=','2019-09-25 09:08:15.498635',1,'dayeon','','','',1,1,'2019-08-24 03:39:09.000000'),(14,'pbkdf2_sha256$150000$SIKV5wzcSz9T$MtaKZRwiromgeD0RlW1NqyATIfjuqhksNTb0U7RPOCU=','2019-09-23 03:46:06.752096',0,'guests','','','',0,1,'2019-09-12 04:51:41.424097'),(15,'pbkdf2_sha256$150000$CzmYtbeYhX5w$VqTP2oFXdsvvxiDGr9vmnXoOksuuwDJXlRdPcVs3EKY=','2019-09-26 01:07:33.973843',1,'PyPyKids','','','',1,1,'2019-09-19 07:17:24.000000'),(16,'pbkdf2_sha256$150000$v6AvCViU77fo$QWZSR9R9pIibaPtrxmrr8qHjQs9VAJcSb4v1tZP87qQ=','2019-09-25 04:18:36.343161',1,'admin','','','',1,1,'2019-09-19 07:18:27.000000'),(17,'pbkdf2_sha256$150000$fqrxUsHaSfNV$fdU19yanfMNj/3nMFl09HlUXfBa9YTkJUc6VzU/8q44=','2019-09-24 01:19:57.688941',0,'guest','','','',0,1,'2019-09-24 01:19:57.467189'),(18,'pbkdf2_sha256$150000$pF0Ib91aZNgQ$fy7P8jm3+1r1NsvsDch89qheSObB9oQjWeKLPaHF7vI=','2019-09-24 01:20:10.230168',0,'administrator','','','',0,1,'2019-09-24 01:20:10.045157'),(19,'pbkdf2_sha256$150000$gqTIuReZO13a$m0B05eVUN/K5njIP+In9JArowleME9oiJPF/Let9f0c=','2019-09-25 09:07:11.718332',0,'tiny657','','','',0,1,'2019-09-25 09:07:11.521618');
/*!40000 ALTER TABLE `auth_user` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `auth_user_groups`
--

DROP TABLE IF EXISTS `auth_user_groups`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
 SET character_set_client = utf8mb4 ;
CREATE TABLE `auth_user_groups` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `user_id` int(11) NOT NULL,
  `group_id` int(11) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `auth_user_groups_user_id_group_id_94350c0c_uniq` (`user_id`,`group_id`),
  KEY `auth_user_groups_group_id_97559544_fk_auth_group_id` (`group_id`),
  CONSTRAINT `auth_user_groups_group_id_97559544_fk_auth_group_id` FOREIGN KEY (`group_id`) REFERENCES `auth_group` (`id`),
  CONSTRAINT `auth_user_groups_user_id_6a12ed8b_fk_auth_user_id` FOREIGN KEY (`user_id`) REFERENCES `auth_user` (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `auth_user_groups`
--

LOCK TABLES `auth_user_groups` WRITE;
/*!40000 ALTER TABLE `auth_user_groups` DISABLE KEYS */;
/*!40000 ALTER TABLE `auth_user_groups` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `auth_user_user_permissions`
--

DROP TABLE IF EXISTS `auth_user_user_permissions`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
 SET character_set_client = utf8mb4 ;
CREATE TABLE `auth_user_user_permissions` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `user_id` int(11) NOT NULL,
  `permission_id` int(11) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `auth_user_user_permissions_user_id_permission_id_14a6b632_uniq` (`user_id`,`permission_id`),
  KEY `auth_user_user_permi_permission_id_1fbb5f2c_fk_auth_perm` (`permission_id`),
  CONSTRAINT `auth_user_user_permi_permission_id_1fbb5f2c_fk_auth_perm` FOREIGN KEY (`permission_id`) REFERENCES `auth_permission` (`id`),
  CONSTRAINT `auth_user_user_permissions_user_id_a95ead1b_fk_auth_user_id` FOREIGN KEY (`user_id`) REFERENCES `auth_user` (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `auth_user_user_permissions`
--

LOCK TABLES `auth_user_user_permissions` WRITE;
/*!40000 ALTER TABLE `auth_user_user_permissions` DISABLE KEYS */;
/*!40000 ALTER TABLE `auth_user_user_permissions` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `django_admin_log`
--

DROP TABLE IF EXISTS `django_admin_log`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
 SET character_set_client = utf8mb4 ;
CREATE TABLE `django_admin_log` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `action_time` datetime(6) NOT NULL,
  `object_id` longtext,
  `object_repr` varchar(200) NOT NULL,
  `action_flag` smallint(5) unsigned NOT NULL,
  `change_message` longtext NOT NULL,
  `content_type_id` int(11) DEFAULT NULL,
  `user_id` int(11) NOT NULL,
  PRIMARY KEY (`id`),
  KEY `django_admin_log_content_type_id_c4bce8eb_fk_django_co` (`content_type_id`),
  KEY `django_admin_log_user_id_c564eba6_fk_auth_user_id` (`user_id`),
  CONSTRAINT `django_admin_log_content_type_id_c4bce8eb_fk_django_co` FOREIGN KEY (`content_type_id`) REFERENCES `django_content_type` (`id`),
  CONSTRAINT `django_admin_log_user_id_c564eba6_fk_auth_user_id` FOREIGN KEY (`user_id`) REFERENCES `auth_user` (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=1662 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `django_admin_log`
--

LOCK TABLES `django_admin_log` WRITE;
/*!40000 ALTER TABLE `django_admin_log` DISABLE KEYS */;
INSERT INTO `django_admin_log` VALUES (1,'2019-07-17 09:32:36.020000','1','QuizType object (1)',1,'[{\"added\": {}}]',1,1),(2,'2019-07-17 09:32:48.142000','2','QuizType object (2)',1,'[{\"added\": {}}]',1,1),(3,'2019-07-17 09:32:59.238000','1','Category object (1)',1,'[{\"added\": {}}]',2,1),(4,'2019-07-17 09:33:42.528000','1','1. What is the output of the following program?',1,'[{\"added\": {}}]',3,1),(5,'2019-07-17 09:36:43.896000','1','UserCode object (1)',1,'[{\"added\": {}}]',5,1),(6,'2019-07-17 09:48:43.566000','2','2. Code',1,'[{\"added\": {}}]',3,1),(7,'2019-07-17 09:49:02.606000','1','TestSet object (1)',1,'[{\"added\": {}}]',4,1),(8,'2019-07-18 05:29:55.205000','1','1. Dayeon',1,'[{\"added\": {}}]',12,1),(9,'2019-07-18 06:04:59.460000','2','TestSet object (2)',1,'[{\"added\": {}}]',4,1),(10,'2019-07-18 06:08:25.755000','1','1. Dayeon',3,'',12,1),(11,'2019-07-18 06:35:44.186000','2','TestSet object (2)',2,'[{\"changed\": {\"fields\": [\"quiz\", \"test\", \"expected_answer\"]}}]',4,1),(12,'2019-07-18 06:38:07.167000','2','2. Code',2,'[{\"changed\": {\"fields\": [\"example\"]}}]',3,1),(13,'2019-07-18 07:00:55.488000','6','6',3,'',12,1),(14,'2019-07-18 07:00:55.489000','5','5',3,'',12,1),(15,'2019-07-18 07:00:55.491000','4','4',3,'',12,1),(16,'2019-07-18 07:00:55.492000','3','3',3,'',12,1),(17,'2019-07-18 07:00:55.493000','2','2',3,'',12,1),(18,'2019-07-18 07:00:55.494000','1','1',3,'',12,1),(19,'2019-07-18 07:03:46.023000','2','2. Code',2,'[{\"changed\": {\"fields\": [\"example\", \"answer_header\"]}}]',3,1),(20,'2019-07-18 07:03:55.673000','2','2. Code',2,'[{\"changed\": {\"fields\": [\"example\"]}}]',3,1),(21,'2019-07-18 07:09:27.546000','12','12',2,'[{\"changed\": {\"fields\": [\"quiz\"]}}]',12,1),(22,'2019-07-18 07:10:55.805000','1','TestSet object (1)',2,'[{\"changed\": {\"fields\": [\"expected_answer\"]}}]',4,1),(23,'2019-07-18 07:15:05.435000','2','TestSet object (2)',2,'[{\"changed\": {\"fields\": [\"expected_answer\"]}}]',4,1),(24,'2019-07-18 07:15:41.687000','1','TestSet object (1)',2,'[{\"changed\": {\"fields\": [\"expected_answer\"]}}]',4,1),(25,'2019-07-18 07:15:44.711000','2','TestSet object (2)',2,'[{\"changed\": {\"fields\": [\"expected_answer\"]}}]',4,1),(26,'2019-07-18 07:16:04.153000','1','TestSet object (1)',2,'[{\"changed\": {\"fields\": [\"expected_answer\"]}}]',4,1),(27,'2019-07-18 07:16:30.043000','12','12',3,'',12,1),(28,'2019-07-18 07:16:30.045000','11','11',3,'',12,1),(29,'2019-07-18 07:16:30.046000','10','10',3,'',12,1),(30,'2019-07-18 07:16:30.047000','9','9',3,'',12,1),(31,'2019-07-18 07:16:30.048000','8','8',3,'',12,1),(32,'2019-07-18 07:16:30.049000','7','7',3,'',12,1),(33,'2019-07-18 07:22:14.244000','3','TestSet object (3)',1,'[{\"added\": {}}]',4,1),(34,'2019-07-18 08:03:42.471000','15','15',3,'',12,1),(35,'2019-07-18 08:03:42.472000','13','13',3,'',12,1),(36,'2019-07-18 09:31:50.127000','16','16',3,'',12,1),(37,'2019-07-18 09:31:50.129000','14','14',3,'',12,1),(38,'2019-07-18 09:32:36.064000','1','1. What is the output of the following program?',2,'[]',3,1),(39,'2019-07-18 09:33:52.010000','17','17',1,'[{\"added\": {}}]',12,1),(40,'2019-07-18 09:34:07.926000','1','TestSet object (1)',2,'[{\"changed\": {\"fields\": [\"quiz\", \"test\", \"expected_answer\"]}}]',4,1),(41,'2019-07-18 09:34:46.391000','2','TestSet object (2)',2,'[{\"changed\": {\"fields\": [\"test\", \"expected_answer\"]}}]',4,1),(42,'2019-07-18 09:35:30.092000','2','dictionary',1,'[{\"added\": {}}]',2,1),(43,'2019-07-18 09:35:38.330000','2','2. What is the output of the following program?',2,'[{\"changed\": {\"fields\": [\"question\", \"example\", \"quiz_type\", \"category\", \"answer_header\"]}}]',3,1),(44,'2019-07-18 09:35:57.183000','2','TestSet object (2)',2,'[{\"changed\": {\"fields\": [\"expected_answer\"]}}]',4,1),(45,'2019-07-18 09:42:24.510000','17','17',3,'',12,1),(46,'2019-07-18 09:45:04.789000','3','String',1,'[{\"added\": {}}]',2,1),(47,'2019-07-18 09:45:08.765000','3','3. What is the output of the following program?',1,'[{\"added\": {}}]',3,1),(48,'2019-07-18 09:45:25.550000','3','TestSet object (3)',2,'[{\"changed\": {\"fields\": [\"quiz\", \"expected_answer\"]}}]',4,1),(49,'2019-07-18 09:46:50.434000','4','List',1,'[{\"added\": {}}]',2,1),(50,'2019-07-18 09:46:58.741000','4','4. What is the output of the following program?',1,'[{\"added\": {}}]',3,1),(51,'2019-07-18 09:47:14.374000','4','TestSet object (4)',1,'[{\"added\": {}}]',4,1),(52,'2019-07-18 09:47:42.928000','5','While',1,'[{\"added\": {}}]',2,1),(53,'2019-07-18 09:47:46.076000','5','5. What is the output of the following program?',1,'[{\"added\": {}}]',3,1),(54,'2019-07-18 09:48:00.799000','5','TestSet object (5)',1,'[{\"added\": {}}]',4,1),(55,'2019-07-18 09:48:28.813000','6','6. What is the output of the following program?',1,'[{\"added\": {}}]',3,1),(56,'2019-07-18 09:48:39.735000','6','TestSet object (6)',1,'[{\"added\": {}}]',4,1),(57,'2019-07-18 09:49:11.292000','6','Set',1,'[{\"added\": {}}]',2,1),(58,'2019-07-18 09:49:13.124000','7','7. What is the output of the following program?',1,'[{\"added\": {}}]',3,1),(59,'2019-07-18 09:49:25.030000','7','TestSet object (7)',1,'[{\"added\": {}}]',4,1),(60,'2019-07-18 09:49:56.501000','7','Function',1,'[{\"added\": {}}]',2,1),(61,'2019-07-18 09:49:58.778000','8','8. What is the output of the following program?',1,'[{\"added\": {}}]',3,1),(62,'2019-07-18 09:50:22.954000','8','TestSet object (8)',1,'[{\"added\": {}}]',4,1),(63,'2019-07-18 09:51:07.814000','8','Math',1,'[{\"added\": {}}]',2,1),(64,'2019-07-18 09:51:12.358000','9','9. What is the output of the following program?',1,'[{\"added\": {}}]',3,1),(65,'2019-07-18 09:51:21.548000','9','TestSet object (9)',1,'[{\"added\": {}}]',4,1),(66,'2019-07-18 09:52:25.209000','10','10. Write a code to multiply two numbers.',1,'[{\"added\": {}}]',3,1),(67,'2019-07-18 09:53:07.756000','11','11. Swap the first element and the last element.',1,'[{\"added\": {}}]',3,1),(68,'2019-07-18 09:53:35.027000','11','11. Swap the first element and the last element.',2,'[{\"changed\": {\"fields\": [\"answer_header\"]}}]',3,1),(69,'2019-07-18 09:54:11.850000','10','TestSet object (10)',1,'[{\"added\": {}}]',4,1),(70,'2019-07-18 09:54:26.591000','11','TestSet object (11)',1,'[{\"added\": {}}]',4,1),(71,'2019-07-18 09:54:48.925000','12','TestSet object (12)',1,'[{\"added\": {}}]',4,1),(72,'2019-07-18 09:55:37.308000','10','10. Write a code to multiply two numbers.',2,'[{\"changed\": {\"fields\": [\"example\"]}}]',3,1),(73,'2019-07-18 10:01:13.871000','11','11. Swap the first element and the last element.',2,'[{\"changed\": {\"fields\": [\"example\"]}}]',3,1),(74,'2019-07-18 10:01:54.107000','11','11. Swap the first element and the last element.',2,'[{\"changed\": {\"fields\": [\"example\"]}}]',3,1),(75,'2019-07-18 10:02:29.814000','11','11. Swap the first element and the last element.',2,'[{\"changed\": {\"fields\": [\"answer_header\"]}}]',3,1),(76,'2019-07-18 10:02:55.878000','11','11',3,'',12,1),(77,'2019-07-18 10:03:28.463000','2','Dictionary',2,'[{\"changed\": {\"fields\": [\"name\"]}}]',2,1),(78,'2019-07-18 17:04:52.569000','11','11. Swap the first element and the last element.',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,1),(79,'2019-07-18 17:05:03.805000','11','11. Swap the first element and the last element.',2,'[]',3,1),(80,'2019-07-18 17:05:32.215000','11','11. Swap the first element and the last element.',2,'[]',3,1),(81,'2019-07-18 17:06:14.123000','11','11. Swap the first element and the last element.',2,'[]',3,1),(82,'2019-07-19 01:45:26.733000','11','11. Swap the first element and the last element.',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,1),(83,'2019-07-19 01:46:49.732000','11','11. Swap the first element and the last element.',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,1),(84,'2019-07-19 01:47:14.721000','11','11. Swap the first element and the last element.',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,1),(85,'2019-07-19 01:47:39.700000','11','11. Swap the first element and the last element.',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,1),(86,'2019-07-19 02:03:35.726000','12','12. Swap the second element and the last to the second element.',1,'[{\"added\": {}}]',3,1),(87,'2019-07-19 02:04:18.640000','13','TestSet object (13)',1,'[{\"added\": {}}]',4,1),(88,'2019-07-19 02:04:34.738000','12','12. Swap the second element and the last to the second element.',2,'[]',3,1),(89,'2019-07-19 02:20:21.928000','13','13. Reverse the list.',1,'[{\"added\": {}}]',3,1),(90,'2019-07-19 02:20:55.519000','14','TestSet object (14)',1,'[{\"added\": {}}]',4,1),(91,'2019-07-19 17:53:32.386000','11','11. Swap the first element and the last element.',2,'[{\"changed\": {\"fields\": [\"explanation\", \"markdown_explanation\"]}}]',3,1),(92,'2019-07-19 17:54:31.160000','11','11. Swap the first element and the last element.',2,'[{\"changed\": {\"fields\": [\"markdown_explanation\"]}}]',3,1),(93,'2019-07-19 18:03:10.319000','11','11. Swap the first element and the last element.',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,1),(94,'2019-07-19 18:04:43.582000','11','11. Swap the first element and the last element.',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,1),(95,'2019-07-19 18:13:25.118000','11','11. Swap the first element and the last element.',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,1),(96,'2019-07-19 18:13:52.592000','11','11. Swap the first element and the last element.',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,1),(97,'2019-07-19 18:14:52.690000','11','11. Swap the first element and the last element.',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,1),(98,'2019-07-19 18:23:27.826000','11','11. Swap the first element and the last element.',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,1),(99,'2019-07-19 18:24:10.404000','11','11. Swap the first element and the last element.',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,1),(100,'2019-07-19 18:26:53.494000','11','11. Swap the first element and the last element.',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,1),(101,'2019-07-19 18:46:52.315000','11','11. Swap the first element and the last element.',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,1),(102,'2019-07-19 18:47:18.927000','11','11. Swap the first element and the last element.',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,1),(103,'2019-07-19 18:54:53.207000','9','Stack',1,'[{\"added\": {}}]',2,1),(104,'2019-07-19 18:55:01.236000','14','14. Reverse the list by Stack.',1,'[{\"added\": {}}]',3,1),(105,'2019-07-19 18:55:58.515000','15','TestSet object (15)',1,'[{\"added\": {}}]',4,1),(106,'2019-07-19 18:57:18.250000','14','14. Reverse the list by Stack.',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,1),(107,'2019-07-19 18:58:24.514000','14','14. Reverse the list by Stack.',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,1),(108,'2019-07-19 18:58:47.780000','14','14. Reverse the list by Stack.',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,1),(109,'2019-07-19 19:01:26.820000','13','13. Reverse the list by swapping elements.',2,'[{\"changed\": {\"fields\": [\"explanation\", \"question\"]}}]',3,1),(110,'2019-07-19 19:01:40.987000','13','13. Reverse the list by swapping elements.',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,1),(111,'2019-07-19 19:28:00.612000','13','13. Reverse the list by swapping elements.',2,'[{\"changed\": {\"fields\": [\"answer_header\"]}}]',3,1),(112,'2019-07-19 19:28:05.414000','14','14. Reverse the list by Stack.',2,'[{\"changed\": {\"fields\": [\"answer_header\"]}}]',3,1),(113,'2019-07-20 03:10:40.539000','16','TestSet object (16)',1,'[{\"added\": {}}]',4,1),(114,'2019-07-20 05:59:47.326000','14','14. Reverse the list by Stack.',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,1),(115,'2019-07-20 06:00:45.276000','14','14. Reverse the list by Stack.',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,1),(116,'2019-07-20 06:01:12.356000','14','14. Reverse the list by Stack.',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,1),(117,'2019-07-20 06:05:39.710000','14','14. Reverse the list by Stack.',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,1),(118,'2019-07-20 06:18:05.478000','14','14. Reverse the list by Stack.',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,1),(119,'2019-07-20 06:21:42.518000','14','14. Reverse the list by Stack.',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,1),(120,'2019-07-20 16:46:30.303000','14','14. Reverse the list by Stack.',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,1),(121,'2019-07-20 16:47:42.655000','3','MultipleCode',1,'[{\"added\": {}}]',1,1),(122,'2019-07-20 16:47:52.819000','3','MultipleCode',3,'',1,1),(123,'2019-07-20 16:47:59.137000','4','MultipleChoice',1,'[{\"added\": {}}]',1,1),(124,'2019-07-20 18:03:20.165000','10','Range',1,'[{\"added\": {}}]',2,1),(125,'2019-07-20 18:03:46.727000','15','15. What is the output of the following program?',1,'[{\"added\": {}}]',3,1),(126,'2019-07-20 18:04:40.749000','15','15. What is the output of the following program?',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,1),(127,'2019-07-20 18:09:21.521000','17','TestSet object (17)',1,'[{\"added\": {}}]',4,1),(128,'2019-07-20 18:22:24.857000','15','15. Dayeon',3,'',12,1),(129,'2019-07-20 18:27:08.667000','15','15. What is the output of the following program?',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,1),(130,'2019-07-20 18:43:55.533000','14','14. Reverse the list by Stack.',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,1),(131,'2019-07-20 21:21:49.849000','15','15. What is the output of the following program?',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,1),(132,'2019-07-20 21:24:32.320000','16','16. What is the output of the following program?',1,'[{\"added\": {}}]',3,1),(133,'2019-07-20 21:25:00.936000','18','TestSet object (18)',1,'[{\"added\": {}}]',4,1),(134,'2019-07-20 21:27:36.187000','17','17. What is the output of the following program?',1,'[{\"added\": {}}]',3,1),(135,'2019-07-20 21:28:00.509000','19','TestSet object (19)',1,'[{\"added\": {}}]',4,1),(136,'2019-07-20 21:29:38.445000','16','16. What is the output of the following program?',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,1),(137,'2019-07-20 21:30:21.214000','15','15. What is the output of the following program?',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,1),(138,'2019-07-20 21:33:36.386000','18','18. Choose the wrong definition of Range function?',1,'[{\"added\": {}}]',3,1),(139,'2019-07-20 21:33:58.677000','20','TestSet object (20)',1,'[{\"added\": {}}]',4,1),(140,'2019-07-20 21:35:07.504000','18','18. Which of the following is wrong?',2,'[{\"changed\": {\"fields\": [\"question\"]}}]',3,1),(141,'2019-07-20 21:35:49.722000','18','18. Which of the following definitions is wrong?',2,'[{\"changed\": {\"fields\": [\"question\"]}}]',3,1),(142,'2019-07-20 22:08:14.371000','18','18. Which of the following definitions is incorrect?',2,'[{\"changed\": {\"fields\": [\"question\"]}}]',3,1),(143,'2019-07-21 04:38:07.721000','20','TestSet object (20)',2,'[{\"changed\": {\"fields\": [\"expected_answer\"]}}]',4,1),(144,'2019-07-21 04:43:46.289000','10','10. Dayeon',2,'[{\"changed\": {\"fields\": [\"right\"]}}]',12,1),(145,'2019-07-21 07:00:58.093000','19','19. What is the output of the following code?',1,'[{\"added\": {}}]',3,1),(146,'2019-07-21 07:02:13.601000','21','TestSet object (21)',1,'[{\"added\": {}}]',4,1),(147,'2019-07-21 07:03:35.766000','19','19. What is the output of the following code?',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,1),(148,'2019-07-21 07:09:09.027000','20','20. What is the output of the following code?',1,'[{\"added\": {}}]',3,1),(149,'2019-07-21 07:09:17.581000','22','TestSet object (22)',1,'[{\"added\": {}}]',4,1),(150,'2019-07-21 07:12:10.776000','19','19. What is the output of the following code?',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,1),(151,'2019-07-21 07:12:21.212000','16','16. What is the output of the following program?',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,1),(152,'2019-07-21 07:12:26.816000','17','17. What is the output of the following program?',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,1),(153,'2019-07-21 07:12:33.602000','15','15. What is the output of the following program?',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,1),(154,'2019-07-21 09:03:07.971000','16','16. Dayeon',2,'[{\"changed\": {\"fields\": [\"right\"]}}]',12,1),(155,'2019-07-21 09:03:18.893000','16','16. Dayeon',2,'[{\"changed\": {\"fields\": [\"answer\"]}}]',12,1),(156,'2019-07-21 16:37:51.191000','19','19. What is the output of the following code?',2,'[{\"changed\": {\"fields\": [\"example\"]}}]',3,1),(157,'2019-07-21 16:53:52.705000','21','21. Given the sentence, return the last word of sentence.',1,'[{\"added\": {}}]',3,1),(158,'2019-07-21 16:55:00.716000','23','TestSet object (23)',1,'[{\"added\": {}}]',4,1),(159,'2019-07-21 16:55:49.706000','21','21. Given the sentence, return the last word of sentence.',2,'[{\"changed\": {\"fields\": [\"answer_header\"]}}]',3,1),(160,'2019-07-21 17:25:48.780000','16','TestSet object (16)',2,'[{\"changed\": {\"fields\": [\"test\"]}}]',4,1),(161,'2019-07-21 17:26:10.246000','14','TestSet object (14)',2,'[{\"changed\": {\"fields\": [\"test\"]}}]',4,1),(162,'2019-07-21 17:26:40.279000','10','TestSet object (10)',2,'[{\"changed\": {\"fields\": [\"test\"]}}]',4,1),(163,'2019-07-21 17:27:18.547000','11','TestSet object (11)',2,'[{\"changed\": {\"fields\": [\"test\"]}}]',4,1),(164,'2019-07-21 17:27:39.333000','12','TestSet object (12)',2,'[{\"changed\": {\"fields\": [\"test\"]}}]',4,1),(165,'2019-07-21 17:28:10.877000','15','TestSet object (15)',2,'[{\"changed\": {\"fields\": [\"test\"]}}]',4,1),(166,'2019-07-21 17:30:22.160000','21','21. Given the sorted list, insert the value in the right position.',2,'[{\"changed\": {\"fields\": [\"question\", \"example\", \"category\", \"answer_header\"]}}]',3,1),(167,'2019-07-21 17:30:50.464000','24','TestSet object (24)',1,'[{\"added\": {}}]',4,1),(168,'2019-07-21 17:31:30.392000','23','23. Dayeon',3,'',12,1),(169,'2019-07-21 17:32:10.931000','23','TestSet object (23)',3,'',4,1),(170,'2019-07-21 17:33:07.797000','24','24. Dayeon',3,'',12,1),(171,'2019-07-21 17:42:05.463000','22','22. Find a square root x.  A square root value(return value) is always an integer.',1,'[{\"added\": {}}]',3,1),(172,'2019-07-21 17:42:55.195000','22','22. Find a square root x.  A square root value(return value) is always an integer.',2,'[{\"changed\": {\"fields\": [\"answer_header\"]}}]',3,1),(173,'2019-07-21 17:43:12.640000','25','TestSet object (25)',1,'[{\"added\": {}}]',4,1),(174,'2019-07-21 17:43:36.402000','21','21. Given the sorted list, insert the value in the right position.',2,'[{\"changed\": {\"fields\": [\"example\"]}}]',3,1),(175,'2019-07-21 17:43:45.830000','21','21. Given the sorted list, insert the value at the right position.',2,'[{\"changed\": {\"fields\": [\"question\"]}}]',3,1),(176,'2019-07-22 03:46:45.668000','21','21. Given the sorted list, insert the value at the right position.  It must be in sorted order after insertion.',2,'[{\"changed\": {\"fields\": [\"question\"]}}]',3,1),(177,'2019-07-23 03:14:28.582000','23','23. Find the subarray maximum which has the largest sum.  Subarray should have the first element.',1,'[{\"added\": {}}]',3,1),(178,'2019-07-23 03:15:20.548000','26','TestSet object (26)',1,'[{\"added\": {}}]',4,1),(179,'2019-07-23 03:15:34.052000','27','TestSet object (27)',1,'[{\"added\": {}}]',4,1),(180,'2019-07-23 03:19:10.297000','23','23. Find the subarray maximum which has the largest sum.  Subarray should have the first element.',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,1),(181,'2019-07-23 03:20:05.353000','23','23. Find the subarray maximum which has the largest sum.  Subarray should have the first element.  Return the sum of the maximum subarray.',2,'[{\"changed\": {\"fields\": [\"question\"]}}]',3,1),(182,'2019-07-23 03:21:03.449000','11','Class',1,'[{\"added\": {}}]',2,1),(183,'2019-07-23 03:23:36.170000','24','24. What is the output of the following program?',1,'[{\"added\": {}}]',3,1),(184,'2019-07-23 03:23:51.941000','28','TestSet object (28)',1,'[{\"added\": {}}]',4,1),(185,'2019-07-23 03:24:40.787000','23','23. Find the maximum subarray which has the largest sum.  Subarray should have the first element.  Return the sum of the maximum subarray.',2,'[{\"changed\": {\"fields\": [\"question\"]}}]',3,1),(186,'2019-07-23 03:28:12.016000','25','25. Find the error in the code below.',1,'[{\"added\": {}}]',3,1),(187,'2019-07-23 03:28:43.352000','29','TestSet object (29)',1,'[{\"added\": {}}]',4,1),(188,'2019-07-23 03:38:18.007000','24','24. What is the output of the following program?',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,1),(189,'2019-07-23 03:38:38.375000','24','24. What is the output of the following program?',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,1),(190,'2019-07-23 03:38:58.339000','24','24. What is the output of the following program?',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,1),(191,'2019-07-23 03:39:16.564000','24','24. What is the output of the following program?',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,1),(192,'2019-07-23 03:40:19.100000','24','24. What is the output of the following program?',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,1),(193,'2019-07-23 03:40:56.443000','24','24. What is the output of the following program?',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,1),(194,'2019-07-23 03:43:06.338000','24','24. What is the output of the following program?',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,1),(195,'2019-07-23 03:43:36.250000','24','24. What is the output of the following program?',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,1),(196,'2019-07-23 03:43:55.415000','24','24. What is the output of the following program?',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,1),(197,'2019-07-23 03:44:30.105000','24','24. What is the output of the following program?',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,1),(198,'2019-07-23 03:46:50.751000','24','24. What is the output of the following program?',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,1),(199,'2019-07-23 06:02:59.867000','12','DataType',1,'[{\"added\": {}}]',2,1),(200,'2019-07-23 06:03:36.083000','26','26. What is the incorrect data types in Python?',1,'[{\"added\": {}}]',3,1),(201,'2019-07-23 06:03:46.172000','30','TestSet object (30)',1,'[{\"added\": {}}]',4,1),(202,'2019-07-23 06:26:17.415000','26','26. What is the incorrect data types in Python?',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,1),(203,'2019-07-23 07:43:21.933000','26','26. What is the incorrect data types in Python?',2,'[{\"changed\": {\"fields\": [\"video\"]}}]',3,1),(204,'2019-07-23 07:43:34.363000','26','26. What is the incorrect data types in Python?',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,1),(205,'2019-07-23 07:58:45.527000','27','27. Dayeon',2,'[{\"changed\": {\"fields\": [\"answer\", \"right\"]}}]',12,1),(206,'2019-07-23 08:10:34.652000','26','26. What is the incorrect data types in Python?',2,'[{\"changed\": {\"fields\": [\"video\"]}}]',3,1),(207,'2019-07-24 23:12:19.896000','26','26. What is the incorrect data types in Python?',2,'[{\"changed\": {\"fields\": [\"video\"]}}]',3,1),(208,'2019-07-25 01:45:25.869000','26','26. What is the incorrect data types in Python?',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,1),(209,'2019-07-25 01:55:58.442000','26','26. What is the incorrect data types in Python?',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,1),(210,'2019-07-25 04:35:28.870000','26','26. What is the incorrect data types in Python?',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,1),(211,'2019-07-25 04:36:19.820000','26','26. What is the incorrect data types in Python?',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,1),(212,'2019-07-25 04:37:25.823000','26','26. What is the incorrect data types in Python?',2,'[]',3,1),(213,'2019-07-25 04:38:32.820000','26','26. What is the incorrect data types in Python?',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,1),(214,'2019-07-25 04:38:47.648000','26','26. What is the incorrect data types in Python?',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,1),(215,'2019-07-25 05:27:12.425000','26','26. What is the incorrect data types in Python?',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,1),(216,'2019-07-25 05:28:07.095000','26','26. What is the incorrect data types in Python?',2,'[{\"changed\": {\"fields\": [\"option1\", \"option2\"]}}]',3,1),(217,'2019-07-26 04:31:21.286000','27','27. Given an integer array of 1 to N except for one number, find the missing integer.',1,'[{\"added\": {}}]',3,1),(218,'2019-07-26 04:31:52.057000','31','TestSet object (31)',1,'[{\"added\": {}}]',4,1),(219,'2019-07-26 04:38:40.702000','24','24. What is the output of the following program?',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,1),(220,'2019-07-26 04:40:00.302000','24','24. What is the output of the following program?',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,1),(221,'2019-07-26 04:40:38.595000','24','24. What is the output of the following program?',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,1),(222,'2019-07-26 04:41:07.556000','24','24. What is the output of the following program?',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,1),(223,'2019-07-26 04:42:01.972000','24','24. What is the output of the following program?',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,1),(224,'2019-07-26 04:43:57.544000','23','23. Find the maximum subarray which has the largest sum.  Subarray should have the first element.  Return the sum of the maximum subarray.',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,1),(225,'2019-07-26 04:44:27.749000','22','22. Find a square root x.  A square root value(return value) is always an integer.',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,1),(226,'2019-07-26 04:46:47.038000','20','20. What is the output of the following code?',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,1),(227,'2019-07-26 04:49:42.031000','20','20. What is the output of the following code?',2,'[]',3,1),(228,'2019-07-26 04:50:52.979000','19','19. What is the output of the following code?',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,1),(229,'2019-07-26 04:52:16.894000','17','17. What is the output of the following program?',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,1),(230,'2019-07-26 04:53:31.815000','16','16. What is the output of the following program?',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,1),(231,'2019-07-26 04:54:13.631000','17','17. What is the output of the following program?',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,1),(232,'2019-07-26 04:54:45.691000','16','16. What is the output of the following program?',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,1),(233,'2019-07-26 04:54:54.612000','17','17. What is the output of the following program?',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,1),(234,'2019-07-26 04:55:56.182000','15','15. What is the output of the following program?',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,1),(235,'2019-07-26 04:58:55.409000','14','14. Reverse the list by Stack.',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,1),(236,'2019-07-26 04:59:57.191000','13','13. Reverse the list by swapping elements.',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,1),(237,'2019-07-26 05:00:47.621000','11','11. Swap the first element and the last element.',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,1),(238,'2019-07-26 05:01:09.051000','11','11. Swap the first element and the last element.',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,1),(239,'2019-07-26 05:38:26.145000','23','23. Find the maximum subarray which has the largest sum.  Subarray should have the first element.  Return the sum of the maximum subarray.',2,'[{\"changed\": {\"fields\": [\"example\"]}}]',3,1),(240,'2019-07-26 05:38:41.062000','26','TestSet object (26)',2,'[{\"changed\": {\"fields\": [\"expected_answer\"]}}]',4,1),(241,'2019-07-26 05:41:11.753000','32','TestSet object (32)',1,'[{\"added\": {}}]',4,1),(242,'2019-07-26 05:58:02.537000','32','TestSet object (32)',2,'[{\"changed\": {\"fields\": [\"expected_answer\"]}}]',4,1),(243,'2019-07-26 07:37:35.939000','28','28. Find the most frequently appearing character.',1,'[{\"added\": {}}]',3,1),(244,'2019-07-26 08:05:29.884000','23','23. Find the maximum subarray which has the largest sum.  Subarray should have the first element.  Return the sum of the maximum subarray.',2,'[{\"changed\": {\"fields\": [\"example\"]}}]',3,1),(245,'2019-07-26 18:32:22.835000','1','Beginner',1,'[{\"added\": {}}]',13,1),(246,'2019-07-26 18:32:42.960000','2','Intermediate',1,'[{\"added\": {}}]',13,1),(247,'2019-07-26 18:33:24.009000','3','Advanced',1,'[{\"added\": {}}]',13,1),(248,'2019-07-26 18:33:28.136000','4','Expert',1,'[{\"added\": {}}]',13,1),(249,'2019-07-26 19:32:11.838000','12','DataType',2,'[{\"changed\": {\"fields\": [\"difficulty\"]}}]',2,1),(250,'2019-07-26 19:32:52.655000','3','String',2,'[{\"changed\": {\"fields\": [\"difficulty\", \"number\"]}}]',2,1),(251,'2019-07-26 20:06:24.161000','5','While',2,'[{\"changed\": {\"fields\": [\"difficulty\"]}}]',2,1),(252,'2019-07-26 20:31:14.477000','28','28. Find the most frequently appearing character.',2,'[{\"changed\": {\"fields\": [\"answer_header\"]}}]',3,1),(253,'2019-07-26 20:31:25.680000','28','28. Find the most frequently appearing character.',2,'[{\"changed\": {\"fields\": [\"answer_header\"]}}]',3,1),(254,'2019-07-26 20:31:44.266000','28','28. Find the most frequently appearing character.',2,'[{\"changed\": {\"fields\": [\"answer_header\"]}}]',3,1),(255,'2019-07-27 01:21:30.064000','12','DataType',2,'[{\"changed\": {\"fields\": [\"desc\"]}}]',2,1),(256,'2019-07-27 05:28:43.439000','10','Beginner-3. Range',2,'[{\"changed\": {\"fields\": [\"difficulty\", \"order\", \"desc\"]}}]',2,1),(257,'2019-07-27 05:28:53.018000','10','Beginner-2. Range',2,'[{\"changed\": {\"fields\": [\"order\"]}}]',2,1),(258,'2019-07-27 05:29:02.436000','7','Beginner-3. Function',2,'[{\"changed\": {\"fields\": [\"difficulty\", \"order\", \"desc\"]}}]',2,1),(259,'2019-07-27 17:19:11.765000','29','29. Given an array, rotate the array to the right by n steps.',1,'[{\"added\": {}}]',3,1),(260,'2019-07-27 17:19:39.109000','33','TestSet object (33)',1,'[{\"added\": {}}]',4,1),(261,'2019-07-28 02:37:43.044000','1','Super Junior',2,'[{\"changed\": {\"fields\": [\"name\"]}}]',13,1),(262,'2019-07-28 02:39:44.939000','2','Junior',2,'[{\"changed\": {\"fields\": [\"name\"]}}]',13,1),(263,'2019-07-28 02:39:51.957000','3','Senior',2,'[{\"changed\": {\"fields\": [\"name\"]}}]',13,1),(264,'2019-07-28 03:06:41.782000','30','  30. Find the smallest number in a list.',1,'[{\"added\": {}}]',3,1),(265,'2019-07-28 03:07:32.533000','34','TestSet object (34)',1,'[{\"added\": {}}]',4,1),(266,'2019-07-28 03:14:49.347000','29','  29. Given an array, rotate the array to the right by n steps.\r\n(you take the 0th element and put it at the end of the list)',2,'[{\"changed\": {\"fields\": [\"question\"]}}]',3,1),(267,'2019-07-28 05:49:50.707000','31','  31. Split the list into two lists. One with only even numbers and one with only odd numbers.',1,'[{\"added\": {}}]',3,1),(268,'2019-07-28 05:50:28.968000','7','Junior-3. Function',2,'[{\"changed\": {\"fields\": [\"difficulty\"]}}]',2,1),(269,'2019-07-28 05:50:39.295000','10','Junior-2. Range',2,'[{\"changed\": {\"fields\": [\"difficulty\"]}}]',2,1),(270,'2019-07-28 05:57:08.629000','31','  31. Split the list into two lists. One with only even numbers and one with only odd numbers. Odd number list should be returned first.',2,'[{\"changed\": {\"fields\": [\"question\"]}}]',3,1),(271,'2019-07-28 06:00:50.431000','35','TestSet object (35)',1,'[{\"added\": {}}]',4,1),(272,'2019-07-28 16:37:28.877000','13','Super Junior-2. Operator',1,'[{\"added\": {}}]',2,1),(273,'2019-07-29 01:16:02.333000','26','26. Dayeon',2,'[{\"changed\": {\"fields\": [\"right\"]}}]',12,1),(274,'2019-07-29 01:16:27.868000','26','26. Dayeon',2,'[{\"changed\": {\"fields\": [\"right\"]}}]',12,1),(275,'2019-07-29 01:16:49.657000','26','26. Dayeon',2,'[{\"changed\": {\"fields\": [\"right\"]}}]',12,1),(276,'2019-07-29 02:01:07.212000','26','  26. What is the incorrect data types in Python?',2,'[{\"changed\": {\"fields\": [\"video\"]}}]',3,1),(277,'2019-07-29 02:10:00.226000','26','  26. What is the incorrect data types in Python?',2,'[{\"changed\": {\"fields\": [\"video\"]}}]',3,1),(278,'2019-07-29 06:15:49.574000','32','  32. What is the incorrect data type in Python?',1,'[{\"added\": {}}]',3,1),(279,'2019-07-29 06:16:00.799000','36','TestSet object (36)',1,'[{\"added\": {}}]',4,1),(280,'2019-07-29 06:17:23.185000','32','  32. What is the incorrect data type in Python?',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,1),(281,'2019-07-29 06:17:47.490000','32','  32. What is the incorrect data type in Python?',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,1),(282,'2019-07-29 06:18:06.499000','32','  32. What is the incorrect data type in Python?',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,1),(283,'2019-07-29 06:50:33.625000','26','  26. What is the incorrect data types in Python?',2,'[{\"changed\": {\"fields\": [\"video\"]}}]',3,1),(284,'2019-07-29 07:01:29.689000','32','  32. What is the incorrect data type in Python?',2,'[{\"changed\": {\"fields\": [\"video\"]}}]',3,1),(285,'2019-07-29 08:18:42.660000','11','Senior-0. Class',2,'[{\"changed\": {\"fields\": [\"difficulty\", \"desc\"]}}]',2,1),(286,'2019-07-29 08:19:21.114000','9','Senior-0. Stack',2,'[{\"changed\": {\"fields\": [\"difficulty\", \"desc\"]}}]',2,1),(287,'2019-07-29 08:19:55.544000','8','Junior-0. Math',2,'[{\"changed\": {\"fields\": [\"difficulty\", \"desc\"]}}]',2,1),(288,'2019-07-29 08:20:24.651000','6','Super Junior-0. Set',2,'[{\"changed\": {\"fields\": [\"difficulty\", \"desc\"]}}]',2,1),(289,'2019-07-29 08:20:45.488000','4','Super Junior-0. List',2,'[{\"changed\": {\"fields\": [\"difficulty\", \"desc\"]}}]',2,1),(290,'2019-07-29 08:21:13.134000','2','Super Junior-0. Dictionary',2,'[{\"changed\": {\"fields\": [\"difficulty\", \"desc\"]}}]',2,1),(291,'2019-07-29 08:21:33.911000','1','Junior-0. For',2,'[{\"changed\": {\"fields\": [\"difficulty\", \"desc\"]}}]',2,1),(292,'2019-07-30 07:05:27.982000','3','Junior High',2,'[{\"changed\": {\"fields\": [\"name\"]}}]',13,1),(293,'2019-07-30 07:05:32.155000','4','High',2,'[{\"changed\": {\"fields\": [\"name\"]}}]',13,1),(294,'2019-07-30 07:05:43.490000','5','Expert',1,'[{\"added\": {}}]',13,1),(295,'2019-07-30 07:28:51.044000','12','Super Junior-10. DataType',2,'[{\"changed\": {\"fields\": [\"order\"]}}]',2,1),(296,'2019-07-30 07:29:37.730000','14','Super Junior-20. Variable',1,'[{\"added\": {}}]',2,1),(297,'2019-07-30 07:30:37.491000','15','Super Junior-30. Print',1,'[{\"added\": {}}]',2,1),(298,'2019-07-30 07:30:58.449000','13','Super Junior-40. Operator',2,'[{\"changed\": {\"fields\": [\"order\"]}}]',2,1),(299,'2019-07-30 07:31:45.315000','10','Super Junior-50. Range',2,'[{\"changed\": {\"fields\": [\"difficulty\", \"order\", \"desc\"]}}]',2,1),(300,'2019-07-30 07:32:59.553000','16','Super Junior-60. If',1,'[{\"added\": {}}]',2,1),(301,'2019-07-30 07:34:54.877000','1','Super Junior-70. For',2,'[{\"changed\": {\"fields\": [\"difficulty\", \"order\"]}}]',2,1),(302,'2019-07-30 07:35:23.363000','7','Junior-10. Function',2,'[{\"changed\": {\"fields\": [\"order\", \"desc\"]}}]',2,1),(303,'2019-07-30 07:35:37.483000','11','Junior-20. Class',2,'[{\"changed\": {\"fields\": [\"difficulty\", \"order\"]}}]',2,1),(304,'2019-07-30 07:36:08.466000','17','Junior-30. Scope',1,'[{\"added\": {}}]',2,1),(305,'2019-07-30 07:36:32.299000','18','Junior-40. Integer',1,'[{\"added\": {}}]',2,1),(306,'2019-07-30 07:39:45.837000','3','Junior-50. String',2,'[{\"changed\": {\"fields\": [\"difficulty\", \"order\", \"desc\"]}}]',2,1),(307,'2019-07-30 07:40:00.208000','4','Junior-60. List',2,'[{\"changed\": {\"fields\": [\"difficulty\", \"order\"]}}]',2,1),(308,'2019-07-30 07:41:08.963000','19','Junior High-30. List',1,'[{\"added\": {}}]',2,1),(309,'2019-07-30 07:41:51.017000','11','  11. Swap the first element and the last element.',2,'[{\"changed\": {\"fields\": [\"category\"]}}]',3,1),(310,'2019-07-30 07:43:05.705000','19','Junior High-30. List 3',2,'[{\"changed\": {\"fields\": [\"name\"]}}]',2,1),(311,'2019-07-30 07:43:39.429000','19','Junior High-30. List 2',2,'[{\"changed\": {\"fields\": [\"name\"]}}]',2,1),(312,'2019-07-30 07:44:00.545000','20','Junior High-10. Integer 3',1,'[{\"added\": {}}]',2,1),(313,'2019-07-30 07:44:24.698000','19','Junior High-30. List 3',2,'[{\"changed\": {\"fields\": [\"name\"]}}]',2,1),(314,'2019-07-30 07:45:10.634000','21','Junior High-20. String 3',1,'[{\"added\": {}}]',2,1),(315,'2019-07-30 07:47:41.922000','22','Junior-70. Tuple',1,'[{\"added\": {}}]',2,1),(316,'2019-07-30 07:48:12.268000','23','Junior-80. Set',1,'[{\"added\": {}}]',2,1),(317,'2019-07-30 07:48:40.755000','24','Junior-90. Dictionary',1,'[{\"added\": {}}]',2,1),(318,'2019-07-30 07:49:12.269000','25','Junior-100. Module',1,'[{\"added\": {}}]',2,1),(319,'2019-07-30 07:51:30.795000','26','Junior-110. Casting',1,'[{\"added\": {}}]',2,1),(320,'2019-07-30 07:51:50.400000','27','Junior-120. OOP',1,'[{\"added\": {}}]',2,1),(321,'2019-07-30 07:59:13.323000','2','Junior High-60. Dictionary',2,'[{\"changed\": {\"fields\": [\"difficulty\", \"order\"]}}]',2,1),(322,'2019-07-30 07:59:46.106000','8','Junior High-70. Math',2,'[{\"changed\": {\"fields\": [\"difficulty\", \"order\"]}}]',2,1),(323,'2019-07-30 08:01:30.268000','5','Super Junior-80. While',2,'[{\"changed\": {\"fields\": [\"difficulty\", \"order\", \"desc\"]}}]',2,1),(324,'2019-07-30 08:02:00.831000','6','Junior High-50. Set',2,'[{\"changed\": {\"fields\": [\"difficulty\", \"order\"]}}]',2,1),(325,'2019-07-30 08:02:36.653000','9','High-20. Stack',2,'[{\"changed\": {\"fields\": [\"difficulty\", \"order\"]}}]',2,1),(326,'2019-07-30 08:03:12.013000','28','Junior High-40. Tuple',1,'[{\"added\": {}}]',2,1),(327,'2019-07-30 08:05:24.745000','20','Junior High-10. Integer 3',2,'[{\"changed\": {\"fields\": [\"desc\"]}}]',2,1),(328,'2019-07-30 08:48:36.487000','22','  22. Find a square root x.  A square root value(return value) is always an integer.',2,'[{\"changed\": {\"fields\": [\"category\"]}}]',3,1),(329,'2019-07-30 09:07:15.916000','29','Junior High-38. For',1,'[{\"added\": {}}]',2,1),(330,'2019-07-30 09:08:39.874000','30','High-39. Queue',1,'[{\"added\": {}}]',2,1),(331,'2019-07-30 09:09:09.053000','31','High-40. Linked List',1,'[{\"added\": {}}]',2,1),(332,'2019-07-30 09:14:14.974000','32','Expert-41. Advanced Math',1,'[{\"added\": {}}]',2,1),(333,'2019-07-30 09:14:59.203000','6','Junior High-35. Set 2',2,'[{\"changed\": {\"fields\": [\"name\"]}}]',2,1),(334,'2019-07-30 09:15:04.240000','28','Junior High-34. Tuple 2',2,'[{\"changed\": {\"fields\": [\"name\"]}}]',2,1),(335,'2019-07-30 09:15:10.309000','19','Junior High-33. List 2',2,'[{\"changed\": {\"fields\": [\"name\"]}}]',2,1),(336,'2019-07-30 09:15:14.916000','21','Junior High-32. String 2',2,'[{\"changed\": {\"fields\": [\"name\"]}}]',2,1),(337,'2019-07-30 09:15:19.330000','20','Junior High-31. Integer 2',2,'[{\"changed\": {\"fields\": [\"name\"]}}]',2,1),(338,'2019-07-30 09:16:20.733000','12','  12. Swap the second element and the last to the second element.',2,'[{\"changed\": {\"fields\": [\"category\"]}}]',3,1),(339,'2019-07-30 09:16:35.966000','13','  13. Reverse the list by swapping elements.',2,'[{\"changed\": {\"fields\": [\"category\"]}}]',3,1),(340,'2019-07-30 09:16:55.127000','21','  21. Given the sorted list, insert the value at the right position.  It must be in sorted order after insertion.',2,'[{\"changed\": {\"fields\": [\"category\"]}}]',3,1),(341,'2019-07-30 09:17:06.893000','23','  23. Find the maximum subarray which has the largest sum.  Subarray should have the first element.  Return the sum of the maximum subarray.',2,'[{\"changed\": {\"fields\": [\"category\"]}}]',3,1),(342,'2019-07-30 09:17:22.255000','29','  29. Given an array, rotate the array to the right by n steps.\r\n(you take the 0th element and put it at the end of the list)',2,'[{\"changed\": {\"fields\": [\"category\"]}}]',3,1),(343,'2019-07-30 09:17:35.420000','30','  30. Find the smallest number in a list.',2,'[{\"changed\": {\"fields\": [\"category\"]}}]',3,1),(344,'2019-07-30 09:18:20.736000','31','  31. Split the list into two lists. One with only even numbers and one with only odd numbers. Odd number list should be returned first.',2,'[{\"changed\": {\"fields\": [\"category\"]}}]',3,1),(345,'2019-07-30 09:19:33.697000','2','Junior High-36. Dictionary 2',2,'[{\"changed\": {\"fields\": [\"name\"]}}]',2,1),(346,'2019-07-30 09:19:49.785000','28','  28. Find the most frequently appearing character.',2,'[]',3,1),(347,'2019-07-30 09:20:14.085000','2','  2. What is the output of the following program?',2,'[{\"changed\": {\"fields\": [\"category\"]}}]',3,1),(348,'2019-07-30 09:20:44.818000','7','  7. What is the output of the following program?',2,'[{\"changed\": {\"fields\": [\"category\"]}}]',3,1),(349,'2019-07-30 09:27:18.872000','33','  33. Remove the third word of the sentence.',1,'[{\"added\": {}}]',3,1),(350,'2019-07-30 09:27:44.046000','37','TestSet object (37)',1,'[{\"added\": {}}]',4,1),(351,'2019-07-30 09:28:35.504000','34','34. Dayeon',3,'',12,1),(352,'2019-07-30 09:28:46.882000','35','35. Dayeon',3,'',12,1),(353,'2019-07-31 01:12:30.062000','34','  34. Given a decimal less than 1, return the number of zeros.',1,'[{\"added\": {}}]',3,1),(354,'2019-07-31 01:12:52.025000','38','TestSet object (38)',1,'[{\"added\": {}}]',4,1),(355,'2019-07-31 01:15:36.424000','34','  34. Given a decimal less than 1, return the number of zeros.',2,'[{\"changed\": {\"fields\": [\"answer_header\"]}}]',3,1),(356,'2019-07-31 03:24:01.120000','34','  34. Given a decimal less than 1, return the number of zeros at the right of the point.',2,'[{\"changed\": {\"fields\": [\"question\"]}}]',3,1),(357,'2019-07-31 03:46:03.135000','39','TestSet object (39)',1,'[{\"added\": {}}]',4,1),(358,'2019-07-31 03:47:02.245000','40','TestSet object (40)',1,'[{\"added\": {}}]',4,1),(359,'2019-07-31 03:47:53.609000','34','  34. Given a decimal less than 1, return the number of leading zeros at the right of the point.',2,'[{\"changed\": {\"fields\": [\"question\"]}}]',3,1),(360,'2019-07-31 05:12:34.397000','1','1. Dayeon',2,'[{\"changed\": {\"fields\": [\"date\"]}}]',12,1),(361,'2019-07-31 05:12:40.128000','2','2. Dayeon',2,'[{\"changed\": {\"fields\": [\"date\"]}}]',12,1),(362,'2019-07-31 05:15:13.193000','3','3. Dayeon',2,'[{\"changed\": {\"fields\": [\"date\"]}}]',12,1),(363,'2019-07-31 05:15:26.061000','25','25. Dayeon',2,'[{\"changed\": {\"fields\": [\"date\"]}}]',12,1),(364,'2019-07-31 05:15:31.172000','20','20. Dayeon',2,'[{\"changed\": {\"fields\": [\"date\"]}}]',12,1),(365,'2019-07-31 05:15:36.386000','6','6. Dayeon',2,'[{\"changed\": {\"fields\": [\"date\"]}}]',12,1),(366,'2019-07-31 05:15:40.980000','8','8. Dayeon',2,'[{\"changed\": {\"fields\": [\"date\"]}}]',12,1),(367,'2019-07-31 05:15:45.779000','10','10. Dayeon',2,'[{\"changed\": {\"fields\": [\"date\"]}}]',12,1),(368,'2019-07-31 05:16:02.722000','21','21. Dayeon',2,'[{\"changed\": {\"fields\": [\"date\"]}}]',12,1),(369,'2019-07-31 05:16:08.307000','17','17. Dayeon',2,'[{\"changed\": {\"fields\": [\"date\"]}}]',12,1),(370,'2019-07-31 05:16:08.380000','17','17. Dayeon',2,'[{\"changed\": {\"fields\": [\"date\"]}}]',12,1),(371,'2019-07-31 05:16:13.780000','25','25. Dayeon',2,'[{\"changed\": {\"fields\": [\"date\"]}}]',12,1),(372,'2019-07-31 05:16:18.075000','16','16. Dayeon',2,'[{\"changed\": {\"fields\": [\"date\"]}}]',12,1),(373,'2019-07-31 05:16:23.182000','14','14. Dayeon',2,'[{\"changed\": {\"fields\": [\"answer\", \"date\"]}}]',12,1),(374,'2019-07-31 05:16:37.754000','22','22. Dayeon',2,'[{\"changed\": {\"fields\": [\"date\"]}}]',12,1),(375,'2019-07-31 05:17:22.602000','19','19. Dayeon 2019-07-07 02:50:23-07:00',2,'[{\"changed\": {\"fields\": [\"date\"]}}]',12,1),(376,'2019-07-31 05:17:28.198000','12','12. Dayeon 2019-07-09 02:51:59-07:00',2,'[{\"changed\": {\"fields\": [\"date\"]}}]',12,1),(377,'2019-07-31 05:17:33.045000','13','13. Dayeon 2019-07-16 02:52:05-07:00',2,'[{\"changed\": {\"fields\": [\"date\"]}}]',12,1),(378,'2019-07-31 05:17:39.660000','7','7. Dayeon 2019-07-14 02:51:13-07:00',2,'[{\"changed\": {\"fields\": [\"date\"]}}]',12,1),(379,'2019-07-31 05:17:58.137000','18','18. Dayeon 2019-07-10 02:53:02-07:00',2,'[{\"changed\": {\"fields\": [\"date\"]}}]',12,1),(380,'2019-07-31 05:18:04.969000','5','5. Dayeon 2019-07-09 02:51:03-07:00',2,'[{\"changed\": {\"fields\": [\"date\"]}}]',12,1),(381,'2019-07-31 05:33:00.435000','37','TestSet object (37)',2,'[{\"changed\": {\"fields\": [\"expected_answer\"]}}]',4,1),(382,'2019-07-31 05:33:55.181000','37','TestSet object (37)',2,'[]',4,1),(383,'2019-07-31 05:34:57.824000','37','TestSet object (37)',2,'[{\"changed\": {\"fields\": [\"expected_answer\"]}}]',4,1),(384,'2019-07-31 06:06:37.466000','27','  27. Given an integer array of 1 to N except for one number, find the missing integer.',2,'[{\"changed\": {\"fields\": [\"category\", \"visible\"]}}]',3,1),(385,'2019-07-31 06:08:57.373000','27','  27. Given an integer array of 1 to N except for one number, find the missing integer.',2,'[{\"changed\": {\"fields\": [\"answer_header\"]}}]',3,1),(386,'2019-08-01 05:37:27.114000','35','  35. Given the two integers, find the greatest common factor(GCF).',1,'[{\"added\": {}}]',3,1),(387,'2019-08-01 05:37:44.909000','41','35. 15, 9',1,'[{\"added\": {}}]',4,1),(388,'2019-08-01 05:38:20.620000','42','35. 18, 17',1,'[{\"added\": {}}]',4,1),(389,'2019-08-01 05:39:26.116000','41','35. 15\r\n9',2,'[{\"changed\": {\"fields\": [\"test\"]}}]',4,1),(390,'2019-08-01 05:39:30.974000','42','35. 18\r\n17',2,'[{\"changed\": {\"fields\": [\"test\"]}}]',4,1),(391,'2019-08-01 05:39:56.375000','10','  10. Write a code to multiply two numbers.',2,'[{\"changed\": {\"fields\": [\"example\"]}}]',3,1),(392,'2019-08-01 06:54:46.639000','26','  [DataType] 26. What is the incorrect data types in Python?',2,'[{\"changed\": {\"fields\": [\"video\"]}}]',3,1),(393,'2019-08-01 07:39:59.231000','37','33. \"How are you today\"',2,'[{\"changed\": {\"fields\": [\"expected_answer\"]}}]',4,1),(394,'2019-08-01 07:40:41.029000','38','33. Dayeon 2019-07-13 00:40:22-07:00',2,'[{\"changed\": {\"fields\": [\"answer\", \"date\"]}}]',12,1),(395,'2019-08-01 07:46:03.474000','36','  [Print] 36. Print',1,'[{\"added\": {}}]',3,1),(396,'2019-08-01 07:46:25.861000','43','36. 1\r\n2',1,'[{\"added\": {}}]',4,1),(397,'2019-08-01 08:22:32.730000','37','  [For] 37. Find the second largest number of the list.',1,'[{\"added\": {}}]',3,1),(398,'2019-08-01 08:22:49.915000','44','37. [5, 3, 6, 7, 8]',1,'[{\"added\": {}}]',4,1),(399,'2019-08-01 08:58:19.611000','8','8. Dayeon 2019-06-30 02:51:31-07:00',2,'[{\"changed\": {\"fields\": [\"date\"]}}]',12,1),(400,'2019-08-01 08:58:38.780000','17','14. Dayeon 2019-06-29 02:55:05-07:00',2,'[{\"changed\": {\"fields\": [\"date\"]}}]',12,1),(401,'2019-08-01 08:58:56.516000','38','33. Dayeon 2019-06-26 00:40:22-07:00',2,'[{\"changed\": {\"fields\": [\"date\"]}}]',12,1),(402,'2019-08-01 09:23:29.289000','25','21. Dayeon 2019-06-26 20:58:21-07:00',2,'[{\"changed\": {\"fields\": [\"date\"]}}]',12,1),(403,'2019-08-01 09:23:44.796000','7','7. Dayeon 2019-06-24 02:51:13-07:00',2,'[{\"changed\": {\"fields\": [\"date\"]}}]',12,1),(404,'2019-08-01 10:14:35.342000','36','x [Print] 36. Print',2,'[{\"changed\": {\"fields\": [\"visible\"]}}]',3,1),(405,'2019-08-01 10:17:11.491000','41','36. Dayeon 2019-08-01 08:04:58.923924+00:00',3,'',12,1),(406,'2019-08-01 22:51:27.544000','1','login1',1,'[{\"added\": {}}]',15,1),(407,'2019-08-01 22:51:46.973000','2','Login2',1,'[{\"added\": {}}]',15,1),(408,'2019-08-01 22:51:52.033000','2','login2',2,'[{\"changed\": {\"fields\": [\"name\"]}}]',15,1),(409,'2019-08-01 22:52:07.073000','1','Dayeon',1,'[{\"added\": {}}]',14,1),(410,'2019-08-01 23:00:59.143000','1','login',2,'[{\"changed\": {\"fields\": [\"name\", \"condition\", \"value\"]}}]',15,1),(411,'2019-08-01 23:01:14.877000','2','login',2,'[{\"changed\": {\"fields\": [\"name\", \"condition\", \"value\"]}}]',15,1),(412,'2019-08-01 23:05:14.743000','3','[login] login33',1,'[{\"added\": {}}]',15,1),(413,'2019-08-01 23:12:18.622000','3','[login] login3',2,'[{\"changed\": {\"fields\": [\"condition\"]}}]',15,1),(414,'2019-08-01 23:12:52.651000','1','[login] login1',2,'[{\"changed\": {\"fields\": [\"html\"]}}]',15,1),(415,'2019-08-01 23:13:01.586000','2','[login] login2',2,'[{\"changed\": {\"fields\": [\"html\"]}}]',15,1),(416,'2019-08-01 23:13:09.962000','3','[login] login3',2,'[{\"changed\": {\"fields\": [\"html\"]}}]',15,1),(417,'2019-08-01 23:14:18.845000','4','[Continuous Solving] Continuous1',1,'[{\"added\": {}}]',15,1),(418,'2019-08-01 23:14:33.168000','4','[Continuous Solving] Continuous1',2,'[{\"changed\": {\"fields\": [\"html\"]}}]',15,1),(419,'2019-08-01 23:14:51.963000','5','[Continuous Solving] Continuous2',1,'[{\"added\": {}}]',15,1),(420,'2019-08-01 23:15:29.593000','1','[Continuous Solving] Continuous1',2,'[{\"changed\": {\"fields\": [\"name\", \"condition\"]}}]',15,1),(421,'2019-08-01 23:15:36.362000','2','[Continuous Solving] Continuous2',2,'[{\"changed\": {\"fields\": [\"name\", \"condition\"]}}]',15,1),(422,'2019-08-01 23:15:42.486000','3','[Continuous Solving] Continuous3',2,'[{\"changed\": {\"fields\": [\"name\", \"condition\"]}}]',15,1),(423,'2019-08-01 23:17:06.163000','4','[Maximum Quiz per Day] Peek1',2,'[{\"changed\": {\"fields\": [\"name\", \"condition\"]}}]',15,1),(424,'2019-08-01 23:17:11.384000','5','[Maximum Quiz per Day] Peek2',2,'[{\"changed\": {\"fields\": [\"name\", \"condition\"]}}]',15,1),(425,'2019-08-01 23:17:26.261000','6','[Maximum Quiz per Day] Peek3',1,'[{\"added\": {}}]',15,1),(426,'2019-08-01 23:17:51.743000','7','[Maximum Quiz per Day] Peek4',1,'[{\"added\": {}}]',15,1),(427,'2019-08-01 23:18:20.164000','8','[Maximum Quiz per Day] Peek5',1,'[{\"added\": {}}]',15,1),(428,'2019-08-01 23:34:01.807000','1','Dayeon',2,'[{\"changed\": {\"fields\": [\"badges\"]}}]',14,1),(429,'2019-08-02 01:44:03.454000','45','37. -1, -6, -3, -5, -7',1,'[{\"added\": {}}]',4,1),(430,'2019-08-02 01:44:43.711000','45','37. [-1, -6, -3, -5, -7]',2,'[{\"changed\": {\"fields\": [\"test\"]}}]',4,1),(431,'2019-08-02 05:11:57.773000','38','  [Set 2] 38. Find whether the list has the duplicated number or not.',1,'[{\"added\": {}}]',3,1),(432,'2019-08-02 05:12:23.035000','38','  [Set 2] 38. Find whether the list has the duplicated number or not.',2,'[{\"changed\": {\"fields\": [\"hint\"]}}]',3,1),(433,'2019-08-02 05:24:03.736000','36','  [Print] 36. Print',2,'[{\"changed\": {\"fields\": [\"visible\"]}}]',3,1),(434,'2019-08-02 05:40:30.458000','47','Dayeon 2019-08-02 05:25:48.080867+00:00',3,'',12,1),(435,'2019-08-02 05:41:11.944000','46','Dayeon 2019-08-02 05:25:43.888337+00:00',3,'',12,1),(436,'2019-08-02 05:41:16.787000','45','Dayeon 2019-08-02 05:25:00.504598+00:00',3,'',12,1),(437,'2019-08-02 05:41:22.632000','44','Dayeon 2019-08-02 05:24:14.014839+00:00',3,'',12,1),(438,'2019-08-02 06:43:46.591000','1','[Continuous Solving] Streak2',2,'[{\"changed\": {\"fields\": [\"condition\", \"value\", \"html\"]}}]',15,1),(439,'2019-08-02 06:44:10.343000','2','[Continuous Solving] Streak5',2,'[{\"changed\": {\"fields\": [\"condition\", \"value\", \"html\"]}}]',15,1),(440,'2019-08-02 06:44:32.413000','3','[Continuous Solving] Streak14',2,'[{\"changed\": {\"fields\": [\"condition\", \"value\", \"html\"]}}]',15,1),(441,'2019-08-02 06:44:57.728000','1','Dayeon',2,'[{\"changed\": {\"fields\": [\"badges\"]}}]',14,1),(442,'2019-08-02 06:47:53.237000','1','[Continuous Solving] Streak2',2,'[{\"changed\": {\"fields\": [\"html\"]}}]',15,1),(443,'2019-08-02 06:48:19.569000','2','[Continuous Solving] Streak5',2,'[{\"changed\": {\"fields\": [\"html\"]}}]',15,1),(444,'2019-08-02 06:49:45.108000','2','[Continuous Solving] Streak5',2,'[{\"changed\": {\"fields\": [\"html\"]}}]',15,1),(445,'2019-08-02 06:50:21.527000','3','[Continuous Solving] Streak14',2,'[{\"changed\": {\"fields\": [\"html\"]}}]',15,1),(446,'2019-08-02 09:57:39.362000','39','  3[Math] 39. Given an integer, check if it is a power of 2.',1,'[{\"added\": {}}]',3,1),(447,'2019-08-02 09:57:55.262000','46','39. 16',1,'[{\"added\": {}}]',4,1),(448,'2019-08-02 09:58:09.408000','46','39. 32',2,'[{\"changed\": {\"fields\": [\"test\"]}}]',4,1),(449,'2019-08-02 09:58:18.136000','47','39. 31',1,'[{\"added\": {}}]',4,1),(450,'2019-08-02 09:58:40.227000','36','x 1[Print] 36. Print',2,'[{\"changed\": {\"fields\": [\"visible\"]}}]',3,1),(451,'2019-08-02 09:59:16.681000','48','36. Dayeon 2019-08-02 05:27:32.738800+00:00',3,'',12,1),(452,'2019-08-02 10:24:11.208000','8','[Maximum Quiz per Day] Peek5',3,'',15,1),(453,'2019-08-02 10:24:11.210000','7','[Maximum Quiz per Day] Peek4',3,'',15,1),(454,'2019-08-02 10:24:11.211000','6','[Maximum Quiz per Day] Peek3',3,'',15,1),(455,'2019-08-02 10:24:11.212000','5','[Maximum Quiz per Day] Peek2',3,'',15,1),(456,'2019-08-02 10:24:11.213000','4','[Maximum Quiz per Day] Peek1',3,'',15,1),(457,'2019-08-02 10:33:03.926000','12','Super Junior-10. DataType',2,'[{\"changed\": {\"fields\": [\"image\"]}}]',2,1),(458,'2019-08-02 21:11:08.312000','14','Super Junior-11. Variable',2,'[{\"changed\": {\"fields\": [\"visible\"]}}]',2,1),(459,'2019-08-02 21:14:43.356000','15','Super Junior-12. Print',2,'[{\"changed\": {\"fields\": [\"visible\"]}}]',2,1),(460,'2019-08-02 21:14:53.756000','13','Super Junior-13. Operator',2,'[{\"changed\": {\"fields\": [\"visible\"]}}]',2,1),(461,'2019-08-02 21:15:05.993000','16','Super Junior-15. If',2,'[{\"changed\": {\"fields\": [\"visible\"]}}]',2,1),(462,'2019-08-02 21:15:11.562000','17','Junior-20. Scope',2,'[{\"changed\": {\"fields\": [\"visible\"]}}]',2,1),(463,'2019-08-02 21:15:29.800000','18','Junior-21. Integer',2,'[{\"changed\": {\"fields\": [\"visible\"]}}]',2,1),(464,'2019-08-02 21:16:07.013000','22','Junior-24. Tuple',2,'[{\"changed\": {\"fields\": [\"visible\"]}}]',2,1),(465,'2019-08-02 21:16:20.535000','26','Junior-27. Casting',2,'[{\"changed\": {\"fields\": [\"visible\"]}}]',2,1),(466,'2019-08-02 21:16:27.270000','25','Junior-28. Module',2,'[{\"changed\": {\"fields\": [\"visible\"]}}]',2,1),(467,'2019-08-02 21:16:34.022000','27','Junior-29. OOP',2,'[{\"changed\": {\"fields\": [\"visible\"]}}]',2,1),(468,'2019-08-02 21:16:45.689000','20','Junior High-31. Integer 2',2,'[{\"changed\": {\"fields\": [\"visible\"]}}]',2,1),(469,'2019-08-02 21:17:06.264000','28','Junior High-34. Tuple 2',2,'[{\"changed\": {\"fields\": [\"visible\"]}}]',2,1),(470,'2019-08-02 21:17:13.667000','30','High-39. Queue',2,'[{\"changed\": {\"fields\": [\"visible\"]}}]',2,1),(471,'2019-08-02 21:17:20.261000','31','High-40. Linked List',2,'[{\"changed\": {\"fields\": [\"visible\"]}}]',2,1),(472,'2019-08-02 22:33:53.868000','43','34. Dayeon 2019-07-22 19:12:01-07:00',2,'[{\"changed\": {\"fields\": [\"date\"]}}]',12,1),(473,'2019-08-02 22:34:56.844000','42','35. Dayeon 2019-08-01 07:46:42-07:00',2,'[{\"changed\": {\"fields\": [\"date\"]}}]',12,1),(474,'2019-08-02 22:35:41.422000','42','35. Dayeon 2019-08-01 15:35:36-07:00',2,'[{\"changed\": {\"fields\": [\"date\"]}}]',12,1),(475,'2019-08-02 22:54:33.933000','26','26. Dayeon 2019-07-18 15:33:13-07:00',2,'[{\"changed\": {\"fields\": [\"date\"]}}]',12,1),(476,'2019-08-02 22:54:46.797000','43','34. Dayeon 2019-08-01 19:12:01-07:00',2,'[{\"changed\": {\"fields\": [\"date\"]}}]',12,1),(477,'2019-08-03 00:55:42.023000','9','[Quiz Count] QuizCount1',1,'[{\"added\": {}}]',15,1),(478,'2019-08-03 01:20:20.865000','1','[Continuous Solving] DayStreak2',2,'[{\"changed\": {\"fields\": [\"condition\", \"html\"]}}]',15,1),(479,'2019-08-03 01:20:41.251000','2','[Continuous Solving] DayStreak3',2,'[{\"changed\": {\"fields\": [\"condition\", \"value\", \"html\"]}}]',15,1),(480,'2019-08-03 01:20:59.863000','3','[Continuous Solving] DayStreak4',2,'[{\"changed\": {\"fields\": [\"condition\", \"value\", \"html\"]}}]',15,1),(481,'2019-08-03 01:21:37.180000','9','[Continuous Solving] DayStreak5',2,'[{\"changed\": {\"fields\": [\"name\", \"condition\", \"value\", \"html\"]}}]',15,1),(482,'2019-08-03 01:23:11.338000','10','[Quiz Per Day] QuizPerDay2',1,'[{\"added\": {}}]',15,1),(483,'2019-08-03 01:23:29.903000','2','[Continuous Solving] DayStreak4',2,'[{\"changed\": {\"fields\": [\"value\", \"html\"]}}]',15,1),(484,'2019-08-03 01:23:37.531000','3','[Continuous Solving] DayStreak7',2,'[{\"changed\": {\"fields\": [\"value\", \"html\"]}}]',15,1),(485,'2019-08-03 01:24:01.020000','9','[Continuous Solving] DayStreak10',2,'[{\"changed\": {\"fields\": [\"value\", \"html\"]}}]',15,1),(486,'2019-08-03 01:24:27.798000','11','[Quiz Per Day] QuizPerDay3',1,'[{\"added\": {}}]',15,1),(487,'2019-08-03 01:24:42.540000','12','[Quiz Per Day] QuizPerDay4',1,'[{\"added\": {}}]',15,1),(488,'2019-08-03 01:24:54.147000','13','[Quiz Per Day] QuizPerDay5',1,'[{\"added\": {}}]',15,1),(489,'2019-08-03 01:25:19.427000','14','[Quiz] Quiz30',1,'[{\"added\": {}}]',15,1),(490,'2019-08-03 01:25:30.359000','15','[Quiz] Quiz50',1,'[{\"added\": {}}]',15,1),(491,'2019-08-03 01:41:01.959000','1','Dayeon',2,'[{\"changed\": {\"fields\": [\"badges\"]}}]',14,1),(492,'2019-08-03 02:13:15.298000','1','BadgeType object (1)',1,'[{\"added\": {}}]',16,1),(493,'2019-08-03 02:13:19.658000','2','BadgeType object (2)',1,'[{\"added\": {}}]',16,1),(494,'2019-08-03 02:13:24.715000','3','BadgeType object (3)',1,'[{\"added\": {}}]',16,1),(495,'2019-08-03 02:13:59.685000','2','TotalQuiz',2,'[{\"changed\": {\"fields\": [\"name\"]}}]',16,1),(496,'2019-08-03 02:14:21.665000','1','[DayStreak] DayStreak2',2,'[{\"changed\": {\"fields\": [\"name\", \"type\"]}}]',15,1),(497,'2019-08-03 02:14:30.763000','2','[DayStreak] DayStreak4',2,'[{\"changed\": {\"fields\": [\"name\", \"type\"]}}]',15,1),(498,'2019-08-03 02:14:41.586000','3','[7DayStreak] DayStreak7',2,'[{\"changed\": {\"fields\": [\"name\", \"type\"]}}]',15,1),(499,'2019-08-03 02:14:46.075000','1','[2DayStreak] DayStreak2',2,'[{\"changed\": {\"fields\": [\"name\"]}}]',15,1),(500,'2019-08-03 02:14:50.536000','2','[4DayStreak] DayStreak4',2,'[{\"changed\": {\"fields\": [\"name\"]}}]',15,1),(501,'2019-08-03 02:14:58.274000','9','[10DayStreak] DayStreak10',2,'[{\"changed\": {\"fields\": [\"name\", \"type\"]}}]',15,1),(502,'2019-08-03 02:15:06.459000','10','[2 Quiz Per Day] QuizPerDay2',2,'[{\"changed\": {\"fields\": [\"name\", \"type\"]}}]',15,1),(503,'2019-08-03 02:15:13.188000','11','[3 Quiz Per Day] QuizPerDay3',2,'[{\"changed\": {\"fields\": [\"name\", \"type\"]}}]',15,1),(504,'2019-08-03 02:15:22.271000','12','[4 Quiz Per Day] QuizPerDay4',2,'[{\"changed\": {\"fields\": [\"name\", \"type\"]}}]',15,1),(505,'2019-08-03 02:15:27.617000','13','[5 Quiz Per Day] QuizPerDay5',2,'[{\"changed\": {\"fields\": [\"name\", \"type\"]}}]',15,1),(506,'2019-08-03 02:15:38.064000','14','[30 Total Quiz] Quiz30',2,'[{\"changed\": {\"fields\": [\"name\", \"type\"]}}]',15,1),(507,'2019-08-03 02:15:46.346000','15','[50 Total Quiz] Quiz50',2,'[{\"changed\": {\"fields\": [\"name\", \"type\"]}}]',15,1),(508,'2019-08-03 02:16:46.594000','1','2 DayStreak',2,'[{\"changed\": {\"fields\": [\"name\"]}}]',15,1),(509,'2019-08-03 02:16:50.488000','2','4 DayStreak',2,'[{\"changed\": {\"fields\": [\"name\"]}}]',15,1),(510,'2019-08-03 02:16:54.422000','3','7 DayStreak',2,'[{\"changed\": {\"fields\": [\"name\"]}}]',15,1),(511,'2019-08-03 02:16:58.396000','9','10 DayStreak',2,'[{\"changed\": {\"fields\": [\"name\"]}}]',15,1),(512,'2019-08-03 03:37:52.499000','1','Dayeon',2,'[{\"changed\": {\"fields\": [\"badges\"]}}]',14,1),(513,'2019-08-03 04:06:16.927000','1','Dayeon',2,'[{\"changed\": {\"fields\": [\"badges\"]}}]',14,1),(514,'2019-08-03 04:07:36.374000','1','Dayeon',2,'[{\"changed\": {\"fields\": [\"badges\"]}}]',14,1),(515,'2019-08-03 04:08:27.092000','1','Dayeon',2,'[{\"changed\": {\"fields\": [\"badges\"]}}]',14,1),(516,'2019-08-03 04:08:45.757000','1','Dayeon',2,'[{\"changed\": {\"fields\": [\"badges\"]}}]',14,1),(517,'2019-08-03 04:11:29.418000','15','50 Total Quiz',2,'[{\"changed\": {\"fields\": [\"desc\"]}}]',15,1),(518,'2019-08-03 04:11:34.727000','14','30 Total Quiz',2,'[{\"changed\": {\"fields\": [\"desc\"]}}]',15,1),(519,'2019-08-03 04:11:52.868000','13','5 Quiz Per Day',2,'[{\"changed\": {\"fields\": [\"desc\"]}}]',15,1),(520,'2019-08-03 04:11:57.944000','12','4 Quiz Per Day',2,'[{\"changed\": {\"fields\": [\"desc\"]}}]',15,1),(521,'2019-08-03 04:12:06.240000','11','3 Quiz Per Day',2,'[{\"changed\": {\"fields\": [\"desc\"]}}]',15,1),(522,'2019-08-03 04:12:11.757000','10','2 Quiz Per Day',2,'[{\"changed\": {\"fields\": [\"desc\"]}}]',15,1),(523,'2019-08-03 04:13:01.520000','9','10 DayStreak',2,'[{\"changed\": {\"fields\": [\"desc\"]}}]',15,1),(524,'2019-08-03 04:13:06.766000','3','7 DayStreak',2,'[{\"changed\": {\"fields\": [\"desc\"]}}]',15,1),(525,'2019-08-03 04:13:11.751000','2','4 DayStreak',2,'[{\"changed\": {\"fields\": [\"desc\"]}}]',15,1),(526,'2019-08-03 04:13:16.563000','1','2 DayStreak',2,'[{\"changed\": {\"fields\": [\"desc\"]}}]',15,1),(527,'2019-08-03 04:58:57.239000','40','  3[Math] 39. Find how many trailing zero of the integer.',1,'[{\"added\": {}}]',3,1),(528,'2019-08-03 04:59:12.248000','48','39. 120000',1,'[{\"added\": {}}]',4,1),(529,'2019-08-03 04:59:20.594000','49','39. 345',1,'[{\"added\": {}}]',4,1),(530,'2019-08-03 16:48:38.002000','1','Dayeon',2,'[{\"changed\": {\"fields\": [\"badges\"]}}]',14,1),(531,'2019-08-03 17:09:32.146000','50','37. 0',1,'[{\"added\": {}}]',4,1),(532,'2019-08-03 17:19:27.723000','41','  1[DataType] 40. Which one of them is correct?',1,'[{\"added\": {}}]',3,1),(533,'2019-08-03 17:21:36.738000','51','40. ',1,'[{\"added\": {}}]',4,1),(534,'2019-08-03 17:40:03.846000','32','x Expert-41. Advanced Math',2,'[{\"changed\": {\"fields\": [\"visible\"]}}]',2,1),(535,'2019-08-03 17:47:49.864000','1','Super Junior',2,'[{\"changed\": {\"fields\": [\"desc\"]}}]',13,1),(536,'2019-08-03 17:48:07.859000','2','Junior',2,'[{\"changed\": {\"fields\": [\"desc\"]}}]',13,1),(537,'2019-08-03 17:48:21.344000','3','Junior High',2,'[{\"changed\": {\"fields\": [\"desc\"]}}]',13,1),(538,'2019-08-03 17:48:38.994000','4','High',2,'[{\"changed\": {\"fields\": [\"desc\"]}}]',13,1),(539,'2019-08-03 17:49:08.232000','5','Expert',2,'[{\"changed\": {\"fields\": [\"desc\"]}}]',13,1),(540,'2019-08-03 17:50:25.665000','1','Dayeon',2,'[{\"changed\": {\"fields\": [\"badges\"]}}]',14,1),(541,'2019-08-03 17:51:23.280000','1','Dayeon',2,'[{\"changed\": {\"fields\": [\"badges\"]}}]',14,1),(542,'2019-08-03 17:54:44.682000','9','10 Day Streak',2,'[{\"changed\": {\"fields\": [\"name\"]}}]',15,1),(543,'2019-08-03 17:54:50.977000','3','7 Day Streak',2,'[{\"changed\": {\"fields\": [\"name\"]}}]',15,1),(544,'2019-08-03 17:54:55.283000','2','4 Day Streak',2,'[{\"changed\": {\"fields\": [\"name\"]}}]',15,1),(545,'2019-08-03 17:54:59.404000','1','2 Day Streak',2,'[{\"changed\": {\"fields\": [\"name\"]}}]',15,1),(546,'2019-08-03 17:55:28.502000','1','Dayeon',2,'[{\"changed\": {\"fields\": [\"badges\"]}}]',14,1),(547,'2019-08-03 17:56:45.718000','1','Dayeon',2,'[{\"changed\": {\"fields\": [\"badges\"]}}]',14,1),(548,'2019-08-03 21:20:10.700000','1','Dayeon',2,'[{\"changed\": {\"fields\": [\"badges\"]}}]',14,1),(549,'2019-08-03 21:30:13.564000','1','Dayeon',2,'[{\"changed\": {\"fields\": [\"badges\"]}}]',14,1),(550,'2019-08-03 22:18:29.368000','1','Dayeon',2,'[{\"changed\": {\"fields\": [\"badges\"]}}]',14,1),(551,'2019-08-03 22:19:12.532000','1','Dayeon',2,'[{\"changed\": {\"fields\": [\"badges\"]}}]',14,1),(552,'2019-08-03 22:21:56.658000','5','  Super Junior-17. While',2,'[{\"changed\": {\"fields\": [\"desc\"]}}]',2,1),(553,'2019-08-03 22:27:58.175000','1','Dayeon',2,'[{\"changed\": {\"fields\": [\"badges\"]}}]',14,1),(554,'2019-08-03 22:37:45.347000','16','100 Total Quiz',1,'[{\"added\": {}}]',15,1),(555,'2019-08-04 03:49:33.404000','42','  1[DataType] 41. Choose the invalid list data type.',1,'[{\"added\": {}}]',3,1),(556,'2019-08-04 03:49:48.622000','52','41. ',1,'[{\"added\": {}}]',4,1),(557,'2019-08-04 03:52:39.166000','36','x 1[Print] 6. Choose the incorrect print.',2,'[{\"changed\": {\"fields\": [\"question\", \"example\", \"answer_header\", \"option1\", \"option2\", \"option3\", \"option4\"]}}]',3,1),(558,'2019-08-04 03:52:57.126000','42','  1[DataType] 41. Choose the invalid list data type.',2,'[{\"changed\": {\"fields\": [\"answer_header\"]}}]',3,1),(559,'2019-08-04 03:54:17.811000','36','  1[Print] 6. Choose the incorrect print.',2,'[{\"changed\": {\"fields\": [\"visible\"]}}]',3,1),(560,'2019-08-04 03:55:37.975000','52','Dayeon 2019-08-03 17:20:15.649549+00:00',3,'',12,1),(561,'2019-08-04 03:56:36.442000','43','6. ',2,'[{\"changed\": {\"fields\": [\"test\"]}}]',4,1),(562,'2019-08-04 03:56:57.460000','15','  Super Junior-12. Print',2,'[{\"changed\": {\"fields\": [\"visible\"]}}]',2,1),(563,'2019-08-04 07:14:00.265000','17','6 Quiz Per Day',1,'[{\"added\": {}}]',15,1),(564,'2019-08-04 07:14:25.122000','18','7 Quiz Per Day',1,'[{\"added\": {}}]',15,1),(565,'2019-08-04 07:14:48.330000','19','8 Quiz Per Day',1,'[{\"added\": {}}]',15,1),(566,'2019-08-04 07:15:07.652000','20','9 Quiz Per Day',1,'[{\"added\": {}}]',15,1),(567,'2019-08-04 07:36:18.702000','21','5 Day Streak',1,'[{\"added\": {}}]',15,1),(568,'2019-08-04 07:43:22.581000','1','2 Day Streak',2,'[{\"changed\": {\"fields\": [\"html\"]}}]',15,1),(569,'2019-08-04 07:43:30.772000','2','4 Day Streak',2,'[{\"changed\": {\"fields\": [\"html\"]}}]',15,1),(570,'2019-08-04 07:43:37.913000','3','7 Day Streak',2,'[{\"changed\": {\"fields\": [\"html\"]}}]',15,1),(571,'2019-08-04 07:43:45.436000','9','10 Day Streak',2,'[{\"changed\": {\"fields\": [\"html\"]}}]',15,1),(572,'2019-08-04 07:43:52.212000','10','2 Quiz Per Day',2,'[{\"changed\": {\"fields\": [\"html\"]}}]',15,1),(573,'2019-08-04 07:44:00.084000','11','3 Quiz Per Day',2,'[{\"changed\": {\"fields\": [\"html\"]}}]',15,1),(574,'2019-08-04 07:44:07.055000','12','4 Quiz Per Day',2,'[{\"changed\": {\"fields\": [\"html\"]}}]',15,1),(575,'2019-08-04 07:44:12.980000','13','5 Quiz Per Day',2,'[{\"changed\": {\"fields\": [\"html\"]}}]',15,1),(576,'2019-08-04 07:44:19.726000','14','30 Total Quiz',2,'[{\"changed\": {\"fields\": [\"html\"]}}]',15,1),(577,'2019-08-04 07:44:26.879000','15','50 Total Quiz',2,'[{\"changed\": {\"fields\": [\"html\"]}}]',15,1),(578,'2019-08-04 07:44:35.231000','16','100 Total Quiz',2,'[{\"changed\": {\"fields\": [\"html\"]}}]',15,1),(579,'2019-08-04 07:44:41.609000','17','6 Quiz Per Day',2,'[{\"changed\": {\"fields\": [\"html\"]}}]',15,1),(580,'2019-08-04 07:44:48.112000','18','7 Quiz Per Day',2,'[{\"changed\": {\"fields\": [\"html\"]}}]',15,1),(581,'2019-08-04 07:44:57.466000','19','8 Quiz Per Day',2,'[{\"changed\": {\"fields\": [\"html\"]}}]',15,1),(582,'2019-08-04 07:45:04.512000','20','9 Quiz Per Day',2,'[{\"changed\": {\"fields\": [\"html\"]}}]',15,1),(583,'2019-08-04 07:45:10.013000','21','5 Day Streak',2,'[{\"changed\": {\"fields\": [\"html\"]}}]',15,1),(584,'2019-08-04 08:07:12.718000','22','3 Day Streak',1,'[{\"added\": {}}]',15,1),(585,'2019-08-04 08:08:17.683000','1','Dayeon',2,'[{\"changed\": {\"fields\": [\"badges\"]}}]',14,1),(586,'2019-08-04 08:08:32.466000','1','Dayeon',2,'[{\"changed\": {\"fields\": [\"badges\"]}}]',14,1),(587,'2019-08-04 08:11:45.481000','36','  1[Print] 6. Choose the incorrect print.',2,'[{\"changed\": {\"fields\": [\"quiz_type\"]}}]',3,1),(588,'2019-08-04 16:08:28.066000','43','  4[Stack] 42. Check whether the parenthesis is valid or not.',1,'[{\"added\": {}}]',3,1),(589,'2019-08-04 16:08:54.422000','53','42. (())\r\nTrue',1,'[{\"added\": {}}]',4,1),(590,'2019-08-04 16:09:17.170000','54','42. ()()',1,'[{\"added\": {}}]',4,1),(591,'2019-08-04 16:09:37.311000','55','42. (()())',1,'[{\"added\": {}}]',4,1),(592,'2019-08-04 16:09:50.014000','56','42. (()',1,'[{\"added\": {}}]',4,1),(593,'2019-08-04 16:10:04.018000','53','42. (())',2,'[{\"changed\": {\"fields\": [\"test\"]}}]',4,1),(594,'2019-08-04 16:24:07.796000','23','10 Total Quiz',1,'[{\"added\": {}}]',15,1),(595,'2019-08-04 16:25:19.153000','24','20 Total Quiz',1,'[{\"added\": {}}]',15,1),(596,'2019-08-04 16:41:31.608000','25','40 Total Quiz',1,'[{\"added\": {}}]',15,1),(597,'2019-08-04 16:41:55.842000','26','60 Total Quiz',1,'[{\"added\": {}}]',15,1),(598,'2019-08-04 16:42:22.300000','27','70 Total Quiz',1,'[{\"added\": {}}]',15,1),(599,'2019-08-04 16:42:39.488000','28','80 Total Quiz',1,'[{\"added\": {}}]',15,1),(600,'2019-08-04 16:42:59.076000','29','90 Total Quiz',1,'[{\"added\": {}}]',15,1),(601,'2019-08-04 16:48:45.274000','36','  1[Print] 6. Choose the incorrect print.',2,'[{\"changed\": {\"fields\": [\"option3\"]}}]',3,1),(602,'2019-08-04 16:48:59.230000','43','6. ',2,'[{\"changed\": {\"fields\": [\"expected_answer\"]}}]',4,1),(603,'2019-08-04 16:49:51.377000','36','  1[Print] 6. Choose the correct print.',2,'[{\"changed\": {\"fields\": [\"question\", \"option2\", \"option3\", \"option4\"]}}]',3,1),(604,'2019-08-04 16:53:26.777000','55','42. )()(',2,'[{\"changed\": {\"fields\": [\"test\", \"expected_answer\"]}}]',4,1),(605,'2019-08-04 18:14:12.517000','56','42. \"(()\"',2,'[{\"changed\": {\"fields\": [\"test\"]}}]',4,1),(606,'2019-08-04 18:14:28.344000','54','42. \"()()\"',2,'[{\"changed\": {\"fields\": [\"test\"]}}]',4,1),(607,'2019-08-04 18:14:33.715000','55','42. \")()(\"',2,'[{\"changed\": {\"fields\": [\"test\"]}}]',4,1),(608,'2019-08-04 18:14:40.728000','53','42. \"(())\"',2,'[{\"changed\": {\"fields\": [\"test\"]}}]',4,1),(609,'2019-08-04 18:14:58.817000','56','42. Dayeon 2019-08-04 18:14:45.979660+00:00',3,'',12,1),(610,'2019-08-05 00:06:43.590000','44','  3[For] 43. Given a string, remove adjacent duplicated character in the string.',1,'[{\"added\": {}}]',3,1),(611,'2019-08-05 00:08:14.301000','57','43. \"abbac\"',1,'[{\"added\": {}}]',4,1),(612,'2019-08-05 00:09:33.847000','58','43. \"abba\"',1,'[{\"added\": {}}]',4,1),(613,'2019-08-05 00:10:46.215000','57','43. \"abbac\"',3,'',4,1),(614,'2019-08-05 00:10:55.018000','59','43. \"abbac\"',1,'[{\"added\": {}}]',4,1),(615,'2019-08-05 00:11:31.764000','57','43. Dayeon 2019-08-05 00:11:07.155069+00:00',3,'',12,1),(616,'2019-08-06 01:26:57.296000','45','  3[Math] 44. Find the sum of the internal angle of the n-sided polygon.',1,'[{\"added\": {}}]',3,1),(617,'2019-08-06 01:27:48.054000','46','  3[Math] 45. Find the sum of the external angle of the n-sided polygon.',1,'[{\"added\": {}}]',3,1),(618,'2019-08-06 01:28:14.630000','60','44. 5',1,'[{\"added\": {}}]',4,1),(619,'2019-08-06 01:28:31.186000','61','45. 5',1,'[{\"added\": {}}]',4,1),(620,'2019-08-06 01:29:31.937000','47','  3[List 2] 46. Given k and list, count the number less than k in the list.',1,'[{\"added\": {}}]',3,1),(621,'2019-08-06 01:29:58.053000','62','46. 5\r\n[3, 6, 7, 8]',1,'[{\"added\": {}}]',4,1),(622,'2019-08-06 01:31:04.858000','48','  3[List 2] 47. Given 2 lists, find the common value belong to both.',1,'[{\"added\": {}}]',3,1),(623,'2019-08-06 01:31:24.652000','63','47. [3, 5, 7, 9]\r\n[1, 3, 8, 9]',1,'[{\"added\": {}}]',4,1),(624,'2019-08-06 01:35:07.814000','49','  3[For] 48. Return the following list depending on the number.',1,'[{\"added\": {}}]',3,1),(625,'2019-08-06 01:35:32.830000','64','48. 4',1,'[{\"added\": {}}]',4,1),(626,'2019-08-06 01:50:36.105000','64','48. 4',2,'[{\"changed\": {\"fields\": [\"expected_answer\"]}}]',4,1),(627,'2019-08-06 09:51:38.372000','26','  1[DataType] 0. What is the incorrect data types in Python?',2,'[{\"changed\": {\"fields\": [\"video\"]}}]',3,1),(628,'2019-08-06 09:51:47.594000','32','  1[DataType] 1. What is the incorrect data type in Python?',2,'[{\"changed\": {\"fields\": [\"video\"]}}]',3,1),(629,'2019-08-06 10:16:22.641000','12','  Super Junior-10. DataType',2,'[{\"changed\": {\"fields\": [\"image\"]}}]',2,1),(630,'2019-08-06 16:02:31.556000','26','  1[DataType] 0. What is the incorrect data types in Python?',2,'[{\"changed\": {\"fields\": [\"video\"]}}]',3,1),(631,'2019-08-06 16:02:50.997000','12','  Super Junior-10. DataType',2,'[{\"changed\": {\"fields\": [\"image\"]}}]',2,1),(632,'2019-08-06 16:46:31.356000','62','46. 5\r\n[3, 6, 4, 8]',2,'[{\"changed\": {\"fields\": [\"test\"]}}]',4,1),(633,'2019-08-07 00:58:26.812000','50','  3[Math] 49. Find the n-th Fibonacci numbers.\r\nThe current value is the sum of the previous two values.\r\n1, 1, 2, 3, 5, 8, 13, 21, 39, ...',1,'[{\"added\": {}}]',3,1),(634,'2019-08-07 00:58:59.614000','65','49. 9',1,'[{\"added\": {}}]',4,1),(635,'2019-08-07 00:59:12.082000','50','  3[Math] 49. Find the n-th Fibonacci numbers.\r\nThe current value is the sum of the previous two values.\r\n1, 1, 2, 3, 5, 8, 13, 21, 34, ...',2,'[{\"changed\": {\"fields\": [\"question\"]}}]',3,1),(636,'2019-08-07 01:00:58.742000','51','  3[List 2] 50. Given the two sorted lists, merge two lists to one sorted list.',1,'[{\"added\": {}}]',3,1),(637,'2019-08-07 01:01:17.216000','66','50. [1, 3, 4]\r\n[2, 4, 5]',1,'[{\"added\": {}}]',4,1),(638,'2019-08-07 04:35:31.517000','50','  3[Math] 49. Find the n-th Fibonacci numbers.\r\nThe current value is the sum of the previous two values.\r\n1, 1, 2, 3, 5, 8, 13, 21, 34, ...',2,'[{\"changed\": {\"fields\": [\"title\"]}}]',3,1),(639,'2019-08-07 04:36:17.302000','26','  1[DataType] 0. What is the incorrect data types in Python?',2,'[{\"changed\": {\"fields\": [\"title\"]}}]',3,1),(640,'2019-08-07 04:36:50.593000','32','  1[DataType] 1. What is the incorrect data type in Python?',2,'[{\"changed\": {\"fields\": [\"title\"]}}]',3,1),(641,'2019-08-07 04:38:35.207000','1','  1[For] 2. Which value will be printed?',2,'[{\"changed\": {\"fields\": [\"title\", \"question\"]}}]',3,1),(642,'2019-08-07 04:40:56.083000','5','  1[While] 3. Add function - Which value will be printed?',2,'[{\"changed\": {\"fields\": [\"title\", \"question\"]}}]',3,1),(643,'2019-08-07 04:41:04.453000','1','  1[For] 2. Sum function - Which value will be printed?',2,'[{\"changed\": {\"fields\": [\"title\"]}}]',3,1),(644,'2019-08-07 04:42:54.471000','15','  1[Range] 4. Range - What is the meaning of this?',2,'[{\"changed\": {\"fields\": [\"explanation\", \"title\", \"question\"]}}]',3,1),(645,'2019-08-07 04:43:27.025000','16','  1[Range] 5.  - What is the meaning of this?',2,'[{\"changed\": {\"fields\": [\"explanation\", \"question\"]}}]',3,1),(646,'2019-08-07 04:43:44.339000','16','  1[Range] 5. Range(start, stop) - What is the meaning of this?',2,'[{\"changed\": {\"fields\": [\"title\"]}}]',3,1),(647,'2019-08-07 04:43:53.834000','15','  1[Range] 4. Range(stop) - What is the meaning of this?',2,'[{\"changed\": {\"fields\": [\"title\"]}}]',3,1),(648,'2019-08-07 04:44:23.435000','36','  1[Print] 6. Print - Choose the correct format of print.',2,'[{\"changed\": {\"fields\": [\"title\", \"question\"]}}]',3,1),(649,'2019-08-07 04:44:35.041000','36','  1[Print] 6. Print command - Choose the correct format of print.',2,'[{\"changed\": {\"fields\": [\"title\"]}}]',3,1),(650,'2019-08-07 04:45:14.204000','17','  1[Range] 7. Range(start, stop, step) - What is the meaning of this?',2,'[{\"changed\": {\"fields\": [\"explanation\", \"title\", \"question\"]}}]',3,1),(651,'2019-08-07 04:46:17.940000','18','  1[Range] 8. Range summary - Which one is the incorrect format of range?',2,'[{\"changed\": {\"fields\": [\"title\", \"question\", \"example\"]}}]',3,1),(652,'2019-08-07 04:47:29.066000','15','  1[Range] 4. Range(stop) - What is the meaning of this?',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,1),(653,'2019-08-07 04:51:07.171000','15','  1[Range] 4. Range(stop) - What is the meaning of this?',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,1),(654,'2019-08-07 04:52:17.717000','15','  1[Range] 4. Range(stop) - What is the meaning of this?',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,1),(655,'2019-08-07 04:53:10.958000','16','  1[Range] 5. Range(start, stop) - What is the meaning of this?',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,1),(656,'2019-08-07 04:53:53.176000','17','  1[Range] 7. Range(start, stop, step) - What is the meaning of this?',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,1),(657,'2019-08-07 04:56:05.950000','19','  1[While] 9.  - What is the output of the following code?',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,1),(658,'2019-08-07 04:56:38.842000','19','  1[While] 9.  - What is the output of the following code?',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,1),(659,'2019-08-07 04:57:09.189000','19','  1[While] 9.  - What is the output of the following code?',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,1),(660,'2019-08-07 04:57:33.560000','19','  1[While] 9.  - What is the output of the following code?',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,1),(661,'2019-08-07 04:58:59.125000','19','  1[While] 9. Sum function - What value will be printed?',2,'[{\"changed\": {\"fields\": [\"title\", \"question\"]}}]',3,1),(662,'2019-08-07 05:00:21.735000','20','  1[While] 10. Break - What will be printed?',2,'[{\"changed\": {\"fields\": [\"explanation\", \"title\", \"question\"]}}]',3,1),(663,'2019-08-07 05:00:51.418000','20','  1[While] 10. Break - What will be printed?',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,1),(664,'2019-08-07 05:01:28.088000','2','  2[Dictionary] 11. Dictionary - What value will be printed?',2,'[{\"changed\": {\"fields\": [\"title\", \"question\"]}}]',3,1),(665,'2019-08-07 05:02:20.977000','3','  2[String] 12. String concatenation - What will be printed?',2,'[{\"changed\": {\"fields\": [\"title\", \"question\"]}}]',3,1),(666,'2019-08-07 05:03:46.683000','4','  2[List] 13. Find a value - What will be printed?',2,'[{\"changed\": {\"fields\": [\"title\", \"question\"]}}]',3,1),(667,'2019-08-07 05:04:07.140000','6','  2[List] 14. List insert - What will be printed?',2,'[{\"changed\": {\"fields\": [\"title\", \"question\"]}}]',3,1),(668,'2019-08-07 05:04:33.496000','7','  2[Set] 15. Set contains - What will be printed?',2,'[{\"changed\": {\"fields\": [\"title\", \"question\"]}}]',3,1),(669,'2019-08-07 05:04:59.335000','8','  2[Function] 16. Multiply function - What will be printed?',2,'[{\"changed\": {\"fields\": [\"title\", \"question\"]}}]',3,1),(670,'2019-08-07 05:05:34.145000','24','  2[Class] 17. Class, Object - What will be printed?',2,'[{\"changed\": {\"fields\": [\"title\", \"question\"]}}]',3,1),(671,'2019-08-07 05:06:30.092000','25','  2[Class] 18. Incorrect Class - Find the error in the code below.',2,'[{\"changed\": {\"fields\": [\"title\"]}}]',3,1),(672,'2019-08-07 05:56:24.710000','31','  2[List] 19. Split a list - Split the list into two lists. One list contains odd numbers and the other one contains even numbers. Odd number list should be returned first.',2,'[{\"changed\": {\"fields\": [\"title\", \"question\", \"example\"]}}]',3,1),(673,'2019-08-07 06:02:37.664000','9','  3[Math] 20. Operator precedence - What will be printed?',2,'[{\"changed\": {\"fields\": [\"explanation\", \"title\", \"question\"]}}]',3,1),(674,'2019-08-07 06:09:39.722000','9','  3[Math] 20. Operator precedence - What will be printed?',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,1),(675,'2019-08-07 06:10:15.957000','10','  3[Math] 21. Write a function - Write a code to multiply two numbers.',2,'[{\"changed\": {\"fields\": [\"title\"]}}]',3,1),(676,'2019-08-07 06:11:21.806000','11','  3[List 2] 22.  - Swap the first element and the last element.',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,1),(677,'2019-08-07 06:11:49.162000','11','  3[List 2] 22. Swap an element - Swap the first element and the last element.',2,'[{\"changed\": {\"fields\": [\"explanation\", \"title\"]}}]',3,1),(678,'2019-08-07 06:12:49.094000','12','  3[List 2] 23. Swap an element - Swap the second element and the last to the second element.',2,'[{\"changed\": {\"fields\": [\"title\"]}}]',3,1),(679,'2019-08-07 06:13:54.683000','13','  3[List 2] 24.  - Reverse the list by swapping elements.',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,1),(680,'2019-08-07 06:16:13.025000','15','  1[Range] 4. Range(stop) - What is the meaning of this?',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,1),(681,'2019-08-07 06:16:34.405000','13','  3[List 2] 24. Reverse a list - Reverse a list by swapping elements.',2,'[{\"changed\": {\"fields\": [\"title\", \"question\"]}}]',3,1),(682,'2019-08-07 06:19:28.093000','21','  3[List 2] 25. Sorted list - Given the sorted list, insert the value at the right position.  It must be in sorted order after insertion.',2,'[{\"changed\": {\"fields\": [\"title\"]}}]',3,1),(683,'2019-08-07 06:22:39.057000','22','  3[Math] 26. Square root - Find a square root x.  A square root value(return value) is always an integer.',2,'[{\"changed\": {\"fields\": [\"title\"]}}]',3,1),(684,'2019-08-07 06:23:08.714000','23','  3[List 2] 27. Subarray - Find the maximum subarray which has the largest sum.  Subarray should have the first element.  Return the sum of the maximum subarray.',2,'[{\"changed\": {\"fields\": [\"title\"]}}]',3,1),(685,'2019-08-07 06:24:09.099000','27','  3[List 2] 28. Missing integer - Given an integer array of 1 to N except for one number, find the missing integer.',2,'[{\"changed\": {\"fields\": [\"title\"]}}]',3,1),(686,'2019-08-07 06:24:43.468000','28','  3[Dictionary 2] 29. Frequency - Find the most frequently appearing character.',2,'[{\"changed\": {\"fields\": [\"title\"]}}]',3,1),(687,'2019-08-07 06:25:14.925000','29','  3[List 2] 30. Rotate a list - Given a list, rotate the list to the right by n steps.\r\n(you take the 0th element and put it at the end of the list)',2,'[{\"changed\": {\"fields\": [\"title\", \"question\"]}}]',3,1),(688,'2019-08-07 06:25:35.233000','30','  3[List 2] 31. Smallest number - Find the smallest number in a list.',2,'[{\"changed\": {\"fields\": [\"title\"]}}]',3,1),(689,'2019-08-07 06:25:58.351000','33','  3[String 2] 32. Remove a word - Remove the third word of the sentence.',2,'[{\"changed\": {\"fields\": [\"title\"]}}]',3,1),(690,'2019-08-07 06:26:35.033000','34','  3[Math] 33. Leading zeros - Given a decimal less than 1, return the number of leading zeros at the right of the point.',2,'[{\"changed\": {\"fields\": [\"title\"]}}]',3,1),(691,'2019-08-07 06:26:50.693000','35','  3[Math] 34. Greatest common factor - Given the two integers, find the greatest common factor(GCF).',2,'[{\"changed\": {\"fields\": [\"title\"]}}]',3,1),(692,'2019-08-07 06:28:09.475000','37','  3[For] 35. Second largest number - Find the second largest number of the list.',2,'[{\"changed\": {\"fields\": [\"title\"]}}]',3,1),(693,'2019-08-07 06:28:57.864000','38','  3[Set 2] 36. Duplicated number - Find whether the list has the duplicated number or not.',2,'[{\"changed\": {\"fields\": [\"title\"]}}]',3,1),(694,'2019-08-07 06:29:07.700000','39','  3[Math] 37. Power of 2 - Given an integer, check if it is a power of 2.',2,'[{\"changed\": {\"fields\": [\"title\"]}}]',3,1),(695,'2019-08-07 06:29:20.478000','14','  4[Stack] 38. Reverse a list - Reverse the list by Stack.',2,'[{\"changed\": {\"fields\": [\"title\"]}}]',3,1),(696,'2019-08-07 06:29:49.865000','40','  3[Math] 39. Find a trailing zeros - Find how many trailing zeros of the integer.',2,'[{\"changed\": {\"fields\": [\"title\", \"question\"]}}]',3,1),(697,'2019-08-07 06:36:55.756000','41','  1[DataType] 40.  - Which one of them is correct?',2,'[{\"changed\": {\"fields\": [\"example\"]}}]',3,1),(698,'2019-08-07 06:38:32.598000','41','  1[DataType] 40.  - Which one of them is correct?',2,'[{\"changed\": {\"fields\": [\"option1\", \"option2\", \"option3\", \"option4\"]}}]',3,1),(699,'2019-08-07 06:38:42.935000','41','  1[DataType] 40. Datatype - Which one of them is correct?',2,'[{\"changed\": {\"fields\": [\"title\"]}}]',3,1),(700,'2019-08-07 06:39:09.220000','42','  1[DataType] 41. Invalid data type - Choose the invalid list data type.',2,'[{\"changed\": {\"fields\": [\"title\"]}}]',3,1),(701,'2019-08-07 06:39:48.832000','43','  4[Stack] 42. Find valid parenthesis - Check whether the parenthesis is valid or not.',2,'[{\"changed\": {\"fields\": [\"title\"]}}]',3,1),(702,'2019-08-07 06:40:08.689000','44','  3[For] 43. Remove duplicated character - Given a string, remove adjacent duplicated character in the string.',2,'[{\"changed\": {\"fields\": [\"title\"]}}]',3,1),(703,'2019-08-07 06:40:28.011000','45','  3[Math] 44. Sum of internal angle - Find the sum of the internal angle of the n-sided polygon.',2,'[{\"changed\": {\"fields\": [\"title\"]}}]',3,1),(704,'2019-08-07 06:40:38.313000','46','  3[Math] 45. Sum of external angle - Find the sum of the external angle of the n-sided polygon.',2,'[{\"changed\": {\"fields\": [\"title\"]}}]',3,1),(705,'2019-08-07 06:41:25.328000','47','  3[List 2] 46. Check a value in a list - Given k and list, count the number less than k in the list.',2,'[{\"changed\": {\"fields\": [\"title\"]}}]',3,1),(706,'2019-08-07 06:41:40.852000','48','  3[List 2] 47. Common value - Given 2 lists, find the common value belong to both.',2,'[{\"changed\": {\"fields\": [\"title\"]}}]',3,1),(707,'2019-08-07 06:42:03.474000','49','  3[For] 48. Print star - Return the following list depending on the number.',2,'[{\"changed\": {\"fields\": [\"title\"]}}]',3,1),(708,'2019-08-07 06:42:18.879000','51','  3[List 2] 50. Merge lists - Given the two sorted lists, merge two lists to one sorted list.',2,'[{\"changed\": {\"fields\": [\"title\"]}}]',3,1),(709,'2019-08-07 06:45:37.366000','29','  Junior High-30. For 2',2,'[{\"changed\": {\"fields\": [\"name\"]}}]',2,1),(710,'2019-08-08 06:22:34.344000','52','  1[Variable] 51. Valid variable - Which one is an invalid variable name?',1,'[{\"added\": {}}]',3,1),(711,'2019-08-08 06:22:43.009000','14','  Super Junior-11. Variable',2,'[{\"changed\": {\"fields\": [\"visible\"]}}]',2,1),(712,'2019-08-08 06:24:07.462000','52','  1[Variable] 51. Valid variable - Which one is an invalid variable name?',2,'[{\"changed\": {\"fields\": [\"option2\", \"option3\"]}}]',3,1),(713,'2019-08-08 06:24:18.616000','67','51. ',1,'[{\"added\": {}}]',4,1),(714,'2019-08-09 05:21:47.707000','53','  3[For 2] 52. Print star - Return the following list depending on the number.',1,'[{\"added\": {}}]',3,1),(715,'2019-08-09 05:22:18.678000','68','52. ',1,'[{\"added\": {}}]',4,1),(716,'2019-08-09 05:24:52.505000','54','  3[List 2] 53. Swap the values - Swap all the values between i-th element and j-th element.',1,'[{\"added\": {}}]',3,1),(717,'2019-08-09 05:25:13.258000','69','53. [3, 4, 5, 6, 7, 8, 9], 2, 5',1,'[{\"added\": {}}]',4,1),(718,'2019-08-09 05:25:29.549000','70','53. [1, 2, 3, 4, 5], 1, 4',1,'[{\"added\": {}}]',4,1),(719,'2019-08-09 21:28:15.877000','53','  3[For 2] 52. Print star - Return the following list depending on the number.',2,'[{\"changed\": {\"fields\": [\"example\"]}}]',3,1),(720,'2019-08-09 21:28:26.854000','64','Dayeon 2019-08-08 06:23:28.955655+00:00',3,'',12,1),(721,'2019-08-09 21:30:25.756000','68','52. 4',2,'[{\"changed\": {\"fields\": [\"test\", \"expected_answer\"]}}]',4,1),(722,'2019-08-09 22:08:31.553000','16','  1[Range] 5. Range(start, stop) - What is the meaning of this?',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,1),(723,'2019-08-09 22:08:55.966000','16','  1[Range] 5. Range(start, stop) - What is the meaning of this?',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,1),(724,'2019-08-09 22:09:13.192000','32','  1[DataType] 1. List, Tuple - What is the incorrect data type in Python?',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,1),(725,'2019-08-09 22:09:31.004000','17','  1[Range] 6. Range(start, stop, step) - What is the meaning of this?',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,1),(726,'2019-08-09 22:10:03.806000','15','  1[Range] 4. Range(stop) - What is the meaning of this?',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,1),(727,'2019-08-09 22:10:51.146000','15','  1[Range] 4. Range(stop) - What is the meaning of this?',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,1),(728,'2019-08-09 22:57:45.204000','17','  1[Range] 6. Range(start, stop, step) - What is the meaning of this?',2,'[]',3,1),(729,'2019-08-09 22:58:12.894000','17','  1[Range] 6. Range(start, stop, step) - What is the meaning of this?',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,1),(730,'2019-08-09 23:34:36.096000','55','  2[String] 54. String split - Choose the result of this code.',1,'[{\"added\": {}}]',3,1),(731,'2019-08-09 23:35:17.688000','71','54.  4',1,'[{\"added\": {}}]',4,1),(732,'2019-08-09 23:35:33.486000','55','  2[String] 54. String split - Choose the result of this code.',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,1),(733,'2019-08-09 23:37:46.168000','55','  2[String] 54. String split - Choose the result of this code.',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,1),(734,'2019-08-09 23:41:10.138000','56','  2[String] 55. String join - Choose the result of this code.',1,'[{\"added\": {}}]',3,1),(735,'2019-08-09 23:41:29.804000','72','55.  4',1,'[{\"added\": {}}]',4,1),(736,'2019-08-09 23:42:32.918000','56','  2[String] 55. String join - Choose the result of this code.',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,1),(737,'2019-08-09 23:42:53.337000','56','  2[String] 55. String join - Choose the result of this code.',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,1),(738,'2019-08-10 00:31:04.452000','56','  2[String] 55. String join - Choose the result of this code.',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,1),(739,'2019-08-10 00:31:14.261000','55','  2[String] 54. String split - Choose the result of this code.',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,1),(740,'2019-08-10 04:45:52.818000','55','  2[String] 54. String split - Choose the result of this code.',2,'[{\"changed\": {\"fields\": [\"example\"]}}]',3,1),(741,'2019-08-10 04:50:00.569000','56','  2[String] 55. String join - Choose the result of this code.',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,1),(742,'2019-08-10 08:23:50.506000','1','Dayeon',2,'[{\"changed\": {\"fields\": [\"badges\"]}}]',14,1),(743,'2019-08-16 02:15:31.657000','57','  3[Math] 56. Sum of digits - Given a number, find the sum of digits.',1,'[{\"added\": {}}]',3,1),(744,'2019-08-16 02:15:44.606000','73','56. 1234 10',1,'[{\"added\": {}}]',4,1),(745,'2019-08-16 02:15:52.699000','74','56. 111111 6',1,'[{\"added\": {}}]',4,1),(746,'2019-08-16 02:23:08.527000','58','  3[String 2] 57. Common multiple - Given a number, return the following rule.\r\n- If the number is a multiple of num1, return \"pypy\"\r\n- If the number is a multiple of num2, return \"kids\"\r\n- If the num',1,'[{\"added\": {}}]',3,1),(747,'2019-08-16 02:23:51.256000','75','57. 10\r\n3\r\n5 \'kids\'',1,'[{\"added\": {}}]',4,1),(748,'2019-08-16 02:24:12.796000','76','57. 10\r\n3\r\n4 \'no\'',1,'[{\"added\": {}}]',4,1),(749,'2019-08-16 04:15:02.468000','59','  3[List 2] 58. Maximum profit - The price of the product changes every day.  There is a daily price in a list.\r\nFind the maximum profit in one transaction.  \r\n(You have to buy the product first and s',1,'[{\"added\": {}}]',3,1),(750,'2019-08-16 04:15:18.439000','77','58. [4, 3, 5, 8, 6] 5',1,'[{\"added\": {}}]',4,1),(751,'2019-08-16 04:17:07.718000','60','  3[List 2] 59. Sum numbers - By provided the method, find the sum of the numbers',1,'[{\"added\": {}}]',3,1),(752,'2019-08-16 04:17:24.356000','78','59. [1, 2, 3, 4, 5] 15',1,'[{\"added\": {}}]',4,1),(753,'2019-08-16 05:00:59.176000','60','  3[List 2] 59. Sum numbers - Find the sum of the numbers using provided the sum method.',2,'[{\"changed\": {\"fields\": [\"question\", \"answer_header\"]}}]',3,1),(754,'2019-08-16 07:16:13.354000','26','  1[DataType] 0. Basic data type - What is the incorrect data types in Python?',2,'[{\"changed\": {\"fields\": [\"video\"]}}]',3,1),(755,'2019-08-16 07:18:15.034000','12','  Super Junior-10. DataType',2,'[{\"changed\": {\"fields\": [\"image\"]}}]',2,1),(756,'2019-08-16 07:32:46.833000','42','  1[DataType] 41. Invalid data type - <p><strong>Choose the invalid list data type.</strong></p>',2,'[{\"changed\": {\"fields\": [\"question\"]}}]',3,1),(757,'2019-08-16 07:33:29.227000','60','  3[List 2] 59. Sum numbers - <p><strong>Find the sum of the numbers using provided the sum method.</strong></p>',2,'[{\"changed\": {\"fields\": [\"question\"]}}]',3,1),(758,'2019-08-16 16:20:52.597000','9','  3[Math] 20. Operator precedence - <p>What will be printed?</p>',2,'[{\"changed\": {\"fields\": [\"question\", \"example\"]}}]',3,1),(759,'2019-08-16 17:40:27.997000','60','  3[List 2] 59. Sum numbers - <p><strong>Find the sum of the numbers using provided the sum method.</strong></p>',2,'[{\"changed\": {\"fields\": [\"example\"]}}]',3,1),(760,'2019-08-16 17:42:55.197000','59','  3[List 2] 58. Maximum profit - <p>The price of the product changes every day. There is a daily price in a list. Find the maximum profit in one transaction. (You have to buy the product first and sel',2,'[{\"changed\": {\"fields\": [\"question\", \"example\"]}}]',3,1),(761,'2019-08-16 17:44:28.475000','59','  3[List 2] 58. Maximum profit - <p>The price of the product changes every day. There is a daily price in a list. Find the maximum profit in one transaction. (You have to buy the product first and sel',2,'[{\"changed\": {\"fields\": [\"example\"]}}]',3,1),(762,'2019-08-16 17:45:01.462000','60','  3[List 2] 59. Sum numbers - <p><strong>Find the sum of the numbers using provided the sum method.</strong></p>',2,'[{\"changed\": {\"fields\": [\"example\"]}}]',3,1),(763,'2019-08-16 17:45:37.075000','59','  3[List 2] 58. Maximum profit - <p>The price of the product changes every day. There is a daily price in a list. Find the maximum profit in one transaction. (You have to buy the product first and sel',2,'[{\"changed\": {\"fields\": [\"example\"]}}]',3,1),(764,'2019-08-16 17:47:37.443000','58','  3[String 2] 57. Common multiple - <p>Given a number, return the following rule.</p>\r\n\r\n<p>- If the number is a multiple of num1, return &quot;pypy&quot;</p>\r\n\r\n<p>- If the number is a multiple of nu',2,'[{\"changed\": {\"fields\": [\"question\", \"example\"]}}]',3,1),(765,'2019-08-16 17:48:31.045000','59','  3[List 2] 58. Maximum profit - <p><strong>The price of the product changes every day. There is a daily price in a list. Find the maximum profit in one transaction. </strong></p>\r\n\r\n<p><strong>(You h',2,'[{\"changed\": {\"fields\": [\"question\"]}}]',3,1),(766,'2019-08-16 17:51:54.355000','58','  3[String 2] 57. Common multiple - <p><strong>Given a number, return the following rule.</strong></p>\r\n\r\n<p>- If the number is a multiple of num1, return &quot;pypy&quot;</p>\r\n\r\n<p>- If the number is',2,'[{\"changed\": {\"fields\": [\"question\", \"example\"]}}]',3,1),(767,'2019-08-16 17:52:28.549000','59','  3[List 2] 58. Maximum profit - <p><strong>The price of the product changes every day. There is a daily price in a list. Find the maximum profit in one transaction. </strong></p>\r\n\r\n<p>(You have to b',2,'[{\"changed\": {\"fields\": [\"question\"]}}]',3,1),(768,'2019-08-16 17:53:46.603000','57','  3[Math] 56. Sum of digits - <p><strong>Given a number, find the sum of digits.</strong></p>',2,'[{\"changed\": {\"fields\": [\"question\", \"example\"]}}]',3,1),(769,'2019-08-16 18:14:12.227000','57','  3[Math] 56. Sum of digits - <p><strong>Given a number, find the sum of digits.</strong></p>',2,'[{\"changed\": {\"fields\": [\"example\"]}}]',3,1),(770,'2019-08-16 18:16:40.235000','60','  3[List 2] 59. Sum numbers - <p><strong>Find the sum of the numbers using provided the sum method.</strong></p>',2,'[{\"changed\": {\"fields\": [\"example\"]}}]',3,1),(771,'2019-08-16 18:37:29.680000','59','  3[List 2] 58. Maximum profit - <p><strong>The price of the product changes every day. There is a daily price in a list. Find the maximum profit in one transaction. </strong></p>\r\n\r\n<p>(You have to b',2,'[{\"changed\": {\"fields\": [\"example\"]}}]',3,1),(772,'2019-08-16 18:44:44.896000','59','  3[List 2] 58. Maximum profit - <p><strong>The price of the product changes every day. There is a daily price in a list. Find the maximum profit in one transaction. </strong></p>\r\n\r\n<p>(You have to b',2,'[{\"changed\": {\"fields\": [\"example\"]}}]',3,1),(773,'2019-08-16 18:55:28.434000','56','  2[String] 55. String join - <p><strong>Choose the result of this code.</strong></p>',2,'[{\"changed\": {\"fields\": [\"question\", \"example\"]}}]',3,1),(774,'2019-08-16 18:58:16.515000','54','  3[List 2] 53. Swap the values - <p><strong>Swap all the values between the i-th element and the j-th element.</strong></p>',2,'[{\"changed\": {\"fields\": [\"question\", \"example\"]}}]',3,1),(775,'2019-08-16 18:59:09.680000','53','  3[For 2] 52. Print star - <p><strong>Return the following list depending on the number.</strong></p>',2,'[{\"changed\": {\"fields\": [\"question\", \"example\"]}}]',3,1),(776,'2019-08-16 19:14:01.736000','58','  3[String 2] 57. Common multiple - <p><strong>Given a number, return the following rule.</strong></p>\r\n\r\n<p>&nbsp; <strong>&bull;&nbsp;</strong>If the number is a multiple of num1, return &quot;pypy&',2,'[{\"changed\": {\"fields\": [\"question\"]}}]',3,1),(777,'2019-08-16 19:14:23.526000','58','  3[String 2] 57. Common multiple - <p><strong>Given a number, return the following rule.</strong></p>\r\n\r\n<p>&nbsp; &nbsp;&nbsp;<strong>&bull;&nbsp;</strong>If the number is a multiple of num1, return',2,'[{\"changed\": {\"fields\": [\"question\"]}}]',3,1),(778,'2019-08-16 19:15:47.856000','55','  2[String] 54. String split - <p><strong>Choose the output&nbsp;of this code.</strong></p>',2,'[{\"changed\": {\"fields\": [\"question\", \"example\"]}}]',3,1),(779,'2019-08-16 19:16:04.490000','56','  2[String] 55. String join - <p><strong>Choose the result of this code.</strong></p>',2,'[{\"changed\": {\"fields\": [\"example\"]}}]',3,1),(780,'2019-08-16 19:16:17.872000','52','  1[Variable] 51. Valid variable - <p><strong>Which one is an invalid variable name?</strong></p>',2,'[{\"changed\": {\"fields\": [\"question\"]}}]',3,1),(781,'2019-08-16 19:16:32.246000','51','  3[List 2] 50. Merge lists - <p><strong>Given the two sorted lists, merge two lists to one sorted list.</strong></p>',2,'[{\"changed\": {\"fields\": [\"question\", \"example\"]}}]',3,1),(782,'2019-08-16 19:17:01.504000','51','  3[List 2] 50. Merge lists - <p><strong>Given the two sorted lists, merge two lists to one sorted list.</strong></p>',2,'[{\"changed\": {\"fields\": [\"example\"]}}]',3,1),(783,'2019-08-16 19:17:10.614000','51','  3[List 2] 50. Merge lists - <p><strong>Given the two sorted lists, merge two lists to one sorted list.</strong></p>',2,'[{\"changed\": {\"fields\": [\"example\"]}}]',3,1),(784,'2019-08-16 19:23:29.619000','50','  3[Math] 49. Fibonacci - <p><strong>Find the n-th Fibonacci numbers. </strong></p>\r\n\r\n<p><strong>The current value is the sum of the previous two values. </strong></p>\r\n\r\n<p><strong>For example, 1, 1',2,'[{\"changed\": {\"fields\": [\"question\", \"example\"]}}]',3,1),(785,'2019-08-16 19:24:21.946000','49','  3[For 2] 48. Print star - <p><strong>Return the following list depending on the number.</strong></p>',2,'[{\"changed\": {\"fields\": [\"question\", \"example\"]}}]',3,1),(786,'2019-08-16 19:25:08.728000','56','  2[String] 55. String join - <p><strong>Choose the result of this code.</strong></p>',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,1),(787,'2019-08-16 19:26:08.032000','49','  3[For 2] 48. Print star - <p><strong>Return the following list depending on the number.</strong></p>',2,'[{\"changed\": {\"fields\": [\"example\"]}}]',3,1),(788,'2019-08-16 19:26:48.275000','48','  3[List 2] 47. Common value - <p><strong>Given two&nbsp;lists, find the common values belong to both.</strong></p>',2,'[{\"changed\": {\"fields\": [\"question\", \"example\"]}}]',3,1),(789,'2019-08-16 19:27:29.372000','47','  3[List 2] 46. Check a value in a list - <p><strong>Given k and list, count the number less than k in the list.</strong></p>',2,'[{\"changed\": {\"fields\": [\"question\", \"example\"]}}]',3,1),(790,'2019-08-16 19:28:35.984000','46','  3[Math] 45. Sum of external angle - <p><strong>Find the sum of the external angle of the n-sided polygon.</strong></p>',2,'[{\"changed\": {\"fields\": [\"question\", \"example\"]}}]',3,1),(791,'2019-08-16 19:29:23.117000','45','  3[Math] 44. Sum of internal angle - <p><strong>Find the sum of the internal angle of the n-sided polygon.</strong></p>',2,'[{\"changed\": {\"fields\": [\"question\", \"example\"]}}]',3,1),(792,'2019-08-16 19:31:53.941000','44','  3[For 2] 43. Remove duplicated character - <p><strong>Given a string, remove adjacent duplicated character in the string.</strong></p>',2,'[{\"changed\": {\"fields\": [\"question\", \"example\"]}}]',3,1),(793,'2019-08-16 19:32:05.047000','44','  3[For 2] 43. Remove duplicated character - <p><strong>Given a string, remove adjacent duplicated character in the string.</strong></p>',2,'[{\"changed\": {\"fields\": [\"example\"]}}]',3,1),(794,'2019-08-16 19:33:22.700000','43','  4[Stack] 42. Find valid parenthesis - <p><strong>Check whether the parenthesis is valid or not.</strong></p>',2,'[{\"changed\": {\"fields\": [\"question\", \"example\"]}}]',3,1),(795,'2019-08-16 19:33:37.409000','41','  1[DataType] 40. Datatype - <p><strong>Which one of them is correct?</strong></p>',2,'[{\"changed\": {\"fields\": [\"question\"]}}]',3,1),(796,'2019-08-16 19:34:34.406000','40','  3[Math] 39. Find a trailing zeros - <p><strong>Find the trailing zero of the integer.</strong></p>',2,'[{\"changed\": {\"fields\": [\"question\", \"example\"]}}]',3,1),(797,'2019-08-16 19:56:05.974000','14','  4[Stack] 38. Reverse a list - <p>Reverse the list by Stack.</p>',2,'[{\"changed\": {\"fields\": [\"explanation\", \"question\", \"example\"]}}]',3,1),(798,'2019-08-16 19:57:05.418000','14','  4[Stack] 38. Reverse a list - <p><strong>Reverse the list by Stack.</strong></p>',2,'[{\"changed\": {\"fields\": [\"explanation\", \"question\"]}}]',3,1),(799,'2019-08-16 19:58:37.778000','39','  3[Math] 37. Power of 2 - <p><strong>Given an integer, check if it is a power of 2.</strong></p>',2,'[{\"changed\": {\"fields\": [\"question\", \"example\"]}}]',3,1),(800,'2019-08-16 20:00:54.499000','38','  3[Set 2] 36. Duplicated number - <p><strong>Check if the list has the duplicated number or not.</strong></p>',2,'[{\"changed\": {\"fields\": [\"question\", \"example\"]}}]',3,1),(801,'2019-08-16 20:04:17.116000','52','  1[Variable] 51. Valid variable - <p><strong>Which one is an invalid variable name?</strong></p>',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,1),(802,'2019-08-16 20:04:29.865000','52','  1[Variable] 51. Valid variable - <p><strong>Which one is an invalid variable name?</strong></p>',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,1),(803,'2019-08-16 20:05:13.733000','37','  3[For 2] 35. Second largest number - <p><strong>Find the second largest number of the list.</strong></p>',2,'[{\"changed\": {\"fields\": [\"question\", \"example\"]}}]',3,1),(804,'2019-08-16 20:05:51.709000','35','  3[Math] 34. Greatest common factor - <p><strong>Given the two integers, find the greatest common factor(GCF).</strong></p>',2,'[{\"changed\": {\"fields\": [\"question\", \"example\"]}}]',3,1),(805,'2019-08-16 20:06:22.983000','34','  3[Math] 33. Leading zeros - <p><strong>Given a decimal less than 1, return the number of leading zeros at the right of the point.</strong></p>',2,'[{\"changed\": {\"fields\": [\"question\", \"example\"]}}]',3,1),(806,'2019-08-16 20:06:47.901000','33','  3[String 2] 32. Remove a word - <p><strong>Remove the third word of the sentence.</strong></p>',2,'[{\"changed\": {\"fields\": [\"question\", \"example\"]}}]',3,1),(807,'2019-08-16 20:07:16.284000','30','  3[List 2] 31. Smallest number - <p><strong>Find the smallest number in a list.</strong></p>',2,'[{\"changed\": {\"fields\": [\"question\", \"example\"]}}]',3,1),(808,'2019-08-16 20:07:44.796000','29','  3[List 2] 30. Rotate a list - <p><strong>Given a list, rotate the list to the right by n steps. (you take the 0th element and put it at the end of the list)</strong></p>',2,'[{\"changed\": {\"fields\": [\"question\", \"example\"]}}]',3,1),(809,'2019-08-16 20:08:26.827000','28','  3[Dictionary 2] 29. Frequency - <p><strong>Find the most frequently appearing character.</strong></p>',2,'[{\"changed\": {\"fields\": [\"question\", \"example\"]}}]',3,1),(810,'2019-08-16 20:08:51.334000','27','  3[List 2] 28. Missing integer - <p><strong>Given an integer array of 1 to N except for one number, find the missing integer.</strong></p>',2,'[{\"changed\": {\"fields\": [\"question\", \"example\"]}}]',3,1),(811,'2019-08-16 20:10:05.689000','23','  3[List 2] 27. Subarray - <p><strong>Find the maximum subarray which has the largest sum. Subarray should have the first element. Return the sum of the maximum subarray.</strong></p>',2,'[{\"changed\": {\"fields\": [\"explanation\", \"question\", \"example\"]}}]',3,1),(812,'2019-08-16 20:10:30.338000','23','  3[List 2] 27. Subarray - <p><strong>Find the maximum subarray which has the largest sum. </strong></p>\r\n\r\n<p><strong>Subarray should have the first element. Return the sum of the maximum subarray.</',2,'[{\"changed\": {\"fields\": [\"question\"]}}]',3,1),(813,'2019-08-16 20:12:10.562000','22','  3[Math] 26. Square root - <p><strong>Find a square root x. A square root value(return value) is always an integer.</strong></p>',2,'[{\"changed\": {\"fields\": [\"question\", \"example\"]}}]',3,1),(814,'2019-08-16 20:13:43.958000','21','  3[List 2] 25. Sorted list - <p><strong>Given the sorted list, insert the value in the right position. It must be sorted in ascending order after insertion.</strong></p>',2,'[{\"changed\": {\"fields\": [\"question\", \"example\"]}}]',3,1),(815,'2019-08-16 20:14:00.083000','21','  3[List 2] 25. Sorted list - <p><strong>Given the sorted list, insert the value in the right position. </strong></p>\r\n\r\n<p><strong>It must be sorted in ascending order after insertion.</strong></p>',2,'[{\"changed\": {\"fields\": [\"question\"]}}]',3,1),(816,'2019-08-16 20:14:49.021000','13','  3[List 2] 24. Reverse a list - <p><strong>Reverse a list by swapping elements.</strong></p>',2,'[{\"changed\": {\"fields\": [\"explanation\", \"question\", \"example\"]}}]',3,1),(817,'2019-08-16 20:15:15.939000','12','  3[List 2] 23. Swap an element - <p><strong>Swap the second element and the last to the second element.</strong></p>',2,'[{\"changed\": {\"fields\": [\"question\", \"example\"]}}]',3,1),(818,'2019-08-16 20:16:09.556000','11','  3[List 2] 22. Swap elements - <p>Swap the first element and the last element.</p>',2,'[{\"changed\": {\"fields\": [\"explanation\", \"title\", \"question\", \"example\"]}}]',3,1),(819,'2019-08-16 20:16:17.769000','11','  3[List 2] 22. Swap elements - <p><strong>Swap the first element and the last element.</strong></p>',2,'[{\"changed\": {\"fields\": [\"question\"]}}]',3,1),(820,'2019-08-16 20:16:45.634000','10','  3[Math] 21. Write a function - <p><strong>Write a code to multiply two numbers.</strong></p>',2,'[{\"changed\": {\"fields\": [\"question\", \"example\"]}}]',3,1),(821,'2019-08-16 20:17:21.145000','9','  3[Math] 20. Operator precedence - <p><strong>What will be printed?</strong></p>',2,'[{\"changed\": {\"fields\": [\"question\", \"example\"]}}]',3,1),(822,'2019-08-16 20:18:30.864000','31','  2[List] 19. Split a list - <p><strong>Split the list into two lists. </strong></p>\r\n\r\n<p><strong>The first list contains odd numbers and the second list contains even numbers. </strong></p>',2,'[{\"changed\": {\"fields\": [\"question\", \"example\"]}}]',3,1),(823,'2019-08-16 20:19:31.554000','25','  2[Class] 18. Incorrect Class - <p><strong>Find the error in the code below.</strong></p>',2,'[{\"changed\": {\"fields\": [\"question\", \"example\"]}}]',3,1),(824,'2019-08-16 20:20:00.442000','25','  2[Class] 18. Incorrect Class - <p><strong>Find the error in the code below.</strong></p>',2,'[{\"changed\": {\"fields\": [\"example\"]}}]',3,1),(825,'2019-08-16 20:22:48.441000','25','  2[Class] 18. Incorrect Class - <p><strong>Find the error in the code below.</strong></p>',2,'[{\"changed\": {\"fields\": [\"example\", \"answer_header\", \"option1\"]}}]',3,1),(826,'2019-08-16 20:25:16.420000','24','  2[Class] 17. Class, Object - <p><strong>What will be printed?</strong></p>',2,'[{\"changed\": {\"fields\": [\"question\", \"example\"]}}]',3,1),(827,'2019-08-16 20:25:41.781000','24','  2[Class] 17. Class, Object - <p><strong>What will be printed?</strong></p>',2,'[{\"changed\": {\"fields\": [\"example\"]}}]',3,1),(828,'2019-08-16 20:26:25.041000','8','  2[Function] 16. Multiply function - <p><strong>What will be printed?</strong></p>',2,'[{\"changed\": {\"fields\": [\"question\", \"example\"]}}]',3,1),(829,'2019-08-16 20:26:58.865000','7','  2[Set] 15. Set contains - <p><strong>What will be printed?</strong></p>',2,'[{\"changed\": {\"fields\": [\"question\", \"example\"]}}]',3,1),(830,'2019-08-16 20:28:23.508000','6','  2[List] 14. List insert - <p><strong>What will be printed?</strong></p>',2,'[{\"changed\": {\"fields\": [\"question\", \"example\"]}}]',3,1),(831,'2019-08-16 20:30:38.837000','4','  2[List] 13. Find a value - <p><strong>What will be printed?</strong></p>',2,'[{\"changed\": {\"fields\": [\"question\", \"example\"]}}]',3,1),(832,'2019-08-16 20:31:17.277000','4','  2[List] 13. Find a value - <p><strong>What will be printed?</strong></p>',2,'[]',3,1),(833,'2019-08-16 20:32:26.311000','4','  2[List] 13. Find a value - <p><strong>What will be printed?</strong></p>',2,'[{\"changed\": {\"fields\": [\"example\"]}}]',3,1),(834,'2019-08-16 20:32:58.363000','4','  2[List] 13. Find a value - <p><strong>What will be printed?</strong></p>',2,'[{\"changed\": {\"fields\": [\"example\"]}}]',3,1),(835,'2019-08-16 20:34:08.571000','3','  2[String] 12. String concatenation - <p><strong>What will be printed?</strong></p>',2,'[{\"changed\": {\"fields\": [\"question\", \"example\"]}}]',3,1),(836,'2019-08-16 20:35:00.232000','3','  2[String] 12. String concatenation - <p><strong>What will be printed?</strong></p>',2,'[{\"changed\": {\"fields\": [\"example\"]}}]',3,1),(837,'2019-08-16 20:35:39.295000','2','  2[Dictionary] 11. Dictionary - <p><strong>What value will be printed?</strong></p>',2,'[{\"changed\": {\"fields\": [\"question\", \"example\"]}}]',3,1),(838,'2019-08-16 20:36:49.545000','20','  1[While] 10. Break - <p><strong>What will be printed?</strong></p>',2,'[{\"changed\": {\"fields\": [\"explanation\", \"question\", \"example\"]}}]',3,1),(839,'2019-08-16 20:37:17.901000','20','  1[While] 10. Break - <p><strong>What will be printed?</strong></p>',2,'[{\"changed\": {\"fields\": [\"example\"]}}]',3,1),(840,'2019-08-16 20:37:42.459000','20','  1[While] 10. Break - <p><strong>What will be printed?</strong></p>',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,1),(841,'2019-08-16 20:38:08.273000','20','  1[While] 10. Break - <p><strong>What will be printed?</strong></p>',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,1),(842,'2019-08-16 20:39:05.204000','19','  1[While] 9. Sum function - <p><strong>What value will be printed?</strong></p>',2,'[{\"changed\": {\"fields\": [\"explanation\", \"question\", \"example\"]}}]',3,1),(843,'2019-08-16 20:39:13.608000','36','  1[Print] 8. Print command - <p><strong>Choose the correct format of print.</strong></p>',2,'[{\"changed\": {\"fields\": [\"question\"]}}]',3,1),(844,'2019-08-16 20:39:28.506000','18','  1[Range] 7. Range summary - <p><strong>Which one is the incorrect format of range?</strong></p>',2,'[{\"changed\": {\"fields\": [\"question\"]}}]',3,1),(845,'2019-08-16 20:40:19.157000','17','  1[Range] 6. Range(start, stop, step) - <p><strong>What is the meaning of this?</strong></p>',2,'[{\"changed\": {\"fields\": [\"explanation\", \"question\", \"example\"]}}]',3,1),(846,'2019-08-16 20:41:54.471000','17','  1[Range] 6. Range(start, stop, step) - <p><strong>What is the meaning of this?</strong></p>',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,1),(847,'2019-08-16 20:42:11.203000','17','  1[Range] 6. Range(start, stop, step) - <p><strong>What is the meaning of this?</strong></p>',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,1),(848,'2019-08-16 20:42:36.075000','26','  1[DataType] 0. Basic data type - <p><strong>What is the incorrect data types in Python?</strong></p>',2,'[{\"changed\": {\"fields\": [\"question\"]}}]',3,1),(849,'2019-08-16 20:42:46.019000','32','  1[DataType] 1. List, Tuple - <p><strong>What is the incorrect data type in Python?</strong></p>',2,'[{\"changed\": {\"fields\": [\"question\"]}}]',3,1),(850,'2019-08-16 20:42:52.787000','1','  1[For] 2. Sum function - <p><strong>Which value will be printed?</strong></p>',2,'[{\"changed\": {\"fields\": [\"question\", \"example\"]}}]',3,1),(851,'2019-08-16 20:43:42.796000','1','  1[For] 2. Sum function - <p><strong>Which value will be printed?</strong></p>',2,'[{\"changed\": {\"fields\": [\"example\"]}}]',3,1),(852,'2019-08-16 20:44:24.369000','5','  1[While] 3. Add function - <p><strong>Which value will be printed?</strong></p>',2,'[{\"changed\": {\"fields\": [\"question\", \"example\"]}}]',3,1),(853,'2019-08-16 20:45:03.298000','15','  1[Range] 4. Range(stop) - <p><strong>What is the meaning of this?</strong></p>',2,'[{\"changed\": {\"fields\": [\"explanation\", \"question\", \"example\"]}}]',3,1),(854,'2019-08-16 20:45:39.368000','15','  1[Range] 4. Range(stop) - <p><strong>What is the meaning of this?</strong></p>',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,1),(855,'2019-08-16 20:46:31.497000','15','  1[Range] 4. Range(stop) - <p><strong>What is the meaning of this?</strong></p>',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,1),(856,'2019-08-16 20:47:25.020000','16','  1[Range] 5. Range(start, stop) - <p>What is the meaning of this?</p>',2,'[{\"changed\": {\"fields\": [\"explanation\", \"question\", \"example\"]}}]',3,1),(857,'2019-08-16 20:47:43.442000','16','  1[Range] 5. Range(start, stop) - <p><strong>What is the meaning of this?</strong></p>',2,'[{\"changed\": {\"fields\": [\"explanation\", \"question\"]}}]',3,1),(858,'2019-08-16 20:48:27.032000','17','  1[Range] 6. Range(start, stop, step) - <p><strong>What is the meaning of this?</strong></p>',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,1),(859,'2019-08-16 20:48:52.515000','26','  1[DataType] 0. Basic data type - <p><strong>What is the incorrect data types in Python?</strong></p>',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,1),(860,'2019-08-16 20:49:09.617000','32','  1[DataType] 1. List, Tuple - <p><strong>What is the incorrect data type in Python?</strong></p>',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,1),(861,'2019-08-16 20:51:37.390000','13','  3[List 2] 24. Reverse a list - <p><strong>Reverse a list by swapping elements.</strong></p>',2,'[]',3,1),(862,'2019-08-16 20:52:05.590000','16','  1[Range] 5. Range(start, stop) - <p><strong>What is the meaning of this?</strong></p>',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,1),(863,'2019-08-16 21:15:12.472000','58','  3[String 2] 57. Common multiple - <p><strong>Given a number, return the following rule.</strong></p>\r\n\r\n<p>&nbsp; &nbsp;&nbsp;<strong>&bull;&nbsp;</strong>If the number is a multiple of num1, return',2,'[{\"changed\": {\"fields\": [\"example\"]}}]',3,1),(864,'2019-08-17 08:58:35.752000','61','  2[List] 60.  - <p>Find the output of the code.</p>',1,'[{\"added\": {}}]',3,1),(865,'2019-08-17 08:59:53.517000','61','  2[List] 13. Remove List - <p>Find the output of the code.</p>',2,'[{\"changed\": {\"fields\": [\"title\"]}}]',3,1),(866,'2019-08-17 09:01:15.513000','61','  2[List] 13. Remove List - <p>Find the output of the code.</p>',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,1),(867,'2019-08-17 09:21:14.840000','4','  Junior-23. List',2,'[{\"changed\": {\"fields\": [\"image\"]}}]',2,1),(868,'2019-08-17 19:26:05.977000','61','  2[List] 13. Manage List - <p>Find the output of the code.</p>',2,'[{\"changed\": {\"fields\": [\"title\"]}}]',3,1),(869,'2019-08-17 19:48:55.348000','62','  2[List] 61. Append a value to the list',1,'[{\"added\": {}}]',3,1),(870,'2019-08-17 19:50:00.198000','62','  2[List] 61. Append a value to the list',2,'[{\"changed\": {\"fields\": [\"question\", \"example\"]}}]',3,1),(871,'2019-08-17 20:00:19.608000','62','  2[List] 61. Append a value to the list',2,'[{\"changed\": {\"fields\": [\"option4\"]}}]',3,1),(872,'2019-08-17 20:00:36.100000','79','61.  3',1,'[{\"added\": {}}]',4,1),(873,'2019-08-17 20:04:25.386000','62','  2[List] 61. List append',2,'[{\"changed\": {\"fields\": [\"title\"]}}]',3,1),(874,'2019-08-17 20:09:07.616000','61','  2[List] 13. Manage List',2,'[{\"changed\": {\"fields\": [\"question\"]}}]',3,1),(875,'2019-08-17 20:09:45.261000','61','  2[List] 13. Manage List',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,1),(876,'2019-08-17 21:02:38.147000','58','  3[String 2] 59. Leap year',2,'[{\"changed\": {\"fields\": [\"explanation\", \"title\", \"question\", \"example\"]}}]',3,1),(877,'2019-08-17 21:03:25.883000','76','59. 2020 366',2,'[{\"changed\": {\"fields\": [\"test\", \"expected_answer\"]}}]',4,1),(878,'2019-08-17 21:03:40.141000','75','59. 2019 365',2,'[{\"changed\": {\"fields\": [\"test\", \"expected_answer\"]}}]',4,1),(879,'2019-08-17 21:03:57.840000','80','59. 2000 365',1,'[{\"added\": {}}]',4,1),(880,'2019-08-17 21:04:18.130000','81','59. 1900 365',1,'[{\"added\": {}}]',4,1),(881,'2019-08-17 21:04:26.917000','80','59. 2000 366',2,'[{\"changed\": {\"fields\": [\"expected_answer\"]}}]',4,1),(882,'2019-08-17 21:05:10.142000','58','  3[String 2] 59. Leap year',2,'[{\"changed\": {\"fields\": [\"example\"]}}]',3,1),(883,'2019-08-17 21:47:01.051000','25','  2[Class] 21. Incorrect Class',2,'[{\"changed\": {\"fields\": [\"option1\"]}}]',3,1),(884,'2019-08-17 21:53:24.172000','58','  3[Math] 59. Leap year',2,'[{\"changed\": {\"fields\": [\"category\"]}}]',3,1),(885,'2019-08-17 21:53:44.608000','58','  3[Math] 59. Leap year',2,'[{\"changed\": {\"fields\": [\"answer_header\"]}}]',3,1),(886,'2019-08-17 23:59:58.802000','82','13.  4',1,'[{\"added\": {}}]',4,1),(887,'2019-08-18 00:02:21.846000','79','14.  4',2,'[{\"changed\": {\"fields\": [\"expected_answer\"]}}]',4,1),(888,'2019-08-19 02:32:17.219000','13','  Super Junior-13. Operator',2,'[{\"changed\": {\"fields\": [\"visible\"]}}]',2,1),(889,'2019-08-19 02:37:49.131000','63','  1[Operator] 62. Arithmetic Operator',1,'[{\"added\": {}}]',3,1),(890,'2019-08-19 02:38:02.262000','83','62.  3',1,'[{\"added\": {}}]',4,1),(891,'2019-08-19 02:38:59.000000','63','  1[Operator] 62. Arithmetic Operator',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,1),(892,'2019-08-19 02:49:39.618000','64','  2[String] 63. Same string',1,'[{\"added\": {}}]',3,1),(893,'2019-08-19 02:50:06.688000','84','63. \"abcc\"\r\n\"bcac\" True',1,'[{\"added\": {}}]',4,1),(894,'2019-08-19 02:50:19.206000','85','63. \"abb\"\r\n\"baa\" False',1,'[{\"added\": {}}]',4,1),(895,'2019-08-19 02:52:17.559000','64','  2[String] 63. String transform',2,'[{\"changed\": {\"fields\": [\"title\", \"question\"]}}]',3,1),(896,'2019-08-19 03:05:42.474000','65','  2[String] 64. Palindrome',1,'[{\"added\": {}}]',3,1),(897,'2019-08-19 03:05:57.789000','86','64. \"racecar\" True',1,'[{\"added\": {}}]',4,1),(898,'2019-08-19 03:06:10.812000','87','64. \"pypy\" False',1,'[{\"added\": {}}]',4,1),(899,'2019-08-19 03:19:23.097000','66','  2[List] 65. Adjacent same numbers',1,'[{\"added\": {}}]',3,1),(900,'2019-08-19 03:19:46.112000','88','65. Adjacent same numbers - [4, 4, 4, 1, 1, 1, 2, 3, 4] 3',1,'[{\"added\": {}}]',4,1),(901,'2019-08-19 03:19:56.849000','89','65. Adjacent same numbers - [1, 2, 3, 4] 1',1,'[{\"added\": {}}]',4,1),(902,'2019-08-19 03:21:44.784000','67','  3[List 2] 66. Maximum value',1,'[{\"added\": {}}]',3,1),(903,'2019-08-19 03:22:05.558000','90','66. Maximum value - [4, 1, 2, 6, 4, 5] 6',1,'[{\"added\": {}}]',4,1),(904,'2019-08-19 04:30:30.542000','71','Dayeon 2019-08-17 23:57:31.003772+00:00',3,'',12,1),(905,'2019-08-19 04:53:47.279000','64','  3[String 2] 63. String transform',2,'[{\"changed\": {\"fields\": [\"category\"]}}]',3,1),(906,'2019-08-19 04:54:20.609000','66','  3[List 2] 65. Adjacent same numbers',2,'[{\"changed\": {\"fields\": [\"category\"]}}]',3,1),(907,'2019-08-19 16:01:13.946000','78','61. Dayeon 08-18-2019 22:05',2,'[{\"changed\": {\"fields\": [\"answer\", \"right\", \"testcase\", \"stdout\", \"output\", \"expected_answer\"]}}]',12,1),(908,'2019-08-19 16:01:44.932000','78','61. Dayeon 08-18-2019 09:01',2,'[{\"changed\": {\"fields\": [\"date\"]}}]',12,1),(909,'2019-08-19 16:12:21.655000','66','  3[List 2] 65. Adjacent same numbers',2,'[{\"changed\": {\"fields\": [\"answer_header\"]}}]',3,1),(910,'2019-08-19 16:12:48.677000','64','  3[String 2] 63. String transform',2,'[{\"changed\": {\"fields\": [\"answer_header\"]}}]',3,1),(911,'2019-08-19 16:13:29.944000','59','  3[List 2] 60. Maximum profit',2,'[{\"changed\": {\"fields\": [\"answer_header\"]}}]',3,1),(912,'2019-08-19 16:14:04.729000','50','  3[Math] 51. Fibonacci',2,'[{\"changed\": {\"fields\": [\"answer_header\"]}}]',3,1),(913,'2019-08-19 16:14:19.850000','46','  3[Math] 47. Sum of external angle',2,'[{\"changed\": {\"fields\": [\"answer_header\"]}}]',3,1),(914,'2019-08-19 16:21:26.833000','67','  3[List 2] 66. Maximum value',2,'[{\"changed\": {\"fields\": [\"answer_header\"]}}]',3,1),(915,'2019-08-19 16:21:54.578000','65','  2[String] 64. Palindrome',2,'[{\"changed\": {\"fields\": [\"answer_header\"]}}]',3,1),(916,'2019-08-19 16:22:04.145000','64','  3[String 2] 63. String transform',2,'[]',3,1),(917,'2019-08-19 16:22:35.555000','60','  3[List 2] 61. Sum numbers',2,'[{\"changed\": {\"fields\": [\"answer_header\"]}}]',3,1),(918,'2019-08-19 16:22:49.211000','58','  3[Math] 59. Leap year',2,'[{\"changed\": {\"fields\": [\"answer_header\"]}}]',3,1),(919,'2019-08-19 16:23:01.498000','57','  3[Math] 58. Sum of digits',2,'[{\"changed\": {\"fields\": [\"answer_header\"]}}]',3,1),(920,'2019-08-19 16:23:24.615000','54','  3[List 2] 55. Swap the values',2,'[{\"changed\": {\"fields\": [\"answer_header\"]}}]',3,1),(921,'2019-08-19 16:32:14.591000','53','  3[For 2] 54. Print star',2,'[{\"changed\": {\"fields\": [\"answer_header\"]}}]',3,1),(922,'2019-08-19 16:33:26.350000','51','  3[List 2] 52. Merge lists',2,'[{\"changed\": {\"fields\": [\"answer_header\"]}}]',3,1),(923,'2019-08-19 16:33:41.681000','49','  3[For 2] 50. Print star',2,'[{\"changed\": {\"fields\": [\"answer_header\"]}}]',3,1),(924,'2019-08-19 16:33:53.662000','48','  3[List 2] 49. Common value',2,'[{\"changed\": {\"fields\": [\"answer_header\"]}}]',3,1),(925,'2019-08-19 16:34:06.928000','47','  3[List 2] 48. Check a value in a list',2,'[{\"changed\": {\"fields\": [\"answer_header\"]}}]',3,1),(926,'2019-08-19 16:34:27.008000','45','  3[Math] 46. Sum of internal angle',2,'[{\"changed\": {\"fields\": [\"answer_header\"]}}]',3,1),(927,'2019-08-19 16:34:35.977000','44','  3[For 2] 45. Remove duplicated character',2,'[{\"changed\": {\"fields\": [\"answer_header\"]}}]',3,1),(928,'2019-08-19 16:34:45.171000','43','  4[Stack] 44. Find valid parenthesis',2,'[{\"changed\": {\"fields\": [\"answer_header\"]}}]',3,1),(929,'2019-08-19 16:34:59.807000','40','  3[Math] 41. Find a trailing zeros',2,'[{\"changed\": {\"fields\": [\"answer_header\"]}}]',3,1),(930,'2019-08-19 16:35:09.334000','14','  4[Stack] 40. Reverse a list',2,'[{\"changed\": {\"fields\": [\"answer_header\"]}}]',3,1),(931,'2019-08-19 16:35:16.540000','39','  3[Math] 39. Power of 2',2,'[{\"changed\": {\"fields\": [\"answer_header\"]}}]',3,1),(932,'2019-08-19 16:35:25.274000','38','  3[Set 2] 38. Duplicated number',2,'[{\"changed\": {\"fields\": [\"answer_header\"]}}]',3,1),(933,'2019-08-19 16:35:33.407000','37','  3[For 2] 37. Second largest number',2,'[{\"changed\": {\"fields\": [\"answer_header\"]}}]',3,1),(934,'2019-08-19 16:35:41.286000','35','  3[Math] 36. Greatest common factor',2,'[{\"changed\": {\"fields\": [\"answer_header\"]}}]',3,1),(935,'2019-08-19 16:35:54.136000','34','  3[Math] 35. Leading zeros',2,'[{\"changed\": {\"fields\": [\"answer_header\"]}}]',3,1),(936,'2019-08-19 16:36:02.973000','33','  3[String 2] 34. Remove a word',2,'[{\"changed\": {\"fields\": [\"answer_header\"]}}]',3,1),(937,'2019-08-19 16:36:11.672000','30','  3[List 2] 33. Smallest number',2,'[{\"changed\": {\"fields\": [\"answer_header\"]}}]',3,1),(938,'2019-08-19 16:36:20.032000','29','  3[List 2] 32. Rotate a list',2,'[{\"changed\": {\"fields\": [\"answer_header\"]}}]',3,1),(939,'2019-08-19 16:36:28.113000','28','  3[Dictionary 2] 31. Frequency',2,'[{\"changed\": {\"fields\": [\"answer_header\"]}}]',3,1),(940,'2019-08-19 16:36:36.052000','27','  3[List 2] 30. Missing integer',2,'[{\"changed\": {\"fields\": [\"answer_header\"]}}]',3,1),(941,'2019-08-19 16:36:43.640000','23','  3[List 2] 29. Subarray',2,'[{\"changed\": {\"fields\": [\"answer_header\"]}}]',3,1),(942,'2019-08-19 16:36:50.796000','22','  3[Math] 28. Square root',2,'[{\"changed\": {\"fields\": [\"answer_header\"]}}]',3,1),(943,'2019-08-19 16:37:02.949000','21','  3[List 2] 27. Sorted list',2,'[{\"changed\": {\"fields\": [\"answer_header\"]}}]',3,1),(944,'2019-08-19 16:37:11.112000','13','  3[List 2] 26. Reverse a list',2,'[{\"changed\": {\"fields\": [\"answer_header\"]}}]',3,1),(945,'2019-08-19 16:37:19.341000','12','  3[List 2] 25. Swap an element',2,'[{\"changed\": {\"fields\": [\"answer_header\"]}}]',3,1),(946,'2019-08-19 16:37:27.288000','11','  3[List 2] 24. Swap elements',2,'[{\"changed\": {\"fields\": [\"answer_header\"]}}]',3,1),(947,'2019-08-19 16:37:36.289000','10','  3[Math] 23. Write a function',2,'[{\"changed\": {\"fields\": [\"answer_header\"]}}]',3,1),(948,'2019-08-19 16:38:04.321000','31','  2[List] 17. Split a list',2,'[{\"changed\": {\"fields\": [\"answer_header\"]}}]',3,1),(949,'2019-08-19 16:41:32.410000','55','  2[String] 56. String split',2,'[{\"changed\": {\"fields\": [\"answer_header\"]}}]',3,1),(950,'2019-08-19 16:41:46.221000','41','  1[DataType] 42. Datatype',2,'[{\"changed\": {\"fields\": [\"answer_header\"]}}]',3,1),(951,'2019-08-19 17:03:47.378000','68','  4[Stack] 67. Remove outermost parenthesis',1,'[{\"added\": {}}]',3,1),(952,'2019-08-19 17:04:14.013000','91','67. Remove outermost parenthesis - \'(()())\' \'()()\'',1,'[{\"added\": {}}]',4,1),(953,'2019-08-19 17:04:42.415000','92','67. Remove outermost parenthesis - \'()()\' \'\'',1,'[{\"added\": {}}]',4,1),(954,'2019-08-20 05:22:29.213000','33','x High-42. Linked List',1,'[{\"added\": {}}]',2,1),(955,'2019-08-20 05:22:43.374000','33','  High-42. Linked List',2,'[{\"changed\": {\"fields\": [\"visible\"]}}]',2,1),(956,'2019-08-20 05:23:28.247000','33','x High-42. Tree',2,'[{\"changed\": {\"fields\": [\"name\", \"desc\", \"visible\"]}}]',2,1),(957,'2019-08-20 05:23:40.861000','31','  High-40. Linked List',2,'[{\"changed\": {\"fields\": [\"desc\", \"visible\"]}}]',2,1),(958,'2019-08-20 05:33:01.869000','69','  4[Linked List] 68. Linked list',1,'[{\"added\": {}}]',3,1),(959,'2019-08-20 05:34:36.560000','69','  4[Linked List] 68. Linked list',2,'[{\"changed\": {\"fields\": [\"example\"]}}]',3,1),(960,'2019-08-20 05:35:06.682000','69','  4[Linked List] 68. Linked list',2,'[{\"changed\": {\"fields\": [\"example\"]}}]',3,1),(961,'2019-08-20 05:54:41.451000','69','  4[Linked List] 68. Find the max from linked list',2,'[{\"changed\": {\"fields\": [\"explanation\", \"title\", \"question\", \"example\", \"answer_header\"]}}]',3,1),(962,'2019-08-20 06:01:55.709000','69','  4[Linked List] 68. Find the max from linked list',2,'[{\"changed\": {\"fields\": [\"example\"]}}]',3,1),(963,'2019-08-20 06:02:09.489000','69','  4[Linked List] 68. Find the max from linked list',2,'[{\"changed\": {\"fields\": [\"example\"]}}]',3,1),(964,'2019-08-20 06:02:24.328000','69','  4[Linked List] 68. Find the max from linked list',2,'[{\"changed\": {\"fields\": [\"example\"]}}]',3,1),(965,'2019-08-20 06:06:39.326000','69','  4[Linked List] 68. Find the max from linked list',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,1),(966,'2019-08-20 06:07:04.986000','93','68. Find the max from linked list - Node[1, 4, 3, 2] 4',1,'[{\"added\": {}}]',4,1),(967,'2019-08-20 06:08:40.758000','80','68. Dayeon 08-20-2019 06:08',3,'',12,1),(968,'2019-08-20 06:21:27.533000','69','  4[Linked List] 68. Find the max from linked list',2,'[{\"changed\": {\"fields\": [\"explanation\", \"answer_header\"]}}]',3,1),(969,'2019-08-20 06:27:29.726000','69','  4[Linked List] 68. Find the maximum',2,'[{\"changed\": {\"fields\": [\"title\"]}}]',3,1),(970,'2019-08-20 07:55:40.952000','69','  4[Linked List] 68. Find the maximum',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,1),(971,'2019-08-20 08:05:28.294000','69','  4[Linked List] 68. Find the maximum',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,1),(972,'2019-08-20 08:06:11.268000','69','  4[Linked List] 68. Find the maximum',2,'[{\"changed\": {\"fields\": [\"explanation\", \"example\"]}}]',3,1),(973,'2019-08-20 08:07:36.882000','69','  4[Linked List] 68. Find the maximum',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,1),(974,'2019-08-20 08:12:35.487000','69','  4[Linked List] 68. Find the maximum',2,'[{\"changed\": {\"fields\": [\"answer_header\"]}}]',3,1),(975,'2019-08-20 08:12:48.692000','69','  4[Linked List] 68. Find the maximum',2,'[{\"changed\": {\"fields\": [\"answer_header\"]}}]',3,1),(976,'2019-08-20 08:17:46.902000','69','  4[Linked List] 68. Find the maximum',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,1),(977,'2019-08-22 04:04:17.442000','54','43. Dayeon 08-04-2019 09:47',2,'[{\"changed\": {\"fields\": [\"right\"]}}]',12,1),(978,'2019-08-24 03:41:39.903812','3','dayeon2',3,'',9,1),(979,'2019-08-24 05:28:10.450679','5','testtest2',3,'',9,1),(980,'2019-08-24 05:28:10.454113','4','youngwan2',3,'',9,1),(981,'2019-08-24 07:06:44.720468','6','youngwan2',3,'',9,1),(982,'2019-08-24 07:06:44.760516','7','youngwan4',3,'',9,1),(983,'2019-08-24 16:35:23.598206','80','67. Dayeon 08-24 16:33',2,'[{\"changed\": {\"fields\": [\"right\"]}}]',12,1),(984,'2019-08-24 16:35:59.406713','80','67. Dayeon 08-24 16:33',2,'[{\"changed\": {\"fields\": [\"right\"]}}]',12,1),(985,'2019-08-24 22:20:29.672039','80','67. Dayeon 08-24 16:33',2,'[{\"changed\": {\"fields\": [\"right\"]}}]',12,1),(986,'2019-08-24 22:20:48.599366','80','67. Dayeon 08-24 16:33',2,'[{\"changed\": {\"fields\": [\"right\"]}}]',12,1),(987,'2019-08-24 22:35:26.473343','80','67. Dayeon 08-24 16:33',2,'[{\"changed\": {\"fields\": [\"right\"]}}]',12,1),(988,'2019-08-24 22:39:05.528377','80','67. Dayeon 08-24 16:33',2,'[{\"changed\": {\"fields\": [\"right\"]}}]',12,1),(989,'2019-08-24 22:39:23.511925','80','67. Dayeon 08-24 16:33',3,'',12,1),(990,'2019-08-25 01:39:55.719790','38','34. Dayeon 2019-07-21 right:1',2,'[{\"changed\": {\"fields\": [\"date\"]}}]',12,1),(991,'2019-08-25 01:40:17.480635','81','68. Dayeon 2019-08-24 right:-1',3,'',12,1),(992,'2019-08-25 01:44:19.547009','82','51. Dayeon 2019-08-24 right:-1',3,'',12,1),(993,'2019-08-25 03:06:22.282511','51','42. Datatype -  1',2,'[{\"changed\": {\"fields\": [\"expected_answer\"]}}]',4,1),(994,'2019-08-25 03:06:56.003355','41','  1[DataType] 42. Datatype  08-03 10:15',2,'[{\"changed\": {\"fields\": [\"question\"]}}]',3,1),(995,'2019-08-25 03:26:21.670118','36','  1[Print] 8. Print command  08-01 00:45',2,'[{\"changed\": {\"fields\": [\"option1\"]}}]',3,1),(996,'2019-08-25 03:32:01.029139','36','  1[Print] 8. Print command  08-01 00:45',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,1),(997,'2019-08-25 03:33:05.131407','36','  1[Print] 8. Print command  08-01 00:45',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,1),(998,'2019-08-25 03:34:37.426846','36','  1[Print] 8. Print command  08-01 00:45',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,1),(999,'2019-08-25 03:36:05.387189','36','  1[Print] 8. Print command  08-01 00:45',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,1),(1000,'2019-08-25 03:36:34.222799','36','  1[Print] 8. Print command  08-01 00:45',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,1),(1001,'2019-08-25 03:36:47.318973','36','  1[Print] 8. Print command  08-01 00:45',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,1),(1002,'2019-08-25 03:37:47.560794','52','  1[Variable] 53. Valid variable  08-07 22:25',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,1),(1003,'2019-08-25 05:15:36.712642','8','youngwan4',3,'',9,1),(1004,'2019-08-25 05:19:40.319677','1','dayeon',2,'[{\"changed\": {\"fields\": [\"name\"]}}]',14,1),(1005,'2019-08-25 05:20:12.107944','2','dayeon',2,'[{\"changed\": {\"fields\": [\"is_staff\", \"is_superuser\"]}}]',9,1),(1006,'2019-08-26 03:31:20.941207','61','  2[List] 13. Manage List  08-17 01:35',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(1007,'2019-08-26 03:42:04.217061','26','  1[DataType] 0. Basic data type  07-22 23:03',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(1008,'2019-08-26 03:42:52.140268','26','  1[DataType] 0. Basic data type  07-22 23:03',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(1009,'2019-08-26 03:43:48.409083','26','  1[DataType] 0. Basic data type  07-22 23:03',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(1010,'2019-08-26 03:45:21.095058','63','  1[Operator] 62. Arithmetic Operator  08-18 19:32',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(1011,'2019-08-26 03:56:20.988900','70','  1[DataType] 69. Set, Dictionary  08-25 20:48',1,'[{\"added\": {}}]',3,2),(1012,'2019-08-26 03:56:37.062179','94','69. Set, Dictionary -  1',1,'[{\"added\": {}}]',4,2),(1013,'2019-08-26 03:58:39.638881','70','  1[DataType] 2. Set, Dictionary  08-25 20:48',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(1014,'2019-08-26 03:59:18.029665','70','  1[DataType] 2. Set, Dictionary  08-25 20:48',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(1015,'2019-08-26 03:59:27.656682','70','  1[DataType] 2. Set, Dictionary  08-25 20:48',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(1016,'2019-08-26 04:04:18.963878','32','  1[DataType] 1. List, Tuple  07-28 23:11',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(1017,'2019-08-27 10:37:35.041102','2','youngwan',1,'[{\"added\": {}}]',14,2),(1018,'2019-08-29 03:25:30.048318','52','  1[Variable] 54. Valid variable  08-07 22:25',2,'[{\"changed\": {\"fields\": [\"explanation\", \"question\"]}}]',3,2),(1019,'2019-08-29 03:25:56.008004','52','  1[Variable] 54. Valid variable  08-07 22:25',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(1020,'2019-08-29 03:26:43.683514','52','  1[Variable] 54. Valid variable  08-07 22:25',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(1021,'2019-08-29 03:27:11.359522','52','  1[Variable] 54. Valid variable  08-07 22:25',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(1022,'2019-08-29 03:27:43.920874','52','  1[Variable] 54. Valid variable  08-07 22:25',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(1023,'2019-08-29 03:28:27.746857','52','  1[Variable] 54. Valid variable  08-07 22:25',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(1024,'2019-08-29 03:36:14.628409','52','  1[Variable] 54. Valid variable  08-07 22:25',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(1025,'2019-08-29 03:41:32.850014','71','  1[Variable] 70. Variable naming convention  08-28 20:39',1,'[{\"added\": {}}]',3,2),(1026,'2019-08-29 03:41:43.160461','95','70. Variable naming convention -  2',1,'[{\"added\": {}}]',4,2),(1027,'2019-08-29 03:42:19.288122','52','  1[Variable] 54. Variable naming rule  08-07 22:25',2,'[{\"changed\": {\"fields\": [\"explanation\", \"title\"]}}]',3,2),(1028,'2019-08-29 03:50:25.769684','71','  1[Variable] 70. Variable naming convention  08-28 20:39',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(1029,'2019-08-29 03:50:41.763921','71','  1[Variable] 70. Variable naming convention  08-28 20:39',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(1030,'2019-08-29 03:51:36.993049','71','  1[Variable] 70. Variable naming convention  08-28 20:39',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(1031,'2019-08-29 03:52:35.651000','71','  1[Variable] 70. Variable naming convention  08-28 20:39',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(1032,'2019-08-29 06:06:04.610425','63','  1[Operator] 63. Arithmetic Operator  08-18 19:32',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(1033,'2019-08-29 06:07:00.260302','63','  1[Operator] 63. Arithmetic Operator  08-18 19:32',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(1034,'2019-08-29 06:09:43.080735','63','  1[Operator] 63. Arithmetic Operator  08-18 19:32',2,'[{\"changed\": {\"fields\": [\"question\", \"option1\", \"option2\", \"option3\", \"option4\"]}}]',3,2),(1035,'2019-08-29 06:11:23.653227','63','  1[Operator] 63. Arithmetic Operator  08-18 19:32',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(1036,'2019-08-29 06:27:12.028209','72','  1[Operator] 71. Relational Operator  08-28 23:18',1,'[{\"added\": {}}]',3,2),(1037,'2019-08-29 06:27:22.519481','96','71. Relational Operator -  4',1,'[{\"added\": {}}]',4,2),(1038,'2019-08-29 06:29:17.546182','72','  1[Operator] 71. Relational Operator  08-28 23:18',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(1039,'2019-08-29 06:30:04.247770','72','  1[Operator] 71. Relational Operator  08-28 23:18',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(1040,'2019-08-29 06:31:23.994975','72','  1[Operator] 71. Relational Operator  08-28 23:18',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(1041,'2019-08-29 06:34:07.760454','72','  1[Operator] 71. Relational Operator  08-28 23:18',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(1042,'2019-08-29 06:34:57.306748','72','  1[Operator] 71. Relational Operator  08-28 23:18',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(1043,'2019-08-29 06:36:09.760764','72','  1[Operator] 71. Relational Operator  08-28 23:18',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(1044,'2019-08-29 07:06:01.786008','71','  1[Variable] 70. Variable naming convention  08-28 20:39',2,'[{\"changed\": {\"fields\": [\"question\"]}}]',3,2),(1045,'2019-08-29 07:06:41.994712','71','  1[Variable] 70. Variable naming convention  08-28 20:39',2,'[{\"changed\": {\"fields\": [\"explanation\", \"question\"]}}]',3,2),(1046,'2019-08-29 07:42:08.314382','69','  4[Linked List] 69. Find the maximum  08-19 22:15',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(1047,'2019-08-29 07:44:45.068452','9','  3[Math] 23. Operator precedence  07-18 02:51',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(1048,'2019-08-29 07:47:52.992616','63','  1[Operator] 63. Arithmetic Operator  08-18 19:32',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(1049,'2019-08-29 07:51:05.268083','73','  1[Operator] 72. Assignment  08-29 00:12',1,'[{\"added\": {}}]',3,2),(1050,'2019-08-29 07:51:13.255912','97','72. Assignment -  12',1,'[{\"added\": {}}]',4,2),(1051,'2019-08-29 07:52:11.529588','73','  1[Operator] 72. Assign Operator  08-29 00:12',2,'[{\"changed\": {\"fields\": [\"title\"]}}]',3,2),(1052,'2019-08-29 07:52:30.591820','73','  1[Operator] 72. Assignment Operator  08-29 00:12',2,'[{\"changed\": {\"fields\": [\"title\"]}}]',3,2),(1053,'2019-08-29 08:05:55.558147','73','  1[Operator] 72. Assignment Operator  08-29 00:12',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(1054,'2019-08-29 08:06:54.503052','73','  1[Operator] 72. Assignment Operator  08-29 00:12',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(1055,'2019-08-29 08:07:25.914850','72','  1[Operator] 71. Relational Operator  08-28 23:18',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(1056,'2019-08-29 08:31:05.320610','74','  1[Operator] 73. Logical Operator  08-29 01:11',1,'[{\"added\": {}}]',3,2),(1057,'2019-08-29 08:31:13.674559','98','73. Logical Operator -  3',1,'[{\"added\": {}}]',4,2),(1058,'2019-08-29 08:32:14.137382','74','  1[Operator] 73. Logical Operator  08-29 01:11',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(1059,'2019-08-29 08:34:39.274801','72','  1[Operator] 71. Relational Operator  08-28 23:18',2,'[{\"changed\": {\"fields\": [\"option4\"]}}]',3,2),(1060,'2019-08-29 08:41:55.086443','19','  1[While] 10. Sum function  07-21 00:00',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(1061,'2019-08-29 08:42:37.238033','19','  1[While] 10. Sum function  07-21 00:00',2,'[]',3,2),(1062,'2019-08-29 08:43:42.043863','66','  3[List 2] 66. Adjacent same numbers  08-18 20:15',2,'[{\"changed\": {\"fields\": [\"example\"]}}]',3,2),(1063,'2019-08-29 08:47:26.091806','66','  3[List 2] 66. Adjacent same numbers  08-18 20:15',2,'[]',3,2),(1064,'2019-08-30 04:58:38.658673','75','  2[List] 74. Split an array into two with equal Sum  08-29 21:53',1,'[{\"added\": {}}]',3,2),(1065,'2019-08-30 04:58:57.875567','99','74. Split an array into two with equal Sum - [1, 3, 2, 2] True',1,'[{\"added\": {}}]',4,2),(1066,'2019-08-30 04:59:17.674792','100','74. Split an array into two with equal Sum - [1, 3, 5, 9] True',1,'[{\"added\": {}}]',4,2),(1067,'2019-08-30 04:59:25.701068','101','74. Split an array into two with equal Sum - [1, 2, 3, 4] False',1,'[{\"added\": {}}]',4,2),(1068,'2019-08-30 05:31:51.645446','76','  2[List] 75. Sliding Window Maximum  08-29 22:15',1,'[{\"added\": {}}]',3,2),(1069,'2019-08-30 05:32:34.742231','102','75. Sliding Window Maximum - [5, 3, 2, 6, 4, 3, 3]\r\n3 13',1,'[{\"added\": {}}]',4,2),(1070,'2019-08-31 04:03:14.130881','29','  Junior High-30. Advanced For',2,'[{\"changed\": {\"fields\": [\"name\"]}}]',2,2),(1071,'2019-08-31 04:03:30.458931','20','x Junior High-31. Advanced Integer',2,'[{\"changed\": {\"fields\": [\"name\"]}}]',2,2),(1072,'2019-08-31 04:03:45.378419','21','  Junior High-32. Advanced String',2,'[{\"changed\": {\"fields\": [\"name\"]}}]',2,2),(1073,'2019-08-31 04:03:56.643484','19','  Junior High-33. Advanced List',2,'[{\"changed\": {\"fields\": [\"name\"]}}]',2,2),(1074,'2019-08-31 04:04:11.953496','19','  Junior High-33. Advanced List',2,'[{\"changed\": {\"fields\": [\"desc\"]}}]',2,2),(1075,'2019-08-31 04:04:23.626240','28','x Junior High-34. Advanced Tuple',2,'[{\"changed\": {\"fields\": [\"name\"]}}]',2,2),(1076,'2019-08-31 04:04:32.446710','6','  Junior High-35. Advanced Set',2,'[{\"changed\": {\"fields\": [\"name\"]}}]',2,2),(1077,'2019-08-31 04:04:40.370781','2','  Junior High-36. AdvancedDictionary',2,'[{\"changed\": {\"fields\": [\"name\"]}}]',2,2),(1078,'2019-08-31 04:11:17.728159','53','  3[Advanced For] 55. Print star 2  08-08 22:20',2,'[{\"changed\": {\"fields\": [\"title\"]}}]',3,2),(1079,'2019-08-31 04:25:06.079682','77','  1[For] 76. For concept  08-30 21:12',1,'[{\"added\": {}}]',3,2),(1080,'2019-08-31 04:25:15.390164','103','76. For concept -  2',1,'[{\"added\": {}}]',4,2),(1081,'2019-08-31 04:39:22.001071','20','  1[While] 12. Break  07-21 00:09',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(1082,'2019-08-31 04:40:30.359151','20','  1[While] 12. Break  07-21 00:09',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(1083,'2019-08-31 04:59:59.884493','78','  1[While] 77. While  08-30 21:42',1,'[{\"added\": {}}]',3,2),(1084,'2019-08-31 05:00:08.009666','104','77. While -  1',1,'[{\"added\": {}}]',4,2),(1085,'2019-08-31 05:00:57.008620','78','  1[While] 77. While  08-30 21:42',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(1086,'2019-08-31 05:03:04.773046','78','  1[While] 77. While  08-30 21:42',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(1087,'2019-08-31 05:18:47.617942','78','  1[While] 77. While  08-30 21:42',2,'[]',3,2),(1088,'2019-08-31 07:33:45.893251','34','  Expert-43. Greedy',1,'[{\"added\": {}}]',2,2),(1089,'2019-08-31 07:46:52.522001','79','  5[Advanced Math] 78. Activity selection problem  08-31 00:29',1,'[{\"added\": {}}]',3,2),(1090,'2019-08-31 07:46:59.751003','79','  5[Greedy] 78. Activity selection problem  08-31 00:29',2,'[{\"changed\": {\"fields\": [\"category\"]}}]',3,2),(1091,'2019-08-31 07:47:32.882056','105','78. Activity selection problem - [1, 2, 4]\r\n[4, 5, 6] 2',1,'[{\"added\": {}}]',4,2),(1092,'2019-08-31 18:57:36.697258','26','  1[DataType] 0. Basic data type  07-22 23:03',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(1093,'2019-08-31 19:19:49.644984','75','  2[List] 76. Split an array into two with equal Sum  08-29 21:53',2,'[{\"changed\": {\"fields\": [\"question\"]}}]',3,2),(1094,'2019-08-31 19:20:03.027263','74','  1[Operator] 75. Logical Operator  08-29 01:11',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(1095,'2019-08-31 19:20:46.210272','73','  1[Operator] 74. Assignment Operator  08-29 00:12',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(1096,'2019-08-31 19:21:59.399237','72','  1[Operator] 73. Relational Operator  08-28 23:18',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(1097,'2019-08-31 19:22:11.857364','71','  1[Variable] 72. Variable naming convention  08-28 20:39',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(1098,'2019-08-31 19:22:23.535647','69','  4[Linked List] 71. Find the maximum  08-19 22:15',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(1099,'2019-08-31 19:23:00.908547','68','  4[Stack] 70. Remove outermost parenthesis  08-19 10:01',2,'[{\"changed\": {\"fields\": [\"question\"]}}]',3,2),(1100,'2019-08-31 19:25:51.263723','65','  2[String] 67. Palindrome  08-18 20:02',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(1101,'2019-08-31 19:26:12.812657','63','  1[Operator] 65. Arithmetic Operator  08-18 19:32',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(1102,'2019-08-31 19:26:33.584425','60','  3[Advanced List] 64. Sum numbers  08-15 21:15',2,'[{\"changed\": {\"fields\": [\"question\"]}}]',3,2),(1103,'2019-08-31 19:26:41.386697','59','  3[Advanced List] 63. Maximum profit  08-15 21:05',2,'[{\"changed\": {\"fields\": [\"question\"]}}]',3,2),(1104,'2019-08-31 19:26:55.254371','57','  3[Math] 61. Sum of digits  08-15 19:14',2,'[{\"changed\": {\"fields\": [\"question\"]}}]',3,2),(1105,'2019-08-31 19:27:10.289833','56','  2[String] 60. String join  08-09 16:25',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(1106,'2019-08-31 19:27:27.340646','56','  2[String] 60. String join  08-09 16:25',2,'[{\"changed\": {\"fields\": [\"question\"]}}]',3,2),(1107,'2019-08-31 19:27:39.933102','55','  2[String] 59. String split  08-09 15:03',2,'[{\"changed\": {\"fields\": [\"explanation\", \"question\"]}}]',3,2),(1108,'2019-08-31 19:27:49.620621','54','  3[Advanced List] 58. Swap the values  08-08 22:22',2,'[{\"changed\": {\"fields\": [\"question\"]}}]',3,2),(1109,'2019-08-31 19:28:05.776629','53','  3[Advanced For] 57. Print star 2  08-08 22:20',2,'[{\"changed\": {\"fields\": [\"question\"]}}]',3,2),(1110,'2019-08-31 19:28:18.087089','52','  1[Variable] 56. Variable naming rule  08-07 22:25',2,'[{\"changed\": {\"fields\": [\"explanation\", \"question\"]}}]',3,2),(1111,'2019-08-31 19:28:24.395850','51','  3[Advanced List] 55. Merge lists  08-06 17:59',2,'[{\"changed\": {\"fields\": [\"question\"]}}]',3,2),(1112,'2019-08-31 19:28:32.861038','50','  3[Math] 54. Fibonacci  08-06 17:51',2,'[{\"changed\": {\"fields\": [\"question\"]}}]',3,2),(1113,'2019-08-31 19:28:38.848124','49','  3[Advanced For] 53. Print star  08-05 18:34',2,'[{\"changed\": {\"fields\": [\"question\"]}}]',3,2),(1114,'2019-08-31 19:28:46.186196','48','  3[Advanced List] 52. Common value  08-05 18:30',2,'[{\"changed\": {\"fields\": [\"question\"]}}]',3,2),(1115,'2019-08-31 19:28:52.625226','47','  3[Advanced List] 51. Check a value in a list  08-05 18:28',2,'[{\"changed\": {\"fields\": [\"question\"]}}]',3,2),(1116,'2019-08-31 19:29:00.490852','46','  3[Math] 50. Sum of external angle  08-05 18:27',2,'[{\"changed\": {\"fields\": [\"question\"]}}]',3,2),(1117,'2019-08-31 19:29:13.534036','32','  1[DataType] 1. List, Tuple  07-28 23:11',2,'[{\"changed\": {\"fields\": [\"question\"]}}]',3,2),(1118,'2019-08-31 19:29:21.454063','70','  1[DataType] 2. Set, Dictionary  08-25 20:48',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(1119,'2019-08-31 19:29:32.682729','1','  1[For] 4. Sum function  07-17 02:33',2,'[{\"changed\": {\"fields\": [\"question\"]}}]',3,2),(1120,'2019-08-31 19:29:45.825850','16','  1[Range] 6. Range(start, stop)  07-20 14:24',2,'[{\"changed\": {\"fields\": [\"explanation\", \"question\"]}}]',3,2),(1121,'2019-08-31 19:29:56.165900','17','  1[Range] 7. Range(start, stop, step)  07-20 14:27',2,'[{\"changed\": {\"fields\": [\"explanation\", \"question\"]}}]',3,2),(1122,'2019-08-31 19:30:05.526921','15','  1[Range] 5. Range(stop)  07-20 11:03',2,'[{\"changed\": {\"fields\": [\"explanation\", \"question\"]}}]',3,2),(1123,'2019-08-31 19:30:12.041314','18','  1[Range] 8. Range summary  07-20 14:33',2,'[{\"changed\": {\"fields\": [\"question\"]}}]',3,2),(1124,'2019-08-31 19:30:22.902631','36','  1[Print] 9. Print command  08-01 00:45',2,'[{\"changed\": {\"fields\": [\"explanation\", \"question\"]}}]',3,2),(1125,'2019-08-31 19:30:33.226674','78','  1[While] 10. While  08-30 21:42',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(1126,'2019-08-31 19:30:43.016370','20','  1[While] 11. Break  07-21 00:09',2,'[{\"changed\": {\"fields\": [\"explanation\", \"question\"]}}]',3,2),(1127,'2019-08-31 19:30:53.882054','19','  1[While] 12. Sum function  07-21 00:00',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(1128,'2019-08-31 19:31:00.674172','5','  1[While] 13. Add function  07-18 02:47',2,'[{\"changed\": {\"fields\": [\"question\"]}}]',3,2),(1129,'2019-08-31 19:31:06.923854','2','  2[Dictionary] 14. Dictionary  07-17 02:48',2,'[{\"changed\": {\"fields\": [\"question\"]}}]',3,2),(1130,'2019-08-31 19:31:12.640229','3','  2[String] 15. String concatenation  07-18 02:45',2,'[{\"changed\": {\"fields\": [\"question\"]}}]',3,2),(1131,'2019-08-31 19:31:22.720351','61','  2[List] 16. Manage List  08-17 01:35',2,'[{\"changed\": {\"fields\": [\"explanation\", \"question\"]}}]',3,2),(1132,'2019-08-31 19:31:30.106357','62','  2[List] 17. List append  08-17 12:43',2,'[{\"changed\": {\"fields\": [\"question\"]}}]',3,2),(1133,'2019-08-31 19:31:38.941252','6','  2[List] 18. List insert  07-18 02:48',2,'[{\"changed\": {\"fields\": [\"question\"]}}]',3,2),(1134,'2019-08-31 19:31:45.595119','4','  2[List] 19. Find a value  07-18 02:46',2,'[{\"changed\": {\"fields\": [\"question\"]}}]',3,2),(1135,'2019-08-31 19:31:52.014680','31','  2[List] 20. Split a list  07-27 22:42',2,'[{\"changed\": {\"fields\": [\"question\"]}}]',3,2),(1136,'2019-08-31 19:32:14.961593','7','  2[Set] 21. Set contains  07-18 02:49',2,'[{\"changed\": {\"fields\": [\"question\"]}}]',3,2),(1137,'2019-08-31 19:32:22.950217','8','  2[Function] 22. Multiply function  07-18 02:49',2,'[{\"changed\": {\"fields\": [\"question\"]}}]',3,2),(1138,'2019-08-31 19:32:32.379174','24','  2[Class] 23. Class, Object  07-22 20:23',2,'[{\"changed\": {\"fields\": [\"explanation\", \"question\"]}}]',3,2),(1139,'2019-08-31 19:32:40.711249','25','  2[Class] 24. Incorrect Class  07-22 20:28',2,'[{\"changed\": {\"fields\": [\"question\"]}}]',3,2),(1140,'2019-08-31 19:32:52.062387','9','  3[Math] 25. Operator precedence  07-18 02:51',2,'[{\"changed\": {\"fields\": [\"explanation\", \"question\"]}}]',3,2),(1141,'2019-08-31 19:32:58.666088','10','  3[Math] 26. Write a function  07-18 02:52',2,'[{\"changed\": {\"fields\": [\"question\"]}}]',3,2),(1142,'2019-08-31 19:33:08.678793','11','  3[Advanced List] 27. Swap elements  07-18 02:53',2,'[{\"changed\": {\"fields\": [\"explanation\", \"question\"]}}]',3,2),(1143,'2019-08-31 19:33:15.406479','12','  3[Advanced List] 28. Swap an element  07-18 19:03',2,'[{\"changed\": {\"fields\": [\"question\"]}}]',3,2),(1144,'2019-08-31 19:33:28.292508','13','  3[Advanced List] 29. Reverse a list  07-18 19:20',2,'[{\"changed\": {\"fields\": [\"explanation\", \"question\"]}}]',3,2),(1145,'2019-08-31 19:33:35.811751','21','  3[Advanced List] 30. Sorted list  07-21 09:53',2,'[{\"changed\": {\"fields\": [\"question\"]}}]',3,2),(1146,'2019-08-31 19:33:46.940487','22','  3[Math] 31. Square root  07-21 10:42',2,'[{\"changed\": {\"fields\": [\"explanation\", \"question\"]}}]',3,2),(1147,'2019-08-31 19:33:58.602740','23','  3[Advanced List] 32. Subarray  07-22 20:14',2,'[{\"changed\": {\"fields\": [\"explanation\", \"question\"]}}]',3,2),(1148,'2019-08-31 19:34:06.246475','27','  3[Advanced List] 33. Missing integer  07-25 21:31',2,'[{\"changed\": {\"fields\": [\"question\"]}}]',3,2),(1149,'2019-08-31 19:34:12.721809','28','  3[AdvancedDictionary] 34. Frequency  07-26 00:36',2,'[{\"changed\": {\"fields\": [\"question\"]}}]',3,2),(1150,'2019-08-31 19:34:18.835324','29','  3[Advanced List] 35. Rotate a list  07-27 10:16',2,'[{\"changed\": {\"fields\": [\"question\"]}}]',3,2),(1151,'2019-08-31 19:34:25.050186','30','  3[Advanced List] 36. Smallest number  07-27 20:05',2,'[{\"changed\": {\"fields\": [\"question\"]}}]',3,2),(1152,'2019-08-31 19:34:32.834814','33','  3[Advanced String] 37. Remove a word  07-30 02:25',2,'[{\"changed\": {\"fields\": [\"question\"]}}]',3,2),(1153,'2019-08-31 19:34:39.052438','34','  3[Math] 38. Leading zeros  07-30 18:09',2,'[{\"changed\": {\"fields\": [\"question\"]}}]',3,2),(1154,'2019-08-31 19:34:46.027372','35','  3[Math] 39. Greatest common factor  07-31 21:12',2,'[{\"changed\": {\"fields\": [\"question\"]}}]',3,2),(1155,'2019-08-31 19:34:52.664859','37','  3[Advanced For] 40. Second largest number  08-01 01:21',2,'[{\"changed\": {\"fields\": [\"question\"]}}]',3,2),(1156,'2019-08-31 19:34:58.200109','38','  3[Advanced Set] 41. Duplicated number  08-01 21:12',2,'[{\"changed\": {\"fields\": [\"question\"]}}]',3,2),(1157,'2019-08-31 19:35:04.136360','39','  3[Math] 42. Power of 2  08-02 02:56',2,'[{\"changed\": {\"fields\": [\"question\"]}}]',3,2),(1158,'2019-08-31 19:35:15.041040','14','  4[Stack] 43. Reverse a list  07-19 11:55',2,'[{\"changed\": {\"fields\": [\"explanation\", \"question\"]}}]',3,2),(1159,'2019-08-31 19:35:22.918245','40','  3[Math] 44. Find a trailing zeros  08-02 21:57',2,'[{\"changed\": {\"fields\": [\"question\"]}}]',3,2),(1160,'2019-08-31 19:35:29.402573','41','  1[DataType] 45. Datatype  08-03 10:15',2,'[{\"changed\": {\"fields\": [\"question\"]}}]',3,2),(1161,'2019-08-31 19:35:35.853765','42','  1[DataType] 46. Invalid data type  08-03 20:47',2,'[{\"changed\": {\"fields\": [\"question\"]}}]',3,2),(1162,'2019-08-31 19:35:42.131016','43','  4[Stack] 47. Find valid parenthesis  08-04 09:07',2,'[{\"changed\": {\"fields\": [\"question\"]}}]',3,2),(1163,'2019-08-31 19:35:49.672141','44','  3[Advanced For] 48. Remove duplicated character  08-04 17:05',2,'[{\"changed\": {\"fields\": [\"question\"]}}]',3,2),(1164,'2019-08-31 19:35:55.596018','45','  3[Math] 49. Sum of internal angle  08-05 18:25',2,'[{\"changed\": {\"fields\": [\"question\"]}}]',3,2),(1165,'2019-08-31 19:38:27.791576','75','  3[Advanced List] 76. Split an array into two with equal Sum  08-29 21:53',2,'[{\"changed\": {\"fields\": [\"category\"]}}]',3,2),(1166,'2019-08-31 19:38:46.513911','76','  3[Advanced List] 77. Sliding Window Maximum  08-29 22:15',2,'[{\"changed\": {\"fields\": [\"category\"]}}]',3,2),(1167,'2019-08-31 19:39:02.731467','65','  3[Advanced String] 71. Palindrome  08-18 20:02',2,'[{\"changed\": {\"fields\": [\"category\"]}}]',3,2),(1168,'2019-09-01 00:18:03.163298','1','youngwan',2,'[{\"changed\": {\"fields\": [\"is_staff\", \"is_superuser\"]}}]',9,2),(1169,'2019-09-01 00:18:24.860631','1','youngwan',2,'[{\"changed\": {\"fields\": [\"is_staff\", \"is_superuser\"]}}]',9,2),(1170,'2019-09-01 01:20:54.890395','93','1.  2019-08-31 right:-1',3,'',12,2),(1171,'2019-09-01 05:35:51.751991','27','70 Total Quiz',2,'[{\"changed\": {\"fields\": [\"html\", \"desc\"]}}]',15,2),(1172,'2019-09-01 05:36:22.507268','23','10 Total Quiz',2,'[{\"changed\": {\"fields\": [\"html\", \"desc\"]}}]',15,2),(1173,'2019-09-01 05:37:39.571276','24','20 Total Quiz',2,'[{\"changed\": {\"fields\": [\"html\", \"desc\"]}}]',15,2),(1174,'2019-09-01 05:37:44.565411','23','10 Total Quiz',2,'[{\"changed\": {\"fields\": [\"html\"]}}]',15,2),(1175,'2019-09-01 05:37:51.253270','14','30 Total Quiz',2,'[{\"changed\": {\"fields\": [\"html\", \"desc\"]}}]',15,2),(1176,'2019-09-01 05:37:58.157821','25','40 Total Quiz',2,'[{\"changed\": {\"fields\": [\"html\", \"desc\"]}}]',15,2),(1177,'2019-09-01 05:38:06.333199','15','50 Total Quiz',2,'[{\"changed\": {\"fields\": [\"html\", \"desc\"]}}]',15,2),(1178,'2019-09-01 05:38:13.430561','26','60 Total Quiz',2,'[{\"changed\": {\"fields\": [\"html\", \"desc\"]}}]',15,2),(1179,'2019-09-01 05:38:19.839047','27','70 Total Quiz',2,'[{\"changed\": {\"fields\": [\"html\"]}}]',15,2),(1180,'2019-09-01 05:38:33.099690','28','80 Total Quiz',2,'[{\"changed\": {\"fields\": [\"html\", \"desc\"]}}]',15,2),(1181,'2019-09-01 05:38:40.230235','29','90 Total Quiz',2,'[{\"changed\": {\"fields\": [\"html\", \"desc\"]}}]',15,2),(1182,'2019-09-01 05:38:49.337482','16','100 Total Quiz',2,'[{\"changed\": {\"fields\": [\"html\", \"desc\"]}}]',15,2),(1183,'2019-09-01 05:39:01.194608','10','2 Quiz Per Day',2,'[{\"changed\": {\"fields\": [\"html\", \"desc\"]}}]',15,2),(1184,'2019-09-01 05:39:08.899422','11','3 Quiz Per Day',2,'[{\"changed\": {\"fields\": [\"html\", \"desc\"]}}]',15,2),(1185,'2019-09-01 05:39:16.907113','12','4 Quiz Per Day',2,'[{\"changed\": {\"fields\": [\"html\", \"desc\"]}}]',15,2),(1186,'2019-09-01 05:39:24.866593','13','5 Quiz Per Day',2,'[{\"changed\": {\"fields\": [\"html\", \"desc\"]}}]',15,2),(1187,'2019-09-01 05:39:33.285275','17','6 Quiz Per Day',2,'[{\"changed\": {\"fields\": [\"html\", \"desc\"]}}]',15,2),(1188,'2019-09-01 05:39:41.887762','18','7 Quiz Per Day',2,'[{\"changed\": {\"fields\": [\"html\", \"desc\"]}}]',15,2),(1189,'2019-09-01 05:39:49.448110','19','8 Quiz Per Day',2,'[{\"changed\": {\"fields\": [\"html\", \"desc\"]}}]',15,2),(1190,'2019-09-01 05:39:56.812404','20','9 Quiz Per Day',2,'[{\"changed\": {\"fields\": [\"html\", \"desc\"]}}]',15,2),(1191,'2019-09-01 05:40:07.744815','1','2 Day Streak',2,'[{\"changed\": {\"fields\": [\"html\", \"desc\"]}}]',15,2),(1192,'2019-09-01 05:40:18.607236','22','3 Day Streak',2,'[{\"changed\": {\"fields\": [\"html\", \"desc\"]}}]',15,2),(1193,'2019-09-01 05:40:26.640882','2','4 Day Streak',2,'[{\"changed\": {\"fields\": [\"html\", \"desc\"]}}]',15,2),(1194,'2019-09-01 05:40:34.107581','21','5 Day Streak',2,'[{\"changed\": {\"fields\": [\"html\", \"desc\"]}}]',15,2),(1195,'2019-09-01 05:40:42.074747','3','7 Day Streak',2,'[{\"changed\": {\"fields\": [\"html\", \"desc\"]}}]',15,2),(1196,'2019-09-01 05:40:49.827834','9','10 Day Streak',2,'[{\"changed\": {\"fields\": [\"html\", \"desc\"]}}]',15,2),(1197,'2019-09-01 05:48:44.694736','30','6 Day Streak',1,'[{\"added\": {}}]',15,2),(1198,'2019-09-01 05:49:16.325658','31','8 Day Streak',1,'[{\"added\": {}}]',15,2),(1199,'2019-09-01 05:49:34.231029','32','9 Day Streak',1,'[{\"added\": {}}]',15,2),(1200,'2019-09-01 05:58:54.682281','23','10 Total Quiz',2,'[{\"changed\": {\"fields\": [\"value\", \"html\", \"desc\"]}}]',15,2),(1201,'2019-09-01 05:59:00.935808','23','1 Total Quiz',2,'[{\"changed\": {\"fields\": [\"name\"]}}]',15,2),(1202,'2019-09-01 05:59:16.987498','24','5 Total Quiz',2,'[{\"changed\": {\"fields\": [\"name\", \"value\", \"html\", \"desc\"]}}]',15,2),(1203,'2019-09-01 05:59:30.150014','14','10 Total Quiz',2,'[{\"changed\": {\"fields\": [\"name\", \"value\", \"html\", \"desc\"]}}]',15,2),(1204,'2019-09-01 05:59:41.623653','25','20 Total Quiz',2,'[{\"changed\": {\"fields\": [\"name\", \"value\", \"html\", \"desc\"]}}]',15,2),(1205,'2019-09-01 05:59:51.309259','15','30 Total Quiz',2,'[{\"changed\": {\"fields\": [\"name\", \"value\", \"html\", \"desc\"]}}]',15,2),(1206,'2019-09-01 06:00:00.437748','26','50 Total Quiz',2,'[{\"changed\": {\"fields\": [\"name\", \"value\", \"html\", \"desc\"]}}]',15,2),(1207,'2019-09-01 06:00:18.340806','28','100 Total Quiz',2,'[{\"changed\": {\"fields\": [\"name\", \"value\", \"html\", \"desc\"]}}]',15,2),(1208,'2019-09-01 06:02:33.551569','29','150 Total Quiz',2,'[{\"changed\": {\"fields\": [\"name\", \"value\", \"html\", \"desc\"]}}]',15,2),(1209,'2019-09-01 06:02:51.636832','16','200 Total Quiz',2,'[{\"changed\": {\"fields\": [\"name\", \"value\", \"html\", \"desc\"]}}]',15,2),(1210,'2019-09-01 06:30:57.255836','23','1 Total Quiz',2,'[{\"changed\": {\"fields\": [\"html\"]}}]',15,2),(1211,'2019-09-01 06:31:01.970537','24','5 Total Quiz',2,'[{\"changed\": {\"fields\": [\"html\"]}}]',15,2),(1212,'2019-09-01 06:31:06.328648','14','10 Total Quiz',2,'[{\"changed\": {\"fields\": [\"html\"]}}]',15,2),(1213,'2019-09-01 06:31:10.408935','25','20 Total Quiz',2,'[{\"changed\": {\"fields\": [\"html\"]}}]',15,2),(1214,'2019-09-01 06:31:14.392437','15','30 Total Quiz',2,'[{\"changed\": {\"fields\": [\"html\"]}}]',15,2),(1215,'2019-09-01 06:31:19.065059','26','50 Total Quiz',2,'[{\"changed\": {\"fields\": [\"html\"]}}]',15,2),(1216,'2019-09-01 06:31:25.565115','27','70 Total Quiz',2,'[{\"changed\": {\"fields\": [\"html\"]}}]',15,2),(1217,'2019-09-01 06:31:29.969906','28','100 Total Quiz',2,'[{\"changed\": {\"fields\": [\"html\"]}}]',15,2),(1218,'2019-09-01 06:31:34.401798','29','150 Total Quiz',2,'[{\"changed\": {\"fields\": [\"html\"]}}]',15,2),(1219,'2019-09-01 06:31:38.529020','16','200 Total Quiz',2,'[{\"changed\": {\"fields\": [\"html\"]}}]',15,2),(1220,'2019-09-01 06:31:43.536963','10','2 Quiz Per Day',2,'[{\"changed\": {\"fields\": [\"html\"]}}]',15,2),(1221,'2019-09-01 06:31:48.813277','11','3 Quiz Per Day',2,'[{\"changed\": {\"fields\": [\"html\"]}}]',15,2),(1222,'2019-09-01 06:31:53.248731','12','4 Quiz Per Day',2,'[{\"changed\": {\"fields\": [\"html\"]}}]',15,2),(1223,'2019-09-01 06:31:57.949050','13','5 Quiz Per Day',2,'[{\"changed\": {\"fields\": [\"html\"]}}]',15,2),(1224,'2019-09-01 06:32:02.285995','17','6 Quiz Per Day',2,'[{\"changed\": {\"fields\": [\"html\"]}}]',15,2),(1225,'2019-09-01 06:32:06.549901','18','7 Quiz Per Day',2,'[{\"changed\": {\"fields\": [\"html\"]}}]',15,2),(1226,'2019-09-01 06:32:11.525288','19','8 Quiz Per Day',2,'[{\"changed\": {\"fields\": [\"html\"]}}]',15,2),(1227,'2019-09-01 06:32:16.207039','20','9 Quiz Per Day',2,'[{\"changed\": {\"fields\": [\"html\"]}}]',15,2),(1228,'2019-09-01 06:32:21.421855','1','2 Day Streak',2,'[{\"changed\": {\"fields\": [\"html\"]}}]',15,2),(1229,'2019-09-01 06:32:27.691901','22','3 Day Streak',2,'[{\"changed\": {\"fields\": [\"html\"]}}]',15,2),(1230,'2019-09-01 06:32:36.807034','2','4 Day Streak',2,'[{\"changed\": {\"fields\": [\"html\"]}}]',15,2),(1231,'2019-09-01 06:32:42.202381','21','5 Day Streak',2,'[{\"changed\": {\"fields\": [\"html\"]}}]',15,2),(1232,'2019-09-01 06:32:50.189984','30','6 Day Streak',2,'[{\"changed\": {\"fields\": [\"html\"]}}]',15,2),(1233,'2019-09-01 06:32:55.584694','3','7 Day Streak',2,'[{\"changed\": {\"fields\": [\"html\"]}}]',15,2),(1234,'2019-09-01 06:33:00.628937','31','8 Day Streak',2,'[{\"changed\": {\"fields\": [\"html\"]}}]',15,2),(1235,'2019-09-01 06:33:04.976477','32','9 Day Streak',2,'[{\"changed\": {\"fields\": [\"html\"]}}]',15,2),(1236,'2019-09-01 06:33:09.435768','9','10 Day Streak',2,'[{\"changed\": {\"fields\": [\"html\"]}}]',15,2),(1237,'2019-09-01 06:40:58.623398','4','Welcome',1,'[{\"added\": {}}]',16,2),(1238,'2019-09-01 06:41:52.612768','33','Welcome',1,'[{\"added\": {}}]',15,2),(1239,'2019-09-01 07:16:42.745175','34','Welcome',1,'[{\"added\": {}}]',15,2),(1240,'2019-09-01 07:17:08.729962','34','Welcome',3,'',15,2),(1241,'2019-09-01 07:17:25.138675','2','youngwan',2,'[{\"changed\": {\"fields\": [\"badges\"]}}]',14,2),(1242,'2019-09-01 07:26:10.282506','1','dayeon',2,'[{\"changed\": {\"fields\": [\"badges\"]}}]',14,2),(1243,'2019-09-01 07:26:30.954018','33','Welcome',2,'[{\"changed\": {\"fields\": [\"desc\"]}}]',15,2),(1244,'2019-09-01 07:28:01.851993','23','1 Total Quiz',2,'[{\"changed\": {\"fields\": [\"desc\"]}}]',15,2),(1245,'2019-09-01 07:29:24.292747','27','70 Total Quiz',2,'[{\"changed\": {\"fields\": [\"desc\"]}}]',15,2),(1246,'2019-09-01 07:31:33.111022','19','8 Quiz Per Day',2,'[{\"changed\": {\"fields\": [\"desc\"]}}]',15,2),(1247,'2019-09-01 07:31:55.695644','19','8 Quiz Per Day',2,'[{\"changed\": {\"fields\": [\"desc\"]}}]',15,2),(1248,'2019-09-01 07:32:40.455977','30','6 Day Streak',2,'[{\"changed\": {\"fields\": [\"desc\"]}}]',15,2),(1249,'2019-09-01 07:33:15.177147','24','5 Total Quiz',2,'[{\"changed\": {\"fields\": [\"desc\"]}}]',15,2),(1250,'2019-09-01 07:33:27.713350','14','10 Total Quiz',2,'[{\"changed\": {\"fields\": [\"desc\"]}}]',15,2),(1251,'2019-09-01 07:33:34.527725','25','20 Total Quiz',2,'[{\"changed\": {\"fields\": [\"desc\"]}}]',15,2),(1252,'2019-09-01 07:33:39.432686','15','30 Total Quiz',2,'[{\"changed\": {\"fields\": [\"desc\"]}}]',15,2),(1253,'2019-09-01 07:33:44.814816','26','50 Total Quiz',2,'[{\"changed\": {\"fields\": [\"desc\"]}}]',15,2),(1254,'2019-09-01 07:33:49.667451','27','70 Total Quiz',2,'[{\"changed\": {\"fields\": [\"desc\"]}}]',15,2),(1255,'2019-09-01 07:33:55.301539','28','100 Total Quiz',2,'[{\"changed\": {\"fields\": [\"desc\"]}}]',15,2),(1256,'2019-09-01 07:34:00.382572','29','150 Total Quiz',2,'[{\"changed\": {\"fields\": [\"desc\"]}}]',15,2),(1257,'2019-09-01 07:34:06.121185','16','200 Total Quiz',2,'[{\"changed\": {\"fields\": [\"desc\"]}}]',15,2),(1258,'2019-09-01 07:34:15.135340','10','2 Quiz Per Day',2,'[{\"changed\": {\"fields\": [\"desc\"]}}]',15,2),(1259,'2019-09-01 07:34:21.171224','11','3 Quiz Per Day',2,'[{\"changed\": {\"fields\": [\"desc\"]}}]',15,2),(1260,'2019-09-01 07:34:27.227023','12','4 Quiz Per Day',2,'[{\"changed\": {\"fields\": [\"desc\"]}}]',15,2),(1261,'2019-09-01 07:34:33.586613','13','5 Quiz Per Day',2,'[{\"changed\": {\"fields\": [\"desc\"]}}]',15,2),(1262,'2019-09-01 07:34:39.328140','17','6 Quiz Per Day',2,'[{\"changed\": {\"fields\": [\"desc\"]}}]',15,2),(1263,'2019-09-01 07:34:44.866741','18','7 Quiz Per Day',2,'[{\"changed\": {\"fields\": [\"desc\"]}}]',15,2),(1264,'2019-09-01 07:34:50.371879','19','8 Quiz Per Day',2,'[]',15,2),(1265,'2019-09-01 07:34:55.535632','20','9 Quiz Per Day',2,'[{\"changed\": {\"fields\": [\"desc\"]}}]',15,2),(1266,'2019-09-01 07:35:13.188804','1','2 Day Streak',2,'[{\"changed\": {\"fields\": [\"desc\"]}}]',15,2),(1267,'2019-09-01 07:35:18.490271','22','3 Day Streak',2,'[{\"changed\": {\"fields\": [\"desc\"]}}]',15,2),(1268,'2019-09-01 07:35:24.453749','2','4 Day Streak',2,'[{\"changed\": {\"fields\": [\"desc\"]}}]',15,2),(1269,'2019-09-01 07:35:29.819450','13','5 Quiz Per Day',2,'[{\"changed\": {\"fields\": [\"desc\"]}}]',15,2),(1270,'2019-09-01 07:35:39.195544','3','7 Day Streak',2,'[{\"changed\": {\"fields\": [\"desc\"]}}]',15,2),(1271,'2019-09-01 07:35:44.121321','31','8 Day Streak',2,'[{\"changed\": {\"fields\": [\"desc\"]}}]',15,2),(1272,'2019-09-01 07:35:48.980024','32','9 Day Streak',2,'[{\"changed\": {\"fields\": [\"desc\"]}}]',15,2),(1273,'2019-09-01 07:35:56.198843','9','10 Day Streak',2,'[{\"changed\": {\"fields\": [\"desc\"]}}]',15,2),(1274,'2019-09-01 07:54:39.376856','2','  Junior High-36. Advanced Dictionary',2,'[{\"changed\": {\"fields\": [\"name\"]}}]',2,2),(1275,'2019-09-01 08:41:00.668710','9','dayeon2',3,'',9,2),(1276,'2019-09-01 08:55:07.714486','94','0. dayeon3 2019-09-01 right:1',3,'',12,1),(1277,'2019-09-01 08:55:29.909920','3','dayeon3',2,'[{\"changed\": {\"fields\": [\"badges\"]}}]',14,1),(1278,'2019-09-01 21:00:23.975942','84','dayeon 2019-08-30',3,'',12,2),(1279,'2019-09-01 21:00:32.871972','92','70. dayeon 2019-08-31 right:-1',3,'',12,2),(1280,'2019-09-02 00:21:23.031322','15','  1[Range] 13. Range(stop)  07-20 11:03',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(1281,'2019-09-02 00:21:45.482348','16','  1[Range] 14. Range(start, stop)  07-20 14:24',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(1282,'2019-09-02 00:22:17.053293','17','  1[Range] 15. Range(start, stop, step)  07-20 14:27',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(1283,'2019-09-02 00:25:05.021388','17','  1[Range] 15. Range(start, stop, step)  07-20 14:27',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(1284,'2019-09-02 00:36:00.203463','10','dayeon2',3,'',9,2),(1285,'2019-09-02 00:36:00.233836','11','dayeon3',3,'',9,2),(1286,'2019-09-02 00:36:00.235461','12','guest',3,'',9,2),(1287,'2019-09-02 00:36:10.391938','4','guest',3,'',14,2),(1288,'2019-09-02 00:36:10.437577','3','dayeon3',3,'',14,2),(1289,'2019-09-02 03:47:55.965567','80','  3[Advanced For] 79. Mutiply  09-01 20:44',1,'[{\"added\": {}}]',3,2),(1290,'2019-09-02 20:20:53.477927','35','15 Total Quiz',1,'[{\"added\": {}}]',15,2),(1291,'2019-09-02 20:21:31.767980','36','40 Total Quiz',1,'[{\"added\": {}}]',15,2),(1292,'2019-09-02 20:21:55.340120','37','60 Total Quiz',1,'[{\"added\": {}}]',15,2),(1293,'2019-09-02 20:23:53.237367','38','80 Total Quiz',1,'[{\"added\": {}}]',15,2),(1294,'2019-09-02 20:24:14.402606','39','90 Total Quiz',1,'[{\"added\": {}}]',15,2),(1295,'2019-09-02 20:24:52.721187','40','110 Total Quiz',1,'[{\"added\": {}}]',15,2),(1296,'2019-09-02 20:25:28.144652','41','120 Total Quiz',1,'[{\"added\": {}}]',15,2),(1297,'2019-09-02 20:25:46.834897','42','130 Total Quiz',1,'[{\"added\": {}}]',15,2),(1298,'2019-09-02 20:26:05.638836','43','140 Total Quiz',1,'[{\"added\": {}}]',15,2),(1299,'2019-09-02 20:26:31.497325','44','160 Total Quiz',1,'[{\"added\": {}}]',15,2),(1300,'2019-09-02 20:26:48.475127','45','170 Total Quiz',1,'[{\"added\": {}}]',15,2),(1301,'2019-09-02 20:27:05.687864','46','180 Total Quiz',1,'[{\"added\": {}}]',15,2),(1302,'2019-09-02 20:27:22.551176','47','190 Total Quiz',1,'[{\"added\": {}}]',15,2),(1303,'2019-09-02 20:28:19.439771','48','210 Total Quiz',1,'[{\"added\": {}}]',15,2),(1304,'2019-09-02 20:28:36.381430','49','220 Total Quiz',1,'[{\"added\": {}}]',15,2),(1305,'2019-09-02 20:28:52.886147','50','230 Total Quiz',1,'[{\"added\": {}}]',15,2),(1306,'2019-09-02 20:29:08.511376','51','240 Total Quiz',1,'[{\"added\": {}}]',15,2),(1307,'2019-09-02 20:29:39.929410','52','250 Total Quiz',1,'[{\"added\": {}}]',15,2),(1308,'2019-09-02 20:29:57.084141','53','260 Total Quiz',1,'[{\"added\": {}}]',15,2),(1309,'2019-09-02 20:30:15.628273','54','270 Total Quiz',1,'[{\"added\": {}}]',15,2),(1310,'2019-09-02 20:30:36.855102','55','280 Total Quiz',1,'[{\"added\": {}}]',15,2),(1311,'2019-09-02 20:30:52.805824','56','290 Total Quiz',1,'[{\"added\": {}}]',15,2),(1312,'2019-09-02 20:31:10.426075','57','300 Total Quiz',1,'[{\"added\": {}}]',15,2),(1313,'2019-09-03 00:53:43.360371','81','  4[Linked List] 80. Reverse linked list  09-02 17:52',1,'[{\"added\": {}}]',3,2),(1314,'2019-09-03 05:30:14.863519','52','  1[Variable] 9. Variable naming rule  08-07 22:25(52)',2,'[{\"changed\": {\"fields\": [\"video\"]}}]',3,2),(1315,'2019-09-03 06:39:57.379680','96','71. dayeon 2019-09-01 right:1',2,'[{\"changed\": {\"fields\": [\"right\", \"stdout\"]}}]',12,2),(1316,'2019-09-03 06:40:24.102212','78','70. dayeon 2019-08-01 right:1',2,'[{\"changed\": {\"fields\": [\"date\"]}}]',12,2),(1317,'2019-09-03 06:40:46.236084','76','72. dayeon 2019-08-13 right:1',2,'[{\"changed\": {\"fields\": [\"date\"]}}]',12,2),(1318,'2019-09-03 06:40:56.395477','62','65. dayeon 2019-08-24 right:1',2,'[{\"changed\": {\"fields\": [\"date\"]}}]',12,2),(1319,'2019-09-03 06:41:32.712619','62','65. dayeon 2019-08-08 right:1',2,'[{\"changed\": {\"fields\": [\"date\"]}}]',12,2),(1320,'2019-09-03 07:08:36.293092','106','80. Reverse linked list - Node[1, 4, 3, 2, 5] Node[1, 4, 3, 2, 5]',1,'[{\"added\": {}}]',4,2),(1321,'2019-09-03 07:09:38.533508','97','80. dayeon 2019-09-03 right:-2',3,'',12,2),(1322,'2019-09-03 07:09:50.860824','106','80. Reverse linked list - Node[1, 4, 3, 2, 5] Node[5, 2, 3, 4, 1]',2,'[{\"changed\": {\"fields\": [\"expected_answer\"]}}]',4,2),(1323,'2019-09-03 07:11:27.342339','81','  4[Linked List] 80. Reverse linked list  09-02 17:52(81)',2,'[{\"changed\": {\"fields\": [\"answer_header\"]}}]',3,2),(1324,'2019-09-04 01:51:29.109798','74','  1[Operator] 8. Logical Operator  08-29 01:11(74)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(1325,'2019-09-04 01:53:14.513255','74','  1[Operator] 8. Logical Operator  08-29 01:11(74)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(1326,'2019-09-04 01:53:44.470704','74','  1[Operator] 8. Logical Operator  08-29 01:11(74)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(1327,'2019-09-04 01:54:09.852109','74','  1[Operator] 8. Logical Operator  08-29 01:11(74)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(1328,'2019-09-04 01:56:49.873106','74','  1[Operator] 8. Logical Operator  08-29 01:11(74)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(1329,'2019-09-04 02:13:05.988370','74','  1[Operator] 8. Logical Operator  08-29 01:11(74)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(1330,'2019-09-04 06:20:47.595267','74','  1[Operator] 8. Logical Operator  08-29 01:11(74)',2,'[{\"changed\": {\"fields\": [\"video\"]}}]',3,2),(1331,'2019-09-04 06:21:27.492223','74','  1[Operator] 8. Logical Operator  08-29 01:11(74)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(1332,'2019-09-04 06:21:55.789046','74','  1[Operator] 8. Logical Operator  08-29 01:11(74)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(1333,'2019-09-04 06:33:31.600859','74','  1[Operator] 8. Logical Operator  08-29 01:11(74)',2,'[{\"changed\": {\"fields\": [\"video\"]}}]',3,2),(1334,'2019-09-04 06:54:14.611172','16','  Super Junior-15. If',2,'[{\"changed\": {\"fields\": [\"visible\"]}}]',2,2),(1335,'2019-09-04 07:32:40.700527','82','  1[If] 81. If concept  09-04 00:19(82)',1,'[{\"added\": {}}]',3,2),(1336,'2019-09-04 07:32:55.454874','107','81. If concept -  3',1,'[{\"added\": {}}]',4,2),(1337,'2019-09-04 07:37:51.802140','12','  Super Junior-10. DataType',2,'[{\"changed\": {\"fields\": [\"desc\"]}}]',2,2),(1338,'2019-09-04 07:46:26.850929','82','  1[If] 16. If concept  09-04 00:19(82)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(1339,'2019-09-04 07:54:59.357643','1','Super Junior',2,'[{\"changed\": {\"fields\": [\"desc\"]}}]',13,2),(1340,'2019-09-04 07:59:10.891738','46','  3[Math] 72. Sum of external angle  08-05 18:27(46)',2,'[]',3,2),(1341,'2019-09-04 07:59:23.237742','46','  3[Math] 72. Sum of external angle  08-05 18:27(46)',2,'[]',3,2),(1342,'2019-09-04 07:59:46.729586','46','  3[Math] 72. Sum of external angle  08-05 18:27(46)',2,'[]',3,2),(1343,'2019-09-06 01:03:29.654708','82','  1[If] 16. If concept  09-04 00:19(82)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(1344,'2019-09-06 05:43:09.838675','72','  1[Operator] 6. Relational Operator  08-28 23:18(72)',2,'[{\"changed\": {\"fields\": [\"video\"]}}]',3,2),(1345,'2019-09-07 03:43:13.251344','82','  1[If] 16. If concept  09-04 00:19(82)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(1346,'2019-09-07 03:44:17.952401','82','  1[If] 16. If concept  09-04 00:19(82)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(1347,'2019-09-07 04:07:33.947560','82','  1[If] 16. If concept  09-04 00:19(82)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(1348,'2019-09-07 04:35:36.101313','82','  1[If] 16. If concept  09-04 00:19(82)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(1349,'2019-09-07 04:51:36.203013','82','  1[If] 16. If concept  09-04 00:19(82)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(1350,'2019-09-07 04:52:12.885435','98','16. dayeon 2019-09-06 right:1',3,'',12,2),(1351,'2019-09-07 07:49:51.801427','82','  1[If] 16. If concept  09-04 00:19(82)',2,'[{\"changed\": {\"fields\": [\"video\"]}}]',3,2),(1352,'2019-09-08 03:42:39.760197','70','  1[DataType] 2. Set, Dictionary  08-25 20:48(70)',2,'[{\"changed\": {\"fields\": [\"score\"]}}]',3,2),(1353,'2019-09-08 03:58:20.916638','20','15. dayeon 2019-07-19 right:1',3,'',12,2),(1354,'2019-09-08 03:58:21.077329','19','14. dayeon 2019-07-07 right:1',3,'',12,2),(1355,'2019-09-08 03:58:21.079259','18','13. dayeon 2019-07-10 right:1',3,'',12,2),(1356,'2019-09-08 03:58:21.080702','16','12. dayeon 2019-07-15 right:1',3,'',12,2),(1357,'2019-09-08 04:01:11.146902','15','  1[Range] 12. Range(stop)  07-20 11:03(15)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(1358,'2019-09-08 04:02:38.171771','16','  1[Range] 13. Range(start, stop)  07-20 14:24(16)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(1359,'2019-09-08 04:03:07.293555','15','  1[Range] 12. Range(stop)  07-20 11:03(15)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(1360,'2019-09-08 04:03:39.283752','17','  1[Range] 14. Range(start, stop, step)  07-20 14:27(17)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(1361,'2019-09-08 04:04:02.989234','16','  1[Range] 13. Range(start, stop)  07-20 14:24(16)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(1362,'2019-09-08 21:20:09.356890','83','  1[While] 82. While basic  09-08 14:11(83)',1,'[{\"added\": {}}]',3,2),(1363,'2019-09-08 21:20:19.920755','108','82. While basic -  4',1,'[{\"added\": {}}]',4,2),(1364,'2019-09-08 21:23:08.108162','83','  1[While] 82. While basic  09-08 14:11(83)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(1365,'2019-09-08 23:59:47.075119','83','  1[While] 19. While basic  09-08 14:11(83)',2,'[{\"changed\": {\"fields\": [\"question\"]}}]',3,2),(1366,'2019-09-09 00:01:45.143907','78','  1[While] 20. While  08-30 21:42(78)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(1367,'2019-09-09 00:06:44.672818','83','  1[While] 19. While concept  09-08 14:11(83)',2,'[{\"changed\": {\"fields\": [\"title\", \"explanation\"]}}]',3,2),(1368,'2019-09-09 00:27:32.397700','78','  1[While] 20. Break  08-30 21:42(78)',2,'[{\"changed\": {\"fields\": [\"title\", \"explanation\", \"example\", \"option1\", \"option2\", \"option3\", \"option4\"]}}]',3,2),(1369,'2019-09-09 00:29:29.767563','78','  1[While] 20. Break  08-30 21:42(78)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(1370,'2019-09-09 00:32:53.107597','78','  1[While] 20. Break  08-30 21:42(78)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(1371,'2019-09-09 00:33:05.976931','78','  1[While] 20. Break  08-30 21:42(78)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(1372,'2019-09-09 00:40:53.682605','20','  1[While] 21. Continue  07-21 00:09(20)',2,'[{\"changed\": {\"fields\": [\"title\", \"explanation\", \"example\"]}}]',3,2),(1373,'2019-09-09 00:41:18.020332','22','21. Continue -  12',2,'[{\"changed\": {\"fields\": [\"expected_answer\"]}}]',4,2),(1374,'2019-09-09 00:42:42.923433','15','  1[Range] 12. Range(stop)  07-20 11:03(15)',2,'[{\"changed\": {\"fields\": [\"example\"]}}]',3,2),(1375,'2019-09-09 00:43:01.239719','16','  1[Range] 13. Range(start, stop)  07-20 14:24(16)',2,'[{\"changed\": {\"fields\": [\"example\"]}}]',3,2),(1376,'2019-09-09 00:43:23.393511','17','  1[Range] 14. Range(start, stop, step)  07-20 14:27(17)',2,'[{\"changed\": {\"fields\": [\"example\"]}}]',3,2),(1377,'2019-09-09 00:44:33.679480','15','  1[Range] 12. Range(stop)  07-20 11:03(15)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(1378,'2019-09-09 00:44:49.417693','15','  1[Range] 12. Range(stop)  07-20 11:03(15)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(1379,'2019-09-09 00:45:02.005844','16','  1[Range] 13. Range(start, stop)  07-20 14:24(16)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(1380,'2019-09-09 00:45:10.302348','17','  1[Range] 14. Range(start, stop, step)  07-20 14:27(17)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(1381,'2019-09-09 00:48:40.805849','83','  1[While] 19. While concept  09-08 14:11(83)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(1382,'2019-09-09 00:51:53.535957','83','  1[While] 19. While concept  09-08 14:11(83)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(1383,'2019-09-09 00:54:11.858409','41','  1[DataType] 3. Data type summary  08-03 10:15(41)',2,'[{\"changed\": {\"fields\": [\"title\"]}}]',3,2),(1384,'2019-09-09 00:55:05.779908','41','  1[DataType] 3. Invalid data type  08-03 10:15(41)',2,'[{\"changed\": {\"fields\": [\"title\"]}}]',3,2),(1385,'2019-09-09 00:55:33.842355','42','  1[DataType] 4. Invalid list data type  08-03 20:47(42)',2,'[{\"changed\": {\"fields\": [\"title\"]}}]',3,2),(1386,'2019-09-09 00:59:29.505038','10','  Super Junior-14. Range',2,'[{\"changed\": {\"fields\": [\"desc\"]}}]',2,2),(1387,'2019-09-09 00:59:50.768754','12','  Super Junior-10. DataType',2,'[{\"changed\": {\"fields\": [\"desc\"]}}]',2,2),(1388,'2019-09-09 01:00:54.153877','13','  Super Junior-11. Operator',2,'[{\"changed\": {\"fields\": [\"desc\"]}}]',2,2),(1389,'2019-09-09 01:01:05.514879','14','  Super Junior-12. Variable',2,'[{\"changed\": {\"fields\": [\"desc\"]}}]',2,2),(1390,'2019-09-09 01:01:15.048822','15','  Super Junior-13. Print',2,'[{\"changed\": {\"fields\": [\"desc\"]}}]',2,2),(1391,'2019-09-09 07:08:58.039397','5','  Super Junior-17. While',2,'[{\"changed\": {\"fields\": [\"desc\"]}}]',2,2),(1392,'2019-09-09 07:21:27.686202','32','  1[DataType] 1. List, Tuple  07-28 23:11(32)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(1393,'2019-09-09 07:26:29.311356','84','  2[Function] 83. Function Concept  09-09 00:11(84)',1,'[{\"added\": {}}]',3,2),(1394,'2019-09-09 07:26:41.929614','109','83. Function Concept -  print_world()',1,'[{\"added\": {}}]',4,2),(1395,'2019-09-09 07:30:09.184104','84','  2[Function] 34. Function Concept  09-09 00:11(84)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(1396,'2019-09-09 07:38:42.150607','85','  2[Function] 84. Parameter  09-09 00:28(85)',1,'[{\"added\": {}}]',3,2),(1397,'2019-09-09 07:38:53.462475','110','84. Parameter -  10',1,'[{\"added\": {}}]',4,2),(1398,'2019-09-09 07:42:27.534685','85','  2[Function] 35. Parameter  09-09 00:28(85)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(1399,'2019-09-09 07:59:54.375298','86','  2[Function] 85. Return  09-09 00:49(86)',1,'[{\"added\": {}}]',3,2),(1400,'2019-09-09 08:00:27.964787','111','36. Return -  24',1,'[{\"added\": {}}]',4,2),(1401,'2019-09-09 08:02:33.105405','86','  2[Function] 36. Return  09-09 00:49(86)',2,'[{\"changed\": {\"fields\": [\"explanation\", \"example\"]}}]',3,2),(1402,'2019-09-10 04:11:16.405545','104','15. dayeon 2019-09-08 right:1',3,'',12,2),(1403,'2019-09-10 04:11:16.535108','103','14. dayeon 2019-09-08 right:1',3,'',12,2),(1404,'2019-09-10 04:11:16.536556','102','13. dayeon 2019-09-08 right:1',3,'',12,2),(1405,'2019-09-10 04:11:16.537571','101','12. dayeon 2019-09-08 right:1',3,'',12,2),(1406,'2019-09-10 08:14:45.331691','106','70.  2019-09-10 right:0',3,'',12,2),(1407,'2019-09-10 08:16:07.848191','105','12. dayeon 2019-09-08 right:1',2,'[{\"changed\": {\"fields\": [\"date\"]}}]',12,2),(1408,'2019-09-10 08:16:12.188401','107','13. dayeon 2019-09-08 right:1',2,'[{\"changed\": {\"fields\": [\"date\"]}}]',12,2),(1409,'2019-09-10 08:16:16.527210','108','14. dayeon 2019-09-08 right:1',2,'[{\"changed\": {\"fields\": [\"date\"]}}]',12,2),(1410,'2019-09-10 08:16:20.388526','109','15. dayeon 2019-09-08 right:1',2,'[{\"changed\": {\"fields\": [\"date\"]}}]',12,2),(1411,'2019-09-10 08:18:02.048624','15','  1[Range] 12. Range(stop)  07-20 11:03(15)',2,'[{\"changed\": {\"fields\": [\"video\"]}}]',3,2),(1412,'2019-09-11 03:39:29.784139','83','  1[While] 19. While concept  09-08 14:11(83)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(1413,'2019-09-11 09:04:59.615644','83','  1[While] 19. While concept  09-08 14:11(83)',2,'[{\"changed\": {\"fields\": [\"video\"]}}]',3,2),(1414,'2019-09-12 04:50:28.176798','5','guests',3,'',14,2),(1415,'2019-09-12 04:50:46.966269','13','guests',3,'',9,2),(1416,'2019-09-13 00:12:37.332136','84','  2[Function] 34. Function Concept  09-09 00:11(84)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(1417,'2019-09-13 02:16:14.608370','84','  2[Function] 34. Function Concept  09-09 00:11(84)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(1418,'2019-09-13 02:16:36.297498','85','  2[Function] 35. Parameter  09-09 00:28(85)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(1419,'2019-09-13 03:47:26.478914','86','  2[Function] 36. Return  09-09 00:49(86)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(1420,'2019-09-13 06:30:10.891565','77','  1[For] 17. For concept  08-30 21:12(77)',2,'[{\"changed\": {\"fields\": [\"video\", \"explanation\"]}}]',3,2),(1421,'2019-09-13 06:39:25.866925','84','  2[Function] 34. Function Concept  09-09 00:11(84)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(1422,'2019-09-15 02:11:21.711295','84','  2[Function] 34. Function Concept  09-09 00:11(84)',2,'[{\"changed\": {\"fields\": [\"video\"]}}]',3,2),(1423,'2019-09-18 02:44:41.512092','39','  3[Math] 73. Power of two  08-02 02:56(39)',2,'[{\"changed\": {\"fields\": [\"title\"]}}]',3,2),(1424,'2019-09-18 02:45:36.046820','10','  3[Math] 69. Multiply two numbers  07-18 02:52(10)',2,'[{\"changed\": {\"fields\": [\"title\"]}}]',3,2),(1425,'2019-09-18 02:51:13.891626','64','  3[Advanced String] 66. String transformation  08-18 19:47(64)',2,'[{\"changed\": {\"fields\": [\"title\"]}}]',3,2),(1426,'2019-09-18 02:52:11.601305','75','  3[Advanced List] 63. Split an array into two with equal sum  08-29 21:53(75)',2,'[{\"changed\": {\"fields\": [\"title\"]}}]',3,2),(1427,'2019-09-18 02:53:11.253980','60','  3[Advanced List] 60. Sum of the numbers  08-15 21:15(60)',2,'[{\"changed\": {\"fields\": [\"title\"]}}]',3,2),(1428,'2019-09-18 02:54:04.991874','48','  3[Advanced List] 56. Common value between two lists  08-05 18:30(48)',2,'[{\"changed\": {\"fields\": [\"title\"]}}]',3,2),(1429,'2019-09-18 02:54:43.533468','47','  3[Advanced List] 55. How many number less than k  08-05 18:28(47)',2,'[{\"changed\": {\"fields\": [\"title\"]}}]',3,2),(1430,'2019-09-18 02:54:56.794659','27','  3[Advanced List] 53. Missing number  07-25 21:31(27)',2,'[{\"changed\": {\"fields\": [\"title\"]}}]',3,2),(1431,'2019-09-18 02:55:55.338212','14','  4[Stack] 80. Reverse a list with stack  07-19 11:55(14)',2,'[{\"changed\": {\"fields\": [\"title\"]}}]',3,2),(1432,'2019-09-18 02:56:10.421476','14','  4[Stack] 80. Reverse a list using stack  07-19 11:55(14)',2,'[{\"changed\": {\"fields\": [\"title\"]}}]',3,2),(1433,'2019-09-18 02:57:55.802720','12','  3[Advanced List] 48. Swap elements 2  07-18 19:03(12)',2,'[{\"changed\": {\"fields\": [\"title\"]}}]',3,2),(1434,'2019-09-18 02:59:28.056333','25','  2[Class] 39. Find the error about class  07-22 20:28(25)',2,'[{\"changed\": {\"fields\": [\"title\"]}}]',3,2),(1435,'2019-09-18 02:59:51.214216','24','  2[Class] 38. Class and Object  07-22 20:23(24)',2,'[{\"changed\": {\"fields\": [\"title\"]}}]',3,2),(1436,'2019-09-18 03:01:10.638526','84','  2[Function] 34. Function  09-09 00:11(84)',2,'[{\"changed\": {\"fields\": [\"title\"]}}]',3,2),(1437,'2019-09-18 03:02:35.706012','31','  2[List] 32. Split a list by even and odd values  07-27 22:42(31)',2,'[{\"changed\": {\"fields\": [\"title\"]}}]',3,2),(1438,'2019-09-18 03:03:34.057481','4','  2[List] 31. Find the same value as the index  07-18 02:46(4)',2,'[{\"changed\": {\"fields\": [\"title\"]}}]',3,2),(1439,'2019-09-18 03:04:34.136547','6','  2[List] 30. Insert into List  07-18 02:48(6)',2,'[{\"changed\": {\"fields\": [\"title\"]}}]',3,2),(1440,'2019-09-18 03:04:45.261602','62','  2[List] 29. Append to List  08-17 12:43(62)',2,'[{\"changed\": {\"fields\": [\"title\"]}}]',3,2),(1441,'2019-09-18 03:06:14.205808','56','  2[String] 27. Join strings  08-09 16:25(56)',2,'[{\"changed\": {\"fields\": [\"title\", \"explanation\"]}}]',3,2),(1442,'2019-09-18 03:06:40.103703','55','  2[String] 26. Split a string  08-09 15:03(55)',2,'[{\"changed\": {\"fields\": [\"title\"]}}]',3,2),(1443,'2019-09-18 03:08:04.823390','83','  1[While] 19. While  09-08 14:11(83)',2,'[{\"changed\": {\"fields\": [\"title\"]}}]',3,2),(1444,'2019-09-18 03:09:02.923870','19','  1[While] 22. Sum using While  07-21 00:00(19)',2,'[{\"changed\": {\"fields\": [\"title\"]}}]',3,2),(1445,'2019-09-18 03:09:18.943041','1','  1[For] 18. Sum using For  07-17 02:33(1)',2,'[{\"changed\": {\"fields\": [\"title\"]}}]',3,2),(1446,'2019-09-18 03:09:28.852659','77','  1[For] 17. For  08-30 21:12(77)',2,'[{\"changed\": {\"fields\": [\"title\"]}}]',3,2),(1447,'2019-09-18 03:09:39.372547','82','  1[If] 16. If  09-04 00:19(82)',2,'[{\"changed\": {\"fields\": [\"title\"]}}]',3,2),(1448,'2019-09-18 03:10:09.049667','36','  1[Print] 11. Print  08-01 00:45(36)',2,'[{\"changed\": {\"fields\": [\"title\"]}}]',3,2),(1449,'2019-09-18 03:10:44.907411','70','  1[DataType] 2. Set and Dictionary  08-25 20:48(70)',2,'[{\"changed\": {\"fields\": [\"title\"]}}]',3,2),(1450,'2019-09-18 03:11:19.009159','32','  1[DataType] 1. List and Tuple  07-28 23:11(32)',2,'[{\"changed\": {\"fields\": [\"title\"]}}]',3,2),(1451,'2019-09-18 03:12:20.942832','19','  1[While] 22. Sum function using While  07-21 00:00(19)',2,'[{\"changed\": {\"fields\": [\"title\"]}}]',3,2),(1452,'2019-09-18 03:12:30.267125','1','  1[For] 18. Sum function using For  07-17 02:33(1)',2,'[{\"changed\": {\"fields\": [\"title\"]}}]',3,2),(1453,'2019-09-18 03:25:18.778459','47','  3[Advanced List] 55. How many numbers less than k  08-05 18:28(47)',2,'[{\"changed\": {\"fields\": [\"title\"]}}]',3,2),(1454,'2019-09-18 07:27:09.359113','17','  1[Range] 14. Range with start, stop, step  07-20 14:27(17)',2,'[{\"changed\": {\"fields\": [\"title\"]}}]',3,2),(1455,'2019-09-18 07:27:19.529508','16','  1[Range] 13. Range with start, stop  07-20 14:24(16)',2,'[{\"changed\": {\"fields\": [\"title\"]}}]',3,2),(1456,'2019-09-18 07:27:32.824578','15','  1[Range] 12. Range  07-20 11:03(15)',2,'[{\"changed\": {\"fields\": [\"title\"]}}]',3,2),(1457,'2019-09-18 08:07:48.948861','17','  1[Range] 14. Range with step  07-20 14:27(17)',2,'[{\"changed\": {\"fields\": [\"title\"]}}]',3,2),(1458,'2019-09-18 08:08:02.126070','16','  1[Range] 13. Range with start  07-20 14:24(16)',2,'[{\"changed\": {\"fields\": [\"title\"]}}]',3,2),(1459,'2019-09-19 03:57:06.990418','69','58. Swap the values - [3, 4, 5, 6, 7, 8, 9]\r\n2\r\n5 [3, 4, 5, 9, 8, 7, 6]',2,'[{\"changed\": {\"fields\": [\"test\"]}}]',4,2),(1460,'2019-09-19 03:57:15.053073','70','58. Swap the values - [1, 2, 3, 4, 5]\r\n1\r\n4 [1, 5, 4, 3, 2]',2,'[{\"changed\": {\"fields\": [\"test\"]}}]',4,2),(1461,'2019-09-19 05:54:11.621202','80','  3[Advanced For] 42. Multiply  09-01 20:44(80)',2,'[{\"changed\": {\"fields\": [\"title\"]}}]',3,2),(1462,'2019-09-19 05:55:20.058652','112','42. Multiply - 5 120',1,'[{\"added\": {}}]',4,2),(1463,'2019-09-19 06:56:27.089090','113','48. Swap elements 2 - abccbbd b',1,'[{\"added\": {}}]',4,2),(1464,'2019-09-19 06:57:39.309137','114','41. Duplicated number - [1, 3, 5, 3] True',1,'[{\"added\": {}}]',4,2),(1465,'2019-09-19 06:57:51.751195','115','41. Duplicated number - [1, 4, 6] False',1,'[{\"added\": {}}]',4,2),(1466,'2019-09-19 07:18:45.851950','15','PyPyKids',2,'[{\"changed\": {\"fields\": [\"is_staff\", \"is_superuser\"]}}]',9,2),(1467,'2019-09-19 07:18:52.789887','16','admin',2,'[{\"changed\": {\"fields\": [\"is_staff\", \"is_superuser\"]}}]',9,2),(1468,'2019-09-20 01:18:22.756909','18','  1[Range] 15. Range summary  07-20 14:33(18)',2,'[{\"changed\": {\"fields\": [\"question\", \"example\", \"quiz_type\", \"option1\", \"option2\", \"option3\", \"option4\"]}}]',3,2),(1469,'2019-09-20 01:18:43.900866','18','  1[Range] 15. Range summary  07-20 14:33(18)',2,'[{\"changed\": {\"fields\": [\"question\"]}}]',3,2),(1470,'2019-09-20 01:33:22.751501','20','15. Range summary -  ',2,'[{\"changed\": {\"fields\": [\"expected_output\", \"expected_stdout\"]}}]',4,2),(1471,'2019-09-20 03:30:54.140210','20','15. Range summary -  ',2,'[{\"changed\": {\"fields\": [\"expected_stdout\"]}}]',4,2),(1472,'2019-09-20 03:31:52.981008','82','  1[If] 16. If  09-04 00:19(82)',2,'[{\"changed\": {\"fields\": [\"score\"]}}]',3,2),(1473,'2019-09-20 03:42:33.035208','122','17. admin 2019-09-19 right:1',3,'',12,2),(1474,'2019-09-20 03:42:33.145202','121','9. admin 2019-09-19 right:1',3,'',12,2),(1475,'2019-09-20 03:42:33.147656','120','11. admin 2019-09-19 right:1',3,'',12,2),(1476,'2019-09-20 03:42:33.148746','119','5. admin 2019-09-19 right:1',3,'',12,2),(1477,'2019-09-20 03:42:33.150173','118','47. admin 2019-09-19 right:1',3,'',12,2),(1478,'2019-09-20 03:42:33.151100','117','55. admin 2019-09-19 right:-1',3,'',12,2),(1479,'2019-09-20 03:42:33.152836','116','48. admin 2019-09-19 right:-1',3,'',12,2),(1480,'2019-09-20 03:42:33.154566','115','10. admin 2019-09-19 right:1',3,'',12,2),(1481,'2019-09-20 03:42:33.155434','114','1. admin 2019-09-19 right:1',3,'',12,2),(1482,'2019-09-20 03:42:33.156222','113','0. admin 2019-09-19 right:1',3,'',12,2),(1483,'2019-09-20 04:14:59.235404','126','16. None 2019-09-19 right:1',3,'',12,16),(1484,'2019-09-20 04:14:59.396728','125','16. None 2019-09-19 right:1',3,'',12,16),(1485,'2019-09-20 04:14:59.400082','124','0. None 2019-09-19 right:1',3,'',12,16),(1486,'2019-09-20 04:14:59.401793','123','0. None 2019-09-19 right:-1',3,'',12,16),(1487,'2019-09-20 04:19:02.763549','127','16. None 2019-09-19 right:0',3,'',12,16),(1488,'2019-09-21 01:05:27.486191','55','  2[String] 26. Split a string  08-09 15:03(55)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,1),(1489,'2019-09-21 01:31:12.461971','32','  1[DataType] 1. List and Tuple  07-28 23:11(32)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,1),(1490,'2019-09-21 01:32:28.258651','26','  1[DataType] 0. Basic data type  07-22 23:03(26)',2,'[{\"changed\": {\"fields\": [\"question\"]}}]',3,1),(1491,'2019-09-21 17:36:02.239550','61','  2[List] 28. Manage List  08-17 01:35(61)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(1492,'2019-09-21 17:58:01.899445','61','  2[List] 28. Manage List  08-17 01:35(61)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(1493,'2019-09-21 18:02:24.567648','61','  2[List] 28. Manage List  08-17 01:35(61)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(1494,'2019-09-21 18:22:29.149936','61','  2[List] 28. Manage List  08-17 01:35(61)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(1495,'2019-09-21 18:30:41.713029','87','  2[Set] 86. Set  09-21 11:02(87)',1,'[{\"added\": {}}]',3,2),(1496,'2019-09-21 18:31:02.180649','116','86. Set -  ',1,'[{\"added\": {}}]',4,2),(1497,'2019-09-21 18:32:50.661245','87','  2[Set] 33. Set  09-21 11:02(87)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(1498,'2019-09-21 18:38:36.354745','77','  1[For] 17. For  08-30 21:12(77)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(1499,'2019-09-22 01:45:49.826577','87','  2[Set] 33. Set  09-21 11:02(87)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(1500,'2019-09-22 08:57:49.500191','87','  2[Set] 33. Set  09-21 11:02(87)',2,'[{\"changed\": {\"fields\": [\"video\"]}}]',3,16),(1501,'2019-09-23 01:33:07.513369','27','0. (26)dayeon 2019-07-25 right:1',3,'',12,2),(1502,'2019-09-23 01:34:10.670150','145','81. (14)None 2019-09-20 right:0',3,'',12,2),(1503,'2019-09-23 01:34:10.835217','144','81. (14)None 2019-09-20 right:0',3,'',12,2),(1504,'2019-09-23 01:34:10.836104','143','81. (14)None 2019-09-20 right:0',3,'',12,2),(1505,'2019-09-23 02:45:36.367203','1','  1[For] 18. Sum function using For  07-17 02:33(1)',2,'[{\"changed\": {\"fields\": [\"example\"]}}]',3,2),(1506,'2019-09-23 02:47:23.211053','3','  2[String] 25. String concatenation  07-18 02:45(3)',2,'[{\"changed\": {\"fields\": [\"example\"]}}]',3,2),(1507,'2019-09-23 04:02:04.973567','88','  1[If] 87. If Else  09-22 20:59(88)',1,'[{\"added\": {}}]',3,2),(1508,'2019-09-23 04:02:22.306905','117','87. If Else -  False',1,'[{\"added\": {}}]',4,2),(1509,'2019-09-23 04:03:21.781008','88','  1[If] 87. If Else  09-22 20:59(88)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,16),(1510,'2019-09-23 04:05:08.466698','89','  1[If] 88. If Elif Else  09-22 21:03(89)',1,'[{\"added\": {}}]',3,16),(1511,'2019-09-23 04:05:17.573534','118','88. If Elif Else -  3',1,'[{\"added\": {}}]',4,16),(1512,'2019-09-23 04:06:15.579162','82','  1[If] 16. If  09-04 00:19(82)',2,'[{\"changed\": {\"fields\": [\"explanation\", \"example\", \"option1\", \"option2\", \"option3\", \"option4\"]}}]',3,16),(1513,'2019-09-23 04:12:26.749816','90','  1[For] 89. For 2  09-22 21:09(90)',1,'[{\"added\": {}}]',3,16),(1514,'2019-09-23 04:12:37.635531','119','89. For 2 -  4',1,'[{\"added\": {}}]',4,16),(1515,'2019-09-23 04:14:39.070957','77','  1[For] 19. For  08-30 21:12(77)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,16),(1516,'2019-09-23 04:15:24.884041','89','  1[If] 18. If Elif Else  09-22 21:03(89)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,16),(1517,'2019-09-23 04:15:52.880811','88','  1[If] 17. If Else  09-22 20:59(88)',2,'[{\"changed\": {\"fields\": [\"example\"]}}]',3,16),(1518,'2019-09-23 04:16:58.891614','90','  1[For] 20. For in string  09-22 21:09(90)',2,'[{\"changed\": {\"fields\": [\"title\"]}}]',3,16),(1519,'2019-09-23 04:21:57.324334','1','  1[For] 21. Sum using For  07-17 02:33(1)',2,'[{\"changed\": {\"fields\": [\"title\"]}}]',3,16),(1520,'2019-09-23 04:22:15.740121','19','  1[While] 25. Sum using While  07-21 00:00(19)',2,'[{\"changed\": {\"fields\": [\"title\"]}}]',3,16),(1521,'2019-09-23 04:24:30.516623','19','  1[While] 25. Sum using While  07-21 00:00(19)',2,'[]',3,16),(1522,'2019-09-23 05:07:29.211193','91','  2[List] 90. Sum of odd numbers  09-22 21:45(91)',1,'[{\"added\": {}}]',3,16),(1523,'2019-09-23 05:07:44.673423','120','90. Sum of odd numbers - [2, 4, 5, 6, 7] 12',1,'[{\"added\": {}}]',4,16),(1524,'2019-09-23 07:35:35.294897','62','  2[List] 32. Append  08-17 12:43(62)',2,'[{\"changed\": {\"fields\": [\"title\", \"explanation\"]}}]',3,16),(1525,'2019-09-23 07:36:30.695143','61','  2[List] 31. Manage List  08-17 01:35(61)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,16),(1526,'2019-09-23 07:42:36.075982','6','  2[List] 33. Insert  07-18 02:48(6)',2,'[{\"changed\": {\"fields\": [\"title\", \"explanation\"]}}]',3,16),(1527,'2019-09-23 07:43:08.920510','6','  2[List] 33. Insert  07-18 02:48(6)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,16),(1528,'2019-09-23 07:43:29.408840','6','  2[List] 33. Insert  07-18 02:48(6)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,16),(1529,'2019-09-23 07:43:48.266234','6','  2[List] 33. Insert  07-18 02:48(6)',2,'[{\"changed\": {\"fields\": [\"example\"]}}]',3,16),(1530,'2019-09-23 07:46:02.434751','13','  3[Advanced List] 54. Reverse a list  07-18 19:20(13)',2,'[{\"changed\": {\"fields\": [\"example\"]}}]',3,16),(1531,'2019-09-23 07:47:08.791352','61','  2[List] 31. List  08-17 01:35(61)',2,'[{\"changed\": {\"fields\": [\"title\"]}}]',3,16),(1532,'2019-09-23 07:50:42.832228','61','  2[List] 31. List  08-17 01:35(61)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,16),(1533,'2019-09-23 07:51:13.055460','61','  2[List] 31. List  08-17 01:35(61)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,16),(1534,'2019-09-23 07:51:48.539059','32','  1[DataType] 1. List and Tuple  07-28 23:11(32)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,16),(1535,'2019-09-23 07:52:25.940044','32','  1[DataType] 1. List and Tuple  07-28 23:11(32)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,16),(1536,'2019-09-23 07:53:17.221852','26','  1[DataType] 0. Basic data type  07-22 23:03(26)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,16),(1537,'2019-09-23 07:53:50.720921','26','  1[DataType] 0. Basic data type  07-22 23:03(26)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,16),(1538,'2019-09-23 07:54:36.749404','70','  1[DataType] 2. Set and Dictionary  08-25 20:48(70)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,16),(1539,'2019-09-23 07:55:34.712711','26','  1[DataType] 0. Basic data type  07-22 23:03(26)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,16),(1540,'2019-09-23 07:55:53.912743','32','  1[DataType] 1. List and Tuple  07-28 23:11(32)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,16),(1541,'2019-09-23 07:57:00.084885','77','  1[For] 19. For  08-30 21:12(77)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,16),(1542,'2019-09-23 07:59:48.006296','7','  2[Set] 38. Exist  07-18 02:49(7)',2,'[{\"changed\": {\"fields\": [\"title\", \"explanation\"]}}]',3,16),(1543,'2019-09-23 08:00:21.952597','7','  2[Set] 38. Exist  07-18 02:49(7)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,16),(1544,'2019-09-23 08:02:25.671846','92','  2[Set] 91. Length  09-23 01:00(92)',1,'[{\"added\": {}}]',3,16),(1545,'2019-09-23 08:02:39.812935','121','91. Length - {1, 2, 3, 4, 5} 5',1,'[{\"added\": {}}]',4,16),(1546,'2019-09-23 08:07:09.844767','93','  2[Set] 92. Union  09-23 01:05(93)',1,'[{\"added\": {}}]',3,16),(1547,'2019-09-23 08:07:28.405404','122','92. Union - {1, 2, 3}, {3, 4, 5} {1, 2, 3, 4, 5}',1,'[{\"added\": {}}]',4,16),(1548,'2019-09-23 08:10:00.027257','87','  2[Set] 37. Set  09-21 11:02(87)',2,'[{\"changed\": {\"fields\": [\"explanation\", \"question\", \"example\", \"answer_header\"]}}]',3,16),(1549,'2019-09-23 08:10:21.251376','116','37. Set - {1, 2, 3, 5, 6} {1, 2, 3, 4, 5, 6}',2,'[{\"changed\": {\"fields\": [\"input\", \"expected_output\", \"expected_stdout\"]}}]',4,16),(1550,'2019-09-23 08:10:56.969079','87','  2[Set] 37. Set  09-21 11:02(87)',2,'[{\"changed\": {\"fields\": [\"question\"]}}]',3,16),(1551,'2019-09-23 08:11:19.005753','7','  2[Set] 38. Set exist  07-18 02:49(7)',2,'[{\"changed\": {\"fields\": [\"title\"]}}]',3,16),(1552,'2019-09-23 08:12:06.458619','92','  2[Set] 39. Set length  09-23 01:00(92)',2,'[{\"changed\": {\"fields\": [\"title\"]}}]',3,16),(1553,'2019-09-23 08:12:27.327871','62','  2[List] 32. Append to List  08-17 12:43(62)',2,'[{\"changed\": {\"fields\": [\"title\"]}}]',3,16),(1554,'2019-09-23 08:12:36.150905','6','  2[List] 33. Insert into List  07-18 02:48(6)',2,'[{\"changed\": {\"fields\": [\"title\"]}}]',3,16),(1555,'2019-09-23 08:13:09.969734','93','  2[Set] 40. Set Union  09-23 01:05(93)',2,'[{\"changed\": {\"fields\": [\"title\"]}}]',3,16),(1556,'2019-09-23 08:14:47.878262','87','  2[Set] 37. Set  09-21 11:02(87)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,16),(1557,'2019-09-23 08:37:14.702342','122','40. Set Union - {1, 2, 3}, {3, 4, 5} {1, 2, 3, 4, 5}',2,'[]',4,16),(1558,'2019-09-23 08:37:57.813011','87','  2[Set] 37. Set  09-21 11:02(87)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,16),(1559,'2019-09-23 08:38:32.352533','87','  2[Set] 37. Set  09-21 11:02(87)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,16),(1560,'2019-09-23 08:39:13.316604','87','  2[Set] 37. Set  09-21 11:02(87)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,16),(1561,'2019-09-23 08:40:41.444605','70','  1[DataType] 2. Set and Dictionary  08-25 20:48(70)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,16),(1562,'2019-09-23 08:41:38.664136','70','  1[DataType] 2. Set and Dictionary  08-25 20:48(70)',2,'[]',3,16),(1563,'2019-09-24 01:16:55.215779','94','  3[Math] 93. Average  09-23 18:14(94)',1,'[{\"added\": {}}]',3,2),(1564,'2019-09-24 01:17:26.262429','123','93. Average - [1, 2, 4, 5, 6] 3.6',1,'[{\"added\": {}}]',4,2),(1565,'2019-09-24 01:49:01.708125','95','  1[Operator] 94. Logical Operator - And  09-23 18:36(95)',1,'[{\"added\": {}}]',3,2),(1566,'2019-09-24 01:49:14.589942','124','94. Logical Operator - And -  4',1,'[{\"added\": {}}]',4,2),(1567,'2019-09-24 01:53:27.410535','95','  1[Operator] 94. Logical Operator(Not)  09-23 18:36(95)',2,'[{\"changed\": {\"fields\": [\"title\", \"explanation\"]}}]',3,2),(1568,'2019-09-24 01:53:41.235938','95','  1[Operator] 94. Logical Operator (Not)  09-23 18:36(95)',2,'[{\"changed\": {\"fields\": [\"title\"]}}]',3,2),(1569,'2019-09-24 01:58:27.988728','96','  1[Operator] 95. Logical Operator (And)  09-23 18:55(96)',1,'[{\"added\": {}}]',3,2),(1570,'2019-09-24 01:58:47.534372','125','95. Logical Operator (And) -  4',1,'[{\"added\": {}}]',4,2),(1571,'2019-09-24 01:59:37.848375','74','  1[Operator] 9. Logical Operator (Or)  08-29 01:11(74)',2,'[{\"changed\": {\"fields\": [\"title\", \"video\"]}}]',3,2),(1572,'2019-09-24 01:59:46.404438','95','  1[Operator] 8. Logical Operator (Not)  09-23 18:36(95)',2,'[{\"changed\": {\"fields\": [\"video\"]}}]',3,2),(1573,'2019-09-24 02:01:07.304427','96','  1[Operator] 10. Logical Operator (And)  09-23 18:55(96)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(1574,'2019-09-24 02:01:38.262138','74','  1[Operator] 9. Logical Operator (Or)  08-29 01:11(74)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(1575,'2019-09-24 02:16:45.549901','77','68. Maximum profit - [4, 3, 5, 8, 6] \"123\"',2,'[{\"changed\": {\"fields\": [\"expected_output\"]}}]',4,2),(1576,'2019-09-24 02:17:16.641415','77','68. Maximum profit - [4, 3, 5, 8, 6] [\"test\", \'test2\']',2,'[{\"changed\": {\"fields\": [\"expected_output\"]}}]',4,2),(1577,'2019-09-24 02:28:19.589293','167','68. (59)dayeon 2019-09-23 right:1',3,'',12,2),(1578,'2019-09-24 02:28:56.741917','77','68. Maximum profit - [4, 3, 5, 8, 6] [\"test\", \'test2\']',2,'[]',4,2),(1579,'2019-09-24 02:43:02.839721','59','  3[Advanced List] 68. Maximum profit  08-15 21:05(59)',2,'[{\"changed\": {\"fields\": [\"example\"]}}]',3,2),(1580,'2019-09-24 02:43:09.015265','77','68. Maximum profit - [4, 3, 5, 8, 6] 5',2,'[{\"changed\": {\"fields\": [\"expected_output\"]}}]',4,2),(1581,'2019-09-24 02:46:26.353492','77','68. Maximum profit - [4, 3, 5, 8, 6] [\"test\", \'test2\']',2,'[{\"changed\": {\"fields\": [\"expected_output\"]}}]',4,2),(1582,'2019-09-24 03:09:18.605936','77','68. Maximum profit - [4, 3, 5, 8, 6] [\'test\', \'test2\']',2,'[{\"changed\": {\"fields\": [\"expected_output\"]}}]',4,2),(1583,'2019-09-24 03:10:00.272545','77','68. Maximum profit - [4, 3, 5, 8, 6] 5',2,'[{\"changed\": {\"fields\": [\"expected_output\"]}}]',4,2),(1584,'2019-09-24 07:58:58.160371','3','  2[String] 30. Merge Strings  07-18 02:45(3)',2,'[{\"changed\": {\"fields\": [\"title\", \"explanation\"]}}]',3,15),(1585,'2019-09-24 08:00:53.497424','56','  2[String] 31. Merge strings using Join  08-09 16:25(56)',2,'[{\"changed\": {\"fields\": [\"title\", \"explanation\"]}}]',3,15),(1586,'2019-09-24 08:01:10.162928','3','  2[String] 30. Merge strings  07-18 02:45(3)',2,'[{\"changed\": {\"fields\": [\"title\"]}}]',3,15),(1587,'2019-09-24 08:01:23.813319','3','  2[String] 30. Merge strings  07-18 02:45(3)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,15),(1588,'2019-09-24 08:07:45.501836','97','  2[Integer] 96. Index a character  09-24 01:02(97)',1,'[{\"added\": {}}]',3,15),(1589,'2019-09-24 08:07:55.498960','126','96. Index a character -  3',1,'[{\"added\": {}}]',4,15),(1590,'2019-09-24 08:08:22.904336','97','  2[String] 96. Index a character  09-24 01:02(97)',2,'[{\"changed\": {\"fields\": [\"category\"]}}]',3,15),(1591,'2019-09-24 08:19:16.668677','61','  2[List] 34. Index a value from list  08-17 01:35(61)',2,'[{\"changed\": {\"fields\": [\"title\", \"explanation\", \"example\", \"option1\", \"option2\", \"option3\", \"option4\"]}}]',3,15),(1592,'2019-09-24 08:22:29.268634','98','  2[List] 97. Pop a value from list  09-24 01:17(98)',1,'[{\"added\": {}}]',3,15),(1593,'2019-09-24 08:22:45.879600','127','97. Pop a value from list -  4',1,'[{\"added\": {}}]',4,15),(1594,'2019-09-24 08:30:39.379424','99','  2[List] 98. Remove a value from a list  09-24 01:23(99)',1,'[{\"added\": {}}]',3,15),(1595,'2019-09-24 08:30:49.704874','128','98. Remove a value from a list -  3',1,'[{\"added\": {}}]',4,15),(1596,'2019-09-24 08:31:02.665179','98','  2[List] 97. Pop a value from a list  09-24 01:17(98)',2,'[{\"changed\": {\"fields\": [\"title\", \"explanation\"]}}]',3,15),(1597,'2019-09-24 08:32:41.785694','98','  2[List] 37. Pop a value from a list  09-24 01:17(98)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,15),(1598,'2019-09-24 08:33:15.942227','99','  2[List] 38. Remove a value from a list  09-24 01:23(99)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,15),(1599,'2019-09-24 08:34:05.257190','99','  2[List] 38. Remove a value from a list  09-24 01:23(99)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,15),(1600,'2019-09-24 08:35:00.894175','99','  2[List] 38. Remove a value from a list  09-24 01:23(99)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,15),(1601,'2019-09-24 08:36:38.273735','98','  2[List] 37. Pop a value from a list  09-24 01:17(98)',2,'[]',3,15),(1602,'2019-09-24 08:40:24.812236','70','  1[DataType] 2. Set and Dictionary  08-25 20:48(70)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,15),(1603,'2019-09-24 08:47:33.806946','100','  2[List] 99. Remove the duplicated values  09-24 01:44(100)',1,'[{\"added\": {}}]',3,2),(1604,'2019-09-24 08:47:49.822633','129','99. Remove the duplicated values - [1, 2, 3, 4, 5]\r\n[3, 4, 5, 6] [1, 2]',1,'[{\"added\": {}}]',4,2),(1605,'2019-09-24 09:14:37.204129','101','  2[List] 100. Remove negative values from a list  09-24 02:13(101)',1,'[{\"added\": {}}]',3,2),(1606,'2019-09-24 09:14:58.474335','130','100. Remove negative values from a list - [-2, 0, 1, -3, 4] [0, 1, 4]',1,'[{\"added\": {}}]',4,2),(1607,'2019-09-24 09:20:54.081424','102','  2[List] 101. Convert a string to a list  09-24 02:17(102)',1,'[{\"added\": {}}]',3,2),(1608,'2019-09-24 09:21:26.244400','131','101. Convert a string to a list - \"hello\" [\'h\', \'e\', \'l\', \'l\', \'o\']',1,'[{\"added\": {}}]',4,2),(1609,'2019-09-24 09:23:33.169948','44','  3[Advanced For] 59. Remove adjacent duplicated character  08-04 17:05(44)',2,'[{\"changed\": {\"fields\": [\"title\"]}}]',3,2),(1610,'2019-09-24 09:25:13.526759','103','  2[Set] 102. Remove duplicated values from a list  09-24 02:22(103)',1,'[{\"added\": {}}]',3,2),(1611,'2019-09-24 09:25:32.322988','132','102. Remove duplicated values from a list - [1, 2, 1, 2, 3] [1, 2, 3]',1,'[{\"added\": {}}]',4,2),(1612,'2019-09-25 02:59:58.593419','103','  2[Set] 49. Remove duplicated values from a list  09-24 02:22(103)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(1613,'2019-09-25 03:01:41.035393','5','  1[While] 28. Add function  07-18 02:47(5)',2,'[{\"changed\": {\"fields\": [\"example\"]}}]',3,2),(1614,'2019-09-25 03:29:30.148490','104','  1[Variable] 103. Create variables  09-24 20:02(104)',1,'[{\"added\": {}}]',3,2),(1615,'2019-09-25 03:29:45.525482','133','103. Create variables -  2',1,'[{\"added\": {}}]',4,2),(1616,'2019-09-25 03:33:27.268857','52','  1[Variable] 12. Variable naming rule  08-07 22:25(52)',2,'[{\"changed\": {\"fields\": [\"video\"]}}]',3,2),(1617,'2019-09-25 03:33:33.608700','104','  1[Variable] 11. Create variables  09-24 20:02(104)',2,'[{\"changed\": {\"fields\": [\"video\"]}}]',3,2),(1618,'2019-09-25 03:34:40.482307','52','  1[Variable] 12. Variable naming rule  08-07 22:25(52)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(1619,'2019-09-25 03:35:25.768762','104','  1[Variable] 11. Create variables  09-24 20:02(104)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(1620,'2019-09-25 03:48:35.662038','97','  2[String] 31. Index a character  09-24 01:02(97)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(1621,'2019-09-25 03:54:35.094765','97','  2[String] 31. Index a character  09-24 01:02(97)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(1622,'2019-09-25 03:57:31.396496','97','  2[String] 31. Index a character  09-24 01:02(97)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(1623,'2019-09-25 04:18:01.307910','105','  2[String] 104. Slice a string  09-24 20:49(105)',1,'[{\"added\": {}}]',3,2),(1624,'2019-09-25 04:18:24.494624','134','104. Slice a string - \'Hello World\' \'lo Wo\'',1,'[{\"added\": {}}]',4,2),(1625,'2019-09-25 04:23:40.070932','105','  2[String] 32. Slice a string  09-24 20:49(105)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(1626,'2019-09-25 04:29:34.404093','134','32. Slice a string - \'Hello World\' lo Wo',2,'[{\"changed\": {\"fields\": [\"expected_output\"]}}]',4,2),(1627,'2019-09-25 04:56:05.624114','134','32. Slice a string - \'Hello World\' lo Wo',2,'[]',4,2),(1628,'2019-09-25 04:56:58.111447','135','58. Frequency - \"abccbbd\" b',1,'[{\"added\": {}}]',4,2),(1629,'2019-09-25 04:58:42.702654','135','58. Frequency - \"abccbbd\" 3',2,'[{\"changed\": {\"fields\": [\"expected_output\"]}}]',4,2),(1630,'2019-09-25 05:02:01.779357','28','  3[Advanced Dictionary] 58. Frequency  07-26 00:36(28)',2,'[{\"changed\": {\"fields\": [\"question\", \"example\"]}}]',3,2),(1631,'2019-09-25 05:07:05.641225','91','101. Remove outermost parenthesis - \'(()())\' ()()',2,'[{\"changed\": {\"fields\": [\"expected_output\"]}}]',4,2),(1632,'2019-09-25 05:07:17.482615','92','101. Remove outermost parenthesis - \'()()\' ',2,'[{\"changed\": {\"fields\": [\"expected_output\"]}}]',4,2),(1633,'2019-09-25 05:07:36.451291','91','101. Remove outermost parenthesis - \'(()())\' ',2,'[{\"changed\": {\"fields\": [\"expected_output\"]}}]',4,2),(1634,'2019-09-25 05:10:43.391905','91','101. Remove outermost parenthesis - \'(()())\' \"\"',2,'[{\"changed\": {\"fields\": [\"expected_output\"]}}]',4,2),(1635,'2019-09-25 05:11:39.892082','91','101. Remove outermost parenthesis - \'(()())\' ()()',2,'[{\"changed\": {\"fields\": [\"expected_output\"]}}]',4,2),(1636,'2019-09-25 05:12:13.662691','92','101. Remove outermost parenthesis - \'(())\' ()',2,'[{\"changed\": {\"fields\": [\"input\", \"expected_output\"]}}]',4,2),(1637,'2019-09-25 05:15:12.987308','44','  3[Advanced For] 62. Remove adjacent duplicated character  08-04 17:05(44)',2,'[{\"changed\": {\"fields\": [\"question\"]}}]',3,2),(1638,'2019-09-25 05:15:42.227312','58','62. Remove adjacent duplicated character - \"abbac\" c',2,'[{\"changed\": {\"fields\": [\"input\", \"expected_output\"]}}]',4,2),(1639,'2019-09-25 05:16:17.544998','58','62. Remove adjacent duplicated character - \"aabbc\" c',2,'[{\"changed\": {\"fields\": [\"input\"]}}]',4,2),(1640,'2019-09-25 05:17:04.750908','18','  1[Range] 18. Range summary  07-20 14:33(18)',2,'[{\"changed\": {\"fields\": [\"question\"]}}]',3,2),(1641,'2019-09-25 05:25:51.179311','18','  1[Range] 18. Range summary  07-20 14:33(18)',2,'[]',3,2),(1642,'2019-09-25 05:31:33.720146','94','  3[Math] 89. Average  09-23 18:14(94)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(1643,'2019-09-25 05:46:50.339505','76','  3[Advanced List] 82. Sliding Window Maximum  08-29 22:15(76)',2,'[{\"changed\": {\"fields\": [\"question\"]}}]',3,2),(1644,'2019-09-25 05:57:00.985259','29','  3[Advanced List] 70. Rotate a list  07-27 10:16(29)',2,'[{\"changed\": {\"fields\": [\"example\"]}}]',3,2),(1645,'2019-09-25 05:57:28.567876','23','  3[Advanced List] 69. Subarray  07-22 20:14(23)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(1646,'2019-09-25 05:58:27.000720','13','  3[Advanced List] 67. Reverse a list  07-18 19:20(13)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(1647,'2019-09-25 05:59:16.919064','12','  3[Advanced List] 66. Swap 2nd elements  07-18 19:03(12)',2,'[{\"changed\": {\"fields\": [\"title\"]}}]',3,2),(1648,'2019-09-25 06:00:00.597902','49','  3[Advanced For] 63. Print triangle  08-05 18:34(49)',2,'[{\"changed\": {\"fields\": [\"title\"]}}]',3,2),(1649,'2019-09-25 06:00:14.697614','53','  3[Advanced For] 64. Print rectangle  08-08 22:20(53)',2,'[{\"changed\": {\"fields\": [\"title\"]}}]',3,2),(1650,'2019-09-25 06:00:55.895268','87','  2[Set] 47. Set  09-21 11:02(87)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(1651,'2019-09-25 06:01:07.874898','53','  3[Advanced For] 64. Print square  08-08 22:20(53)',2,'[{\"changed\": {\"fields\": [\"title\"]}}]',3,2),(1652,'2019-09-25 06:01:22.954689','44','  3[Advanced For] 62. Remove adjacent duplicated characters  08-04 17:05(44)',2,'[{\"changed\": {\"fields\": [\"title\"]}}]',3,2),(1653,'2019-09-25 06:03:57.052018','85','  2[Function] 53. Parameter  09-09 00:28(85)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(1654,'2019-09-25 06:06:08.532520','20','  1[While] 27. Continue  07-21 00:09(20)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(1655,'2019-09-25 06:08:14.361013','19','  1[While] 28. Sum using While  07-21 00:00(19)',2,'[{\"changed\": {\"fields\": [\"explanation\", \"question\"]}}]',3,2),(1656,'2019-09-25 06:08:59.702049','78','  1[While] 26. Break  08-30 21:42(78)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(1657,'2019-09-25 06:09:47.363121','20','  1[While] 27. Continue  07-21 00:09(20)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(1658,'2019-09-25 06:11:19.615084','83','  1[While] 25. While  09-08 14:11(83)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(1659,'2019-09-25 06:12:05.463112','78','  1[While] 26. Break  08-30 21:42(78)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',3,2),(1660,'2019-09-26 01:14:13.818359','7','PyPyKids',2,'[{\"changed\": {\"fields\": [\"badges\"]}}]',14,15),(1661,'2019-09-26 01:14:30.240186','182','0. (26)PyPyKids 2019-09-25 right:1',3,'',12,15);
/*!40000 ALTER TABLE `django_admin_log` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `django_content_type`
--

DROP TABLE IF EXISTS `django_content_type`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
 SET character_set_client = utf8mb4 ;
CREATE TABLE `django_content_type` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `app_label` varchar(100) NOT NULL,
  `model` varchar(100) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `django_content_type_app_label_model_76bd3d3b_uniq` (`app_label`,`model`)
) ENGINE=InnoDB AUTO_INCREMENT=18 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `django_content_type`
--

LOCK TABLES `django_content_type` WRITE;
/*!40000 ALTER TABLE `django_content_type` DISABLE KEYS */;
INSERT INTO `django_content_type` VALUES (6,'admin','logentry'),(8,'auth','group'),(7,'auth','permission'),(9,'auth','user'),(10,'contenttypes','contenttype'),(12,'list','answer'),(15,'list','badge'),(16,'list','badgetype'),(2,'list','category'),(14,'list','customuser'),(13,'list','difficulty'),(3,'list','quiz'),(17,'list','quizscore'),(1,'list','quiztype'),(4,'list','testcase'),(5,'list','usercode'),(11,'sessions','session');
/*!40000 ALTER TABLE `django_content_type` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `django_migrations`
--

DROP TABLE IF EXISTS `django_migrations`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
 SET character_set_client = utf8mb4 ;
CREATE TABLE `django_migrations` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `app` varchar(255) NOT NULL,
  `name` varchar(255) NOT NULL,
  `applied` datetime(6) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=97 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `django_migrations`
--

LOCK TABLES `django_migrations` WRITE;
/*!40000 ALTER TABLE `django_migrations` DISABLE KEYS */;
INSERT INTO `django_migrations` VALUES (1,'contenttypes','0001_initial','2019-08-23 23:41:50.191866'),(2,'auth','0001_initial','2019-08-23 23:41:50.278941'),(3,'admin','0001_initial','2019-08-23 23:41:50.431124'),(4,'admin','0002_logentry_remove_auto_add','2019-08-23 23:41:50.477765'),(5,'admin','0003_logentry_add_action_flag_choices','2019-08-23 23:41:50.489018'),(6,'contenttypes','0002_remove_content_type_name','2019-08-23 23:41:50.536843'),(7,'auth','0002_alter_permission_name_max_length','2019-08-23 23:41:50.562602'),(8,'auth','0003_alter_user_email_max_length','2019-08-23 23:41:50.597087'),(9,'auth','0004_alter_user_username_opts','2019-08-23 23:41:50.605708'),(10,'auth','0005_alter_user_last_login_null','2019-08-23 23:41:50.639130'),(11,'auth','0006_require_contenttypes_0002','2019-08-23 23:41:50.641289'),(12,'auth','0007_alter_validators_add_error_messages','2019-08-23 23:41:50.649900'),(13,'auth','0008_alter_user_username_max_length','2019-08-23 23:41:50.680145'),(14,'auth','0009_alter_user_last_name_max_length','2019-08-23 23:41:50.708798'),(15,'auth','0010_alter_group_name_max_length','2019-08-23 23:41:50.733780'),(16,'auth','0011_update_proxy_permissions','2019-08-23 23:41:50.741980'),(17,'list','0001_initial','2019-08-23 23:41:50.814707'),(18,'list','0002_auto_20190717_0236','2019-08-23 23:41:50.991539'),(19,'list','0003_auto_20190717_0240','2019-08-23 23:41:51.022933'),(20,'list','0004_auto_20190717_0244','2019-08-23 23:41:51.076671'),(21,'list','0005_auto_20190717_2227','2019-08-23 23:41:51.104089'),(22,'list','0006_remove_answer_case','2019-08-23 23:41:51.140546'),(23,'list','0007_auto_20190717_2235','2019-08-23 23:41:51.152122'),(24,'list','0008_auto_20190717_2320','2019-08-23 23:41:51.201849'),(25,'list','0009_quiz_answer_header','2019-08-23 23:41:51.221811'),(26,'list','0010_auto_20190718_0111','2019-08-23 23:41:51.288258'),(27,'list','0011_auto_20190718_0244','2019-08-23 23:41:51.341236'),(28,'list','0012_quiz_markdown_explanation','2019-08-23 23:41:51.361968'),(29,'list','0013_auto_20190719_1102','2019-08-23 23:41:51.413080'),(30,'list','0014_auto_20190720_0943','2019-08-23 23:41:51.490331'),(31,'list','0015_auto_20190720_1433','2019-08-23 23:41:51.514085'),(32,'list','0016_auto_20190723_0039','2019-08-23 23:41:51.520524'),(33,'list','0017_quiz_video','2019-08-23 23:41:51.545585'),(34,'list','0018_auto_20190724_1855','2019-08-23 23:41:51.569015'),(35,'list','0019_auto_20190725_2131','2019-08-23 23:41:51.593908'),(36,'list','0020_auto_20190726_1110','2019-08-23 23:41:51.601711'),(37,'list','0021_auto_20190726_1130','2019-08-23 23:41:51.629199'),(38,'list','0022_auto_20190726_1134','2019-08-23 23:41:51.648974'),(39,'list','0023_category_difficulty','2019-08-23 23:41:51.666531'),(40,'list','0024_category_desc','2019-08-23 23:41:51.698694'),(41,'list','0025_auto_20190726_1822','2019-08-23 23:41:51.714646'),(42,'list','0026_category_image','2019-08-23 23:41:51.730374'),(43,'list','0027_auto_20190730_2110','2019-08-23 23:41:51.775866'),(44,'list','0028_answer_print_result','2019-08-23 23:41:51.793603'),(45,'list','0029_auto_20190801_0051','2019-08-23 23:41:51.805960'),(46,'list','0030_auto_20190801_0056','2019-08-23 23:41:51.818801'),(47,'list','0031_auto_20190801_0108','2019-08-23 23:41:51.842920'),(48,'list','0032_auto_20190801_0112','2019-08-23 23:41:51.857720'),(49,'list','0033_badge_user','2019-08-23 23:41:51.884098'),(50,'list','0034_auto_20190801_1559','2019-08-23 23:41:51.961844'),(51,'list','0035_badge_html','2019-08-23 23:41:51.977134'),(52,'list','0036_category_visible','2019-08-23 23:41:52.002317'),(53,'list','0037_auto_20190802_1405','2019-08-23 23:41:52.007186'),(54,'list','0038_quiz_order','2019-08-23 23:41:52.045951'),(55,'list','0039_auto_20190802_1913','2019-08-23 23:41:52.091110'),(56,'list','0040_remove_badge_condition','2019-08-23 23:41:52.182874'),(57,'list','0041_badge_desc','2019-08-23 23:41:52.199217'),(58,'list','0042_difficulty_desc','2019-08-23 23:41:52.212038'),(59,'list','0043_auto_20190804_0109','2019-08-23 23:41:52.236863'),(60,'list','0044_quiz_title','2019-08-23 23:41:52.268270'),(61,'list','0045_auto_20190816_0027','2019-08-23 23:41:52.303661'),(62,'list','0046_auto_20190816_0030','2019-08-23 23:41:52.309831'),(63,'list','0047_auto_20190816_0035','2019-08-23 23:41:52.315852'),(64,'list','0048_auto_20190817_1414','2019-08-23 23:41:52.328356'),(65,'sessions','0001_initial','2019-08-23 23:41:52.340422'),(66,'list','0049_auto_20190824_0145','2019-08-24 08:54:34.863853'),(67,'list','0050_remove_customuser_badges','2019-08-24 08:54:35.074819'),(68,'list','0051_delete_customuser','2019-08-24 08:54:35.104435'),(69,'list','0052_auto_20190824_0207','2019-08-24 09:07:52.751372'),(70,'list','0053_auto_20190824_0933','2019-08-24 16:33:20.865677'),(71,'list','0054_auto_20190824_1537','2019-08-24 22:38:00.143189'),(72,'list','0055_auto_20190824_1739','2019-08-25 00:39:09.119800'),(73,'list','0056_answer_created_at','2019-08-25 00:51:41.934957'),(74,'list','0057_auto_20190824_1831','2019-08-25 01:31:54.062181'),(75,'list','0058_auto_20190824_1840','2019-08-25 01:40:32.315126'),(76,'list','0059_auto_20190824_1841','2019-08-25 01:41:54.269710'),(77,'list','0060_auto_20190824_1842','2019-08-25 01:42:59.241404'),(78,'list','0061_auto_20190824_1845','2019-08-25 01:45:33.424047'),(79,'list','0062_good','2019-09-07 22:23:53.961209'),(80,'list','0063_auto_20190907_1547','2019-09-07 22:47:43.657336'),(81,'list','0064_auto_20190907_1900','2019-09-08 02:00:20.687867'),(82,'list','0065_quiz_score','2019-09-08 03:05:19.218265'),(83,'list','0066_auto_20190907_2026','2019-09-08 03:26:34.148638'),(84,'list','0067_auto_20190917_2330','2019-09-18 06:30:12.812400'),(85,'list','0068_auto_20190917_2333','2019-09-18 06:33:20.737756'),(86,'list','0069_auto_20190917_2333','2019-09-18 06:33:47.406948'),(87,'list','0070_auto_20190917_2334','2019-09-18 06:34:28.929626'),(88,'list','0071_auto_20190919_1826','2019-09-20 01:26:21.382320'),(89,'list','0072_auto_20190919_1828','2019-09-20 01:28:43.061394'),(90,'list','0073_auto_20190919_1832','2019-09-20 01:32:21.396785'),(91,'list','0074_remove_answer_name','2019-09-20 03:46:05.314790'),(92,'list','0075_answer_name','2019-09-20 03:46:18.108149'),(93,'list','0076_auto_20190919_2047','2019-09-20 03:47:44.191786'),(94,'list','0077_auto_20190919_2104','2019-09-20 04:04:31.051626'),(95,'list','0078_auto_20190920_0042','2019-09-20 07:43:00.429849'),(96,'list','0079_auto_20190923_0126','2019-09-23 08:26:06.401671');
/*!40000 ALTER TABLE `django_migrations` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `django_session`
--

DROP TABLE IF EXISTS `django_session`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
 SET character_set_client = utf8mb4 ;
CREATE TABLE `django_session` (
  `session_key` varchar(40) NOT NULL,
  `session_data` longtext NOT NULL,
  `expire_date` datetime(6) NOT NULL,
  PRIMARY KEY (`session_key`),
  KEY `django_session_expire_date_a5c62663` (`expire_date`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `django_session`
--

LOCK TABLES `django_session` WRITE;
/*!40000 ALTER TABLE `django_session` DISABLE KEYS */;
INSERT INTO `django_session` VALUES ('17ja3oc1rzqlna77sxkivocw8udx8wn0','YjQ1OTI3ZjU3MmU2ZDBhMDBhNWZmMjhiMTY4YWMzOGIxYzhiMDRiZTp7Il9hdXRoX3VzZXJfaWQiOiIxIiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoiZGphbmdvLmNvbnRyaWIuYXV0aC5iYWNrZW5kcy5Nb2RlbEJhY2tlbmQiLCJfYXV0aF91c2VyX2hhc2giOiJjZmQxYjI2NGRmYmExNzQzNzBiZWM0MmYzNDA1ZDU1OWJhODYxYWQ3In0=','2019-09-15 07:17:35.926735'),('4paar4dcovhmqioe1kp6vvf4wgmww5tk','YjQ1OTI3ZjU3MmU2ZDBhMDBhNWZmMjhiMTY4YWMzOGIxYzhiMDRiZTp7Il9hdXRoX3VzZXJfaWQiOiIxIiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoiZGphbmdvLmNvbnRyaWIuYXV0aC5iYWNrZW5kcy5Nb2RlbEJhY2tlbmQiLCJfYXV0aF91c2VyX2hhc2giOiJjZmQxYjI2NGRmYmExNzQzNzBiZWM0MmYzNDA1ZDU1OWJhODYxYWQ3In0=','2019-09-15 08:28:12.960483'),('59myyq78hrm9a2vapg0fookneo6ywl1h','ZTc3OWFmNTMwMzlhZGY5N2U3MTU3YmNjNmUyNDA0ODA2YzRjY2ExMzp7Il9hdXRoX3VzZXJfaWQiOiIxNSIsIl9hdXRoX3VzZXJfYmFja2VuZCI6ImRqYW5nby5jb250cmliLmF1dGguYmFja2VuZHMuTW9kZWxCYWNrZW5kIiwiX2F1dGhfdXNlcl9oYXNoIjoiMTlmNDQ1MDBmOWFkYzkzN2M3Y2U4MzUwMmY5ODIyMTE0NDQ0NDdiNSJ9','2019-10-10 01:07:33.977748'),('8t5y7dwmuyfanurnu5m795bevdg8evj2','YjQ1OTI3ZjU3MmU2ZDBhMDBhNWZmMjhiMTY4YWMzOGIxYzhiMDRiZTp7Il9hdXRoX3VzZXJfaWQiOiIxIiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoiZGphbmdvLmNvbnRyaWIuYXV0aC5iYWNrZW5kcy5Nb2RlbEJhY2tlbmQiLCJfYXV0aF91c2VyX2hhc2giOiJjZmQxYjI2NGRmYmExNzQzNzBiZWM0MmYzNDA1ZDU1OWJhODYxYWQ3In0=','2019-09-10 10:36:57.051547'),('cpvoaqk9flznj7b8kal0z8enjboj8xyk','NWEzMmUwN2FjNzc0NTY1ZTRmYzkyMzJmNGIzZjk5NjlhOGQ5ZDgzYTp7Il9hdXRoX3VzZXJfaWQiOiIyIiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoiZGphbmdvLmNvbnRyaWIuYXV0aC5iYWNrZW5kcy5Nb2RlbEJhY2tlbmQiLCJfYXV0aF91c2VyX2hhc2giOiIxOGNhM2NkMTNkMjI1MDE2ZWUwZGMxMjEzM2M4NDMzMTRkOTY1MDRmIn0=','2019-09-10 10:18:59.035798'),('gwcmsdnkcnrs3altybd1vz4by4d3g8dw','NWEzMmUwN2FjNzc0NTY1ZTRmYzkyMzJmNGIzZjk5NjlhOGQ5ZDgzYTp7Il9hdXRoX3VzZXJfaWQiOiIyIiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoiZGphbmdvLmNvbnRyaWIuYXV0aC5iYWNrZW5kcy5Nb2RlbEJhY2tlbmQiLCJfYXV0aF91c2VyX2hhc2giOiIxOGNhM2NkMTNkMjI1MDE2ZWUwZGMxMjEzM2M4NDMzMTRkOTY1MDRmIn0=','2019-09-10 22:22:55.294765'),('o2vh8ahmxe98xglppv3p17797d4kdauu','NWEzMmUwN2FjNzc0NTY1ZTRmYzkyMzJmNGIzZjk5NjlhOGQ5ZDgzYTp7Il9hdXRoX3VzZXJfaWQiOiIyIiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoiZGphbmdvLmNvbnRyaWIuYXV0aC5iYWNrZW5kcy5Nb2RlbEJhY2tlbmQiLCJfYXV0aF91c2VyX2hhc2giOiIxOGNhM2NkMTNkMjI1MDE2ZWUwZGMxMjEzM2M4NDMzMTRkOTY1MDRmIn0=','2019-10-07 01:11:16.196385'),('siwrx8fjq9w3fieqtp2z38czks8nz142','YjQ1OTI3ZjU3MmU2ZDBhMDBhNWZmMjhiMTY4YWMzOGIxYzhiMDRiZTp7Il9hdXRoX3VzZXJfaWQiOiIxIiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoiZGphbmdvLmNvbnRyaWIuYXV0aC5iYWNrZW5kcy5Nb2RlbEJhY2tlbmQiLCJfYXV0aF91c2VyX2hhc2giOiJjZmQxYjI2NGRmYmExNzQzNzBiZWM0MmYzNDA1ZDU1OWJhODYxYWQ3In0=','2019-08-09 18:30:45.913000'),('t2ob9ef085jt65ktp6wantf14wwoxhth','NWEzMmUwN2FjNzc0NTY1ZTRmYzkyMzJmNGIzZjk5NjlhOGQ5ZDgzYTp7Il9hdXRoX3VzZXJfaWQiOiIyIiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoiZGphbmdvLmNvbnRyaWIuYXV0aC5iYWNrZW5kcy5Nb2RlbEJhY2tlbmQiLCJfYXV0aF91c2VyX2hhc2giOiIxOGNhM2NkMTNkMjI1MDE2ZWUwZGMxMjEzM2M4NDMzMTRkOTY1MDRmIn0=','2019-10-09 09:08:15.503100'),('u494mszriwzemvupc16lz6a8p2s1woew','YjQ1OTI3ZjU3MmU2ZDBhMDBhNWZmMjhiMTY4YWMzOGIxYzhiMDRiZTp7Il9hdXRoX3VzZXJfaWQiOiIxIiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoiZGphbmdvLmNvbnRyaWIuYXV0aC5iYWNrZW5kcy5Nb2RlbEJhY2tlbmQiLCJfYXV0aF91c2VyX2hhc2giOiJjZmQxYjI2NGRmYmExNzQzNzBiZWM0MmYzNDA1ZDU1OWJhODYxYWQ3In0=','2019-07-31 09:31:47.963000'),('yvi1wo504loejfrrwjhomnk5mq34oecu','YjQ1OTI3ZjU3MmU2ZDBhMDBhNWZmMjhiMTY4YWMzOGIxYzhiMDRiZTp7Il9hdXRoX3VzZXJfaWQiOiIxIiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoiZGphbmdvLmNvbnRyaWIuYXV0aC5iYWNrZW5kcy5Nb2RlbEJhY2tlbmQiLCJfYXV0aF91c2VyX2hhc2giOiJjZmQxYjI2NGRmYmExNzQzNzBiZWM0MmYzNDA1ZDU1OWJhODYxYWQ3In0=','2019-08-18 08:06:21.283000');
/*!40000 ALTER TABLE `django_session` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `list_answer`
--

DROP TABLE IF EXISTS `list_answer`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
 SET character_set_client = utf8mb4 ;
CREATE TABLE `list_answer` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `answer` longtext,
  `date` date NOT NULL,
  `right` int(11) NOT NULL,
  `output` longtext,
  `quiz_id` int(11) DEFAULT NULL,
  `expected_output` longtext,
  `input` longtext,
  `stdout` longtext,
  `expected_stdout` longtext,
  `customuser_id` int(11) DEFAULT NULL,
  PRIMARY KEY (`id`),
  KEY `list_answer_quiz_id_d9497b4c_fk_list_quiz_id` (`quiz_id`),
  KEY `list_answer_customuser_id_f68a815b_fk_list_customuser_id` (`customuser_id`),
  CONSTRAINT `list_answer_customuser_id_f68a815b_fk_list_customuser_id` FOREIGN KEY (`customuser_id`) REFERENCES `list_customuser` (`id`),
  CONSTRAINT `list_answer_quiz_id_d9497b4c_fk_list_quiz_id` FOREIGN KEY (`quiz_id`) REFERENCES `list_quiz` (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=184 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `list_answer`
--

LOCK TABLES `list_answer` WRITE;
/*!40000 ALTER TABLE `list_answer` DISABLE KEYS */;
INSERT INTO `list_answer` VALUES (1,'10','2019-07-01',1,'',1,'','',NULL,NULL,1),(2,'2','2019-07-02',1,'',2,'','',NULL,NULL,1),(3,'123','2019-07-02',1,'',3,'','',NULL,NULL,1),(4,'5','2019-07-21',1,'',4,NULL,NULL,NULL,NULL,1),(5,'15','2019-07-09',1,'',5,'','',NULL,NULL,1),(6,'banana','2019-07-04',1,'',6,'','',NULL,NULL,1),(7,'True','2019-06-24',1,'',7,'','','',NULL,1),(8,'14','2019-06-30',1,'',8,'','','',NULL,1),(9,'14','2019-07-21',1,'',9,NULL,NULL,NULL,NULL,1),(10,'def solve(num1, num2):\r\n    return num1*num2','2019-07-06',1,'',10,'','','',NULL,1),(12,'def solve(nums):\r\n    nums[0],nums[-1]=nums[-1],nums[0]\r\n    return nums','2019-07-09',1,'',11,'','','',NULL,1),(13,'def solve(nums):\r\n    nums[1],nums[-2]=nums[-2],nums[1]\r\n    return nums','2019-07-16',1,'',12,'','','',NULL,1),(14,'def solve(nums):\r\n    for i in range(int(len(nums)/2)):\r\n        nums[i],nums[-(i+1)]=nums[-(i+1)],nums[i]\r\n    return nums','2019-07-12',1,'',13,'','','','',1),(17,'def solve(nums):\r\n    stack=[]\r\n    for i in range(len(nums)):\r\n        stack.append(nums.pop())\r\n    return stack','2019-06-29',1,'',14,'','','',NULL,1),(21,'10','2019-07-15',1,'',19,'','',NULL,NULL,1),(22,'12','2019-07-12',1,'',20,'','',NULL,NULL,1),(25,'def solve(nums, num):\r\n    for i in range(len(nums)):\r\n        if nums[i]>num:\r\n            nums.insert(i,num)\r\n            break\r\n    return nums','2019-06-27',1,'',21,'','','',NULL,1),(26,'def solve(num):\r\n    for i in range(num):\r\n        if i*i==num:\r\n            return i','2019-07-18',1,'',22,'','','',NULL,1),(28,'def solve(nums):\r\n   max,sum=0,0\r\n   for num in nums:\r\n       sum=num+sum\r\n       if sum>max:\r\n           max=sum\r\n   return max','2019-07-26',1,'',23,'','','',NULL,1),(29,'200','2019-07-26',1,'',24,NULL,NULL,NULL,NULL,1),(30,'4','2019-07-26',1,'',25,NULL,NULL,NULL,NULL,1),(31,'def solve(str):\r\n    sett=set(str)\r\n    map={}\r\n    for key in sett:\r\n        map[key]=0\r\n    for i in str:\r\n        map[i]+=1\r\n    max=0\r\n    for i in map:\r\n        if map[i]>max:\r\n            max=map[i]\r\n    return max','2019-07-28',1,'',28,'','','','',1),(32,'def solve(nums):\r\n    min=nums[0]\r\n    for num in nums:\r\n        if min>num:\r\n            min=num\r\n    return min','2019-07-28',1,'',30,'','','',NULL,1),(33,'def solve(nums):\r\n    even,odd=[],[]\r\n    for num in nums:\r\n        if num%2==0:\r\n            even.append(num)\r\n        else:\r\n            odd.append(num)\r\n    return odd, even','2019-07-28',1,'',31,'','','',NULL,1),(36,'4','2019-07-30',1,'',32,NULL,NULL,NULL,NULL,1),(37,'def solve(num):\r\n    j=0\r\n    while num<1:\r\n        num=num*10\r\n        j=j+1\r\n    return j-1\r\n        ','2019-07-31',1,'',34,'','','',NULL,1),(38,'def solve(str):\r\n    strs=str.split()\r\n    del strs[2]\r\n    return \" \".join(strs)','2019-07-21',1,'',33,'','','',NULL,1),(39,'def solve(nums, n):\r\n    ans=[]\r\n    for num in range(n):\r\n        nums.append(nums[0])\r\n        del nums[0]\r\n    return nums\r\n        ','2019-07-31',1,'',29,'','','',NULL,1),(40,'def solve(nums):\r\n    for i in range(1,len(nums)):\r\n        if i in nums:\r\n            pass\r\n        else:\r\n            return i','2019-07-31',1,'',27,'','','',NULL,1),(42,'def solve(nums):\r\n    max=nums[0]\r\n    for num in nums:\r\n        if num>0:\r\n            max=num\r\n    nums.remove(max)\r\n    sm=nums[0]\r\n    for num in nums:\r\n        if num>sm:\r\n            sm=num\r\n    return sm','2019-08-01',1,'',37,'','','',NULL,1),(43,'def solve(num1, num2):\r\n    num3=0\r\n    if num2>num1:\r\n        num1,num2=num2,num1\r\n    while abs(num1-num2)>0:\r\n        num3=abs(num1-num2)\r\n        num1,num2=num2,num3\r\n    return num2','2019-08-02',1,'',35,'','','',NULL,1),(49,'def solve(nums):\r\n    sett=set()\r\n    for num in nums:\r\n        sett.add(num)\r\n    if len(nums)>len(sett):\r\n        return True\r\n    return False\r\n        ','2019-08-03',1,'',38,'','','','',1),(50,'def solve(num):\r\n    if num==0:\r\n        return False\r\n    while num!=1:\r\n        if num%2==1:\r\n            return False\r\n        num=num/2\r\n    return True','2019-08-03',1,'',39,'','','',NULL,1),(51,'def solve(num):\r\n    count=0\r\n    while int(num)==num:\r\n        num/=10\r\n        count+=1\r\n    return count-1','2019-08-03',1,'',40,'','','',NULL,1),(53,'1','2019-08-03',1,'',41,NULL,NULL,NULL,NULL,1),(54,'3','2019-08-04',1,'',42,'','','',NULL,1),(55,'4','2019-08-04',1,'',36,NULL,NULL,NULL,NULL,1),(58,'def solve(str):\r\n    strs=[]\r\n    for ch in str:\r\n        strs.append(ch)\r\n    i=1\r\n    while i<len(strs):\r\n        if strs[i]==strs[i-1]:\r\n            del strs[i]\r\n            del strs[i-1]\r\n            i=0\r\n        i+=1\r\n    return \"\".join(strs)                ','2019-08-10',1,'',44,'','','',NULL,1),(59,'def solve(nums1, nums2):\r\n    ans=[]\r\n    for num in nums1:\r\n        if num in nums2:\r\n            ans.append(num)\r\n    return ans','2019-08-06',1,'',48,'','','',NULL,1),(60,'def solve(num):\r\n    s,lis=0,[]\r\n    for i in range(num):\r\n        s+=1\r\n        lis.append(\'*\'*s)\r\n    return lis','2019-08-06',1,'',49,'','','',NULL,1),(61,'def solve(k, nums):\r\n    ans=0\r\n    for num in nums:\r\n        if num<k:\r\n            ans+=1\r\n    return ans','2019-08-06',1,'',47,'','','',NULL,1),(62,'def solve(list1, list2):\r\n    ans=[]\r\n    while len(list1)!=0 or len(list2)!=0:\r\n        if len(list1)==0:\r\n            ans.append(list2[0])\r\n            del list2[0]\r\n        elif len(list2)==0:\r\n            ans.append(list1[0])\r\n            del list1[0]\r\n        elif list1[0]>list2[0]:\r\n            ans.append(list2[0])\r\n            del list2[0]\r\n        else:\r\n            ans.append(list1[0])\r\n            del list1[0]\r\n    return ans','2019-08-08',1,'',51,'','','',NULL,1),(63,'def solve(n):\r\n    return (n-2)*180','2019-08-07',1,'',45,'','','',NULL,1),(65,'3','2019-08-08',1,'',52,NULL,NULL,NULL,NULL,1),(66,'4','2019-08-10',1,'',55,NULL,NULL,NULL,NULL,1),(67,'4','2019-08-10',1,'',56,NULL,NULL,NULL,NULL,1),(68,'def solve(str):\r\n    lis=[]\r\n    for s in str:\r\n        lis.append(s)\r\n    i=0\r\n    while len(lis)-1>i:\r\n        i+=1\r\n        if lis[i]==\")\":\r\n            if lis[i-1]==\"(\":\r\n                del lis[i]\r\n                del lis[i-1]\r\n                i=0\r\n    if len(lis)==0:\r\n        return True\r\n    return False','2019-08-14',1,'',43,'','','',NULL,1),(69,'def solve(num):\r\n    star, dash, ans=0, num, []\r\n    while dash>0:\r\n        star+=1\r\n        dash-=1\r\n        ans.append(\"-\"*dash+\"*\"*star)\r\n    return ans\r\n            ','2019-08-16',1,'',53,'','','',NULL,1),(70,'def solve(year):\r\n    if year%4==0:\r\n        if year%100==0:\r\n            if year%400==0:\r\n                return 366\r\n            return 365\r\n        return 366\r\n    return 365\r\n    ','2019-08-17',1,'',58,'','','',NULL,1),(72,'4','2019-08-18',1,'',61,NULL,NULL,NULL,NULL,1),(73,'4','2019-08-18',1,'',62,NULL,NULL,NULL,NULL,1),(74,'def solve(num):\r\n    num=str(num)\r\n    ans=0\r\n    for s in num:\r\n        ans+=int(s)\r\n    return ans','2019-08-18',1,'',57,'','','',NULL,1),(75,'3','2019-08-19',1,'',63,NULL,NULL,NULL,NULL,1),(76,'def solve(str):\r\n    nums=[]\r\n    for ch in str:\r\n        nums.append(ch)\r\n    for i in range(len(nums)):\r\n        if nums[i]!=nums[len(nums)-1-i]:\r\n            return False\r\n    return True','2019-08-13',1,'',65,'','','',NULL,1),(77,'def solve(nums):\r\n    max=nums[0]\r\n    for i in range(len(nums)):\r\n        if nums[i]>max:\r\n            max=nums[i]\r\n    return max','2019-08-19',1,'',67,'','','',NULL,1),(78,'def sum(num1, num2):\r\n    return num1 + num2\r\ndef solve(nums):\r\n    ans = sum(nums[0], nums[1])\r\n    for i in range(2, len(nums)):\r\n        ans=ans+nums[i]\r\n    return ans','2019-08-01',1,'',60,'','','',NULL,1),(79,'def solve(nums):\r\n    a,j,ans=0,1,0\r\n    for i in range(len(nums)):\r\n        if nums[i]==nums[i+j]:\r\n            a+=1\r\n            j+=1\r\n        if a>ans:\r\n            ans=a\r\n    return ans','2019-09-01',-1,'None',66,'3','[4, 4, 4, 1, 1, 1, 2, 3, 4]','Traceback (most recent call last):\n  File \"checking.py\", line 31, in <module>\n    answer = main(sys.argv[1:])\n  File \"checking.py\", line 7, in main\n    return solve(convert(argv[0]))\n  File \"/Users/youngwan/code/my/PyPyKids/solution.py\", line 4, in solve\n    if nums[i]==nums[i+j]:\nIndexError: list index out of range\n',NULL,1),(83,'# Definition for linked list.\r\nclass Node:\r\n    def __init__(self, val):\r\n        self.val = val\r\n        self.next = None\r\n\r\ndef solve(head):\r\n    # Please insert code here\r\n    max=0\r\n    while head!=None:\r\n        if head.val>max:\r\n            max=head.val\r\n        head=head.next\r\n    return max','2019-08-27',1,'',69,'','','',NULL,1),(85,'1','2019-08-30',1,'',70,NULL,NULL,NULL,NULL,1),(86,'4','2019-08-30',1,'',72,NULL,NULL,NULL,NULL,1),(87,'12\r\n','2019-08-30',1,'',73,NULL,NULL,NULL,NULL,1),(88,'3','2019-08-30',1,'',74,NULL,NULL,NULL,NULL,1),(89,'2','2019-08-30',1,'',71,NULL,NULL,NULL,NULL,1),(90,'2','2019-08-30',1,'',77,NULL,NULL,NULL,NULL,1),(91,'1','2019-08-30',1,'',78,NULL,NULL,NULL,NULL,1),(95,'4','2019-09-01',1,'',26,NULL,NULL,NULL,NULL,1),(96,'def solve(str1, str2):\r\n    if len(str1)!=len(str2):\r\n        return False\r\n    while len(str1)>0:\r\n        if str1[0] in str2:\r\n            str2=str2.replace(str1[0], \"\", 1)\r\n            str1=str1[1:]\r\n        else:\r\n            return False\r\n    return True','2019-09-01',1,'',64,'','','',NULL,1),(99,'3','2019-09-06',1,'',82,NULL,NULL,NULL,NULL,1),(100,'def solve(num):\r\n    ans=1\r\n    for i in range(1,num+1):\r\n        ans=i*ans\r\n    return ans','2019-09-07',1,'',80,'','','',NULL,1),(105,'3','2019-09-08',1,'',15,'','','',NULL,1),(107,'3','2019-09-08',1,'',16,'','','',NULL,1),(108,'2','2019-09-08',1,'',17,'','','',NULL,1),(109,'print(range(3, 6))','2019-09-08',1,'',18,'','','','',1),(110,'4','2019-09-11',1,'',83,NULL,NULL,NULL,NULL,1),(111,'print_world()\r\n','2019-09-12',1,'',84,NULL,NULL,NULL,NULL,1),(112,'def solve(nums, num1, num2):\r\n    for i in range(num1,int((num2+1)/2)+1):\r\n        nums[i],nums[-(i)]=nums[-(i)],nums[i]\r\n    return nums\r\n    ','2019-09-22',-1,'[3, 4, 8, 7, 6, 5, 9]',54,'[3, 4, 5, 9, 8, 7, 6]','[3, 4, 5, 6, 7, 8, 9]\r\n2\r\n5','','',1),(128,'3','2019-09-19',1,'',82,NULL,NULL,NULL,NULL,8),(129,'3','2019-09-19',1,'',15,NULL,NULL,NULL,NULL,8),(130,'3','2019-09-19',1,'',16,NULL,NULL,NULL,NULL,8),(131,'4','2019-09-19',1,'',72,NULL,NULL,NULL,NULL,8),(132,'10','2019-09-19',-2,'10',73,NULL,NULL,NULL,NULL,8),(133,'3','2019-09-19',1,'',74,NULL,NULL,NULL,NULL,8),(134,'3','2019-09-19',1,'',52,NULL,NULL,NULL,NULL,8),(135,'4','2019-09-20',-2,'4',71,NULL,NULL,NULL,NULL,8),(136,'# Definition for linked list.\r\nclass Node:\r\n    def __init__(self, val):\r\n        self.val = val\r\n        self.next = None\r\n\r\ndef solve(list):\r\n    # Please insert your code here.\r\n    return 1','2019-09-20',-1,'1',81,'Node[5, 2, 3, 4, 1]','Node[1, 4, 3, 2, 5]','','',8),(137,'10','2019-09-20',1,'',1,NULL,NULL,NULL,NULL,8),(138,'def solve(num1, num2):\r\n    return num1*num2\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    ','2019-09-20',1,'',10,'','','','',8),(139,'3','2019-09-20',1,'',42,NULL,NULL,NULL,NULL,8),(140,'2','2019-09-20',1,'',77,NULL,NULL,NULL,NULL,8),(141,'4','2019-09-20',1,'',83,NULL,NULL,NULL,NULL,8),(142,'1','2019-09-20',1,'',78,NULL,NULL,NULL,NULL,8),(146,'def solve(nums):','2019-09-20',-1,'None',14,'[5, 4, 3, 2, 1]','[1, 2, 3, 4, 5]','Traceback (most recent call last):\n  File \"./list/users/checks/admin.py\", line 5, in <module>\n    from solutions.admin import solve\n  File \"/Users/Shared/code/PyPyKids/list/users/checks/solutions/admin.py\", line 1\n    def solve(nums):\n                   ^\nSyntaxError: unexpected EOF while parsing\n','',8),(147,'5','2019-09-20',1,'',4,NULL,NULL,NULL,NULL,8),(148,'def solve(num):\r\n    s = 1\r\n    for i in range(num+1):\r\n        print(i+1)\r\n        s *= i\r\n    return s','2019-09-20',-2,'0',80,'120','5','1\n2\n3\n4\n5\n6\n','',8),(149,'4','2019-09-20',1,'',26,NULL,NULL,NULL,NULL,2),(150,'4','2019-09-20',1,'',32,NULL,NULL,NULL,NULL,2),(151,'1','2019-09-20',1,'',70,NULL,NULL,NULL,NULL,2),(152,'1','2019-09-20',1,'',41,NULL,NULL,NULL,NULL,2),(153,'3','2019-09-20',1,'',42,NULL,NULL,NULL,NULL,2),(154,'1-0','2019-09-20',-1,'1-0',1,NULL,NULL,NULL,NULL,2),(155,'print(range(3,6))','2019-09-20',1,'',18,'','','','',2),(156,'nums = {1, 2, 3}\r\nsa\r\n# insert the code after this line\r\n\r\nprint(nums.update([4,5]))','2019-09-21',-2,'Traceback (most recent call last):\n  File \"./list/users/checks/solutions/admin.py\", line 2, in <module>\n    sa\nNameError: name \'sa\' is not defined\n',87,'','{1, 2, 3, 5, 6}','','',8),(157,'nums = {1, 2, 3, 4, 5}\r\n\r\n# insert the code after this line\r\nprint(nums)','2019-09-22',1,'',87,'','','','',6),(158,'def solve(num):\r\n    return num*360-(num-2)*180','2019-09-22',1,'',46,'','','','',1),(159,'def solve(nums):\r\n    nums.add(4)\r\n    return nums','2019-09-22',1,'',87,'','','','',1),(160,'10\r\n','2019-09-22',1,'',85,NULL,NULL,NULL,NULL,1),(161,'24','2019-09-22',1,'',86,NULL,NULL,NULL,NULL,1),(162,'4','2019-09-22',1,'',26,NULL,NULL,NULL,NULL,6),(163,'False','2019-09-22',1,'',88,NULL,NULL,NULL,NULL,8),(164,'def solve(nums):\r\n    return len(nums)','2019-09-23',1,'',92,'','','','',8),(165,'def solve(nums):\r\n    even, odd = [], []\r\n    for num in nums:\r\n        if num % 2 == 0:\r\n            even.append(num)\r\n        else:\r\n            odd.append(num)\r\n    return odd, event','2019-09-23',-2,'None',31,'[1, 3, 5]\n[2, 4, 6]','[1, 2, 3, 4, 5, 6]','Traceback (most recent call last):\n  File \"./list/users/checks/admin.py\", line 44, in <module>\n    answer = main(sys.argv[1:])\n  File \"./list/users/checks/admin.py\", line 9, in main\n    return output(solve(input(argv[0])))\n  File \"/Users/Shared/code/PyPyKids/list/users/checks/solutions/admin.py\", line 8, in solve\n    return odd, event\nNameError: name \'event\' is not defined\n','',8),(166,'def solve(nums):\r\n    s = 0\r\n    for num in nums:\r\n        s+=num\r\n    return s/len(nums)','2019-09-23',1,'',94,'','','','',8),(168,'def solve(nums):\r\n    return','2019-09-23',-1,'None',14,'[5, 4, 3, 2, 1]','[1, 2, 3, 4, 5]','','',10),(169,'def solve(prices):\r\n    print(prices)\r\n    return [\"test\", \"test2\"]','2019-09-23',1,'',59,'','','','',10),(170,NULL,'2019-09-23',0,NULL,53,NULL,NULL,NULL,NULL,NULL),(171,NULL,'2019-09-23',0,NULL,53,NULL,NULL,NULL,NULL,NULL),(172,'def solve(num):\r\n    return num','2019-09-23',-1,'4',53,'[\'---*\', \'--**\', \'-***\', \'****\']','4','','',10),(173,'3','2019-09-24',1,'',97,NULL,NULL,NULL,NULL,1),(174,'def solve(str):\r\n    return str[3:8]','2019-09-24',-1,'lo Wo',105,'\'lo Wo\'','\'Hello World\'','','',8),(175,'def solve(str):\r\n    return str[3:8]','2019-09-24',1,'',105,'','','','',2),(176,'def solve(str):\r\n    return \"\"','2019-09-24',0,NULL,68,NULL,NULL,NULL,NULL,1),(177,'def solve(str):\r\n    return \"\"','2019-09-24',-1,'',68,'\"\"','\'(()())\'','','',2),(178,'3','2019-09-25',1,'',15,NULL,NULL,NULL,NULL,7),(179,'3','2019-09-25',1,'',16,NULL,NULL,NULL,NULL,7),(180,'2','2019-09-25',1,'',17,NULL,NULL,NULL,NULL,7),(181,'print(range(3, 6))','2019-09-25',1,'',18,'','','','',7),(183,'4','2019-09-25',1,'',26,NULL,NULL,NULL,NULL,7);
/*!40000 ALTER TABLE `list_answer` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `list_badge`
--

DROP TABLE IF EXISTS `list_badge`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
 SET character_set_client = utf8mb4 ;
CREATE TABLE `list_badge` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `name` varchar(20) NOT NULL,
  `value` int(11) NOT NULL,
  `html` longtext,
  `type_id` int(11) DEFAULT NULL,
  `desc` longtext,
  `order` int(10) unsigned NOT NULL,
  PRIMARY KEY (`id`),
  KEY `list_badge_type_id_c89e3f30_fk_list_badgetype_id` (`type_id`),
  KEY `list_badge_order_f652bdb7` (`order`),
  CONSTRAINT `list_badge_type_id_c89e3f30_fk_list_badgetype_id` FOREIGN KEY (`type_id`) REFERENCES `list_badgetype` (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=58 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `list_badge`
--

LOCK TABLES `list_badge` WRITE;
/*!40000 ALTER TABLE `list_badge` DISABLE KEYS */;
INSERT INTO `list_badge` VALUES (1,'2 Day Streak',2,'<img src=\"/static/list/badge/DayStreak2.png\" />',1,'Solve quizzes for 2 consecutive days.',42),(2,'4 Day Streak',4,'<img src=\"/static/list/badge/DayStreak4.png\" />',1,'Solve quizzes for 4 consecutive days.',44),(3,'7 Day Streak',7,'<img src=\"/static/list/badge/DayStreak7.png\" />',1,'Solve quizzes for 7 consecutive days.',47),(9,'10 Day Streak',10,'<img src=\"/static/list/badge/DayStreak10.png\" />',1,'Solve quizzes for 10 consecutive days.',50),(10,'2 Quiz Per Day',2,'<img src=\"/static/list/badge/QuizPerDay2.png\" />',3,'Solve 2 Quizzes in a day.',34),(11,'3 Quiz Per Day',3,'<img src=\"/static/list/badge/QuizPerDay3.png\" />',3,'Solve 3 Quizzes in a day.',35),(12,'4 Quiz Per Day',4,'<img src=\"/static/list/badge/QuizPerDay4.png\" />',3,'Solve 4 Quizzes in a day.',36),(13,'5 Quiz Per Day',5,'<img src=\"/static/list/badge/QuizPerDay5.png\" />',3,'Solve quizzes for 5 consecutive days.',37),(14,'10 Total Quiz',10,'<img src=\"/static/list/badge/Quiz10.png\" />',2,'Solve 10 Quizzes.',3),(15,'30 Total Quiz',30,'<img src=\"/static/list/badge/Quiz30.png\" />',2,'Solve 30 Quizzes.',6),(16,'200 Total Quiz',200,'<img src=\"/static/list/badge/Quiz200.png\" />',2,'Solve 200 Quizzes.',23),(17,'6 Quiz Per Day',6,'<img src=\"/static/list/badge/QuizPerDay6.png\" />',3,'Solve 6 Quizzes in a day.',38),(18,'7 Quiz Per Day',7,'<img src=\"/static/list/badge/QuizPerDay7.png\" />',3,'Solve 7 Quizzes in a day.',39),(19,'8 Quiz Per Day',8,'<img src=\"/static/list/badge/QuizPerDay8.png\" />',3,'Solve 8 Quizzes in a day.',40),(20,'9 Quiz Per Day',9,'<img src=\"/static/list/badge/QuizPerDay9.png\" />',3,'Solve 9 Quizzes in a day.',41),(21,'5 Day Streak',5,'<img src=\"/static/list/badge/DayStreak5.png\" />',1,'You got a new badge to solve a quiz for 5 consecutive days.',45),(22,'3 Day Streak',3,'<img src=\"/static/list/badge/DayStreak3.png\" />',1,'Solve quizzes for 3 consecutive days.',43),(23,'1 Total Quiz',1,'<img src=\"/static/list/badge/Quiz1.png\" />',2,'Solve the 1st quiz.',1),(24,'5 Total Quiz',5,'<img src=\"/static/list/badge/Quiz5.png\" />',2,'Solve 5 Quizzes.',2),(25,'20 Total Quiz',20,'<img src=\"/static/list/badge/Quiz20.png\" />',2,'Solve 20 Quizzes.',5),(26,'50 Total Quiz',50,'<img src=\"/static/list/badge/Quiz50.png\" />',2,'Solve 50 Quizzes.',8),(27,'70 Total Quiz',70,'<img src=\"/static/list/badge/Quiz70.png\" />',2,'Solve 70 Quizzes.',10),(28,'100 Total Quiz',100,'<img src=\"/static/list/badge/Quiz100.png\" />',2,'Solve 100 Quizzes.',13),(29,'150 Total Quiz',150,'<img src=\"/static/list/badge/Quiz150.png\" />',2,'Solve 150 Quizzes.',18),(30,'6 Day Streak',6,'<img src=\"/static/list/badge/DayStreak6.png\" />',1,'Solve a quiz for 6 consecutive days.',46),(31,'8 Day Streak',8,'<img src=\"/static/list/badge/DayStreak8.png\" />',1,'Solve quizzes for 8 consecutive days.',48),(32,'9 Day Streak',9,'<img src=\"/static/list/badge/DayStreak9.png\" />',1,'Solve quizzes for 9 consecutive days.',49),(33,'Welcome',0,'<img src=\"/static/list/badge/Welcome.png\" />',4,'Welcome to PyPyKids.',0),(35,'15 Total Quiz',15,'<img src=\"/static/list/badge/Quiz15.png\" />',2,'Solve 15 quizzes.',4),(36,'40 Total Quiz',40,'<img src=\"/static/list/badge/Quiz40.png\" />',2,'Solve 40 Quizzes.',7),(37,'60 Total Quiz',60,'<img src=\"/static/list/badge/Quiz60.png\" />',2,'Solve 60 Quizzes.',9),(38,'80 Total Quiz',80,'<img src=\"/static/list/badge/Quiz80.png\" />',2,'Solve 80 Quizzes.',11),(39,'90 Total Quiz',90,'<img src=\"/static/list/badge/Quiz90.png\" />',2,'Solve 90 Quizzes.',12),(40,'110 Total Quiz',110,'<img src=\"/static/list/badge/Quiz110.png\" />',2,'Solve 110 Quizzes.',14),(41,'120 Total Quiz',120,'<img src=\"/static/list/badge/Quiz120.png\" />',2,'Solve 120 Quizzes.',15),(42,'130 Total Quiz',130,'<img src=\"/static/list/badge/Quiz130.png\" />',2,'Solve 130 Quizzes.',16),(43,'140 Total Quiz',140,'<img src=\"/static/list/badge/Quiz140.png\" />',2,'Solve 140 Quizzes.',17),(44,'160 Total Quiz',160,'<img src=\"/static/list/badge/Quiz160.png\" />',2,'Solve 160 Quizzes.',19),(45,'170 Total Quiz',170,'<img src=\"/static/list/badge/Quiz170.png\" />',2,'Solve 170 Quizzes.',20),(46,'180 Total Quiz',180,'<img src=\"/static/list/badge/Quiz180.png\" />',2,'Solve 180 Quizzes.',21),(47,'190 Total Quiz',190,'<img src=\"/static/list/badge/Quiz190.png\" />',2,'Solve 190 Quizzes.',22),(48,'210 Total Quiz',210,'<img src=\"/static/list/badge/Quiz210.png\" />',2,'Solve 210 Quizzes.',24),(49,'220 Total Quiz',220,'<img src=\"/static/list/badge/Quiz220.png\" />',2,'Solve 220 Quizzes.',25),(50,'230 Total Quiz',230,'<img src=\"/static/list/badge/Quiz230.png\" />',2,'Solve 230 Quizzes.',26),(51,'240 Total Quiz',240,'<img src=\"/static/list/badge/Quiz240.png\" />',2,'Solve 240 Quizzes.',27),(52,'250 Total Quiz',250,'<img src=\"/static/list/badge/Quiz250.png\" />',2,'Solve 250 Quizzes.',28),(53,'260 Total Quiz',260,'<img src=\"/static/list/badge/Quiz260.png\" />',2,'Solve 260 Quizzes.',29),(54,'270 Total Quiz',270,'<img src=\"/static/list/badge/Quiz270.png\" />',2,'Solve 270 Quizzes.',30),(55,'280 Total Quiz',280,'<img src=\"/static/list/badge/Quiz280.png\" />',2,'Solve 280 Quizzes.',31),(56,'290 Total Quiz',290,'<img src=\"/static/list/badge/Quiz290.png\" />',2,'Solve 290 Quizzes.',32),(57,'300 Total Quiz',300,'<img src=\"/static/list/badge/Quiz300.png\" />',2,'Solve 300 Quizzes.',33);
/*!40000 ALTER TABLE `list_badge` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `list_badgetype`
--

DROP TABLE IF EXISTS `list_badgetype`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
 SET character_set_client = utf8mb4 ;
CREATE TABLE `list_badgetype` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `name` varchar(30) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=5 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `list_badgetype`
--

LOCK TABLES `list_badgetype` WRITE;
/*!40000 ALTER TABLE `list_badgetype` DISABLE KEYS */;
INSERT INTO `list_badgetype` VALUES (1,'DayStreak'),(2,'TotalQuiz'),(3,'QuizPerDay'),(4,'Welcome');
/*!40000 ALTER TABLE `list_badgetype` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `list_category`
--

DROP TABLE IF EXISTS `list_category`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
 SET character_set_client = utf8mb4 ;
CREATE TABLE `list_category` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `name` varchar(20) NOT NULL,
  `order` int(10) unsigned NOT NULL,
  `difficulty_id` int(11) DEFAULT NULL,
  `desc` longtext,
  `image` varchar(200) DEFAULT NULL,
  `visible` tinyint(1) NOT NULL,
  PRIMARY KEY (`id`),
  KEY `list_category_difficulty_id_e0389f47_fk_list_difficulty_id` (`difficulty_id`),
  KEY `list_category_order_15d46345` (`order`),
  CONSTRAINT `list_category_difficulty_id_e0389f47_fk_list_difficulty_id` FOREIGN KEY (`difficulty_id`) REFERENCES `list_difficulty` (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=35 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `list_category`
--

LOCK TABLES `list_category` WRITE;
/*!40000 ALTER TABLE `list_category` DISABLE KEYS */;
INSERT INTO `list_category` VALUES (1,'For',16,1,'Iterating over a sequence',NULL,1),(2,'Advanced Dictionary',36,3,'A collection which is unordered, changeable and indexed.',NULL,1),(3,'String',22,2,'A string is surrounded by either single quotation marks or double quotation marks.',NULL,1),(4,'List',23,2,'A collection which is ordered and changeable','https://img.youtube.com/vi/oxx3NY1ky0w/0.jpg',1),(5,'While',17,1,'Running the loop as long as a condition is true.',NULL,1),(6,'Advanced Set',35,3,'A collection which is unordered and unindexed',NULL,1),(7,'Function',18,2,'A block of code which only runs when it is called.',NULL,1),(8,'Math',37,3,'Mathematics',NULL,1),(9,'Stack',38,4,'An abstract data type that serves as a collection of elements',NULL,1),(10,'Range',14,1,'Make a sequence of numbers.',NULL,1),(11,'Class',19,2,'A means of bundling data and functionality together.',NULL,1),(12,'DataType',10,1,'Boolean, Integer, String, List, Tuple, Set, and Dictionary','https://img.youtube.com/vi/k2DqsJcNfNM/0.jpg',1),(13,'Operator',13,1,'Arithmetic, Relational, Assignment, Logical Operators',NULL,1),(14,'Variable',11,1,'A container for storing data values.',NULL,1),(15,'Print',12,1,'Print the specified message to the screen.',NULL,1),(16,'If',15,1,'Supports the usual logical conditions from mathematics.',NULL,1),(17,'Scope',20,2,'Variables can only reach the area in which they are defined.',NULL,0),(18,'Integer',21,2,'Integer Method',NULL,0),(19,'Advanced List',33,3,'A collection which is ordered and changeable',NULL,1),(20,'Advanced Integer',31,3,'Number data types store numeric values.',NULL,0),(21,'Advanced String',32,3,'A string is surrounded by either single quotation marks or double quotation marks.',NULL,1),(22,'Tuple',24,2,'A collection which is ordered and unchangeable.',NULL,0),(23,'Set',25,2,'A collection which is unordered and unindexed.',NULL,1),(24,'Dictionary',26,2,'A collection which is unordered, changeable and indexed',NULL,1),(25,'Module',28,2,'Consider a module to be the same as a code library.',NULL,0),(26,'Casting',27,2,'Specify a type on to a variable.',NULL,0),(27,'OOP',29,2,'Object-oriented programming',NULL,0),(28,'Advanced Tuple',34,3,'A collection which is ordered and unchangeable.',NULL,0),(29,'Advanced For',30,3,'Used for iterating over a sequence.',NULL,1),(30,'Queue',39,4,'The order is First In First Out (FIFO).',NULL,0),(31,'Linked List',40,4,'A sequence of data structures, which are connected together via links.',NULL,1),(32,'Advanced Math',42,5,'Math! Math! Math!',NULL,0),(33,'Tree',41,4,'',NULL,0),(34,'Greedy',43,5,'A simple, intuitive algorithm',NULL,1);
/*!40000 ALTER TABLE `list_category` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `list_customuser`
--

DROP TABLE IF EXISTS `list_customuser`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
 SET character_set_client = utf8mb4 ;
CREATE TABLE `list_customuser` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `name` varchar(30) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=12 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `list_customuser`
--

LOCK TABLES `list_customuser` WRITE;
/*!40000 ALTER TABLE `list_customuser` DISABLE KEYS */;
INSERT INTO `list_customuser` VALUES (1,'dayeon'),(2,'youngwan'),(6,'guests'),(7,'PyPyKids'),(8,'admin'),(9,'guest'),(10,'administrator'),(11,'tiny657');
/*!40000 ALTER TABLE `list_customuser` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `list_customuser_badges`
--

DROP TABLE IF EXISTS `list_customuser_badges`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
 SET character_set_client = utf8mb4 ;
CREATE TABLE `list_customuser_badges` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `customuser_id` int(11) NOT NULL,
  `badge_id` int(11) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `list_user_badges_user_id_badge_id_cb3c9e49_uniq` (`customuser_id`,`badge_id`),
  KEY `list_user_badges_badge_id_f5f125a3_fk_list_badge_id` (`badge_id`),
  CONSTRAINT `list_customuser_badg_customuser_id_f7242cc3_fk_list_cust` FOREIGN KEY (`customuser_id`) REFERENCES `list_customuser` (`id`),
  CONSTRAINT `list_user_badges_badge_id_f5f125a3_fk_list_badge_id` FOREIGN KEY (`badge_id`) REFERENCES `list_badge` (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=67 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `list_customuser_badges`
--

LOCK TABLES `list_customuser_badges` WRITE;
/*!40000 ALTER TABLE `list_customuser_badges` DISABLE KEYS */;
INSERT INTO `list_customuser_badges` VALUES (1,1,1),(2,1,2),(3,1,3),(4,1,10),(5,1,11),(6,1,12),(7,1,13),(8,1,14),(9,1,15),(17,1,17),(18,1,18),(10,1,21),(11,1,22),(12,1,23),(13,1,24),(14,1,25),(15,1,26),(26,1,27),(20,1,33),(27,1,35),(28,1,36),(29,1,37),(45,2,10),(46,2,11),(47,2,12),(48,2,13),(50,2,17),(44,2,23),(49,2,24),(19,2,33),(53,6,10),(52,6,23),(30,6,33),(60,7,10),(61,7,11),(62,7,12),(65,7,13),(59,7,23),(66,7,24),(31,7,33),(42,8,1),(34,8,10),(35,8,11),(36,8,12),(37,8,13),(43,8,14),(39,8,17),(40,8,18),(41,8,19),(51,8,22),(33,8,23),(38,8,24),(32,8,33),(54,8,35),(55,9,33),(57,10,23),(56,10,33),(58,11,33);
/*!40000 ALTER TABLE `list_customuser_badges` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `list_difficulty`
--

DROP TABLE IF EXISTS `list_difficulty`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
 SET character_set_client = utf8mb4 ;
CREATE TABLE `list_difficulty` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `name` varchar(20) NOT NULL,
  `desc` longtext,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=7 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `list_difficulty`
--

LOCK TABLES `list_difficulty` WRITE;
/*!40000 ALTER TABLE `list_difficulty` DISABLE KEYS */;
INSERT INTO `list_difficulty` VALUES (1,'Super Junior','Let\'s jump into the python.'),(2,'Junior','Let\'s dive into python.'),(3,'Junior High','Let\'s go deeper.'),(4,'High','Let\'s swim to python.'),(5,'Expert','Let\'s touch the end of python.');
/*!40000 ALTER TABLE `list_difficulty` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `list_quiz`
--

DROP TABLE IF EXISTS `list_quiz`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
 SET character_set_client = utf8mb4 ;
CREATE TABLE `list_quiz` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `explanation` longtext,
  `question` longtext,
  `example` longtext,
  `date` datetime(6) NOT NULL,
  `hint` longtext,
  `visible` tinyint(1) NOT NULL,
  `category_id` int(11) NOT NULL,
  `quiz_type_id` int(11) NOT NULL,
  `answer_header` longtext,
  `option1` longtext,
  `option2` longtext,
  `option3` longtext,
  `option4` longtext,
  `video` varchar(100) DEFAULT NULL,
  `order` int(10) unsigned NOT NULL,
  `title` varchar(100) NOT NULL,
  `score` int(11) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `list_quiz_title_75eb243e_uniq` (`title`),
  KEY `list_quiz_category_id_2098a11a_fk_list_category_id` (`category_id`),
  KEY `list_quiz_quiz_type_id_5a2ad422_fk_list_quiztype_id` (`quiz_type_id`),
  KEY `list_quiz_order_3e55cbcb` (`order`),
  CONSTRAINT `list_quiz_category_id_2098a11a_fk_list_category_id` FOREIGN KEY (`category_id`) REFERENCES `list_category` (`id`),
  CONSTRAINT `list_quiz_quiz_type_id_5a2ad422_fk_list_quiztype_id` FOREIGN KEY (`quiz_type_id`) REFERENCES `list_quiztype` (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=106 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `list_quiz`
--

LOCK TABLES `list_quiz` WRITE;
/*!40000 ALTER TABLE `list_quiz` DISABLE KEYS */;
INSERT INTO `list_quiz` VALUES (1,'','<p>Which value will be printed?</p>','<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p>nums = [1, 2, 3, 4]</p>\r\n\r\n			<p>s = 0</p>\r\n\r\n			<p>for num in nums:</p>\r\n\r\n			<p>&nbsp; &nbsp; s += num</p>\r\n\r\n			<p>print(s)</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>&nbsp;</p>','2019-07-17 09:33:42.000000','',1,1,2,'','','','','',NULL,24,'Sum using For',0),(2,'','<p>What value will be printed?</p>','<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p>def count(words):</p>\r\n\r\n			<p>&nbsp; &nbsp; return len(words)</p>\r\n\r\n			<p>&nbsp;</p>\r\n\r\n			<p>c = count({&#39;foo&#39;:42, &#39;bar&#39;:69})</p>\r\n\r\n			<p>print(c)</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>&nbsp;</p>','2019-07-17 09:48:43.000000','',1,24,2,'','','','','',NULL,30,'Dictionary',0),(3,'<p>You can use &quot;+&quot; operator to merge&nbsp;strings.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p>str1 = &quot;Hello&quot;</p>\r\n\r\n			<p>str2 = &quot;World&quot;</p>\r\n\r\n			<p>print(str1 + str2)</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p><span style=\"color:#3498db\"><strong>Output</strong></span>:</p>\r\n\r\n<p>&quot;HelloWorld&quot;</p>','<p>What will be printed?</p>','<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p>strs = [&quot;1&quot;, &quot;2&quot;, &quot;3&quot;]</p>\r\n\r\n			<p>s = &quot;&quot;</p>\r\n\r\n			<p>for str in strs:</p>\r\n\r\n			<p>&nbsp; &nbsp; s += str</p>\r\n\r\n			<p>print(s)</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>','2019-07-18 09:45:08.000000','',1,3,2,'','','','','',NULL,33,'Merge strings',0),(4,'','<p>What will be printed?</p>','<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p>def find(strs):</p>\r\n\r\n			<p>&nbsp; &nbsp; for i in range(len(strs)):</p>\r\n\r\n			<p>&nbsp; &nbsp; &nbsp; &nbsp; if strs[i] == i:</p>\r\n\r\n			<p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return i</p>\r\n\r\n			<p>&nbsp; &nbsp; return -1</p>\r\n\r\n			<p>&nbsp;</p>\r\n\r\n			<p>ans = find([10, 20, 30, 40, 50, 5])</p>\r\n\r\n			<p>print(ans)</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>&nbsp;</p>','2019-07-18 09:46:58.000000','',1,4,2,'','','','','',NULL,41,'Find the same value as the index',0),(5,'','<p>Which value will be printed?</p>','<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p>sum, i = 0, 0</p>\r\n\r\n			<p>while i &lt; num:</p>\r\n\r\n			<p>&nbsp; &nbsp; i += 1</p>\r\n\r\n			<p>&nbsp; &nbsp; sum += i</p>\r\n\r\n			<p>&nbsp;</p>\r\n\r\n			<p>print(sum)</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>&nbsp;</p>','2019-07-18 09:47:46.000000','',1,5,2,'','','','','',NULL,29,'Add function',0),(6,'<p>Insert the value at any place.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>The syntax&nbsp;of insert() is:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong><span style=\"color:#e74c3c\">list</span></strong>.insert(<span style=\"color:#e74c3c\"><strong>index</strong></span>, <span style=\"color:#e74c3c\"><strong>value</strong></span>)</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>insert() has two parameters:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><span style=\"color:#e74c3c\"><strong>index</strong></span> - the position where an value will be inserted.</p>\r\n\r\n			<p><span style=\"color:#e74c3c\"><strong>value</strong></span> - the value will be inserted in the list.</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>For example,&nbsp;</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p>nums = [1, 2, 3]</p>\r\n\r\n			<p>nums.insert(1, 4)</p>\r\n\r\n			<p>print(nums)</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p><strong><span style=\"color:#3498db\">Output</span>: </strong>[1, 4, 2, 3]</p>\r\n\r\n<p><strong>Explanation: </strong>4 is added at the first index.</p>','<p>What will be printed?</p>','<p>Example 1:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p>def get_fruit():</p>\r\n\r\n			<p>&nbsp; &nbsp; fruits = [&quot;apple&quot;, &quot;banana&quot;, &quot;cherry&quot;]</p>\r\n\r\n			<p>&nbsp; &nbsp; fruits.insert(1, &quot;orange&quot;)</p>\r\n\r\n			<p>&nbsp; &nbsp; return fruits[2]</p>\r\n\r\n			<p>print(get_fruit())</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>','2019-07-18 09:48:28.000000','',1,4,2,'','','','','',NULL,38,'Insert into List',0),(7,'<h3>Exist</h3>\r\n\r\n<p>&bull; Check whether it exists or not.</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p>nums = {1, 2, 3}</p>\r\n\r\n			<p>print(2 in nums)</p>\r\n\r\n			<p>print(4 in nums)</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p><strong>Output:</strong></p>\r\n\r\n<p>True</p>\r\n\r\n<p>False</p>','<p>What will be printed?</p>','<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p>def has_banana(fruits):</p>\r\n\r\n			<p>&nbsp; &nbsp; return &quot;banana&quot; in fruits</p>\r\n\r\n			<p>&nbsp;</p>\r\n\r\n			<p>fruits = {&quot;apple&quot;, &quot;banana&quot;, &quot;cherry&quot;}</p>\r\n\r\n			<p>print(has_banana(fruits))</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>','2019-07-18 09:49:13.000000','',1,23,2,'','','','','',NULL,48,'Set exist',0),(8,'','<p>What will be printed?</p>','<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p>def calculate(a, b, c):</p>\r\n\r\n			<p>&nbsp; &nbsp; return a + multiply(b, c)</p>\r\n\r\n			<p>&nbsp;</p>\r\n\r\n			<p>def multiply(a, b):</p>\r\n\r\n			<p>&nbsp; &nbsp; return a * b</p>\r\n\r\n			<p>&nbsp;</p>\r\n\r\n			<p>ans = calculate(2, 3, 4)</p>\r\n\r\n			<p>print(ans)</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>','2019-07-18 09:49:58.000000','',1,7,2,'','','','','',NULL,55,'Multiply function',0),(9,'<h3><strong>Operator precedence</strong></h3>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>Precedence</td>\r\n			<td>Operator</td>\r\n		</tr>\r\n		<tr>\r\n			<td>1</td>\r\n			<td>Multiplication, division, modulus (<strong>*</strong>,&nbsp;<strong>/, </strong>%)</td>\r\n		</tr>\r\n		<tr>\r\n			<td>2</td>\r\n			<td>Addition and subtraction (<strong>+</strong>,&nbsp;<strong>-</strong>)</td>\r\n		</tr>\r\n	</tbody>\r\n</table>','<p>What will be printed?</p>','<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p>def calculate(a, b, c):</p>\r\n\r\n			<p>&nbsp; &nbsp; return a + b * c;</p>\r\n\r\n			<p>&nbsp; &nbsp; x = calculate(2,3,4)</p>\r\n\r\n			<p>&nbsp; &nbsp; print(x)</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>','2019-07-18 09:51:12.000000','',1,8,2,'','','','','',NULL,86,'Operator precedence',0),(10,'','<p>Write a code to multiply two numbers.</p>','<p>Example 1:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>: 2, 3</p>\r\n\r\n			<p><strong>Output</strong>: 6</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>&nbsp;</p>','2019-07-18 09:52:25.000000','',1,8,1,'def solve(num1, num2):','','','','',NULL,87,'Multiply two numbers',1),(11,'<h1>Variable</h1>\r\n\r\n<p>num = 0</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<h3>Multiple Assignment</h3>\r\n\r\n<p>num1, num2 = 1, 2</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<h3>Swap variables</h3>\r\n\r\n<p>num1, num2 = num2, num1</p>','<p>Swap the first element and the last element.</p>','<p>Example 1:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>: [1, 2, 3, 4, 5]</p>\r\n\r\n			<p><strong>Output</strong>: [5, 2, 3, 4, 1]</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>&nbsp;</p>','2019-07-18 09:53:07.000000','',1,19,1,'def solve(nums):','','','','',NULL,65,'Swap elements',1),(12,'','<p>Swap the second element and the last to the second element.</p>','<p>Example 1:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>: nums = [1, 2, 3, 4, 5]</p>\r\n\r\n			<p><strong>Output</strong>: [1, 4, 3, 2, 5]</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>','2019-07-19 02:03:35.000000','',1,19,1,'def solve(nums):','','','','',NULL,66,'Swap 2nd elements',0),(13,'<h1>Swap</h1>\r\n\r\n<p>Swap elements in a list</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p>nums[0], nums[1] = nums[1], nums[0]</p>\r\n\r\n			<p>nums[0], nums[-1] = nums[-1], nums[0]</p>\r\n\r\n			<p>nums[1], nums[-2] = nums[-2], nums[1]</p>\r\n\r\n			<p>...</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>&nbsp;</p>','<p>Reverse a list by swapping elements.</p>','<p>Example 1:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>: [1, 2, 3, 4, 5]</p>\r\n\r\n			<p><strong>Output</strong>: [5, 4, 3, 2, 1]</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>&nbsp;</p>','2019-07-19 02:20:21.000000','',1,19,1,'def solve(nums):','','','','',NULL,67,'Reverse a list',1),(14,'<h1>Stack</h1>\r\n\r\n<p>- a stack is a <strong>data type</strong>&nbsp;that serves as a collection of elements, with two principal operations:</p>\r\n\r\n<p>- <strong>PUSH</strong>, which adds an element to the collection</p>\r\n\r\n<p>- <strong>POP</strong>, which removes the most recently added element that was not yet removed</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><img alt=\"Stack\" src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/b/b4/Lifo_stack.png/700px-Lifo_stack.png\" style=\"height:489px; width:700px\" /></p>\r\n\r\n<p>Reference: <a href=\"https://en.wikipedia.org/wiki/Stack_(abstract_data_type)\">Wikipedia</a></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<h2>How to implement</h2>\r\n\r\n<p>You can implement the stack with List.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<h3>Initialization&nbsp;</h3>\r\n\r\n<p>&nbsp; &nbsp; &bull; stack = []</p>\r\n\r\n<h3>Push&nbsp;</h3>\r\n\r\n<p>&nbsp; &nbsp; &bull; stack.append(value)</p>\r\n\r\n<h3>Pop&nbsp;</h3>\r\n\r\n<p>&nbsp; &nbsp; &bull; stack.pop(value)</p>','<p>Reverse the list by Stack.</p>','<p>Example 1:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>: nums = [1, 2, 3, 4, 5]</p>\r\n\r\n			<p><strong>Output</strong>: [5, 4, 3, 2, 1]</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>&nbsp;</p>','2019-07-19 18:55:01.000000','',1,9,1,'def solve(nums):','','','','',NULL,99,'Reverse a list using stack',0),(15,'<h3>Range(stop)&nbsp;</h3>\r\n\r\n<p>The range(stop) function returns a sequence of numbers, starting from <span style=\"color:#e74c3c\"><strong>0</strong></span> to <span style=\"color:#e74c3c\"><strong>stop - 1</strong></span>, and increments by <span style=\"color:#e74c3c\"><strong>1</strong></span></p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>range(10)</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p><strong><span style=\"color:#3498db\">Output:&nbsp;</span></strong></p>\r\n\r\n<p>[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]</p>','<p>What is the meaning of this?</p>','<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>range(5)</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>&nbsp;</p>','2019-07-20 18:03:46.000000','',1,10,4,'','[1, 2, 3, 4, 5]','[0, 1, 2, 3, 4, 5]','[0, 1, 2, 3, 4]','[1, 2, 3, 4]','eF9a5Fv3U2s',15,'Range',1),(16,'<h3>Range(start, stop)</h3>\r\n\r\n<p>- The range(start, stop) function returns a sequence of numbers, starting from <span style=\"color:#e74c3c\"><strong>start</strong></span>&nbsp;to <span style=\"color:#e74c3c\"><strong>stop - 1</strong></span>, and increments by <span style=\"color:#e74c3c\"><strong>1</strong></span>.</p>\r\n\r\n<p>- The <strong>start</strong>&nbsp;number is <span style=\"color:#3498db\">inclusive</span> but the <strong>stop</strong> number is <span style=\"color:#3498db\">exclusive</span>.</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>range(3, 10)</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p><span style=\"color:#3498db\"><strong>Output:</strong></span>&nbsp;</p>\r\n\r\n<p>[3, 4, 5, 6, 7, 8, 9]</p>','<p>What is the meaning of this?</p>','<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>range(3, 5)</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>&nbsp;</p>','2019-07-20 21:24:32.000000','',1,10,4,'','[1, 2, 3]','[3, 4, 5]','[3, 4]','[1, 2, 3, 4, 5]',NULL,16,'Range with start',1),(17,'<h3>Range(start, stop, step)</h3>\r\n\r\n<p>- The range(start, stop, step) function returns a sequence of numbers, starting from <span style=\"color:#e74c3c\"><strong>start</strong></span>&nbsp;to <span style=\"color:#e74c3c\"><strong>stop - 1</strong></span>, and increments by <span style=\"color:#e74c3c\"><strong>step</strong></span>.</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>range(3, 10, 2)</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p><strong><span style=\"color:#3498db\">Output:&nbsp;</span></strong></p>\r\n\r\n<p>[3, 5, 7, 9]</p>\r\n\r\n<p>&nbsp;</p>','<p>What is the meaning of this?</p>','<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>range(3, 10, 3)</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>&nbsp;</p>','2019-07-20 21:27:36.000000','',1,10,4,'','[3, 5, 7, 9]','[3, 6, 9]','[3, 6, 9, 10]','[0, 3, 6, 9]',NULL,17,'Range with step',0),(18,'','<p>Write a code to print as follows using Range.</p>','<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>[3, 4, 5]</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>&nbsp;</p>','2019-07-20 21:33:36.000000','',1,10,1,'','','','','',NULL,18,'Range summary',1),(19,'<h1>While</h1>\r\n\r\n<p><span style=\"color:#e74c3c\"><strong>While</strong></span>&nbsp;loop is one of the loop commands which is running until a condition is True.</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p>i = 0</p>\r\n\r\n			<p>while i &lt; 3:</p>\r\n\r\n			<p>&nbsp; &nbsp; print(i)</p>\r\n\r\n			<p>&nbsp; &nbsp; i += 1</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<h4><span style=\"color:#3498db\"><strong>Output:</strong></span></h4>\r\n\r\n<p>0</p>\r\n\r\n<p>1</p>\r\n\r\n<p>2</p>','<p>What value will be printed?</p>','<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p>i = 0</p>\r\n\r\n			<p>sum = 0</p>\r\n\r\n			<p>while i &lt; 5:</p>\r\n\r\n			<p>&nbsp; &nbsp; sum += i</p>\r\n\r\n			<p>&nbsp; &nbsp; i += 1</p>\r\n\r\n			<p>print(sum)</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>','2019-07-21 07:00:58.000000','',1,5,2,'','','','','',NULL,28,'Sum using While',0),(20,'<p><strong style=\"color:#e74c3c\">Continue</strong> can skip the rest of the code inside a loop.</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p>i = 0</p>\r\n\r\n			<p>while i &lt; 5:</p>\r\n\r\n			<p>&nbsp; &nbsp; i += 1</p>\r\n\r\n			<p>&nbsp; &nbsp; if i == 3:</p>\r\n\r\n			<p>&nbsp; &nbsp; &nbsp; &nbsp; continue</p>\r\n\r\n			<p>&nbsp; &nbsp; print(i)</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p><strong><span style=\"color:#3498db\">Output:</span></strong></p>\r\n\r\n<p>0</p>\r\n\r\n<p>1</p>\r\n\r\n<p>2</p>\r\n\r\n<p>4</p>\r\n\r\n<p>5</p>','<p>What will be printed?</p>','<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p>sum, i = 0, 0</p>\r\n\r\n			<p>while i &lt; 5:</p>\r\n\r\n			<p>&nbsp; &nbsp; i += 1</p>\r\n\r\n			<p>&nbsp; &nbsp; if i &lt; 3:</p>\r\n\r\n			<p>&nbsp; &nbsp; &nbsp; &nbsp; continue</p>\r\n\r\n			<p>&nbsp; &nbsp; sum += i</p>\r\n\r\n			<p>print(sum)</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>&nbsp;</p>','2019-07-21 07:09:09.000000','',1,5,2,'','','','','',NULL,27,'Continue',0),(21,'','<p>Given the sorted list, insert the value in the right position.</p>\r\n\r\n<p>It must be sorted in ascending order after insertion.</p>','<p>Example 1:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>: [3, 6, 9, 10], 7</p>\r\n\r\n			<p><strong>Output</strong>: [3, 6, 7, 9, 10]</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>','2019-07-21 16:53:52.000000','',1,19,1,'def solve(nums, num):','','','','',NULL,68,'Sorted list',0),(22,'<h1>Math</h1>\r\n\r\n<p>A square root of number y is a number x such that y = x * x</p>','<p>Find a square root x. A square root value(return value) is always an integer.</p>','<p>Example 1:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>: 16</p>\r\n\r\n			<p><strong>Output</strong>: 4</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>Example 2:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>: 9</p>\r\n\r\n			<p><strong>Output</strong>: 3</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>','2019-07-21 17:42:05.000000','',1,8,1,'def solve(num):','','','','',NULL,88,'Square root',0),(23,'<p>The subarray is an array composed from a contiguous block of the original array.</p>\r\n\r\n<p>For example, the all subarrays of [1, 2, 3] are as follows:</p>\r\n\r\n<p>&nbsp; &nbsp; &bull; [1]</p>\r\n\r\n<p>&nbsp; &nbsp; &bull; [1, 2]</p>\r\n\r\n<p>&nbsp; &nbsp; &bull; [1, 2, 3]</p>\r\n\r\n<p>&nbsp; &nbsp; &bull; [2]</p>\r\n\r\n<p>&nbsp; &nbsp; &bull; [2, 3]</p>\r\n\r\n<p>&nbsp; &nbsp; &bull; [3]</p>','<p>Find the maximum subarray which has the largest sum.</p>\r\n\r\n<p>Subarray should have the first element. Return the sum of the maximum subarray.</p>','<p>Example 1:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>: [1, 2, -3, 2, -1]</p>\r\n\r\n			<p><strong>Output</strong>: 3</p>\r\n\r\n			<p><strong>Explanation</strong>: 1 + 2 = 3</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>Example 2:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>: [1, 0, 3, -2, 3]</p>\r\n\r\n			<p><strong>Output</strong>: 5</p>\r\n\r\n			<p><strong>Explanation</strong>: 1 + 0 + 3 + (-2) + 3 = 5</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>','2019-07-23 03:14:28.000000','',1,19,1,'def solve(nums):','','','','',NULL,69,'Subarray',0),(24,'<h1>Class</h1>\r\n\r\n<p>Class is the blueprint for creating an object.</p>\r\n\r\n<p>Create a class named MyClass:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p>class MyClass:</p>\r\n\r\n			<p>&nbsp; &nbsp; x = 1</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<h1>Object</h1>\r\n\r\n<p>We can use the class named myClass to create an object.</p>\r\n\r\n<p>After making an object, we can use it.</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p>my_object = MyClass()</p>\r\n\r\n			<p>print(my_object.x)</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>&nbsp;</p>','<p>What will be printed?</p>','<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p>class Rectangle:</p>\r\n\r\n			<p>&nbsp; &nbsp; def __init__(self, height, width):</p>\r\n\r\n			<p>&nbsp; &nbsp; &nbsp; &nbsp; self.height = height</p>\r\n\r\n			<p>&nbsp; &nbsp; &nbsp; &nbsp; self.width = width</p>\r\n\r\n			<p>&nbsp;</p>\r\n\r\n			<p>&nbsp; &nbsp; def getArea(self):</p>\r\n\r\n			<p>&nbsp; &nbsp; &nbsp; &nbsp; return self.height * self.width</p>\r\n\r\n			<p>&nbsp; &nbsp;</p>\r\n\r\n			<p>rectangle = Rectangle(10, 20)</p>\r\n\r\n			<p>print(rectangle.getArea())</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>','2019-07-23 03:23:36.000000','',1,11,2,'','','','','',NULL,56,'Class and Object',0),(25,'','<p>Find the error in the code below.</p>','<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p>class Rectangle:</p>\r\n\r\n			<p>&nbsp; &nbsp; def __init__(self, height, width):</p>\r\n\r\n			<p>&nbsp; &nbsp; &nbsp; &nbsp; self.height = height</p>\r\n\r\n			<p>&nbsp; &nbsp; &nbsp; &nbsp; self.width = width</p>\r\n\r\n			<p>&nbsp;</p>\r\n\r\n			<p>def getArea(self, constant):</p>\r\n\r\n			<p>&nbsp; &nbsp; &nbsp; &nbsp; return self.height * self.width * constant</p>\r\n\r\n			<p>&nbsp; &nbsp; &nbsp; &nbsp;</p>\r\n\r\n			<p>rectangle = Rectangle(10, 20)</p>\r\n\r\n			<p>print(rectangle.getArea())</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>&nbsp;</p>','2019-07-23 03:28:12.000000','',1,11,4,'def __init__(self, height, width):','def __init__(self, height, width):','return self.height * self.width * number','rectangle = Rectangle(10, 20)','print(rectangle.getArea())',NULL,57,'Find the error about class',0),(26,'<h1>Data type</h1>\r\n\r\n<h3>&nbsp;</h3>\r\n\r\n<h3>Boolean</h3>\r\n\r\n<p>&bull; Only two constant objects</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p>True</p>\r\n\r\n			<p>False</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<h3>Number</h3>\r\n\r\n<h5>&bull; Integer</h5>\r\n\r\n<p>= Whole number + Negative number</p>\r\n\r\n<p>= Positive number + 0 + Negative number</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p>-10</p>\r\n\r\n			<p>-1</p>\r\n\r\n			<p>0</p>\r\n\r\n			<p>1</p>\r\n\r\n			<p>5</p>\r\n\r\n			<p>...</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<h5>&bull; Decimal</h5>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p>0.1</p>\r\n\r\n			<p>1.5</p>\r\n\r\n			<p>10.5</p>\r\n\r\n			<p>...</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p><br />\r\n&nbsp;</p>\r\n\r\n<h3>String</h3>\r\n\r\n<p>&bull;&nbsp;Surrounded by a single or double quotation mark.</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p>&quot;Hello World&quot;</p>\r\n\r\n			<p>&#39;Python 34 Kids&#39;</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>&nbsp;</p>','<p>What is the incorrect data types in Python?</p>','','2019-07-23 06:03:36.000000','',1,12,4,'','3.5','False','\"Hello Python\"','\'Python\' \'34\' \'Kids\'','k2DqsJcNfNM',0,'Basic data type',0),(27,'','<p>Given an integer array of 1 to N except for one number, find the missing integer.</p>','<p>Example 1:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>: [6, 4, 3, 7, 1, 2]</p>\r\n\r\n			<p><strong>Output</strong>: 5</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>','2019-07-26 04:31:21.000000','',1,19,1,'def solve(nums):','','','','',NULL,71,'Missing number',1),(28,'','<p>Find the frequency of the most frequently appearing character.</p>','<p>Example 1:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>: &quot;abccbbd&quot;</p>\r\n\r\n			<p><strong>Output</strong>: 3</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p><strong>Explanation:</strong></p>\r\n\r\n<p>&quot;b&quot; is the most common alphabet.&nbsp; It appears 3 times.</p>','2019-07-26 07:36:11.000000','',1,2,1,'def solve(str):','','','','',NULL,58,'Frequency',0),(29,'','<p>Given a list, rotate the list to the right by n steps. (you take the 0th element and put it at the end of the list)</p>','<p>Example 1:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>: [2, 3, 4, 5, 6], 2</p>\r\n\r\n			<p><strong>Output</strong>: [4, 5, 6, 2, 3]</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p><strong>Explanation:</strong></p>\r\n\r\n<p>[2, 3, 4, 5, 6]</p>\r\n\r\n<p>rotate&nbsp;by 1 step: [3, 4, 5, 6, 2]</p>\r\n\r\n<p>rotate by 2&nbsp;step: [4, 5, 6, 2, 3]</p>','2019-07-27 17:16:10.000000','',1,19,1,'def solve(nums, n):','','','','',NULL,70,'Rotate a list',0),(30,'','<p>Find the smallest number in a list.</p>','<p>Example 1:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>: [3, 4, 7, 5, 2, 7]</p>\r\n\r\n			<p><strong>Output</strong>: 2</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>','2019-07-28 03:05:15.000000','',1,19,1,'def solve(nums):','','','','',NULL,72,'Smallest number',1),(31,'','<p>Split the list into two lists.</p>\r\n\r\n<p>The first list contains odd numbers and the second list contains even numbers.</p>','<p>Example 1:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>:[1, 4, 6, 9]</p>\r\n\r\n			<p><strong>Output</strong>: [1, 9], [4, 6]</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>','2019-07-28 05:42:42.000000','',1,4,1,'def solve(nums):','','','','',NULL,46,'Split a list by even and odd values',0),(32,'<h3>List</h3>\r\n\r\n<p>&bull; A collection which is ordered and <span style=\"color:#e74c3c\"><strong>changeable</strong></span>.</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p>[1, 2, 3]</p>\r\n\r\n			<p>[&quot;hello&quot;, &quot;hi&quot;]</p>\r\n\r\n			<p>[10, &#39;python&#39;]</p>\r\n\r\n			<p>[10, [1, 2, 3]]</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<h3>&nbsp;</h3>\r\n\r\n<h3>Tuple</h3>\r\n\r\n<p>&bull;&nbsp;A&nbsp;collection which is ordered and <span style=\"color:#e74c3c\"><strong>unchangeable</strong></span>.</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p>(1, 2, 3)</p>\r\n\r\n			<p>(&quot;hello&quot;, &quot;world&quot;}</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>','<p>What is the incorrect data type in Python?</p>','','2019-07-29 06:11:15.000000','',1,12,4,'','[1, 2, 3]','(1, 2, 3)','[\"hello\", 123]','(1), (2)',NULL,1,'List and Tuple',0),(33,'','<p>Remove the third word of the sentence.</p>','<p>Example 1:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>: &quot;How are you today&quot;</p>\r\n\r\n			<p><strong>Output</strong>: &quot;How are today&quot;</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>','2019-07-30 09:25:37.000000','',1,21,1,'def solve(str):','','','','',NULL,83,'Remove a word',0),(34,'','<p>Given a decimal less than 1, return the number of leading zeros at the right of the point.</p>','<p>Example 1:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>: 0.0004</p>\r\n\r\n			<p><strong>Output</strong>: 3</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>','2019-07-31 01:09:00.000000','',1,8,1,'def solve(num):','','','','',NULL,90,'Leading zeros',0),(35,'','<p>Given the two integers, find the greatest common factor(GCF).</p>','<p>Example 1:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p>Input: 15, 9</p>\r\n\r\n			<p>Output: 3</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>Example 2:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p>Input: 24, 9</p>\r\n\r\n			<p>Output: 3</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>','2019-08-01 04:12:07.000000','',1,8,1,'def solve(num1, num2):','','','','',NULL,91,'Greatest common factor',0),(36,'<h1>Print</h1>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>Print the specified message to the screen.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<h3>Number</h3>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p>print(1)</p>\r\n\r\n			<p>print(123)</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<h3>String</h3>\r\n\r\n<table class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p>print(&quot;hello world&quot;)</p>\r\n\r\n			<p>print(&#39;hello world&#39;)</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<h3>List</h3>\r\n\r\n<table class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p>print([1, 2, 3])</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<h3>Set</h3>\r\n\r\n<table class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p>print({1, 2, 3})</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<h3>Dictionary</h3>\r\n\r\n<table class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p>print({&quot;key1&quot;: &quot;value1&quot;, &quot;key2&quot;: &quot;value2&quot;})</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<h3>&nbsp;</h3>\r\n\r\n<h3>Variable</h3>\r\n\r\n<table class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p>num&nbsp;= 123</p>\r\n\r\n			<p>print(num)</p>\r\n\r\n			<p>&nbsp;</p>\r\n\r\n			<p>str = &quot;hello&quot;</p>\r\n\r\n			<p>print(str)</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>','<p>Choose the correct format of print.</p>','','2019-08-01 07:45:14.000000','',1,15,4,'','Print(hello)','print[1, 2]','print{1, 2}','print([1, 2])',NULL,14,'Print',0),(37,'','<p>Find the second largest number of the list.</p>','<p>Example 1:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>: [5, 3, 6, 7, 8]</p>\r\n\r\n			<p><strong>Output</strong>: 7</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>','2019-08-01 08:21:38.000000','',1,29,1,'def solve(nums):','','','','',NULL,61,'Second largest number',0),(38,'','<p>Check if the list has the duplicated number or not.</p>','<p>Example 1:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>: [1, 5, 3, 1]</p>\r\n\r\n			<p><strong>Output</strong>: True</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>Example 2:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>: [1, 5, 7]</p>\r\n\r\n			<p><strong>Output</strong>: False</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>','2019-08-02 04:12:29.000000','https://leetcode.com/problems/contains-duplicate/',1,6,1,'def solve(nums):','','','','',NULL,59,'Duplicated number',0),(39,'','<p>Given an integer, check if it is a power of 2.</p>','<p>Example 1:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>: 16</p>\r\n\r\n			<p><strong>Output</strong>: True</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>Example 2:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>: 8</p>\r\n\r\n			<p><strong>Output</strong>: True</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>Example 3:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>: 6</p>\r\n\r\n			<p><strong>Output</strong>: False</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>','2019-08-02 09:56:48.000000','',1,8,1,'def solve(num):','','','','',NULL,92,'Power of two',0),(40,'','<p>Find the trailing zero of the integer.</p>','<p>Example 1:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>:&nbsp;120000</p>\r\n\r\n			<p><strong>Output</strong>:&nbsp;4</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>Example 2:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>:&nbsp;534</p>\r\n\r\n			<p><strong>Output</strong>:&nbsp;0</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>','2019-08-03 04:57:32.000000','',1,8,1,'def solve(num):','','','','',NULL,93,'Find a trailing zeros',0),(41,'','<p>Which one is incorrect?</p>','','2019-08-03 17:15:27.000000','',1,12,4,'','{1, 2, 2}','[1, 2, 3]','(1, 2, 3)','{1:1, 2:2}',NULL,3,'Invalid data type',0),(42,'','<p>Choose the invalid list data type.</p>','','2019-08-04 03:47:48.000000','',1,12,4,'','[1, 2, 2]','[\"hello\", \'python\']','[\"hi\", good]','[\"hi\", []]',NULL,4,'Invalid list data type',2),(43,'','<p>Check whether the parenthesis is valid or not.</p>','<p>Example 1:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>: (())</p>\r\n\r\n			<p><strong>Output</strong>: True</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>Example 2:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>: ()()</p>\r\n\r\n			<p><strong>Output</strong>: True</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>Example 3:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>: (()())</p>\r\n\r\n			<p><strong>Output</strong>: True</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>Example 4:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>: (()</p>\r\n\r\n			<p><strong>Output</strong>: False</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>','2019-08-04 16:07:02.000000','',1,9,1,'def solve(str):','','','','',NULL,100,'Find valid parenthesis',0),(44,'','<p>Given a string, remove adjacent duplicated character in the string until there are no adjacent duplicate characters.</p>','<p>Example 1:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>:&nbsp;abbc</p>\r\n\r\n			<p><strong>Output</strong>:&nbsp;ac</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>Example 2:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>:&nbsp;cabba</p>\r\n\r\n			<p><strong>Output</strong>:&nbsp;c</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>','2019-08-05 00:05:24.000000','',1,29,1,'def solve(str):','','','','',NULL,62,'Remove adjacent duplicated characters',0),(45,'','<p>Find the sum of the internal angle of the n-sided polygon.</p>','<p>Example 1:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>: 3</p>\r\n\r\n			<p><strong>Output</strong>: 180</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>Example 2:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>: 4</p>\r\n\r\n			<p><strong>Output</strong>: 360</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>','2019-08-06 01:25:41.000000','',1,8,1,'def solve(n):','','','','',NULL,94,'Sum of internal angle',0),(46,'','<p>Find the sum of the external angle of the n-sided polygon.</p>','<p>Example 1:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>: 3</p>\r\n\r\n			<p><strong>Output</strong>: 900</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>Example 2:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>: 4</p>\r\n\r\n			<p><strong>Output</strong>: 1080</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>','2019-08-06 01:27:16.000000','',1,8,1,'def solve(num):','','','','',NULL,95,'Sum of external angle',1),(47,'','<p>Given k and list, count the number less than k in the list.</p>','<p>Example 1:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>: 5, [3, 6, 7, 8]</p>\r\n\r\n			<p><strong>Output</strong>: 2</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>','2019-08-06 01:28:39.000000','',1,19,1,'def solve(k, nums):','','','','',NULL,73,'How many numbers less than k',1),(48,'','<p>Given two&nbsp;lists, find the common values belong to both.</p>','<p>Example 1:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>: [3, 5, 7, 9], [1, 3, 8, 9]</p>\r\n\r\n			<p><strong>Output</strong>: [3, 9]</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>','2019-08-06 01:30:07.000000','',1,19,1,'def solve(nums1, nums2):','','','','',NULL,74,'Common value between two lists',0),(49,'','<p>Return the following list depending on the number.</p>','<p>Example 1:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>: 3</p>\r\n\r\n			<p><strong>Output</strong>: [&quot;*&quot;, &quot;**&quot;, &quot;***&quot;]</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>Example 2:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>: 4</p>\r\n\r\n			<p><strong>Output</strong>: [&quot;*&quot;, &quot;**&quot;, &quot;***&quot;, &quot;****&quot;]</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>&nbsp;</p>','2019-08-06 01:34:03.000000','',1,29,1,'def solve(num):','','','','',NULL,63,'Print triangle',0),(50,'','<p>Find the n-th Fibonacci numbers.</p>\r\n\r\n<p>The current value is the sum of the previous two values.</p>\r\n\r\n<p>For example, 1, 1, 2, 3, 5, 8, 13, 21, 34, ...</p>','<p>Example 1:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>: 6</p>\r\n\r\n			<p><strong>Output</strong>: 8</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>','2019-08-07 00:51:56.000000','',1,8,1,'def solve(n):','','','','',NULL,96,'Fibonacci',0),(51,'','<p>Given the two sorted lists, merge two lists to one sorted list.</p>','<p>Example 1:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>: [1, 3, 4], [2, 4, 5]</p>\r\n\r\n			<p><strong>Output</strong>: [1, 2, 3, 4, 4, 5]</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>&nbsp;</p>','2019-08-07 00:59:21.000000','',1,19,1,'def solve(list1, list2):','','','','',NULL,75,'Merge lists',0),(52,'<h3>Naming rule</h3>\r\n\r\n<p>1. The variables name consists of alphabets, numbers, or underscore.</p>\r\n\r\n<ul>\r\n	<li>_num</li>\r\n	<li>num</li>\r\n	<li>NUM</li>\r\n</ul>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p>num = 1</p>\r\n\r\n			<p>num = 1.2</p>\r\n\r\n			<p>str = &quot;hello world&quot;</p>\r\n\r\n			<p>str2 = &#39;hi, python&#39;</p>\r\n\r\n			<p>nums = [1, 2, 3, 4]</p>\r\n\r\n			<p>nums = {1, 2, 3}</p>\r\n\r\n			<p>nums = {&quot;hi&quot;: &quot;python&quot;, &quot;hello&quot;: &quot;world&quot;]</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>2. The variable name must not start with a number.</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><s>2num</s> = 1</p>\r\n\r\n			<p><s>3str</s> = &quot;hello world&quot;</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>3. The variable name must not be reserved words.</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><s>True</s></p>\r\n\r\n			<p><s>if</s></p>\r\n\r\n			<p><s>for</s></p>\r\n\r\n			<p><s>return</s></p>\r\n\r\n			<p><s>while</s></p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>','<p>What is an invalid variable name?</p>','','2019-08-08 05:25:54.000000','',1,14,4,'','number','num2','2num','_number',NULL,12,'Variable naming rule',1),(53,'','<p>Return the following list depending on the number.</p>','<p>Example 1:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>: 3</p>\r\n\r\n			<p><strong>Output</strong>: [&quot;--*&quot;, &quot;-**&quot;, &quot;***&quot;]</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>Example 2:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>: 4</p>\r\n\r\n			<p><strong>Output</strong>: [&quot;---*&quot;, &quot;--**&quot;, &quot;-***&quot;, &quot;****&quot;]</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>','2019-08-09 05:20:50.000000','',1,29,1,'def solve(num):','','','','',NULL,64,'Print square',0),(54,'','<p>Swap all the values between the i-th element and the j-th element.</p>','<p>Example 1:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>: [3, 4, 5, 6, 7, 8, 9], 2, 5</p>\r\n\r\n			<p><strong>Output</strong>: [3, 4, 5, 9, 8, 7, 6]</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>Example 2:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>: [1, 2, 3, 4, 5], 1, 4</p>\r\n\r\n			<p><strong>Output</strong>: [1, 5, 4, 3, 2]</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>','2019-08-09 05:22:58.000000','',1,19,1,'def solve(nums, i, j):','','','','',NULL,76,'Swap the values',0),(55,'<p>Split a string into a list by a default separator.&nbsp; The default separator is a space.</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p>str = &quot;This is The Python Kids&quot;</p>\r\n\r\n			<p>list = str.split()</p>\r\n\r\n			<p>print(list)</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p><strong>Output:</strong></p>\r\n\r\n<p>[&#39;This&#39;, &#39;is&#39;, &#39;The&#39;, &#39;Python&#39;, &#39;Kids&#39;]</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>Split a string into a list by a space as a &quot;,&quot; separator.&nbsp;</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p>str = &quot;This,is,The Python Kids&quot;</p>\r\n\r\n			<p>list = str.split(&quot;,&quot;)</p>\r\n\r\n			<p>print(list)</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p><strong>Output:</strong></p>\r\n\r\n<p>[&#39;This&#39;, &#39;is&#39;, &#39;The Python Kids&#39;]</p>','<p>Choose the output&nbsp;of this code.</p>','<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p>str = &quot;Hello!How are you?&quot;</p>\r\n\r\n			<p>list = str.split(&quot;!&quot;)</p>\r\n\r\n			<p>print(list)</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>','2019-08-09 22:03:23.000000','',1,3,4,'','[\'Hello!\', \'How\', \'are\', \'you?\']','[\'Hello!How are you?\']','[\'Hello!\", \"How are you?\']','[\'Hello\', \'How are you?\']',NULL,35,'Split a string',0),(56,'<h1>Merge strings with separator</h1>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>Return a string joined by a separator.</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p>list = [&#39;This&#39;, &#39;is&#39;, &#39;The&#39;, &#39;Python&#39;, &#39;Kids&#39;]</p>\r\n\r\n			<p>str = &quot;_&quot;.join(list)</p>\r\n\r\n			<p>print(str)</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p><strong>Output:</strong></p>\r\n\r\n<p>&quot;This_is_The_Python_Kids&quot;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p>list = [&#39;This&#39;, &#39;is&#39;, &#39;The&#39;, &#39;Python&#39;, &#39;Kids&#39;]</p>\r\n\r\n			<p>str = &quot; &quot;.join(list)</p>\r\n\r\n			<p>print(str)</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p><strong>Output:</strong></p>\r\n\r\n<p>&quot;This is The Python Kids&quot;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p>list = [&#39;This&#39;, &#39;is&#39;, &#39;The&#39;, &#39;Python&#39;, &#39;Kids&#39;]</p>\r\n\r\n			<p>str = &quot;&quot;.join(list)</p>\r\n\r\n			<p>print(str)</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p><strong>Output:</strong></p>\r\n\r\n<p>&quot;ThisisThePythonKids&quot;</p>','<p>Choose the result of this code.</p>','<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>list = [&#39;Hi&#39;, &#39;Python&#39;] str = &quot;!&quot;.join(list) print(str)</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>&nbsp;</p>','2019-08-09 23:25:18.000000','',1,3,4,'','\"Hi Python\"','\"HiPython\"','\"HI!PYTHON\"','\"Hi!Python\"',NULL,34,'Merge strings using Join',0),(57,'','<p>Given a number, find the sum of digits.</p>','<p>Example 1:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>: 1234</p>\r\n\r\n			<p><strong>Output</strong>: 10</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p><br />\r\nExample 2:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>: 111111</p>\r\n\r\n			<p><strong>Output</strong>: 6</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>&nbsp;</p>','2019-08-16 02:14:12.000000','',1,8,1,'def solve(num):','','','','',NULL,97,'Sum of digits',0),(58,'<p>A common year has 365 days and a&nbsp;leap-year has 366 days in a year.</p>\r\n\r\n<p>&nbsp; &nbsp; &bull; A leap year occurs every four years.</p>\r\n\r\n<p>&nbsp; &nbsp; &bull; A&nbsp;century year cannot be a leap year unless it is divisible by 400.</p>','<p><strong>Given a year, return the days in the year.</strong></p>','<p>Example 1:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input:</strong> 2020</p>\r\n\r\n			<p><strong>Output:</strong> 366</p>\r\n\r\n			<p><strong>Explanation: </strong>2020 is divisible by&nbsp;4<strong>&nbsp;</strong></p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>Example 2:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input:</strong> 2000</p>\r\n\r\n			<p><strong>Output:</strong> 366</p>\r\n\r\n			<p><strong>Explanation:</strong> 2000 is divisible by 400</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>Example 3:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>: 1900</p>\r\n\r\n			<p><strong>Output:</strong>&nbsp;365</p>\r\n\r\n			<p><strong>Explanation:</strong> 1900 is divisible by 100 and not divisible by 400</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p><br />\r\n&nbsp;</p>','2019-08-16 02:17:30.000000','',1,8,1,'def solve(year):','','','','',NULL,98,'Leap year',0),(59,'','<p>The price of the product changes every day. There is a daily price in a list. Find the maximum profit in one transaction.</p>\r\n\r\n<p>(You have to buy the product first and sell later.)</p>','<p>Example 1:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input: </strong>[4, 3, 5, 8, 6]</p>\r\n\r\n			<p><strong>Output: </strong>5</p>\r\n\r\n			<p><strong>Explanation:&nbsp;</strong></p>\r\n\r\n			<p>For maximum profit, buy for $3 on the 2nd day and sell for $8 on the 4th day.</p>\r\n\r\n			<p>So max profit is $5</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>','2019-08-16 04:05:09.000000','',1,19,1,'def solve(prices):','','','','',NULL,77,'Maximum profit',0),(60,'','<p>Find the sum of the numbers using provided the sum method.</p>','<p>Example 1:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input: </strong>[1, 2, 3, 4, 5]</p>\r\n\r\n			<p><strong>Output: </strong>15</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>','2019-08-16 04:15:39.000000','',1,19,1,'def sum(num1, num2):\r\n    return num1 + num2\r\n\r\ndef solve(nums):','','','','',NULL,78,'Sum of the numbers',0),(61,'<h1>List</h1>\r\n\r\n<p>&bull; List is one of the collections which is ordered and changeable.</p>\r\n\r\n<h3>&nbsp;</h3>\r\n\r\n<h3>Index</h3>\r\n\r\n<p>&bull; Get the value at the <strong>index</strong> position.</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p>nums = [1, 2, 3]</p>\r\n\r\n			<p>print(nums[0])</p>\r\n\r\n			<p>print(nums[1])</p>\r\n\r\n			<p>print(nums[2])</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p><span style=\"color:#3498db\"><strong>Output: </strong></span></p>\r\n\r\n<p>1</p>\r\n\r\n<p>2</p>\r\n\r\n<p>3</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&bull; Get the value at the <strong>negative</strong>&nbsp;<strong>index</strong> position.&nbsp; Index -1 indicates the last value.</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p>nums = [1, 2, 3]</p>\r\n\r\n			<p>print(nums[-1])</p>\r\n\r\n			<p>print(nums[-2])</p>\r\n\r\n			<p>print(nums[-3])</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p><span style=\"color:#3498db\"><strong>Output: </strong></span></p>\r\n\r\n<p>3</p>\r\n\r\n<p>2</p>\r\n\r\n<p>1</p>','<p>Choose&nbsp;the correct list after removing.</p>','<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p>nums = [1, 2, 3, 4, 5]</p>\r\n\r\n			<p>print(nums[0] + nums[-1])</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>&nbsp;</p>','2019-08-17 08:35:08.000000','',1,4,4,'','1','4','5','6','oxx3NY1ky0w',36,'Index a value from list',0),(62,'<p>Append the&nbsp;value at the end.</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p>nums = [1, 2, 3]</p>\r\n\r\n			<p>nums.append(4)</p>\r\n\r\n			<p>print(nums)</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p><strong>Output: </strong>[1, 2, 3, 4]</p>','<p>Choose the correct list after appending.</p>','<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p>[1, 2, 3].append(4).append(4)</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p><br />\r\n&nbsp;</p>','2019-08-17 19:43:15.000000','',1,4,4,'','[1, 2, 3]','[1, 2, 3, 4]','[1, 2, 3, 4, 4]','Error',NULL,37,'Append to List',0),(63,'<h1>Arithmetic Operator</h1>\r\n\r\n<h3>Addition</h3>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p>1 + 2&nbsp;</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p><span style=\"color:#3498db\"><strong>Output:</strong></span> 3</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<h3>Subtraction</h3>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p>2 - 1&nbsp;</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p><span style=\"color:#3498db\"><strong>Output:</strong></span>&nbsp;1</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p>1 - 2&nbsp;</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p><span style=\"color:#3498db\"><strong>Output:</strong></span>&nbsp;-1</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<h3>Multiplication</h3>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p>2 * 3&nbsp;</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p><span style=\"color:#3498db\"><strong>Output:</strong></span>&nbsp;6</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<h3>Division</h3>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p>4 / 2</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p><span style=\"color:#3498db\"><strong>Output:</strong></span>&nbsp;2</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p>3 / 2&nbsp;</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p><span style=\"color:#3498db\"><strong>Output:</strong></span>&nbsp;1.5</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<h3>Exponentiation</h3>\r\n\r\n<p>The first number to the power of the second.</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p>3 ** 4</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p><span style=\"color:#3498db\"><strong>Output:</strong></span>&nbsp;81</p>\r\n\r\n<p>Explanation:</p>\r\n\r\n<p>3 * 3 * 3 * 3 = 81</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<h3>Floor Division</h3>\r\n\r\n<p>Divides and returns the integer value of the quotient.</p>\r\n\r\n<table class=\"table table-bordered\" style=\"border:undefined\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p>7 // 4</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p><span style=\"color:#3498db\"><strong>Output:</strong></span>&nbsp;1</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<h3>Modulus</h3>\r\n\r\n<p>Divides and returns the value of the remainder.</p>\r\n\r\n<table class=\"table table-bordered\" style=\"border:undefined\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p>7 %&nbsp;4</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p><span style=\"color:#3498db\"><strong>Output:</strong></span>&nbsp;3</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<h3>Operator Priority</h3>\r\n\r\n<p>%, *, / is a higher priority than +, -</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p>1 + 3 * 2&nbsp;</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p><span style=\"color:#3498db\"><strong>Output:</strong></span>&nbsp;7</p>\r\n\r\n<p>Description:</p>\r\n\r\n<p>1 + 3 * 2</p>\r\n\r\n<p>= 1 + (3 * 2)</p>\r\n\r\n<p>= 7</p>','<p>Choose the different&nbsp;value of the followings.</p>','','2019-08-19 02:32:58.000000','',1,13,4,'','17 // 2','17 % 9','17 / 2','2 ** 3',NULL,5,'Arithmetic Operator',0),(64,'','<p>Find it whether the one string can be transformed into the other string.</p>','<p>Example 1:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>: &quot;abcc&quot;, &quot;cbca&quot;</p>\r\n\r\n			<p><strong>Output</strong>: True</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>Example 2:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>: &quot;aabb&quot;, &quot;abab&quot;</p>\r\n\r\n			<p><strong>Output</strong>: True</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>Example 3:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>: &quot;abb&quot;, &quot;aabb&quot;</p>\r\n\r\n			<p><strong>Output</strong>: False</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>','2019-08-19 02:47:30.000000','',1,21,1,'def solve(str1, str2):','','','','',NULL,84,'String transformation',0),(65,'<h3>Palindrome</h3>\r\n\r\n<p>A word which reads the same backward as forward such as mom, madam.</p>','<p>Check a word whether it is a palindrome or not.</p>','<p>Example 1:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>: mom</p>\r\n\r\n			<p><strong>Output</strong>: True</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>Example 2:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>: <em>racecar</em></p>\r\n\r\n			<p><strong>Output</strong>: True</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>Example 2:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>: father</p>\r\n\r\n			<p><strong>Output</strong>: False</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>','2019-08-19 03:02:33.000000','',1,21,1,'def solve(str):','','','','',NULL,85,'Palindrome',0),(66,'','<p>Find it how many adjacent same numbers in the list.</p>','<p><tt>Example 1:</tt></p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><tt><strong>Input</strong>: [1, 2, 3, 4, 4, 4, 4, 4, 5]</tt></p>\r\n\r\n			<p><tt><strong>Output</strong>: 5</tt></p>\r\n\r\n			<p><tt><strong>Explanation: </strong>There is five adjacent 4 in the list.</tt></p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><tt>Example 2:</tt></p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><tt><strong>Input</strong>: [1, 2, 3, 4]</tt></p>\r\n\r\n			<p><tt><strong>Output</strong>: 1</tt></p>\r\n\r\n			<p><tt><strong>Explanation: </strong>each number is different.</tt></p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>','2019-08-19 03:15:56.000000','',1,19,1,'def solve(nums):','','','','',NULL,79,'Adjacent same numbers',0),(67,'','<p>Find the maximum value of the list.</p>','<p>Example 1:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>: [4, 3, 2, 5, 2]</p>\r\n\r\n			<p><strong>Output</strong>: 5</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>Example 2:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>: [6, 5, 3, 9, 3]</p>\r\n\r\n			<p><strong>Output</strong>: 9</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>','2019-08-19 03:20:45.000000','',1,19,1,'def solve(nums):','','','','',NULL,80,'Maximum value',0),(68,'','<p>Remove the outermost parenthesis.</p>','<p>Example 1:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>: &quot;(()())&quot;</p>\r\n\r\n			<p><strong>Output</strong>: &quot;()()&quot;</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>Example 2:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>: &quot;()()&quot;</p>\r\n\r\n			<p><strong>Output</strong>: &quot;&quot;</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>','2019-08-19 17:01:59.000000','',1,9,1,'def solve(str):','','','','',NULL,101,'Remove outermost parenthesis',0),(69,'<h1>Linked list</h1>\r\n\r\n<p>Each node is pointing at the next node. The last node is pointing at <strong>None</strong> because of no more nodes<strong>.</strong></p>\r\n\r\n<p>A linked list can be extended or reduced easily compared to a list.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<h3>How to make the linked list like below.</h3>\r\n\r\n<p><img alt=\"\" src=\"/static/quiz/linked_list.png\" style=\"height:109px; width:600px\" /></p>\r\n\r\n<p>1. Prepare the Node class to make a linked list.</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p>class Node:<br />\r\n			&nbsp; &nbsp; def __init__(self, val):<br />\r\n			&nbsp; &nbsp; &nbsp; &nbsp; self.val = val<br />\r\n			&nbsp; &nbsp; &nbsp; &nbsp; self.next = None</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>2. Create each node without linking.</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p>node1 = None(1)</p>\r\n\r\n			<p>node2&nbsp;= Node(4)</p>\r\n\r\n			<p>node3 = Node(3)</p>\r\n\r\n			<p>node4 = Node(2)</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p><img alt=\"\" src=\"/static/quiz/linked_list_without_linking.png\" style=\"width:600px\" /></p>\r\n\r\n<p>3. Here is the last step to link a next node.</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p>head = node1</p>\r\n\r\n			<p>node1.next = node2</p>\r\n\r\n			<p>node2.next = node3</p>\r\n\r\n			<p>node3.next = node4</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>&nbsp;<img alt=\"\" src=\"/static/quiz/linked_list.png\" style=\"height:109px; width:600px\" /></p>\r\n\r\n<h3>How to print all values</h3>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p>while head != None:</p>\r\n\r\n			<p>&nbsp; &nbsp; print(head.val)&nbsp; &nbsp;&nbsp;</p>\r\n\r\n			<p>&nbsp; &nbsp; head = head.next</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>','<p><strong>Find the maximum value of the linked list.</strong></p>','<p>Example 1:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>:</p>\r\n\r\n			<p>&nbsp;<img alt=\"\" src=\"/static/quiz/linked_list.png\" style=\"height:109px; width:600px\" /></p>\r\n\r\n			<p><strong>Output</strong>: 4</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p><br />\r\n&nbsp;</p>','2019-08-20 05:15:02.000000','',1,31,1,'# Definition for linked list.\r\nclass Node:\r\n    def __init__(self, val):\r\n        self.val = val\r\n        self.next = None\r\n\r\ndef solve(head):\r\n    # Please insert code here','','','','',NULL,102,'Find the maximum',0),(70,'<h1>Data Type</h1>\r\n\r\n<h3>&nbsp;</h3>\r\n\r\n<h3>Set</h3>\r\n\r\n<p>&bull; A collection for <span style=\"color:#e74c3c\"><strong>unique</strong></span> values.</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p>{1, 2, 3}&nbsp;</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<h3>Dictionary</h3>\r\n\r\n<p>&bull; A collection for the <strong>key</strong> and <strong>value</strong> pair.</p>\r\n\r\n<p>&bull;&nbsp;The format looks like this.</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>{key: value, ...}</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&bull;&nbsp;A <strong>key</strong> should be unique and a&nbsp;<strong>value</strong> does not need to be unique.</p>\r\n\r\n<p>&bull;&nbsp;The examples below are valid format.</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p>{&quot;key1&quot;: &quot;value1&quot;, &quot;key2&quot;: &quot;value2&quot;}</p>\r\n\r\n			<p>{1: 1, 2: 2}</p>\r\n\r\n			<p>{&quot;hello&quot;: &quot;hi&quot;}</p>\r\n\r\n			<p>{&#39;hi&#39;: &#39;python&#39;, 100: &quot;hello&quot;}</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>&nbsp;</p>','<p>Which one is the invalid format?</p>','','2019-08-26 03:48:16.000000','',1,12,4,'','{\"hello\": \"hi\", \"hello\": \"hi2\"}','{1, 2, 3}','{1}','{\"hi\": \"hello\", \"hi2\": \"hello\"}',NULL,2,'Set and Dictionary',1),(71,'<h1>Naming convention</h1>\r\n\r\n<p>Here is the naming convention for variable.</p>\r\n\r\n<p>1. Should be all lower case.</p>\r\n\r\n<p>2. Should be separated by an underscore.</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p>nums = [1, 2, 3, 4]</p>\r\n\r\n			<p>quiz_count = 10</p>\r\n\r\n			<p>num = 1</p>\r\n\r\n			<p>str = &quot;hello word&quot;</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>&nbsp;</p>','<p>What is the right python naming convention for variable?</p>','','2019-08-29 03:39:17.000000','',1,14,4,'','quizCount','quiz_count','QuizCount','Quiz_Count',NULL,13,'Variable naming convention',0),(72,'<h3>Equal to (<strong><span style=\"color:#e74c3c\">==</span></strong>)</h3>\r\n\r\n<table class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p>3 == 3</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p><strong><span style=\"color:#3498db\">Output</span>:</strong>&nbsp;True</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<table class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p>4 == 3</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p><strong><span style=\"color:#3498db\">Output</span>:</strong>&nbsp;False</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<h3>Not equal to (<span style=\"color:#e74c3c\"><strong>!=</strong></span>)</h3>\r\n\r\n<table class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p>3 != 3</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p><strong><span style=\"color:#3498db\">Output</span>:</strong>&nbsp;False</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<table class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p>4 != 3</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p><strong><span style=\"color:#3498db\">Output</span>:</strong>&nbsp;True</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<h3>Less than (<span style=\"color:#e74c3c\"><strong>&lt;</strong></span>)</h3>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p>4 &lt; 3</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p><strong><span style=\"color:#3498db\">Output</span>:</strong>&nbsp;True</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<h3>Greater than (<span style=\"color:#e74c3c\"><strong>&gt;</strong></span>)</h3>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>4 &gt; 3</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p><strong><span style=\"color:#3498db\">Output</span>:</strong>&nbsp;True</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>3 &gt; 4</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p><strong><span style=\"color:#3498db\">Output</span>:</strong>&nbsp;False</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<h3>Less than or equal to (<span style=\"color:#e74c3c\"><strong>&lt;=</strong></span>)</h3>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>2 &lt;= 2</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p><strong><span style=\"color:#3498db\">Output</span>:</strong>&nbsp;True</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>2 &lt;= 3</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p><strong><span style=\"color:#3498db\">Output</span>:</strong>&nbsp;True</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<h3>Greater than or equal to (<span style=\"color:#e74c3c\"><strong>&gt;=</strong></span>)</h3>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>4 &gt;= 2</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p><strong><span style=\"color:#3498db\">Output</span>:</strong>&nbsp;True</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>4 &gt;= 4</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p><strong><span style=\"color:#3498db\">Output</span>:</strong>&nbsp;True</p>','<p>Choose the different result of the follows.</p>','','2019-08-29 06:18:20.000000','',1,13,4,'','4 >= 4','3 == 3','2 < 3','5 != 5','-rRY5FnXvC4',6,'Relational Operator',1),(73,'<h3>Assign (<span style=\"color:#e74c3c\"><strong>=</strong></span>)</h3>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p>n = 1</p>\r\n\r\n			<p>print(n)</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p><span style=\"color:#3498db\"><strong>Output</strong></span>: 1</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<h3>Add assign (<span style=\"color:#e74c3c\"><strong>+=</strong></span>)</h3>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p>n = 10</p>\r\n\r\n			<p>n += 1</p>\r\n\r\n			<p>print(n)</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p><span style=\"color:#3498db\"><strong>Output</strong></span>: 11</p>\r\n\r\n<p><strong>Explanation:&nbsp;n += 1</strong> is same as <strong>n = n + 1</strong></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<h3>Subtract assign (<span style=\"color:#e74c3c\"><strong>-=</strong></span>)</h3>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p>n = 10</p>\r\n\r\n			<p>n -= 1</p>\r\n\r\n			<p>print(n)</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p><span style=\"color:#3498db\"><strong>Output</strong></span>: 9</p>\r\n\r\n<p><strong>Explanation:&nbsp;n -=&nbsp;1</strong> is same as <strong>n = n -&nbsp;1</strong></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>','<p>What is the output of the code?</p>','<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p>n = 10</p>\r\n\r\n			<p>n += 5</p>\r\n\r\n			<p>n -= 3</p>\r\n\r\n			<p>print(n)&nbsp;</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p><br />\r\n&nbsp;</p>','2019-08-29 07:12:41.000000','',1,13,2,'','','','','',NULL,7,'Assignment Operator',1),(74,'<h3>Or</h3>\r\n\r\n<p>The expression is false when the conditions on both the sides of the <strong>or</strong> operator are false.</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p>bool = True or True</p>\r\n\r\n			<p>print(bool)&nbsp;</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p><span style=\"color:#3498db\"><strong>output</strong></span>: True</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p>bool = 2==2 or 1==1</p>\r\n\r\n			<p>print(bool)&nbsp;</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p><span style=\"color:#3498db\"><strong>output</strong></span>: True</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p>bool = False or True</p>\r\n\r\n			<p>print(bool)&nbsp;</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p><span style=\"color:#3498db\"><strong>output</strong></span>: True</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p>bool = 2&gt;3&nbsp;or 1==1</p>\r\n\r\n			<p>print(bool)&nbsp;</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p><span style=\"color:#3498db\"><strong>output</strong></span>: True</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p>bool = False or False</p>\r\n\r\n			<p>print(bool)&nbsp;</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p><span style=\"color:#3498db\"><strong>output</strong></span>: False</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p>bool = 2&gt;3&nbsp;or 1&gt;1</p>\r\n\r\n			<p>print(bool)&nbsp;</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p><span style=\"color:#3498db\"><strong>output</strong></span>: False</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<h5>Or Summary</h5>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<thead>\r\n		<tr>\r\n			<th scope=\"col\"><span style=\"color:#e74c3c\"><span style=\"background-color:#ffffff\">Or</span></span></th>\r\n			<th scope=\"col\"><span style=\"color:#3498db\"><span style=\"background-color:#ffffff\">True</span></span></th>\r\n			<th scope=\"col\"><span style=\"color:#3498db\"><span style=\"background-color:#ffffff\">False</span></span></th>\r\n		</tr>\r\n	</thead>\r\n	<tbody>\r\n		<tr>\r\n			<td><span style=\"color:#3498db\"><strong><span style=\"background-color:#ffffff\">True</span></strong></span></td>\r\n			<td>True</td>\r\n			<td>True</td>\r\n		</tr>\r\n		<tr>\r\n			<td><span style=\"color:#3498db\"><strong><span style=\"background-color:#ffffff\">False</span></strong></span></td>\r\n			<td>True</td>\r\n			<td>False</td>\r\n		</tr>\r\n	</tbody>\r\n</table>','<p>Choose the different result of the following.</p>','','2019-08-29 08:11:42.000000','',1,13,4,'','1 == 1 and 2 == 2','1 < 2 or 1 > 2','not 2 < 3','1 < 2 and 2 > 1',NULL,9,'Logical Operator (Or)',0),(75,'','<p>Given an integer array, return true if we can split the array into two with equal sums.</p>','<p>Example 1:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>: [1, 3, 2, 2]</p>\r\n\r\n			<p><strong>Output</strong>: True</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>Explanation: [1, 3], [2, 2]</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>Example 2:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>: [1, 2, 3, 4, 5, 5]</p>\r\n\r\n			<p><strong>Output</strong>: True</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>Explanation: [1, 2, 3, 4], [5, 5]</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>Example 3:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>: [1, 2, 3, 4]</p>\r\n\r\n			<p><strong>Output</strong>: False</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>','2019-08-30 04:53:49.000000','',1,19,1,'def solve(nums):','','','','',NULL,81,'Split an array into two with equal sum',0),(76,'','<p>Given an array <strong>nums</strong> and another&nbsp;integer <strong>n</strong>, find the maximum of the sum&nbsp;for&nbsp;the subarray with length&nbsp;<strong>n.</strong></p>\r\n\r\n<p>&nbsp;</p>','<p>Example 1:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>: [5, 3, 2, 6, 4, 3, 3], 3</p>\r\n\r\n			<p><strong>Output</strong>: 13</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>Explanation:</p>\r\n\r\n<p>[5, 3, 2], sum = 10</p>\r\n\r\n<p>[3, 2, 6], sum = 11</p>\r\n\r\n<p>[2, 6, 4], sum = 12</p>\r\n\r\n<p>[6, 4, 3], sum&nbsp;= 13 ---&gt; maximum</p>\r\n\r\n<p>[4, 3, 3], sum = 10</p>','2019-08-30 05:15:05.000000','',1,19,1,'def solve(nums, n):','','','','',NULL,82,'Sliding Window Maximum',0),(77,'<h3>For</h3>\r\n\r\n<p><span style=\"color:#e74c3c\"><strong>For</strong></span> loop is used for iterating.</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p>for n in [1, 2, 3]:</p>\r\n\r\n			<p>&nbsp; &nbsp; print(n)</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p><span style=\"color:#3498db\"><strong>Output</strong></span>:</p>\r\n\r\n<p>1</p>\r\n\r\n<p>2</p>\r\n\r\n<p>3</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p>for str in [&quot;hello&quot;, &quot;python&quot;]:</p>\r\n\r\n			<p>&nbsp; &nbsp; print(str)</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p><span style=\"color:#3498db\"><strong>Output</strong></span>:</p>\r\n\r\n<p>&quot;hello&quot;</p>\r\n\r\n<p>&quot;python&quot;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p>for n&nbsp;in range(3):</p>\r\n\r\n			<p>&nbsp; &nbsp; print(n)</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p><span style=\"color:#3498db\"><strong>Output</strong></span>:</p>\r\n\r\n<p>0</p>\r\n\r\n<p>1</p>\r\n\r\n<p>2</p>\r\n\r\n<p><strong>Explanation:</strong></p>\r\n\r\n<p>range(0, 3) is similar to&nbsp;[0, 1, 2]</p>','<p>Choose the result of the code.</p>','<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p>for n in range(2, 4):</p>\r\n\r\n			<p>&nbsp; &nbsp; print(n)&nbsp;</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p><br />\r\n&nbsp;</p>','2019-08-31 04:12:26.000000','',1,1,4,'','2\r\n3\r\n4','2\r\n3','2','4','2PnLrvxqVNI',22,'For',1),(78,'<p><span style=\"color:#e74c3c\"><strong>While</strong></span> loop will be running until the condition is True.&nbsp;</p>\r\n\r\n<p>But&nbsp;<span style=\"color:#e74c3c\"><strong>break</strong></span>&nbsp;can terminate&nbsp;the loop containing it even though the condition is True.</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p>n = 0</p>\r\n\r\n			<p>while n &lt;&nbsp;5:</p>\r\n\r\n			<p>&nbsp; &nbsp; print(n)</p>\r\n\r\n			<p>&nbsp; &nbsp; n = n +&nbsp;1</p>\r\n\r\n			<p>&nbsp; &nbsp; if n == 2:</p>\r\n\r\n			<p>&nbsp; &nbsp; &nbsp; &nbsp; break</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p><span style=\"color:#3498db\">Output:</span></p>\r\n\r\n<p>0</p>\r\n\r\n<p>1</p>','<p>Choose the result of the code.</p>','<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p>n = 5</p>\r\n\r\n			<p>while n &gt; 0:</p>\r\n\r\n			<p>&nbsp; &nbsp; print(n)</p>\r\n\r\n			<p>&nbsp; &nbsp; n = n - 1</p>\r\n\r\n			<p>&nbsp; &nbsp; if n == 2:</p>\r\n\r\n			<p>&nbsp; &nbsp; &nbsp; &nbsp; break</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>&nbsp;</p>','2019-08-31 04:42:56.000000','',1,5,4,'','5\r\n4\r\n3','5\r\n4','3\r\n4\r\n5','5',NULL,26,'Break',0),(79,'','<p>Given a set of activities with a start time and finish time, find the maximum activities without conflict.</p>','<p>Example 1:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>: starts = [1, 2, 4], finishes = [4, 5, 6]</p>\r\n\r\n			<p><strong>Output</strong>: 2</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p><strong>Explanation:</strong></p>\r\n\r\n<p>The first activity is started at 1 and finished at 4.</p>\r\n\r\n<p>The second activity is started at 2&nbsp;and finished at 5.</p>\r\n\r\n<p>The third activity is started at 4&nbsp;and finished at 6.</p>\r\n\r\n<p>When choosing the first and third activities, there are maximum activities without conflict.</p>','2019-08-31 07:29:26.000000','',1,34,1,'def solve(starts, finishes):','','','','',NULL,104,'Activity selection problem',0),(80,'','<p>Find the product from 1 to <strong>num</strong>.</p>\r\n\r\n<p>&nbsp;</p>','<p>Example 1:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>: 4</p>\r\n\r\n			<p><strong>Output</strong>: 24</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>Explanation:&nbsp;1 * 2 * 3 * 4 = 24</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>Example 2:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>: 5</p>\r\n\r\n			<p><strong>Output</strong>: 120&nbsp;</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>Explanation: 1 * 2 * 3 * 4 * 5 = 120</p>\r\n\r\n<p>&nbsp;</p>','2019-09-02 03:44:43.000000','',1,29,1,'def solve(num):','','','','',NULL,60,'Multiply',0),(81,'','<p>Reverse Linked List.</p>','<p>Example 1:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>: 1 -&gt; 4&nbsp;-&gt; 3 -&gt; 2&nbsp;-&gt; 5 -&gt; None</p>\r\n\r\n			<p><strong>Output</strong>: 5 -&gt; 2 -&gt; 3 -&gt; 4 -&gt; 1 -&gt; None</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p><br />\r\n&nbsp;</p>','2019-09-03 00:52:44.000000','',1,31,1,'# Definition for linked list.\r\nclass Node:\r\n    def __init__(self, val):\r\n        self.val = val\r\n        self.next = None\r\n\r\ndef solve(list):\r\n    # Please insert your code here.','','','','',NULL,103,'Reverse linked list',0),(82,'<h3>If</h3>\r\n\r\n<p>1. When the condition is True, the&nbsp;block&nbsp;will be executed.</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p>if 2 &gt; 1:</p>\r\n\r\n			<p>&nbsp; &nbsp; print(&quot;True&quot;)</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p><span style=\"color:#3498db\"><strong>Output</strong></span>: True</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p>if 1&nbsp;&gt; 2:</p>\r\n\r\n			<p>&nbsp; &nbsp; print(&quot;True&quot;)</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>Nothing will be printed because 1 &gt; 2 is not True.</p>','<p>What is the output of the code?</p>','<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p>num = 2</p>\r\n\r\n			<p>if num &gt; 2:</p>\r\n\r\n			<p>&nbsp; &nbsp; print(&quot;Hello&quot;)</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p><br />\r\n&nbsp;</p>','2019-09-04 07:19:41.000000','',1,16,4,'','Nothing','Error','\"Hello\"','2','jmvN3JIEIVI',19,'If',2),(83,'<h3>While</h3>\r\n\r\n<p><strong><span style=\"color:#e74c3c\">While</span></strong> block runs&nbsp;repeatedly&nbsp;as long as a condition is True.</p>\r\n\r\n<p>Here is the while format.</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>while</strong> &lt;condition&gt;<span style=\"color:#e74c3c\"><strong>:</strong></span></p>\r\n\r\n			<p>&nbsp; &nbsp; &lt;block&gt;</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>Here is the real <strong>while</strong> example.</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p>i = 0</p>\r\n\r\n			<p>while i &lt; 4:</p>\r\n\r\n			<p>&nbsp; &nbsp;print(i)</p>\r\n\r\n			<p>&nbsp; &nbsp; i += 1</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p><span style=\"color:#3498db\"><strong>Output:&nbsp;</strong></span></p>\r\n\r\n<p>0</p>\r\n\r\n<p>1</p>\r\n\r\n<p>2</p>\r\n\r\n<p>3</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>The following code&nbsp;will loop until the list is empty.</p>\r\n\r\n<p>The empty list means that the condition is False.</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p>fruits = [&quot;apple&quot;, &quot;orange&quot;, &quot;melon&quot;]</p>\r\n\r\n			<p>while fruits:</p>\r\n\r\n			<p>&nbsp; &nbsp;print(fruits.pop())</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p><span style=\"color:#3498db\"><strong>Output:&nbsp;</strong></span></p>\r\n\r\n<p>&quot;melon&quot;</p>\r\n\r\n<p>&quot;orange&quot;</p>\r\n\r\n<p>&quot;apple&quot;</p>\r\n\r\n<p>&nbsp;</p>','<p>nums = [1, 2, 3]</p>\r\n\r\n<p>while len(nums) &gt; 0:</p>\r\n\r\n<p>&nbsp; &nbsp;print(nums.pop())</p>','','2019-09-08 21:11:34.000000','',1,5,4,'','1','3','1\r\n2\r\n3','3\r\n2\r\n1','mYQ7AuOYPEQ',25,'While',1),(84,'<h3>Function definition</h3>\r\n\r\n<p>A function is a block of code not to repeat&nbsp;code.</p>\r\n\r\n<p>Just define once and call many times.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>Here is the format of the function definition.</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><span style=\"color:#e74c3c\">def</span> &lt;function name&gt;<span style=\"color:#e74c3c\">():</span></p>\r\n\r\n			<p>&nbsp; &nbsp; &lt;block&gt;</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p><br />\r\nHere is the real function to print a string.</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p>def hello():</p>\r\n\r\n			<p>&nbsp; &nbsp; print(&quot;hello&quot;)</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>But without calling a function, the function is not executed.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<h3>Call a function</h3>\r\n\r\n<p>To call a function, use the function name followed by parenthesis:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p>def hello():</p>\r\n\r\n			<p>&nbsp; &nbsp; print(&quot;hello&quot;)</p>\r\n\r\n			<p>&nbsp;</p>\r\n\r\n			<p><span style=\"color:#e74c3c\"><strong>hello()</strong></span></p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>','<p>How to call the following function definition?</p>','<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>def print_world():</strong></p>\r\n\r\n			<p><strong>&nbsp; &nbsp; </strong>&nbsp;print(&quot;world&quot;)</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p><br />\r\n&nbsp;</p>','2019-09-09 07:11:44.000000','',1,7,2,'','','','','','EMTuLRgrkXw',52,'Function',0),(85,'<h3>Single Parameter</h3>\r\n\r\n<p>The data can be passed when calling a function.</p>\r\n\r\n<p>Here is the format of the function definition with a parameter.</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><span style=\"color:#e74c3c\">def</span> &lt;function_name&gt;<span style=\"color:#e74c3c\">(</span>&lt;parameter&gt;<span style=\"color:#e74c3c\">):</span></p>\r\n\r\n			<p>&nbsp; &nbsp; &lt;code block&gt;</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>Here is the real function example with a parameter.</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p>def sum(num):</p>\r\n\r\n			<p>&nbsp; &nbsp; print(num)</p>\r\n\r\n			<p>&nbsp;</p>\r\n\r\n			<p>sum(10)</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p><span style=\"color:#3498db\"><strong>Output:</strong></span> 10</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>A parameter can be a list, set, or dictionary.</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p>def sum(nums):</p>\r\n\r\n			<p>&nbsp; &nbsp; print(nums)</p>\r\n\r\n			<p>&nbsp;</p>\r\n\r\n			<p>list = [1, 2, 3]</p>\r\n\r\n			<p>sum(list)</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p><span style=\"color:#3498db\"><strong>Output:</strong></span> [1, 2, 3]</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<h3>Multiple parameters</h3>\r\n\r\n<p>Here is the function with multiple parameters.</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p>def sum(num1, num2):</p>\r\n\r\n			<p>&nbsp; &nbsp; for num in range(num1, num2):</p>\r\n\r\n			<p>&nbsp; &nbsp; &nbsp; &nbsp; print(num)</p>\r\n\r\n			<p>&nbsp;</p>\r\n\r\n			<p>sum(10, 14)</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p><span style=\"color:#3498db\"><strong>Output:</strong></span></p>\r\n\r\n<p>10</p>\r\n\r\n<p>11</p>\r\n\r\n<p>12</p>\r\n\r\n<p>13</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<h3>Default parameter</h3>\r\n\r\n<p>The function will use a default parameter when we call the function without parameter.</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p>def hello(num = 10):</p>\r\n\r\n			<p>&nbsp; &nbsp; print(num)</p>\r\n\r\n			<p>&nbsp;</p>\r\n\r\n			<p>hello(1)</p>\r\n\r\n			<p>hello(2)</p>\r\n\r\n			<p>hello()</p>\r\n\r\n			<p>hello(3)</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p><span style=\"color:#3498db\"><strong>Output:</strong></span></p>\r\n\r\n<p>1</p>\r\n\r\n<p>2</p>\r\n\r\n<p>10</p>\r\n\r\n<p>3</p>','<p>What is the output of the code?</p>','<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p>def sum(num):</p>\r\n\r\n			<p>&nbsp; &nbsp; sum = 0</p>\r\n\r\n			<p>&nbsp; &nbsp; for n in range(num):</p>\r\n\r\n			<p>&nbsp; &nbsp; &nbsp; &nbsp; sum += n</p>\r\n\r\n			<p>&nbsp;</p>\r\n\r\n			<p>sum(5)</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p><br />\r\n&nbsp;</p>','2019-09-09 07:28:02.000000','',1,7,2,'','','','','',NULL,53,'Parameter',1),(86,'<h3>Return</h3>\r\n\r\n<p>To return a value, you can use the <span style=\"color:#e74c3c\">return</span> keyword.</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p>def ack(str):</p>\r\n\r\n			<p>&nbsp; &nbsp; return str + &quot; world&quot;</p>\r\n\r\n			<p>&nbsp;</p>\r\n\r\n			<p>ans = echo(&quot;hello&quot;)</p>\r\n\r\n			<p>print(ans)</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p><span style=\"color:#3498db\"><strong>Output:</strong></span> &quot;hello world&quot;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>The following function is to return the sum up to num.</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p>def add(num):</p>\r\n\r\n			<p>&nbsp; &nbsp; sum = 0</p>\r\n\r\n			<p>&nbsp; &nbsp; for n in range(num):</p>\r\n\r\n			<p>&nbsp; &nbsp; &nbsp; &nbsp; sum += n</p>\r\n\r\n			<p>&nbsp; &nbsp; return sum</p>\r\n\r\n			<p>&nbsp;</p>\r\n\r\n			<p>print(add(10))</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p><strong><span style=\"color:#3498db\">Output:</span></strong> 45</p>\r\n\r\n<p>Explanation:</p>\r\n\r\n<p>0 + 1 + 2 + 3 + 4 + 5 + 6 + 7 + 8 + 9 = 45</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<h3>Multiple Return</h3>\r\n\r\n<p>We can return multiple values from a function.</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p>def hello():</p>\r\n\r\n			<p>&nbsp; &nbsp; return &quot;hello&quot;, &quot;world&quot;</p>\r\n\r\n			<p>str1, str2 = hello()</p>\r\n\r\n			<p>print(str1)</p>\r\n\r\n			<p>print(str2)</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p><strong><span style=\"color:#3498db\">Output:</span></strong></p>\r\n\r\n<p>&quot;hello&quot;</p>\r\n\r\n<p>&quot;world&quot;</p>','<p>What is the result of the code?</p>','<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p>def multiply(num):</p>\r\n\r\n			<p>&nbsp; &nbsp; ans = 1</p>\r\n\r\n			<p>&nbsp; &nbsp; for n in range(1, num):</p>\r\n\r\n			<p>&nbsp; &nbsp; &nbsp; &nbsp; ans *= n</p>\r\n\r\n			<p>&nbsp; &nbsp; return ans</p>\r\n\r\n			<p>&nbsp;</p>\r\n\r\n			<p>print(multiply(5))</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>','2019-09-09 07:49:22.000000','',1,7,2,'','','','','',NULL,54,'Return',1),(87,'<p>&bull; Set is one of the collections for unique values.</p>\r\n\r\n<h3>&nbsp;</h3>\r\n\r\n<h3>1. Create</h3>\r\n\r\n<p>&bull; Create&nbsp;<strong>set</strong> with&nbsp;curly brackets.</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p>nums = {1, 2, 3}</p>\r\n\r\n			<p>print(nums)</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p><strong><span style=\"color:#3498db\">Output</span>: {1, 2, 3}</strong></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<h3>2. Add</h3>\r\n\r\n<p>&bull; Add a&nbsp;value to the <strong>set</strong>.&nbsp;</p>\r\n\r\n<p>&bull; It will be ignored if you try to add the duplicated value.</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p>nums = {1, 2, 3}</p>\r\n\r\n			<p>nums.add(4)</p>\r\n\r\n			<p>print(nums)</p>\r\n\r\n			<p>&nbsp;</p>\r\n\r\n			<p>nums.add(4)&nbsp; &nbsp; # Ignore</p>\r\n\r\n			<p>print(nums)</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p><strong><span style=\"color:#3498db\">Output</span>: </strong></p>\r\n\r\n<p>{1, 2, 3, 4}</p>\r\n\r\n<p>{1, 2, 3, 4}</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<h3>3. Pop</h3>\r\n\r\n<p>&bull; Pop a random value from the set because <strong>set</strong> are unordered.</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p>nums = {1, 2, 3}</p>\r\n\r\n			<p>popped_value = nums.pop()&nbsp; &nbsp; # removed value</p>\r\n\r\n			<p>print(nums)&nbsp; &nbsp; # the value after removal</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p><strong><span style=\"color:#3498db\">Output</span>:</strong></p>\r\n\r\n<p>It is not always the same value.</p>','<p>Write a code to return after adding number 4.</p>','<p>Example 1:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>: {1}</p>\r\n\r\n			<p><strong>Output</strong>: {1, 4}&nbsp;</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>Example 2:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>: {1, 2}</p>\r\n\r\n			<p><strong>Output</strong>: {1, 2, 4}&nbsp;</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>&nbsp;</p>','2019-09-21 18:02:28.000000','',1,23,1,'def solve(nums):','','','','','8Gk14pLb8ao',47,'Set',2),(88,'<p>1. When the condition is True, the first block&nbsp;will be executed.&nbsp;</p>\r\n\r\n<p>2. If not, the second&nbsp;block will be executed.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>Here are some examples of&nbsp;<strong>if</strong>.</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p>num = 2</p>\r\n\r\n			<p>if num&nbsp;&gt; 1:</p>\r\n\r\n			<p>&nbsp; &nbsp; print(&quot;True&quot;)</p>\r\n\r\n			<p>else:</p>\r\n\r\n			<p>&nbsp; &nbsp; print(&quot;False&quot;)</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p><strong>Output</strong>: True</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p>num = 1</p>\r\n\r\n			<p>if num&nbsp;&gt; 2:</p>\r\n\r\n			<p>&nbsp; &nbsp; print(&quot;True&quot;)</p>\r\n\r\n			<p>else:</p>\r\n\r\n			<p>&nbsp; &nbsp; print(&quot;False&quot;)</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p><strong>Output</strong>: False</p>','<p>What is the output of the code?</p>','<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p>str = &quot;hello&quot;</p>\r\n\r\n			<p>if str == &quot;HELLO&quot;:</p>\r\n\r\n			<p>&nbsp; &nbsp; print(True)</p>\r\n\r\n			<p>else:</p>\r\n\r\n			<p>&nbsp; &nbsp; print(False)</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p><br />\r\n&nbsp;</p>','2019-09-23 03:59:22.000000','',1,16,2,'','','','','',NULL,20,'If Else',0),(89,'<p>1. When&nbsp;the <strong>if</strong> condition is True, <strong>only the first block</strong>&nbsp;will be executed.&nbsp;</p>\r\n\r\n<p>2. When the <strong>if</strong> condition is False and the <strong>elif</strong> condition is True, <strong>the second block</strong>&nbsp;will be executed.</p>\r\n\r\n<p>3. When the <strong>if</strong> condition is False and the <strong>elif</strong> condition is False, <strong>the last block</strong>&nbsp;will be executed.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>Here are some examples of&nbsp;<strong>if</strong>.</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p>if 2 &gt; 1:</p>\r\n\r\n			<p>&nbsp; &nbsp; print(&quot;First block&quot;)</p>\r\n\r\n			<p>elif 3 &gt; 2:</p>\r\n\r\n			<p>&nbsp; &nbsp; print(&quot;Second block&quot;)</p>\r\n\r\n			<p>else:</p>\r\n\r\n			<p>&nbsp; &nbsp; print(&quot;Third block&quot;)</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p><strong>Output</strong>: &quot;First block&quot;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p>if 1&nbsp;&gt; 2:</p>\r\n\r\n			<p>&nbsp; &nbsp; print(&quot;First block&quot;)</p>\r\n\r\n			<p>elif 3 &gt; 2:</p>\r\n\r\n			<p>&nbsp; &nbsp; print(&quot;Second block&quot;)</p>\r\n\r\n			<p>else:</p>\r\n\r\n			<p>&nbsp; &nbsp; print(&quot;Third block&quot;)</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p><strong>Output</strong>: &quot;Second block&quot;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p>if 1&nbsp;&gt; 2:</p>\r\n\r\n			<p>&nbsp; &nbsp; print(&quot;First block&quot;)</p>\r\n\r\n			<p>elif 3 &lt;&nbsp;2:</p>\r\n\r\n			<p>&nbsp; &nbsp; print(&quot;Second block&quot;)</p>\r\n\r\n			<p>else:</p>\r\n\r\n			<p>&nbsp; &nbsp; print(&quot;Third block&quot;)</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p><strong>Output</strong>: &quot;Third block&quot;</p>','','<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p>num = 2</p>\r\n\r\n			<p>if num &gt; 2:</p>\r\n\r\n			<p>&nbsp; &nbsp; print(&quot;num is greater than 2&quot;)</p>\r\n\r\n			<p>elif num &lt; 2:</p>\r\n\r\n			<p>&nbsp; &nbsp; print(&quot;num is less than 2&quot;)</p>\r\n\r\n			<p>else:</p>\r\n\r\n			<p>&nbsp; &nbsp; print(&quot;num is&nbsp;2&quot;)</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p><br />\r\n&nbsp;</p>','2019-09-23 04:03:26.000000','',1,16,4,'','num is greater than 2','num is less than 2','num is 2','num',NULL,21,'If Elif Else',0),(90,'<p>String is also iterable values because it contains a sequence of characters.</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p>for ch in &quot;hello&quot;:</p>\r\n\r\n			<p>&nbsp; &nbsp; print(ch)</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p><strong>Output</strong>:</p>\r\n\r\n<p>&quot;h&quot;</p>\r\n\r\n<p>&quot;e&quot;</p>\r\n\r\n<p>&quot;l&quot;</p>\r\n\r\n<p>&quot;l&quot;</p>\r\n\r\n<p>&quot;o&quot;</p>','<p>What is the output of the code?</p>','<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p>s = 0</p>\r\n\r\n			<p>for ch in &quot;hello&quot;:</p>\r\n\r\n			<p>&nbsp; &nbsp; s += 1</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p><br />\r\n&nbsp;</p>','2019-09-23 04:09:40.000000','',1,1,4,'','\"h\"\r\n\"e\"\r\n\"l\"\r\n\"l\"\r\n\"o\"','\"hello\"','0','5',NULL,23,'For in string',0),(91,'<p>How to know whether the number is odd or even</p>\r\n\r\n<p>You can use modulus(%).&nbsp;Modulus will return the remainder.</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p>1 % 2 = 1</p>\r\n\r\n			<p>2 % 2 = 0</p>\r\n\r\n			<p>3 % 2 = 1</p>\r\n\r\n			<p>4 % 2 = 0</p>\r\n\r\n			<p>5 % 2 = 1</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>','<p>Find the sum of odd numbers in the given list.</p>','<p>Example 1:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>: [1, 2, 3, 4, 5]</p>\r\n\r\n			<p><strong>Output</strong>: 9</p>\r\n\r\n			<p><strong>Explanation:&nbsp;</strong>1 + 3 + 5 = 9</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>Example 2:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>: [2, 4, 5, 6, 7]</p>\r\n\r\n			<p><strong>Output</strong>: 5</p>\r\n\r\n			<p><strong>Explanation:&nbsp;</strong>5 + 7 = 12</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>','2019-09-23 04:45:38.000000','',1,4,1,'def solve(nums):','','','','',NULL,44,'Sum of odd numbers',0),(92,'<h3>Get a length</h3>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p>nums = {0, 1, 2, 3}</p>\r\n\r\n			<p>print(len(nums))</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p><strong><span style=\"color:#3498db\">Output</span>: </strong></p>\r\n\r\n<p>4</p>','<p>Write a code to return the length of the set.</p>','<p>Example 1:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>: {2, 3, 4, 5}</p>\r\n\r\n			<p><strong>Output</strong>: 4</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p><br />\r\n&nbsp;</p>','2019-09-23 08:00:26.000000','',1,23,1,'def solve(nums):','','','','',NULL,49,'Set length',0),(93,'<h3>Union</h3>\r\n\r\n<p>&nbsp;&nbsp;&bull; Join two set.&nbsp; After joining, <strong>set</strong> also has the unique values.</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p>nums1 = {1, 2, 3}</p>\r\n\r\n			<p>nums2 = {2, 4, 5}</p>\r\n\r\n			<p>print(nums1.union(nums2))</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p><strong><span style=\"color:#3498db\">Output</span>:</strong></p>\r\n\r\n<p>{1, 2, 3, 4, 5}</p>','<p>Write a code to return the union of the two sets.</p>','<p>Example 1:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>: {1, 2, 3}, {3, 4, 5}</p>\r\n\r\n			<p><strong>Output</strong>: {1, 2, 3, 4, 5}</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>Example 2:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>: {1}, {2, 3, 4}</p>\r\n\r\n			<p><strong>Output</strong>: {1, 2, 3, 4}</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>','2019-09-23 08:05:14.000000','',1,23,1,'def solve(nums1, nums2):','','','','',NULL,50,'Set Union',0),(94,'<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p>Average = Sum / Count</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>','<p>Write a code to return the average of the values.</p>','<p>Example 1:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>: [1, 2, 3, 4, 5]</p>\r\n\r\n			<p><strong>Output</strong>: 3</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>Example 2:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>: [1, 3, 5, 7, 9]</p>\r\n\r\n			<p><strong>Output</strong>: 5</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>','2019-09-24 01:14:11.000000','',1,8,1,'def solve(nums):','','','','',NULL,89,'Average',0),(95,'<h3>Not</h3>\r\n\r\n<p>It converts True to False, and False to True.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p>bool = not True</p>\r\n\r\n			<p>print(bool)&nbsp;</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p><span style=\"color:#3498db\"><strong>output</strong></span>: False</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>For string, empty string means False.&nbsp; The other strings&nbsp;are True.</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p>print(not &quot;&quot;)</p>\r\n\r\n			<p>print(not &quot;pypykids&quot;)</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p><span style=\"color:#3498db\"><strong>output</strong></span>:</p>\r\n\r\n<p>True</p>\r\n\r\n<p>False</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>For number, zero(0) means False.&nbsp; The other values are True.</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p>print(not 0)</p>\r\n\r\n			<p>print(not 100)&nbsp;</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p><span style=\"color:#3498db\"><strong>output</strong></span>:</p>\r\n\r\n<p>True</p>\r\n\r\n<p>False</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>For collections such as list, set, and dictionary, empty collection&nbsp;means False.&nbsp;</p>\r\n\r\n<p>If a collection has values, it is True.</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p>print(not [])</p>\r\n\r\n			<p>print(not [1, 2, 3])&nbsp;</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p><span style=\"color:#3498db\"><strong>output</strong></span>:</p>\r\n\r\n<p>True</p>\r\n\r\n<p>False</p>','<p>Find the different output.</p>','','2019-09-24 01:36:32.000000','',1,13,4,'','not []','not 0','not \"\"','not 1','H5Bsc_jSJWM',8,'Logical Operator (Not)',0),(96,'<h3>And</h3>\r\n\r\n<p>The expression is true when the conditions on both the sides of the&nbsp;<strong>and</strong> operator are true.</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p>bool = True and True</p>\r\n\r\n			<p>print(bool)&nbsp;</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p><strong>output</strong>: True</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p>bool = 2==2 and 1==1</p>\r\n\r\n			<p>print(bool)&nbsp;</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p><strong>output</strong>: True</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p>bool = False and True</p>\r\n\r\n			<p>print(bool)&nbsp;</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p><strong>output</strong>: False</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p>bool = 2&gt;3&nbsp;and 1==1</p>\r\n\r\n			<p>print(bool)&nbsp;</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p><strong>output</strong>: False</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p>bool = False and False</p>\r\n\r\n			<p>print(bool)&nbsp;</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p><strong>output</strong>: False</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p>bool = 2&gt;3&nbsp;and 1&gt;1</p>\r\n\r\n			<p>print(bool)&nbsp;</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p><strong>output</strong>: False</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<h5>And Summary</h5>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<thead>\r\n		<tr>\r\n			<th scope=\"col\">And</th>\r\n			<th scope=\"col\">True</th>\r\n			<th scope=\"col\">False</th>\r\n		</tr>\r\n	</thead>\r\n	<tbody>\r\n		<tr>\r\n			<td><strong>True</strong></td>\r\n			<td>True</td>\r\n			<td>False</td>\r\n		</tr>\r\n		<tr>\r\n			<td><strong>False</strong></td>\r\n			<td>False</td>\r\n			<td>False</td>\r\n		</tr>\r\n	</tbody>\r\n</table>','','<p>Find the different output.</p>','2019-09-24 01:55:16.000000','',1,13,4,'','True and 1 == 2','False and 2 > 1','False and True','4 == 4 and True',NULL,10,'Logical Operator (And)',0),(97,'<p>Every character can be accessed by an index.&nbsp; Index 0, -1 indicate the first and last character, respectively.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p>str = &quot;PyPyKids&quot;</p>\r\n\r\n			<p>print(str[0])</p>\r\n\r\n			<p>print(str[1])</p>\r\n\r\n			<p>print(str[2])</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>Output:</p>\r\n\r\n<p>&quot;P&quot;</p>\r\n\r\n<p>&quot;y&quot;</p>\r\n\r\n<p>&quot;P&quot;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p>str = &quot;PyPyKids&quot;</p>\r\n\r\n			<p>print(str[-1])</p>\r\n\r\n			<p>print(str[-2])</p>\r\n\r\n			<p>print(str[-3])</p>\r\n\r\n			<p>print(str[-4])</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>Output:</p>\r\n\r\n<p>&quot;s&quot;</p>\r\n\r\n<p>&quot;d&quot;</p>\r\n\r\n<p>&quot;i&quot;</p>\r\n\r\n<p>&quot;k&quot;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<h3>Summary</h3>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>&nbsp;</td>\r\n			<td>P</td>\r\n			<td>y</td>\r\n			<td>P</td>\r\n			<td>y</td>\r\n			<td>K</td>\r\n			<td>i</td>\r\n			<td>d</td>\r\n			<td>s</td>\r\n		</tr>\r\n		<tr>\r\n			<td>Index from the front</td>\r\n			<td>0</td>\r\n			<td>1</td>\r\n			<td>2</td>\r\n			<td>3</td>\r\n			<td>4</td>\r\n			<td>5</td>\r\n			<td>6</td>\r\n			<td>7</td>\r\n		</tr>\r\n		<tr>\r\n			<td>index from behind</td>\r\n			<td>-8</td>\r\n			<td>-7</td>\r\n			<td>-6</td>\r\n			<td>-5</td>\r\n			<td>-4</td>\r\n			<td>-3</td>\r\n			<td>-2</td>\r\n			<td>-1</td>\r\n		</tr>\r\n	</tbody>\r\n</table>','<p>What will be printed?</p>','<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p>print(&quot;Hello world&quot;[5])&nbsp;</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p><br />\r\n&nbsp;</p>','2019-09-24 08:02:59.000000','',1,3,4,'','\"H\"','\"Hello\"','\" \"','\"o\"',NULL,31,'Index a character',0),(98,'<h3>Pop</h3>\r\n\r\n<p>&bull; Take out the value from the end.&nbsp;&nbsp;</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p>nums = [1, 2, 3]</p>\r\n\r\n			<p>popped_value&nbsp;= nums.pop()</p>\r\n\r\n			<p>print(popped_value)&nbsp;&nbsp;&nbsp; &nbsp;# removed value</p>\r\n\r\n			<p>print(nums)&nbsp;&nbsp;&nbsp; &nbsp;# the list after removal</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p><strong><span style=\"color:#3498db\">Output</span>: </strong></p>\r\n\r\n<p>3</p>\r\n\r\n<p>[1, 2]</p>','<p>What will be print?</p>','<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p>nums = [4, 3, 2, 1]</p>\r\n\r\n			<p>pop = nums.pop()</p>\r\n\r\n			<p>print(pop)</p>\r\n\r\n			<p>print(nums)</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>','2019-09-24 08:17:57.000000','',1,4,4,'','4\r\n[3, 2, 1]','1\r\n[4, 3, 2, 1]','1\r\n[4]','1\r\n[4, 3, 2]',NULL,39,'Pop a value from a list',0),(99,'<h3>Remove the&nbsp;value</h3>\r\n\r\n<p>&bull; Remove the&nbsp;value from a list.</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p>nums = [1, 2, 3]</p>\r\n\r\n			<p>nums.remove(2)</p>\r\n\r\n			<p>print(nums)</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p><strong><span style=\"color:#3498db\">Output</span>: </strong>[1, 3]</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<h3>Remove the&nbsp;value from a list having duplicated values</h3>\r\n\r\n<p>&bull; Remove() will remove&nbsp;the&nbsp;first value.</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p>nums = [1, 2, 3, 2]</p>\r\n\r\n			<p>nums.remove(2)</p>\r\n\r\n			<p>print(nums)</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p><strong><span style=\"color:#3498db\">Output</span>: </strong>[1, 3, 2]</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<h3>Remove the value from a list which does not have the value.</h3>\r\n\r\n<p>&bull; Remove() will make an error.</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p>nums = [1, 2, 3, 2]</p>\r\n\r\n			<p>nums.remove(4)</p>\r\n\r\n			<p>print(nums)</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p><strong><span style=\"color:#3498db\">Output</span>:&nbsp;</strong></p>\r\n\r\n<p>ValueError: list.remove(x): x not in list</p>','<p>What will be printed?</p>','<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p>nums = [&quot;hello&quot;, &quot;world&quot;, &nbsp;0, 1, 2]</p>\r\n\r\n			<p>nums.remove(1)</p>\r\n\r\n			<p>print(nums)</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>','2019-09-24 08:23:18.000000','',1,4,4,'','[\"world\",  0, 1, 2]','[\"hello\", 0, 1, 2]','[\"hello\", \"world\",  0, 2]','Error',NULL,40,'Remove a value from a list',0),(100,'','<p>Write a code to remove the second list from the first list.</p>','<p>Example 1:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>: [1, 2, 3, 4, 5], [3, 4, 5, 6]</p>\r\n\r\n			<p><strong>Output</strong>: [1, 2]</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>Explanation:</p>\r\n\r\n<p>[3, 4, 5] is common values.&nbsp;</p>\r\n\r\n<p>[1, 2, 3, 4, 5] - [3, 4, 5] = [1, 2]</p>','2019-09-24 08:44:46.000000','',1,4,1,'def solve(nums1, nums2):','','','','',NULL,45,'Remove the duplicated values',0),(101,'','<p>Write a code to remove negative values from a list.</p>','<p>Example 1:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>: [0, 1, -4, 3, -5]</p>\r\n\r\n			<p><strong>Output</strong>: [0, 1, 3]</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>Example 2:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>: [-5, -4, 3]</p>\r\n\r\n			<p><strong>Output</strong>: [3]</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>','2019-09-24 09:13:16.000000','',1,4,1,'def solve(nums):','','','','',NULL,43,'Remove negative values from a list',0),(102,'<h3>How to loop to every character in a string:</h3>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p>str = &quot;hello&quot;</p>\r\n\r\n			<p>For ch in str:</p>\r\n\r\n			<p>&nbsp; &nbsp; print(ch)</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p><span style=\"color:#3498db\"><strong>Output:</strong></span></p>\r\n\r\n<p>&quot;h&quot;</p>\r\n\r\n<p>&quot;e&quot;</p>\r\n\r\n<p>&quot;l&quot;</p>\r\n\r\n<p>&quot;l&quot;</p>\r\n\r\n<p>&quot;o&quot;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<h3>How to append the value into a list:</h3>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p>list = []</p>\r\n\r\n			<p>list.append(&quot;hello&quot;)</p>\r\n\r\n			<p>list.append(&quot;world&quot;)</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p><span style=\"color:#3498db\"><strong>Output</strong></span>:</p>\r\n\r\n<p>[&quot;hello&quot;, &quot;world&quot;]</p>','<p>Write a code to convert a string to a list.</p>','<p>Example 1:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>: &quot;hello&quot;</p>\r\n\r\n			<p><strong>Output</strong>: [&quot;h&quot;, &quot;e&quot;, &quot;l&quot;, &quot;l&quot;, &quot;o&quot;]</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>','2019-09-24 09:17:08.000000','',1,4,1,'def solve(str):','','','','',NULL,42,'Convert a string to a list',0),(103,'<p>Set can not allow to have duplicated values.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<h3>How to convert from List&nbsp;to Set:</h3>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p>set_nums = {1, 2, 3}</p>\r\n\r\n			<p>list_nums&nbsp;= list(set_nums)</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<h3>How to convert from Set to List:</h3>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p>list_nums = {1, 2, 3}</p>\r\n\r\n			<p>set_nums&nbsp;= list(list_nums)</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>','<p>Write a code to remove duplicated values from a list</p>','<p>Example 1:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>: [1, 2, 1, 2, 3]</p>\r\n\r\n			<p><strong>Output</strong>: [1, 2, 3]</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>Example 2:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>: [1, 2, 3, 4, 1]</p>\r\n\r\n			<p><strong>Output</strong>: [1, 2, 3, 4]</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>','2019-09-24 09:22:13.000000','',1,23,1,'def solve(nums):','','','','',NULL,51,'Remove duplicated values from a list',0),(104,'<h3>Create a variable</h3>\r\n\r\n<p>Variables are containers for storing data values.</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p>num = 1</p>\r\n\r\n			<p>nums = [1, 2, 3]</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<h3>Create multiple variables</h3>\r\n\r\n<p>The following code is same as the previous two lines.</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p>num, nums = 1, [1, 2, 3]</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>','<p>What is the value of fruit2 variable ?</p>','<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p>fruit1 = &quot;grape&quot;</p>\r\n\r\n			<p>fruit2, fruit3, fruit4 = &quot;apple&quot;, &quot;orange&quot;, &quot;watermelon&quot;</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p><br />\r\n&nbsp;</p>','2019-09-25 03:02:29.000000','',1,14,4,'','\"grape\"','\"apple\"','\"orange\"','\"watermelon\"','OO0NC_68LUc',11,'Create variables',0),(105,'<p>You can get a substring by Slice.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p>str = &quot;PyPyKids&quot;</p>\r\n\r\n			<p>print(str[2: 6])</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p><span style=\"color:#3498db\"><strong>Output</strong></span>: &quot;PyKi&quot;</p>\r\n\r\n<p><strong>Explanation</strong>:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>&nbsp;</td>\r\n			<td>P</td>\r\n			<td>y</td>\r\n			<td><span style=\"color:#e74c3c\"><strong>P</strong></span></td>\r\n			<td><span style=\"color:#e74c3c\"><strong>y</strong></span></td>\r\n			<td><span style=\"color:#e74c3c\"><strong>K</strong></span></td>\r\n			<td><span style=\"color:#e74c3c\"><strong>i</strong></span></td>\r\n			<td>d</td>\r\n			<td>s</td>\r\n		</tr>\r\n		<tr>\r\n			<td>index</td>\r\n			<td>0</td>\r\n			<td>1</td>\r\n			<td><span style=\"color:#e74c3c\"><strong>2</strong></span></td>\r\n			<td><span style=\"color:#e74c3c\"><strong>3</strong></span></td>\r\n			<td><span style=\"color:#e74c3c\"><strong>4</strong></span></td>\r\n			<td><span style=\"color:#e74c3c\"><strong>5</strong></span></td>\r\n			<td>6</td>\r\n			<td>7</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>str[2:6] is character starting at index 2(inclusive) and extending up to 5(exclusive).</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p>str = &quot;PyPyKids&quot;</p>\r\n\r\n			<p>print(str[4:])</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p><span style=\"color:#3498db\"><strong>Output</strong></span>: &quot;Kids&quot;</p>\r\n\r\n<p><strong>Explanation</strong>:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>&nbsp;</td>\r\n			<td>P</td>\r\n			<td>y</td>\r\n			<td><span style=\"color:#000000\">P</span></td>\r\n			<td><span style=\"color:#000000\">y</span></td>\r\n			<td><span style=\"color:#e74c3c\"><strong>K</strong></span></td>\r\n			<td><span style=\"color:#e74c3c\"><strong>i</strong></span></td>\r\n			<td><span style=\"color:#e74c3c\"><strong>d</strong></span></td>\r\n			<td><span style=\"color:#e74c3c\"><strong>s</strong></span></td>\r\n		</tr>\r\n		<tr>\r\n			<td>index</td>\r\n			<td>0</td>\r\n			<td>1</td>\r\n			<td><span style=\"color:#000000\">2</span></td>\r\n			<td><span style=\"color:#000000\">3</span></td>\r\n			<td><span style=\"color:#e74c3c\"><strong>4</strong></span></td>\r\n			<td><span style=\"color:#e74c3c\"><strong>5</strong></span></td>\r\n			<td><span style=\"color:#e74c3c\"><strong>6</strong></span></td>\r\n			<td><span style=\"color:#e74c3c\"><strong>7</strong></span></td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>str[4:] is character starting at index 2(inclusive) and extending up to the end.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p>str = &quot;PyPyKids&quot;</p>\r\n\r\n			<p>print(str[4:])</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p><span style=\"color:#3498db\"><strong>Output</strong></span>: &quot;Kids&quot;</p>\r\n\r\n<p><strong>Explanation</strong>:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>&nbsp;</td>\r\n			<td><span style=\"color:#e74c3c\"><strong>P</strong></span></td>\r\n			<td><span style=\"color:#e74c3c\"><strong>y</strong></span></td>\r\n			<td><span style=\"color:#e74c3c\"><strong>P</strong></span></td>\r\n			<td><span style=\"color:#e74c3c\"><strong>y</strong></span></td>\r\n			<td><span style=\"color:#000000\">K</span></td>\r\n			<td><span style=\"color:#000000\">i</span></td>\r\n			<td><span style=\"color:#000000\">d</span></td>\r\n			<td><span style=\"color:#000000\">s</span></td>\r\n		</tr>\r\n		<tr>\r\n			<td>index</td>\r\n			<td><span style=\"color:#e74c3c\"><strong>0</strong></span></td>\r\n			<td><span style=\"color:#e74c3c\"><strong>1</strong></span></td>\r\n			<td><span style=\"color:#e74c3c\"><strong>2</strong></span></td>\r\n			<td><span style=\"color:#e74c3c\"><strong>3</strong></span></td>\r\n			<td><span style=\"color:#000000\">4</span></td>\r\n			<td><span style=\"color:#000000\">5</span></td>\r\n			<td><span style=\"color:#000000\">6</span></td>\r\n			<td><span style=\"color:#000000\">7</span></td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>str[:4] is character starting from the beginning and extending up to 4(exclusive).</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>','<p>Write a code to return&nbsp;the 4th through 8th characters</p>','<p>Example 1:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>: &quot;Hello World&quot;</p>\r\n\r\n			<p><strong>Output</strong>: &quot;lo Wo&quot;</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>Example 2:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" class=\"table table-bordered\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><strong>Input</strong>: &quot;ABCDEFGHIJ&quot;</p>\r\n\r\n			<p><strong>Output</strong>: &quot;DEFGH&quot;</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>','2019-09-25 03:49:18.000000','',1,3,1,'def solve(str):','','','','',NULL,32,'Slice a string',0);
/*!40000 ALTER TABLE `list_quiz` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `list_quizscore`
--

DROP TABLE IF EXISTS `list_quizscore`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
 SET character_set_client = utf8mb4 ;
CREATE TABLE `list_quizscore` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `score` int(11) NOT NULL,
  `customuser_id` int(11) NOT NULL,
  `quiz_id` int(11) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `list_good_custom_user_id_quiz_id_d173f55e_uniq` (`customuser_id`,`quiz_id`),
  KEY `list_good_quiz_id_c4bcb632_fk_list_quiz_id` (`quiz_id`),
  CONSTRAINT `list_good_quiz_id_c4bcb632_fk_list_quiz_id` FOREIGN KEY (`quiz_id`) REFERENCES `list_quiz` (`id`),
  CONSTRAINT `list_quizscore_customuser_id_3dfa3579_fk_list_customuser_id` FOREIGN KEY (`customuser_id`) REFERENCES `list_customuser` (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=38 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `list_quizscore`
--

LOCK TABLES `list_quizscore` WRITE;
/*!40000 ALTER TABLE `list_quizscore` DISABLE KEYS */;
INSERT INTO `list_quizscore` VALUES (3,1,2,70),(4,0,2,82),(7,1,2,72),(8,0,2,63),(9,1,2,30),(10,1,2,11),(11,1,2,27),(12,1,2,47),(15,0,2,26),(17,1,8,82),(18,1,8,15),(19,1,8,16),(20,1,8,73),(21,0,8,1),(22,1,8,10),(23,1,8,42),(24,1,8,77),(25,1,8,83),(26,0,8,78),(27,0,8,4),(28,0,2,41),(29,1,2,42),(30,1,2,18),(31,1,6,87),(32,1,1,46),(33,1,1,87),(34,1,1,85),(35,1,1,86),(36,1,1,13),(37,1,1,52);
/*!40000 ALTER TABLE `list_quizscore` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `list_quiztype`
--

DROP TABLE IF EXISTS `list_quiztype`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
 SET character_set_client = utf8mb4 ;
CREATE TABLE `list_quiztype` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `name` varchar(20) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=5 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `list_quiztype`
--

LOCK TABLES `list_quiztype` WRITE;
/*!40000 ALTER TABLE `list_quiztype` DISABLE KEYS */;
INSERT INTO `list_quiztype` VALUES (1,'Code'),(2,'Answer'),(4,'MultipleChoice');
/*!40000 ALTER TABLE `list_quiztype` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `list_testcase`
--

DROP TABLE IF EXISTS `list_testcase`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
 SET character_set_client = utf8mb4 ;
CREATE TABLE `list_testcase` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `input` longtext,
  `expected_output` longtext,
  `quiz_id` int(11) NOT NULL,
  `expected_stdout` longtext,
  PRIMARY KEY (`id`),
  KEY `list_testset_quiz_id_bafc9895_fk_list_quiz_id` (`quiz_id`),
  CONSTRAINT `list_testset_quiz_id_bafc9895_fk_list_quiz_id` FOREIGN KEY (`quiz_id`) REFERENCES `list_quiz` (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=136 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `list_testcase`
--

LOCK TABLES `list_testcase` WRITE;
/*!40000 ALTER TABLE `list_testcase` DISABLE KEYS */;
INSERT INTO `list_testcase` VALUES (1,'','10',1,NULL),(2,'','2',2,NULL),(3,'','123',3,NULL),(4,'','5',4,NULL),(5,'','15',5,NULL),(6,'','banana',6,NULL),(7,'','True',7,NULL),(8,'','14',8,NULL),(9,'','14',9,NULL),(10,'2\r\n3','6',10,NULL),(11,'4\r\n0','0',10,NULL),(12,'[1, 2, 3, 4, 5]','[5, 2, 3, 4, 1]',11,NULL),(13,'[1,2,3,4,5]','[1, 4, 3, 2, 5]',12,NULL),(14,'[1, 2, 3, 4, 5]','[5, 4, 3, 2, 1]',13,NULL),(15,'[1, 2, 3, 4, 5]','[5, 4, 3, 2, 1]',14,NULL),(16,'[1, 2, 3, 4, 5, 6, 7, 8]','[8, 7, 6, 5, 4, 3, 2, 1]',13,NULL),(17,'','3',15,NULL),(18,'','3',16,NULL),(19,'','2',17,NULL),(20,'','',18,'range(3, 6)'),(21,'','10',19,NULL),(22,'','12',20,NULL),(24,'[3, 6, 9, 10]\r\n7','[3, 6, 7, 9, 10]',21,NULL),(25,'25','5',22,NULL),(26,'[1, 2, -3, 2, -1]','3',23,NULL),(27,'[1, 0, 3, -2, 3]','5',23,NULL),(28,'','200',24,NULL),(29,'','4',25,NULL),(30,'','4',26,NULL),(31,'[1, 5, 3, 2, 6]','4',27,NULL),(32,'[0, 5, -3, 4, -5, 8, -11, 10]','9',23,NULL),(33,'[2, 3, 4, 5, 6]\r\n2','[4, 5, 6, 2, 3]',29,NULL),(34,'[3, 4, 7, 5, 2, 7]','2',30,NULL),(35,'[1, 2, 3, 4, 5, 6]','[1, 3, 5]\r\n[2, 4, 6]',31,NULL),(36,'','4',32,NULL),(37,'\"How are you today\"','How are today',33,NULL),(38,'0.00001','4',34,NULL),(39,'0.003','2',34,NULL),(40,'0.203','0',34,NULL),(41,'15\r\n9','3',35,NULL),(42,'18\r\n17','1',35,NULL),(43,'','4',36,NULL),(44,'[5, 3, 6, 7, 8]','7',37,NULL),(45,'[-1, -6, -3, -5, -7]','-3',37,NULL),(46,'32','True',39,NULL),(47,'31','False',39,NULL),(48,'120000','4',40,NULL),(49,'345','0',40,NULL),(50,'0','False',39,NULL),(51,'','1',41,NULL),(52,'','3',42,NULL),(53,'\"(())\"','True',43,NULL),(54,'\"()()\"','True',43,NULL),(55,'\")()(\"','False',43,NULL),(56,'\"(()\"','False',43,NULL),(58,'\"aabbc\"','c',44,''),(59,'\"abbac\"','c',44,NULL),(60,'5','540',45,NULL),(61,'5','1260',46,NULL),(62,'5\r\n[3, 6, 4, 8]','2',47,NULL),(63,'[3, 5, 7, 9]\r\n[1, 3, 8, 9]','[3, 9]',48,NULL),(64,'4','[\'*\', \'**\', \'***\', \'****\']',49,NULL),(65,'9','34',50,NULL),(66,'[1, 3, 4]\r\n[2, 4, 5]','[1, 2, 3, 4, 4, 5]',51,NULL),(67,'','3',52,NULL),(68,'4','[\'---*\', \'--**\', \'-***\', \'****\']',53,NULL),(69,'[3, 4, 5, 6, 7, 8, 9]\r\n2\r\n5','[3, 4, 5, 9, 8, 7, 6]',54,NULL),(70,'[1, 2, 3, 4, 5]\r\n1\r\n4','[1, 5, 4, 3, 2]',54,NULL),(71,'','4',55,NULL),(72,'','4',56,NULL),(73,'1234','10',57,NULL),(74,'111111','6',57,NULL),(75,'2019','365',58,NULL),(76,'2020','366',58,NULL),(77,'[4, 3, 5, 8, 6]','5',59,''),(78,'[1, 2, 3, 4, 5]','15',60,NULL),(79,'','4',62,NULL),(80,'2000','366',58,NULL),(81,'1900','365',58,NULL),(82,'','4',61,NULL),(83,'','3',63,NULL),(84,'\"abcc\"\r\n\"bcac\"','True',64,NULL),(85,'\"abb\"\r\n\"baa\"','False',64,NULL),(86,'\"racecar\"','True',65,NULL),(87,'\"pypy\"','False',65,NULL),(88,'[4, 4, 4, 1, 1, 1, 2, 3, 4]','3',66,NULL),(89,'[1, 2, 3, 4]','1',66,NULL),(90,'[4, 1, 2, 6, 4, 5]','6',67,NULL),(91,'\'(()())\'','()()',68,''),(92,'\'(())\'','()',68,''),(93,'Node[1, 4, 3, 2]','4',69,NULL),(94,'','1',70,NULL),(95,'','2',71,NULL),(96,'','4',72,NULL),(97,'','12',73,NULL),(98,'','3',74,NULL),(99,'[1, 3, 2, 2]','True',75,NULL),(100,'[1, 3, 5, 9]','True',75,NULL),(101,'[1, 2, 3, 4]','False',75,NULL),(102,'[5, 3, 2, 6, 4, 3, 3]\r\n3','13',76,NULL),(103,'','2',77,NULL),(104,'','1',78,NULL),(105,'[1, 2, 4]\r\n[4, 5, 6]','2',79,NULL),(106,'Node[1, 4, 3, 2, 5]','Node[5, 2, 3, 4, 1]',81,NULL),(107,'','3',82,NULL),(108,'','4',83,NULL),(109,'','print_world()',84,NULL),(110,'','10',85,NULL),(111,'','24',86,NULL),(112,'5','120',80,NULL),(113,'abccbbd','b',12,NULL),(114,'[1, 3, 5, 3]','True',38,NULL),(115,'[1, 4, 6]','False',38,NULL),(116,'{1, 2, 3, 5, 6}','{1, 2, 3, 4, 5, 6}',87,''),(117,'','False',88,''),(118,'','3',89,''),(119,'','4',90,''),(120,'[2, 4, 5, 6, 7]','12',91,''),(121,'{1, 2, 3, 4, 5}','5',92,''),(122,'{1, 2, 3}, {3, 4, 5}','{1, 2, 3, 4, 5}',93,''),(123,'[1, 2, 4, 5, 6]','3.6',94,''),(124,'','4',95,''),(125,'','4',96,''),(126,'','3',97,''),(127,'','4',98,''),(128,'','3',99,''),(129,'[1, 2, 3, 4, 5]\r\n[3, 4, 5, 6]','[1, 2]',100,''),(130,'[-2, 0, 1, -3, 4]','[0, 1, 4]',101,''),(131,'\"hello\"','[\'h\', \'e\', \'l\', \'l\', \'o\']',102,''),(132,'[1, 2, 1, 2, 3]','[1, 2, 3]',103,''),(133,'','2',104,''),(134,'\'Hello World\'','lo Wo',105,''),(135,'\"abccbbd\"','3',28,'');
/*!40000 ALTER TABLE `list_testcase` ENABLE KEYS */;
UNLOCK TABLES;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;

/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOTES=@OLD_SQL_NOTES */;

-- Dump completed on 2019-09-26  0:06:28
